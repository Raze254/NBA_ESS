//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Latest_Staff_Portal.NAVWS {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HrPortal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal")]
    public partial class HrPortal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddContractLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContractNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDeptPerformanceTargetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDriverAllocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFleetLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFuelRequisitionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHrAppraisalLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNonKeRRADriverAllocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTravellingStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVehicleMaintenanceRequestDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveLeaveReimbursementOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveStaffClaimOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveTargetOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignProcurementOfficerOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignTransportRequisitionDriverOperationCompleted;
        
        private System.Threading.SendOrPostCallback AttachDocumentsLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback BidScoreEvaluationEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback BidfinancialEvaluationsRankingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcEndDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcReturnDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanceLeaveApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelBidTabulationHeaderapprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelBudgetRelocationApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelConsolidatedNeedsApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelDocapprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelEftapprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelExpenseRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelFuelCardApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelFullUtilVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelInductionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelLPOApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelLabSampleMgtForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelLeavePlannerHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelLeaveRecallApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelLeaveRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelMobilityApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPMMUApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPRNApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelProcurementPlanApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelStaffClaimRecordApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelStaffClaimforApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelWorkTicketforApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancellIFSTEnderCommiteeForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancellRFQApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanceltransportReqApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeLeaveRelieverOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAttachmentExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAttachmentExists_1888594284OperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPasswordChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearEftLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearExpenseLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseDriverOpenTripsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountApprovalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountUnfilledTimesheetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccountForExtenalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAppointmentLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBidScoreCreterioOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBidScoringTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateChangeDependantsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEftHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEftLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateGMOFreeApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateInvitationNoticeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateInvitedBiddersOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateLPODocOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateLPOFromContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateLeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMedicalCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewResourceRequirementOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNoObjectionLetterRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePayChangeAdviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePaychangeAdviceLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePurchaseContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRecruitmentRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStrategyWorkPlanLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWarantiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWorksPurchaseRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelegateApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllocationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBudgetAmountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEdmsAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExpenseReqLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFleetLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFuelReqOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGMDLApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGMDSSApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGenomeResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteHrAppraisalLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteKpiRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOtherCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOtherDutyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePASTrainingNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePASValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePRNExpenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePerfomanceTargetsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProcurementPlanEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProcurementPlanLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReallocationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSampleLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTrainingCourseSetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTrainingNeedLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWorkTicketLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWorkplanLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DetermineIfIsNonWorkingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentApprovalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentRejectionCommentLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentRejectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EscalatedHelpdeskRequestDynasoftOperationCompleted;
        
        private System.Threading.SendOrPostCallback EscalatedHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback EssCancellPVOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExpenseRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportWorkplanExcellOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddEvaluationPIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAppointTeamMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAppraisalSuggestObjectivesOutcomesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCloseHelpDeskIssueOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateLeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreatePreliminaryDesignPortalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateProjectLeadsAppointmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateProjectTeamCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateStaffClaimApprovalRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateStakeHolderFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateTrainingFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateTrainingRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateUserRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteIndividualCardSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditIndividualCardSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditPurchaseLineDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetLastSubPcLineNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInserImprestSurrenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertProjectTeamLeadsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertProjectTeamLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertSubObjectiveEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertTrainingLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertVehicleMaitenanceDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLoadCompetenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewIndividualCardSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewPerformanceLogEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewStandardAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPublishLPOOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemoveCoreInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemovePerformanceLogLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnReopenHelpDeskIssueOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveCoreInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendLPOViaMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendTenderCommitteNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedCoreInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedPLogCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitTrainingNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitUserRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestJDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestPlogLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdatePRNLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdatePerformanceTargetLinesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateProjectLeadsAppointmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdatePurchaseHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdatePurchaseRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateStakeholderFeedBackLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnsuggestsubindicatorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FullUtilVoucherApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FunctionalCancellApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FunctionalsendApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GMOImportExportTransitRecordExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateAdminVoteBookReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateAieReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateAndSendOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateAnnualFunctionalPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateAwardNoticeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateBankStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateCashbooklReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateClaimsReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateEvalutionReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateExpenseRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateFuelRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateGMOFreeReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateLPOReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateLeaveStatementReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateMaintenanceRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateOutwardReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePASEmpReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePASReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePMMUReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePNineReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePaySlipReport2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePaySlipReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePortalEmailOTPCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePortalOTPCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateRMReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateRandomOTPCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateReceiptReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateReceiptlReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateReopenreportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateVoteBookReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateVoucherReport2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateVoucherReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateWarrantReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateWorkplanBudgetStrategyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateictreportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDSARatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentAttachment_1705862952OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEndReturnDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFinancialYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImprestDimensionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLeaveBalancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoansEntitlementPerGradeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextApproverOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentsDocDimensionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPreviousPayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfilePictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReciptssDocDimensionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubmittedDutyTrainingNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrainingPlanCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSignatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYearsToRetirementOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRAppraisalHeaderInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRLeaveCarryForwardOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRLeaveReimbursementOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRTimeOffLieuOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportExcellBudgetValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportStaffProfilePictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateStaffClaimOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAccusedEmployeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertActualAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAllocationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBidPreliminaryEvaluationRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBidTechnicalEvaluationRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBidfinancialEvaluationRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBidscoreRequirementOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertConsolidatedTrainingNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertContractPaymentTermsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertContractPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCurrentSkillsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDirectExpenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDutystationTrainingNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEmployeeClockInOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEmployeeClockOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEmployeeRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExpenseLinesImprestOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExpenseLinesPurchaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExpenseReqAllocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExpenseRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExpenseRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFuelCardLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFuelCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFuelReqOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGMDLApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGMDSSApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGMOImportExportTransitRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGenomeResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGrievanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertHandoverNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertImperestNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInductionHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInductionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertKpiRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLabSampleOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLeavePlannerHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLeavePlannerLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLeaveRecallOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertManagementInitiatedTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOtherCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOtherDutyOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPASValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPMMUHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPerfomanceTargetsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPettyCashOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPmmuLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProcurementPlanEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProcurementPlanLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProcurementPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertReallocationHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertReallocationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertReservationHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertReservationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSampleLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSelfAssessmentLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSelfInitiatedTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSurchargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTenderCommiteeMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTenderCommiteesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTrainingCourseSetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTrainingExtensionOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertWorkTicketHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertWorkTicketLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertcarLoansApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsSuperVisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback LeaveRequisitionsApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAppraisalSectionsHighScaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAppraisalSectionsLowerScaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadTransportReqOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyBidEvaluationsLInesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyBidTabulationHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyConsolidatedNeedsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyConsolidatedNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyEvaluationBidRemarksOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyExpenseLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyExpenseRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyFleetLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyFuelReqOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyGMOImportExportTransitRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyHrAppraisalLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyKpiRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyLeavePlannerLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyManagementInitiatedTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyOtherCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyOtherDutyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyPaymentHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyProcurementPlanEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyProcurementPlanLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyPurchaseHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyRFQOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyReallocationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifySampleLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifySelfInitiatedTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyTrainingCourseSetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyWorkTicketLines1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyWorkTicketLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewDisciplinaryCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifySupplyChainOperationCompleted;
        
        private System.Threading.SendOrPostCallback PasswordChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback PerfomSendToSuperVisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback PopulatePettyCashSurrenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback PopulatePettyCashOperationCompleted;
        
        private System.Threading.SendOrPostCallback PosFinanceEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PosTechnicalEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostBidOpeningRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostImprestOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostPaymentVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostPreliminaryEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostPurchaseInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostPurchaseOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostReceiptsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostStaffClaimOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProceedToProffessionalOpinionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessDriverAllocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProvideIctfeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchasesPerEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecordExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecordGDMSSApplicationExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveTrainingCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReopenHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResolveHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnBase64FromReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnOTPExpirationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnPortalOTPCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturntoAppraiseeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScheduleTransfertoBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendApprovalEmailAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendAwardLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendBidTabulationHeaderForApprvalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendBidcodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendConsolidatedNeedsForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDocForApprvalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDriverEmailNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEftForApprvalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFuelCardApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFuelRequisitionforApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendIFSTEnderCommiteeForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendImprestWarrantforApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendInductionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendLabSampleMgtForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendLeavePlannerApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendLeaveRecallApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendLoanAppForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMobilityApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPMMUApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendProcurementPlanApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRFQforApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRegretLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendReservationHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendStaffClaimforApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTrainingExtensionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTrainingNeedsApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendVehicleMaintenancetforApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendVehicleRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendWorkTicketforApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendforModerationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendforReviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendtosupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendtransportReqApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback StaffClaimPerMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartPMMUEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreReqReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitConsolidatedTrainingNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitDutyStationTrainingNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitFinalEvalutionReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitTrainingEvaluation1OperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitTrainingFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitTrainingNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitVehicleFuelRequestDetails2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SuggestLinesFromWorksRequisitionTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuggestPersonnelEquipmentSpecificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuggestRFQBidsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuggestTechnicalPassedBidsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuperVisorActionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SupervisorsRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SurrenderPettyCashOperationCompleted;
        
        private System.Threading.SendOrPostCallback TechFeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback TravelAdvancePerMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback TravelLiquidationPerMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnsealBidOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpateDriverAllocationToImprestMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApplicationStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAppointmentComitteeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAppointmentLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApprovalEntrySenderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBankNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBidCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBidOpeningLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDirectApproverOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmployeeActionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateExpenseRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGMDLApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGMDSSApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGMOFreeApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGenomeResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLeaveApproverOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLeaveRejectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLoanCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMobilityRecommendationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNoObjectionRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePASValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePMMUHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePaymentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePerfomanceTargetsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePmmuLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRequestStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadApprovalQRDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAttachedDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateRequiredDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateRequiredFields_637680746OperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateRequiredFields_1019673509OperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateVesselDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback VoidEftOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkshopAdvancePerMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAbilityDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAcademicQualificationsForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAcademicQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addApplicantAccomplishmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCasualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCurrentDutiesSkillsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDeclarationOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDutiesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addEmploymentHistoryForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addEmploymentHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback addFavouriteJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addFileLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback addFleetRequisitionNonStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback addFleetRequisitionSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback addFleetRequisitionStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback addFuelOperationCompleted;
        
        private System.Threading.SendOrPostCallback addHobbyOperationCompleted;
        
        private System.Threading.SendOrPostCallback addImprestSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback addImprestSurrenderSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback addLeaveSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback addOtherCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addOtherPersonalDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPettyCashRequisitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPettyCashSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPettyCashSurrenderSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProfessionalBodyForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProfessionalBodyOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProffessionalQualificationsForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProffessionalQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProjectDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPurchaseRequisitionSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback addQualificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback addRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addStaffClaimSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback addStoreRequsitionSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTeamMember1OperationCompleted;
        
        private System.Threading.SendOrPostCallback addTeamMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrainingAttendedForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrainingAttendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrainingCost2OperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrainingCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrainingParticipants2OperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrainingParticipantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTrainingRequisitionSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback applyOnlineOperationCompleted;
        
        private System.Threading.SendOrPostCallback applyOperationCompleted;
        
        private System.Threading.SendOrPostCallback applyexternalHrJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback applyexternalJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback applyinternalHrJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelImprestApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelPasApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelPettyCashSurrenderApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelRecordApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelTrainingRequestApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDependantsChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback createEmployeeExitVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback createFeedbackFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback createFleetRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback createIctRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback createImprestSurrender1OperationCompleted;
        
        private System.Threading.SendOrPostCallback createImprestSurrenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback createLPODirectlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback createLoansApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewPaymentVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewPettyCashRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewTrainingEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewTrainingFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewTrainingNeedsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewTrainingRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPaymentVoucherLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPettyCashLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPettyCashOperationCompleted;
        
        private System.Threading.SendOrPostCallback createProfileForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPurchaseReqLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPurchaseReqOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPurchaseRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPurchaseStoreRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback createRefereeForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback createRequisitionLine1OperationCompleted;
        
        private System.Threading.SendOrPostCallback createRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback createStaffClaim1OperationCompleted;
        
        private System.Threading.SendOrPostCallback createStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback createStaffClaimOperationCompleted;
        
        private System.Threading.SendOrPostCallback createTrainingFeedbackLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback createTrainingRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback createVehicleIncidenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback createWelfareIncidenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback createWelfareIncidentOperationCompleted;
        
        private System.Threading.SendOrPostCallback createstandardpurchasereqOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAcademicLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAcademicLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAttachDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteEmploymentHistoryLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteEmploymentHistoryLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteEquipmentSpecificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteFavouriteJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePersonnelSpecificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePettyCashLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePettyCashRequisitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteProfessionalLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteProfessionalLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteProffessionalBodyLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteProffessionalBodyLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePurchaseRequisitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteRefereeLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteRefereeLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrainingLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrainingLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrainingParticipants2OperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrainingParticipantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrainingcost2OperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTrainingcostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback editCasualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback editFuelOperationCompleted;
        
        private System.Threading.SendOrPostCallback editHelpDeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback editOtherCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback editPaymentVoucherLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback editPettyCashLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback editPettyCashRequisitionLines2OperationCompleted;
        
        private System.Threading.SendOrPostCallback editPettyCashSurrenderLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback editStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback editTeamMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback editTrainingParticipants2OperationCompleted;
        
        private System.Threading.SendOrPostCallback editTrainingParticipantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback exportWorkplanOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnApproveRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCancelFuelRequistionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCancelImprestMemoApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCancelImprestSurrenderApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCancelLPOApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCancelMaintenanceRequistionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCancelPaymentVoucherApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCancelPlogApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCancelPurchaseRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCancelStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCancelStoreReqApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCancelSubmitofStandardAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnConvertFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCreateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCreateFuelRequistionOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCreateMaintenanceRequistionOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCreateStoreReqLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCreateStoreRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnDeleteStaffClaimsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnDeleteStaffClaimsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnDeleteStoreReqLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnDeleteTrainingFeedbackLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnDeleteTrainingNeedsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnEditStandardAppraisalPIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnEditStandardAppraisalTrainigNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnEditTrainingFeedbackLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnEditTrainingNeedsRequestLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGenerateAWPReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGenerateBoardPCReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGenerateCSPReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGenerateIndividualPcReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGenerateIndividualPcSubIndicatorReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGenerateOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGeneratePlogReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGenerateStandardAppraisalReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGenerateTrainingApplicationReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGenerateTrainingEvaluationReport1OperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGenerateTrainingFeedbackReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGenerateTrainingPlanReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGetAnnualWorkplanLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGetPlogLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGetSubPlogLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGetUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnInsertAgenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnInsertEducationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnInsertEmploymentHistOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnInsertEvaluationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnInsertHelpDeskIssueOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnInsertJDTargetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnInsertMembershipSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnInsertPlogSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnInsertProcurementProfessionalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnInsertSelectedAdditionalActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnInsertStaffClaimsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnInsertStaffClaimsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnInsertStandardAppraisalPIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnInsertStandardAppraisalTrainigNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnLockStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnMergePdfsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnModifyStaffClaimsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnModifyStaffClaimsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnNewStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnPasswordResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnProcPlanReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnRemoveAditionalInitiativeOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnRemoveAgenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnRemoveEducationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnRemoveEmploymentHistOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnRemoveMembershipSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnRemoveProcurementProfessionalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnRemoveStandardAppraisalPIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnRemoveStandardAppraisalTrainigNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnRequestEmailVerificationOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnRequestLoginOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSaveAditionalInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSelectPracticeCatgeoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSendAppraisalEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSendHelpDeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSendImprestSurrenderApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSendPaymentVoucherApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSendPlogApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSendStaffPerformanceContractApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSendStoreReqApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSignStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnStoreOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSubmitStandardAppraisalConfirmationOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSubmitStandardAppraisalObjOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSubmitStandardAppraisalPEOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSubmitStandardAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSuggestPlogandSubPlogDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnUpdateAgenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnUpdateEducationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnUpdateEmploymentHistOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnUpdateHelpDeskIssueOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnUpdateMembershipSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnUpdateProcurementProfessionalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnUpdateStoreReqLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnUpdateUserAgreementOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnUpdateUserBankruptcyOrConvictionOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnUpdateUserEmploymentHistOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnUpdateUserMembershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnUpdateUserOtherPracticesOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnUpdateUserProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnUpdateUserSelfEmployedOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnUploadLicenceRegistrationDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnVerifyEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnVerifyLoginOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback fncreatePurchaseRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnsendFuelRequistionForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnsendMaintenanceRequistionForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback forgotPasswordtForExtenalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateCommitmentReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateEmployeeStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateFleetRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateImprestMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateIssueVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateLeaveFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateP9OperationCompleted;
        
        private System.Threading.SendOrPostCallback generatePayslipOperationCompleted;
        
        private System.Threading.SendOrPostCallback generatePettyCashVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback generatePurchaseReqOperationCompleted;
        
        private System.Threading.SendOrPostCallback generatePurchaseRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateStaffClaimOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateStoreReqReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateStoreRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAdminUnitCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCtsOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImprestObjectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback getItemDescByLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getItemsByLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUrlsOperationCompleted;
        
        private System.Threading.SendOrPostCallback importWorkplanOperationCompleted;
        
        private System.Threading.SendOrPostCallback imprestGeneralDetails1OperationCompleted;
        
        private System.Threading.SendOrPostCallback imprestGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertAppointmentComittee2OperationCompleted;
        
        private System.Threading.SendOrPostCallback insertAppointmentComitteeOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertBudgetAmountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertInputsOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertPASTrainingNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertPMMULinesActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertPlanEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertWorkingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback leaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback reassignDriverOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeCasualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeFuelFromImprestMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeImprestMemoLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeMemberFromImprestMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeNonStaffFromTravelRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeOtherCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeStaffFromTravelRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback resetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendBudgetRelocationForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendFleetRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendImprestApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendImprestMemoApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendImprestRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendImprestSurrenderApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendLPOApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendLeaveForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendPasforApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendPayChangeAdviceForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendPettyCashSurrenderApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendPurchaseRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendRecordForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendStaffClaimApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendStoreRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendTrainingRequestApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback suggestLinesFromRequisitionTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateClaimsBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCommunicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateEmpBankDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateEmploymentHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateEquipmentSpecificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateHrBankDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateIctRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePASTrainingNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePMMULinesActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePersonalDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePersonnelSpecificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePettyCashSurrenderLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateRequisitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSurrenderLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateBankAccountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HrPortal() {
            this.Url = "http://greencom-svr023.greencom.co.ke:7047/BC252/WS/NBA%20TEST/Codeunit/HrPortal";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddContractLinesCompletedEventHandler AddContractLinesCompleted;
        
        /// <remarks/>
        public event AddContractNoCompletedEventHandler AddContractNoCompleted;
        
        /// <remarks/>
        public event AddDeptPerformanceTargetsCompletedEventHandler AddDeptPerformanceTargetsCompleted;
        
        /// <remarks/>
        public event AddDriverAllocationsCompletedEventHandler AddDriverAllocationsCompleted;
        
        /// <remarks/>
        public event AddFleetLinesCompletedEventHandler AddFleetLinesCompleted;
        
        /// <remarks/>
        public event AddFuelRequisitionDetailsCompletedEventHandler AddFuelRequisitionDetailsCompleted;
        
        /// <remarks/>
        public event AddHrAppraisalLinesCompletedEventHandler AddHrAppraisalLinesCompleted;
        
        /// <remarks/>
        public event AddNonKeRRADriverAllocationsCompletedEventHandler AddNonKeRRADriverAllocationsCompleted;
        
        /// <remarks/>
        public event AddTravellingStaffCompletedEventHandler AddTravellingStaffCompleted;
        
        /// <remarks/>
        public event AddVehicleMaintenanceRequestDetailsCompletedEventHandler AddVehicleMaintenanceRequestDetailsCompleted;
        
        /// <remarks/>
        public event ApproveApplicationCompletedEventHandler ApproveApplicationCompleted;
        
        /// <remarks/>
        public event ApproveLeaveReimbursementCompletedEventHandler ApproveLeaveReimbursementCompleted;
        
        /// <remarks/>
        public event ApproveStaffClaimCompletedEventHandler ApproveStaffClaimCompleted;
        
        /// <remarks/>
        public event ApproveTargetCompletedEventHandler ApproveTargetCompleted;
        
        /// <remarks/>
        public event AssignHelpdeskRequestCompletedEventHandler AssignHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event AssignProcurementOfficerCompletedEventHandler AssignProcurementOfficerCompleted;
        
        /// <remarks/>
        public event AssignTransportRequisitionDriverCompletedEventHandler AssignTransportRequisitionDriverCompleted;
        
        /// <remarks/>
        public event AttachDocumentsLinkCompletedEventHandler AttachDocumentsLinkCompleted;
        
        /// <remarks/>
        public event BidScoreEvaluationEntryCompletedEventHandler BidScoreEvaluationEntryCompleted;
        
        /// <remarks/>
        public event BidfinancialEvaluationsRankingsCompletedEventHandler BidfinancialEvaluationsRankingsCompleted;
        
        /// <remarks/>
        public event CalcEndDateCompletedEventHandler CalcEndDateCompleted;
        
        /// <remarks/>
        public event CalcReturnDateCompletedEventHandler CalcReturnDateCompleted;
        
        /// <remarks/>
        public event CanceLeaveApprovalCompletedEventHandler CanceLeaveApprovalCompleted;
        
        /// <remarks/>
        public event CancelBidTabulationHeaderapprovalCompletedEventHandler CancelBidTabulationHeaderapprovalCompleted;
        
        /// <remarks/>
        public event CancelBudgetRelocationApprovalCompletedEventHandler CancelBudgetRelocationApprovalCompleted;
        
        /// <remarks/>
        public event CancelConsolidatedNeedsApprovalCompletedEventHandler CancelConsolidatedNeedsApprovalCompleted;
        
        /// <remarks/>
        public event CancelDocapprovalCompletedEventHandler CancelDocapprovalCompleted;
        
        /// <remarks/>
        public event CancelEftapprovalCompletedEventHandler CancelEftapprovalCompleted;
        
        /// <remarks/>
        public event CancelExpenseRequisitionApprovalCompletedEventHandler CancelExpenseRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event CancelFuelCardApprovalCompletedEventHandler CancelFuelCardApprovalCompleted;
        
        /// <remarks/>
        public event CancelFullUtilVoucherCompletedEventHandler CancelFullUtilVoucherCompleted;
        
        /// <remarks/>
        public event CancelInductionApprovalCompletedEventHandler CancelInductionApprovalCompleted;
        
        /// <remarks/>
        public event CancelLPOApprovalRequestCompletedEventHandler CancelLPOApprovalRequestCompleted;
        
        /// <remarks/>
        public event CancelLabSampleMgtForApprovalCompletedEventHandler CancelLabSampleMgtForApprovalCompleted;
        
        /// <remarks/>
        public event CancelLeavePlannerHeaderCompletedEventHandler CancelLeavePlannerHeaderCompleted;
        
        /// <remarks/>
        public event CancelLeaveRecallApprovalCompletedEventHandler CancelLeaveRecallApprovalCompleted;
        
        /// <remarks/>
        public event CancelLeaveRequisitionCompletedEventHandler CancelLeaveRequisitionCompleted;
        
        /// <remarks/>
        public event CancelMobilityApprovalCompletedEventHandler CancelMobilityApprovalCompleted;
        
        /// <remarks/>
        public event CancelPMMUApprovalCompletedEventHandler CancelPMMUApprovalCompleted;
        
        /// <remarks/>
        public event CancelPRNApprovalRequestCompletedEventHandler CancelPRNApprovalRequestCompleted;
        
        /// <remarks/>
        public event CancelProcurementPlanApprovalCompletedEventHandler CancelProcurementPlanApprovalCompleted;
        
        /// <remarks/>
        public event CancelStaffClaimRecordApprovalCompletedEventHandler CancelStaffClaimRecordApprovalCompleted;
        
        /// <remarks/>
        public event CancelStaffClaimforApprovalCompletedEventHandler CancelStaffClaimforApprovalCompleted;
        
        /// <remarks/>
        public event CancelWorkTicketforApprovalCompletedEventHandler CancelWorkTicketforApprovalCompleted;
        
        /// <remarks/>
        public event CancellIFSTEnderCommiteeForApprovalCompletedEventHandler CancellIFSTEnderCommiteeForApprovalCompleted;
        
        /// <remarks/>
        public event CancellRFQApprovalCompletedEventHandler CancellRFQApprovalCompleted;
        
        /// <remarks/>
        public event CanceltransportReqApprovalRequestCompletedEventHandler CanceltransportReqApprovalRequestCompleted;
        
        /// <remarks/>
        public event ChangeLeaveRelieverCompletedEventHandler ChangeLeaveRelieverCompleted;
        
        /// <remarks/>
        public event CheckAttachmentExistsCompletedEventHandler CheckAttachmentExistsCompleted;
        
        /// <remarks/>
        public event CheckAttachmentExists_1888594284CompletedEventHandler CheckAttachmentExists_1888594284Completed;
        
        /// <remarks/>
        public event CheckPasswordChangedCompletedEventHandler CheckPasswordChangedCompleted;
        
        /// <remarks/>
        public event CheckUserCompletedEventHandler CheckUserCompleted;
        
        /// <remarks/>
        public event ClearEftLinesCompletedEventHandler ClearEftLinesCompleted;
        
        /// <remarks/>
        public event ClearExpenseLinesCompletedEventHandler ClearExpenseLinesCompleted;
        
        /// <remarks/>
        public event CloseAppraisalCompletedEventHandler CloseAppraisalCompleted;
        
        /// <remarks/>
        public event CloseDriverOpenTripsCompletedEventHandler CloseDriverOpenTripsCompleted;
        
        /// <remarks/>
        public event CloseCompletedEventHandler CloseCompleted;
        
        /// <remarks/>
        public event CountApprovalsCompletedEventHandler CountApprovalsCompleted;
        
        /// <remarks/>
        public event CountUnfilledTimesheetsCompletedEventHandler CountUnfilledTimesheetsCompleted;
        
        /// <remarks/>
        public event CreateAccountForExtenalApplicantsCompletedEventHandler CreateAccountForExtenalApplicantsCompleted;
        
        /// <remarks/>
        public event CreateActivitiesCompletedEventHandler CreateActivitiesCompleted;
        
        /// <remarks/>
        public event CreateAppointmentLinesCompletedEventHandler CreateAppointmentLinesCompleted;
        
        /// <remarks/>
        public event CreateBidScoreCreterioCompletedEventHandler CreateBidScoreCreterioCompleted;
        
        /// <remarks/>
        public event CreateBidScoringTemplateCompletedEventHandler CreateBidScoringTemplateCompleted;
        
        /// <remarks/>
        public event CreateChangeDependantsLinesCompletedEventHandler CreateChangeDependantsLinesCompleted;
        
        /// <remarks/>
        public event CreateEftHeaderCompletedEventHandler CreateEftHeaderCompleted;
        
        /// <remarks/>
        public event CreateEftLinesCompletedEventHandler CreateEftLinesCompleted;
        
        /// <remarks/>
        public event CreateGMOFreeApplicationCompletedEventHandler CreateGMOFreeApplicationCompleted;
        
        /// <remarks/>
        public event CreateInvitationNoticeCompletedEventHandler CreateInvitationNoticeCompleted;
        
        /// <remarks/>
        public event CreateInvitedBiddersCompletedEventHandler CreateInvitedBiddersCompleted;
        
        /// <remarks/>
        public event CreateLPODocCompletedEventHandler CreateLPODocCompleted;
        
        /// <remarks/>
        public event CreateLPOFromContractCompletedEventHandler CreateLPOFromContractCompleted;
        
        /// <remarks/>
        public event CreateLeaveApplicationCompletedEventHandler CreateLeaveApplicationCompleted;
        
        /// <remarks/>
        public event CreateMedicalCardCompletedEventHandler CreateMedicalCardCompleted;
        
        /// <remarks/>
        public event CreateNewResourceRequirementCompletedEventHandler CreateNewResourceRequirementCompleted;
        
        /// <remarks/>
        public event CreateNoObjectionLetterRequestCompletedEventHandler CreateNoObjectionLetterRequestCompleted;
        
        /// <remarks/>
        public event CreatePayChangeAdviceCompletedEventHandler CreatePayChangeAdviceCompleted;
        
        /// <remarks/>
        public event CreatePaychangeAdviceLinesCompletedEventHandler CreatePaychangeAdviceLinesCompleted;
        
        /// <remarks/>
        public event CreatePurchaseContractCompletedEventHandler CreatePurchaseContractCompleted;
        
        /// <remarks/>
        public event CreateRecruitmentRequisitionCompletedEventHandler CreateRecruitmentRequisitionCompleted;
        
        /// <remarks/>
        public event CreateStrategyWorkPlanLinesCompletedEventHandler CreateStrategyWorkPlanLinesCompleted;
        
        /// <remarks/>
        public event CreateWarantiesCompletedEventHandler CreateWarantiesCompleted;
        
        /// <remarks/>
        public event CreateWorksPurchaseRequisitionCompletedEventHandler CreateWorksPurchaseRequisitionCompleted;
        
        /// <remarks/>
        public event DelegateApprovalCompletedEventHandler DelegateApprovalCompleted;
        
        /// <remarks/>
        public event DeleteAllocationLinesCompletedEventHandler DeleteAllocationLinesCompleted;
        
        /// <remarks/>
        public event DeleteBudgetAmountsCompletedEventHandler DeleteBudgetAmountsCompleted;
        
        /// <remarks/>
        public event DeleteDocumentAttachmentCompletedEventHandler DeleteDocumentAttachmentCompleted;
        
        /// <remarks/>
        public event DeleteEdmsAttachmentCompletedEventHandler DeleteEdmsAttachmentCompleted;
        
        /// <remarks/>
        public event DeleteExpenseReqLineCompletedEventHandler DeleteExpenseReqLineCompleted;
        
        /// <remarks/>
        public event DeleteFleetLinesCompletedEventHandler DeleteFleetLinesCompleted;
        
        /// <remarks/>
        public event DeleteFuelReqCompletedEventHandler DeleteFuelReqCompleted;
        
        /// <remarks/>
        public event DeleteGMDLApplicationCompletedEventHandler DeleteGMDLApplicationCompleted;
        
        /// <remarks/>
        public event DeleteGMDSSApplicationCompletedEventHandler DeleteGMDSSApplicationCompleted;
        
        /// <remarks/>
        public event DeleteGenomeResearchCompletedEventHandler DeleteGenomeResearchCompleted;
        
        /// <remarks/>
        public event DeleteHrAppraisalLinesCompletedEventHandler DeleteHrAppraisalLinesCompleted;
        
        /// <remarks/>
        public event DeleteKpiRecordCompletedEventHandler DeleteKpiRecordCompleted;
        
        /// <remarks/>
        public event DeleteOtherCostCompletedEventHandler DeleteOtherCostCompleted;
        
        /// <remarks/>
        public event DeleteOtherDutyCompletedEventHandler DeleteOtherDutyCompleted;
        
        /// <remarks/>
        public event DeletePASTrainingNeedsCompletedEventHandler DeletePASTrainingNeedsCompleted;
        
        /// <remarks/>
        public event DeletePASValuesCompletedEventHandler DeletePASValuesCompleted;
        
        /// <remarks/>
        public event DeletePRNExpenseCompletedEventHandler DeletePRNExpenseCompleted;
        
        /// <remarks/>
        public event DeletePerfomanceTargetsLinesCompletedEventHandler DeletePerfomanceTargetsLinesCompleted;
        
        /// <remarks/>
        public event DeleteProcurementPlanEntryCompletedEventHandler DeleteProcurementPlanEntryCompleted;
        
        /// <remarks/>
        public event DeleteProcurementPlanLinesCompletedEventHandler DeleteProcurementPlanLinesCompleted;
        
        /// <remarks/>
        public event DeleteReallocationLinesCompletedEventHandler DeleteReallocationLinesCompleted;
        
        /// <remarks/>
        public event DeleteSampleLineCompletedEventHandler DeleteSampleLineCompleted;
        
        /// <remarks/>
        public event DeleteTrainingCourseSetupCompletedEventHandler DeleteTrainingCourseSetupCompleted;
        
        /// <remarks/>
        public event DeleteTrainingNeedLineCompletedEventHandler DeleteTrainingNeedLineCompleted;
        
        /// <remarks/>
        public event DeleteWorkTicketLinesCompletedEventHandler DeleteWorkTicketLinesCompleted;
        
        /// <remarks/>
        public event DeleteWorkplanLinesCompletedEventHandler DeleteWorkplanLinesCompleted;
        
        /// <remarks/>
        public event DetermineIfIsNonWorkingCompletedEventHandler DetermineIfIsNonWorkingCompleted;
        
        /// <remarks/>
        public event DocumentApprovalsCompletedEventHandler DocumentApprovalsCompleted;
        
        /// <remarks/>
        public event DocumentRejectionCommentLineCompletedEventHandler DocumentRejectionCommentLineCompleted;
        
        /// <remarks/>
        public event DocumentRejectionsCompletedEventHandler DocumentRejectionsCompleted;
        
        /// <remarks/>
        public event EditActivitiesCompletedEventHandler EditActivitiesCompleted;
        
        /// <remarks/>
        public event EscalatedHelpdeskRequestDynasoftCompletedEventHandler EscalatedHelpdeskRequestDynasoftCompleted;
        
        /// <remarks/>
        public event EscalatedHelpdeskRequestCompletedEventHandler EscalatedHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event EssCancellPVCompletedEventHandler EssCancellPVCompleted;
        
        /// <remarks/>
        public event ExpenseRequisitionApprovalCompletedEventHandler ExpenseRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event ExportWorkplanExcellCompletedEventHandler ExportWorkplanExcellCompleted;
        
        /// <remarks/>
        public event FnAddEvaluationPIPCompletedEventHandler FnAddEvaluationPIPCompleted;
        
        /// <remarks/>
        public event FnAppointTeamMemberCompletedEventHandler FnAppointTeamMemberCompleted;
        
        /// <remarks/>
        public event FnAppraisalSuggestObjectivesOutcomesCompletedEventHandler FnAppraisalSuggestObjectivesOutcomesCompleted;
        
        /// <remarks/>
        public event FnCloseHelpDeskIssueCompletedEventHandler FnCloseHelpDeskIssueCompleted;
        
        /// <remarks/>
        public event FnCreateLeaveApplicationCompletedEventHandler FnCreateLeaveApplicationCompleted;
        
        /// <remarks/>
        public event FnCreatePreliminaryDesignPortalCompletedEventHandler FnCreatePreliminaryDesignPortalCompleted;
        
        /// <remarks/>
        public event FnCreateProjectLeadsAppointmentCompletedEventHandler FnCreateProjectLeadsAppointmentCompleted;
        
        /// <remarks/>
        public event FnCreateProjectTeamCardCompletedEventHandler FnCreateProjectTeamCardCompleted;
        
        /// <remarks/>
        public event FnCreateStaffClaimApprovalRequestsCompletedEventHandler FnCreateStaffClaimApprovalRequestsCompleted;
        
        /// <remarks/>
        public event FnCreateStakeHolderFeedbackCompletedEventHandler FnCreateStakeHolderFeedbackCompleted;
        
        /// <remarks/>
        public event FnCreateTrainingFeedbackCompletedEventHandler FnCreateTrainingFeedbackCompleted;
        
        /// <remarks/>
        public event FnCreateTrainingRequisitionCompletedEventHandler FnCreateTrainingRequisitionCompleted;
        
        /// <remarks/>
        public event FnCreateUserRequestCompletedEventHandler FnCreateUserRequestCompleted;
        
        /// <remarks/>
        public event FnDeleteIndividualCardSubActivitiesCompletedEventHandler FnDeleteIndividualCardSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnEditIndividualCardSubActivitiesCompletedEventHandler FnEditIndividualCardSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnEditPurchaseLineDescriptionCompletedEventHandler FnEditPurchaseLineDescriptionCompleted;
        
        /// <remarks/>
        public event FnGetLastSubPcLineNoCompletedEventHandler FnGetLastSubPcLineNoCompleted;
        
        /// <remarks/>
        public event FnInserImprestSurrenderCompletedEventHandler FnInserImprestSurrenderCompleted;
        
        /// <remarks/>
        public event FnInsertProjectTeamLeadsLinesCompletedEventHandler FnInsertProjectTeamLeadsLinesCompleted;
        
        /// <remarks/>
        public event FnInsertProjectTeamLinesCompletedEventHandler FnInsertProjectTeamLinesCompleted;
        
        /// <remarks/>
        public event FnInsertSubObjectiveEvaluationCompletedEventHandler FnInsertSubObjectiveEvaluationCompleted;
        
        /// <remarks/>
        public event FnInsertTrainingLinesCompletedEventHandler FnInsertTrainingLinesCompleted;
        
        /// <remarks/>
        public event FnInsertVehicleMaitenanceDetailsCompletedEventHandler FnInsertVehicleMaitenanceDetailsCompleted;
        
        /// <remarks/>
        public event FnLoadCompetenciesCompletedEventHandler FnLoadCompetenciesCompleted;
        
        /// <remarks/>
        public event FnNewIndividualCardSubActivitiesCompletedEventHandler FnNewIndividualCardSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnNewPerformanceLogEntryCompletedEventHandler FnNewPerformanceLogEntryCompleted;
        
        /// <remarks/>
        public event FnNewStandardAppraisalCompletedEventHandler FnNewStandardAppraisalCompleted;
        
        /// <remarks/>
        public event FnPublishLPOCompletedEventHandler FnPublishLPOCompleted;
        
        /// <remarks/>
        public event FnRemoveCoreInitiativesCompletedEventHandler FnRemoveCoreInitiativesCompleted;
        
        /// <remarks/>
        public event FnRemovePerformanceLogLineCompletedEventHandler FnRemovePerformanceLogLineCompleted;
        
        /// <remarks/>
        public event FnReopenHelpDeskIssueCompletedEventHandler FnReopenHelpDeskIssueCompleted;
        
        /// <remarks/>
        public event FnSaveCoreInitiativesCompletedEventHandler FnSaveCoreInitiativesCompleted;
        
        /// <remarks/>
        public event FnSendLPOViaMailCompletedEventHandler FnSendLPOViaMailCompleted;
        
        /// <remarks/>
        public event FnSendTenderCommitteNotificationCompletedEventHandler FnSendTenderCommitteNotificationCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedCoreInitiativesCompletedEventHandler FnSubmitSelectedCoreInitiativesCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedPLogCategoriesCompletedEventHandler FnSubmitSelectedPLogCategoriesCompleted;
        
        /// <remarks/>
        public event FnSubmitTrainingNeedsCompletedEventHandler FnSubmitTrainingNeedsCompleted;
        
        /// <remarks/>
        public event FnSubmitUserRequestCompletedEventHandler FnSubmitUserRequestCompleted;
        
        /// <remarks/>
        public event FnSuggestJDCompletedEventHandler FnSuggestJDCompleted;
        
        /// <remarks/>
        public event FnSuggestPlogLinesCompletedEventHandler FnSuggestPlogLinesCompleted;
        
        /// <remarks/>
        public event FnUpdatePRNLinesCompletedEventHandler FnUpdatePRNLinesCompleted;
        
        /// <remarks/>
        public event FnUpdatePerformanceTargetLinesDetailsCompletedEventHandler FnUpdatePerformanceTargetLinesDetailsCompleted;
        
        /// <remarks/>
        public event FnUpdateProjectLeadsAppointmentCompletedEventHandler FnUpdateProjectLeadsAppointmentCompleted;
        
        /// <remarks/>
        public event FnUpdatePurchaseHeaderCompletedEventHandler FnUpdatePurchaseHeaderCompleted;
        
        /// <remarks/>
        public event FnUpdatePurchaseRequisitionCompletedEventHandler FnUpdatePurchaseRequisitionCompleted;
        
        /// <remarks/>
        public event FnUpdateStakeholderFeedBackLinesCompletedEventHandler FnUpdateStakeholderFeedBackLinesCompleted;
        
        /// <remarks/>
        public event FnsuggestsubindicatorsCompletedEventHandler FnsuggestsubindicatorsCompleted;
        
        /// <remarks/>
        public event FullUtilVoucherApprovalCompletedEventHandler FullUtilVoucherApprovalCompleted;
        
        /// <remarks/>
        public event FunctionalCancellApprovalRequestCompletedEventHandler FunctionalCancellApprovalRequestCompleted;
        
        /// <remarks/>
        public event FunctionalsendApprovalRequestCompletedEventHandler FunctionalsendApprovalRequestCompleted;
        
        /// <remarks/>
        public event GMOImportExportTransitRecordExistsCompletedEventHandler GMOImportExportTransitRecordExistsCompleted;
        
        /// <remarks/>
        public event GenerateAdminVoteBookReportCompletedEventHandler GenerateAdminVoteBookReportCompleted;
        
        /// <remarks/>
        public event GenerateAieReportCompletedEventHandler GenerateAieReportCompleted;
        
        /// <remarks/>
        public event GenerateAndSendOTPCompletedEventHandler GenerateAndSendOTPCompleted;
        
        /// <remarks/>
        public event GenerateAnnualFunctionalPlanCompletedEventHandler GenerateAnnualFunctionalPlanCompleted;
        
        /// <remarks/>
        public event GenerateAwardNoticeCompletedEventHandler GenerateAwardNoticeCompleted;
        
        /// <remarks/>
        public event GenerateBankStatementCompletedEventHandler GenerateBankStatementCompleted;
        
        /// <remarks/>
        public event GenerateCashbooklReportCompletedEventHandler GenerateCashbooklReportCompleted;
        
        /// <remarks/>
        public event GenerateClaimsReportCompletedEventHandler GenerateClaimsReportCompleted;
        
        /// <remarks/>
        public event GenerateEvalutionReportCompletedEventHandler GenerateEvalutionReportCompleted;
        
        /// <remarks/>
        public event GenerateExpenseRequisitionCompletedEventHandler GenerateExpenseRequisitionCompleted;
        
        /// <remarks/>
        public event GenerateFuelRequisitionCompletedEventHandler GenerateFuelRequisitionCompleted;
        
        /// <remarks/>
        public event GenerateGMOFreeReportCompletedEventHandler GenerateGMOFreeReportCompleted;
        
        /// <remarks/>
        public event GenerateLPOReportCompletedEventHandler GenerateLPOReportCompleted;
        
        /// <remarks/>
        public event GenerateLeaveStatementReportCompletedEventHandler GenerateLeaveStatementReportCompleted;
        
        /// <remarks/>
        public event GenerateMaintenanceRequisitionCompletedEventHandler GenerateMaintenanceRequisitionCompleted;
        
        /// <remarks/>
        public event GenerateOutwardReportCompletedEventHandler GenerateOutwardReportCompleted;
        
        /// <remarks/>
        public event GeneratePASEmpReportCompletedEventHandler GeneratePASEmpReportCompleted;
        
        /// <remarks/>
        public event GeneratePASReportCompletedEventHandler GeneratePASReportCompleted;
        
        /// <remarks/>
        public event GeneratePMMUReportCompletedEventHandler GeneratePMMUReportCompleted;
        
        /// <remarks/>
        public event GeneratePNineReportCompletedEventHandler GeneratePNineReportCompleted;
        
        /// <remarks/>
        public event GeneratePaySlipReport2CompletedEventHandler GeneratePaySlipReport2Completed;
        
        /// <remarks/>
        public event GeneratePaySlipReportCompletedEventHandler GeneratePaySlipReportCompleted;
        
        /// <remarks/>
        public event GeneratePortalEmailOTPCodeCompletedEventHandler GeneratePortalEmailOTPCodeCompleted;
        
        /// <remarks/>
        public event GeneratePortalOTPCodeCompletedEventHandler GeneratePortalOTPCodeCompleted;
        
        /// <remarks/>
        public event GenerateRMReportCompletedEventHandler GenerateRMReportCompleted;
        
        /// <remarks/>
        public event GenerateRandomOTPCodeCompletedEventHandler GenerateRandomOTPCodeCompleted;
        
        /// <remarks/>
        public event GenerateReceiptReportCompletedEventHandler GenerateReceiptReportCompleted;
        
        /// <remarks/>
        public event GenerateReceiptCompletedEventHandler GenerateReceiptCompleted;
        
        /// <remarks/>
        public event GenerateReceiptlReportCompletedEventHandler GenerateReceiptlReportCompleted;
        
        /// <remarks/>
        public event GenerateReopenreportCompletedEventHandler GenerateReopenreportCompleted;
        
        /// <remarks/>
        public event GenerateVoteBookReportCompletedEventHandler GenerateVoteBookReportCompleted;
        
        /// <remarks/>
        public event GenerateVoucherReport2CompletedEventHandler GenerateVoucherReport2Completed;
        
        /// <remarks/>
        public event GenerateVoucherReportCompletedEventHandler GenerateVoucherReportCompleted;
        
        /// <remarks/>
        public event GenerateWarrantReportCompletedEventHandler GenerateWarrantReportCompleted;
        
        /// <remarks/>
        public event GenerateWorkplanBudgetStrategyCompletedEventHandler GenerateWorkplanBudgetStrategyCompleted;
        
        /// <remarks/>
        public event GenerateictreportCompletedEventHandler GenerateictreportCompleted;
        
        /// <remarks/>
        public event GetAllItemsCompletedEventHandler GetAllItemsCompleted;
        
        /// <remarks/>
        public event GetDSARatesCompletedEventHandler GetDSARatesCompleted;
        
        /// <remarks/>
        public event GetDocumentAttachment_1705862952CompletedEventHandler GetDocumentAttachment_1705862952Completed;
        
        /// <remarks/>
        public event GetDocumentAttachmentCompletedEventHandler GetDocumentAttachmentCompleted;
        
        /// <remarks/>
        public event GetEndReturnDateCompletedEventHandler GetEndReturnDateCompleted;
        
        /// <remarks/>
        public event GetFinancialYearCompletedEventHandler GetFinancialYearCompleted;
        
        /// <remarks/>
        public event GetImprestDimensionsCompletedEventHandler GetImprestDimensionsCompleted;
        
        /// <remarks/>
        public event GetLeaveBalancesCompletedEventHandler GetLeaveBalancesCompleted;
        
        /// <remarks/>
        public event GetLoansEntitlementPerGradeCompletedEventHandler GetLoansEntitlementPerGradeCompleted;
        
        /// <remarks/>
        public event GetNextApproverCompletedEventHandler GetNextApproverCompleted;
        
        /// <remarks/>
        public event GetPaymentsDocDimensionsCompletedEventHandler GetPaymentsDocDimensionsCompleted;
        
        /// <remarks/>
        public event GetPreviousPayCompletedEventHandler GetPreviousPayCompleted;
        
        /// <remarks/>
        public event GetProfilePictureCompletedEventHandler GetProfilePictureCompleted;
        
        /// <remarks/>
        public event GetReciptssDocDimensionsCompletedEventHandler GetReciptssDocDimensionsCompleted;
        
        /// <remarks/>
        public event GetSubmittedDutyTrainingNeedsCompletedEventHandler GetSubmittedDutyTrainingNeedsCompleted;
        
        /// <remarks/>
        public event GetTrainingPlanCodeCompletedEventHandler GetTrainingPlanCodeCompleted;
        
        /// <remarks/>
        public event GetUserSignatureCompletedEventHandler GetUserSignatureCompleted;
        
        /// <remarks/>
        public event GetYearsToRetirementCompletedEventHandler GetYearsToRetirementCompleted;
        
        /// <remarks/>
        public event HRAppraisalHeaderInsertCompletedEventHandler HRAppraisalHeaderInsertCompleted;
        
        /// <remarks/>
        public event HRLeaveCarryForwardCompletedEventHandler HRLeaveCarryForwardCompleted;
        
        /// <remarks/>
        public event HRLeaveReimbursementCompletedEventHandler HRLeaveReimbursementCompleted;
        
        /// <remarks/>
        public event HRTimeOffLieuCompletedEventHandler HRTimeOffLieuCompleted;
        
        /// <remarks/>
        public event ImportExcellBudgetValuesCompletedEventHandler ImportExcellBudgetValuesCompleted;
        
        /// <remarks/>
        public event ImportStaffProfilePictureCompletedEventHandler ImportStaffProfilePictureCompleted;
        
        /// <remarks/>
        public event InitiateStaffClaimCompletedEventHandler InitiateStaffClaimCompleted;
        
        /// <remarks/>
        public event InsertAccusedEmployeesCompletedEventHandler InsertAccusedEmployeesCompleted;
        
        /// <remarks/>
        public event InsertActualAmountCompletedEventHandler InsertActualAmountCompleted;
        
        /// <remarks/>
        public event InsertAllocationLinesCompletedEventHandler InsertAllocationLinesCompleted;
        
        /// <remarks/>
        public event InsertBidPreliminaryEvaluationRegisterCompletedEventHandler InsertBidPreliminaryEvaluationRegisterCompleted;
        
        /// <remarks/>
        public event InsertBidTechnicalEvaluationRegisterCompletedEventHandler InsertBidTechnicalEvaluationRegisterCompleted;
        
        /// <remarks/>
        public event InsertBidfinancialEvaluationRegisterCompletedEventHandler InsertBidfinancialEvaluationRegisterCompleted;
        
        /// <remarks/>
        public event InsertBidscoreRequirementCompletedEventHandler InsertBidscoreRequirementCompleted;
        
        /// <remarks/>
        public event InsertConsolidatedTrainingNeedsCompletedEventHandler InsertConsolidatedTrainingNeedsCompleted;
        
        /// <remarks/>
        public event InsertContractPaymentTermsCompletedEventHandler InsertContractPaymentTermsCompleted;
        
        /// <remarks/>
        public event InsertContractPaymentCompletedEventHandler InsertContractPaymentCompleted;
        
        /// <remarks/>
        public event InsertCurrentSkillsCompletedEventHandler InsertCurrentSkillsCompleted;
        
        /// <remarks/>
        public event InsertDirectExpenseCompletedEventHandler InsertDirectExpenseCompleted;
        
        /// <remarks/>
        public event InsertDutystationTrainingNeedsCompletedEventHandler InsertDutystationTrainingNeedsCompleted;
        
        /// <remarks/>
        public event InsertEmployeeClockInCompletedEventHandler InsertEmployeeClockInCompleted;
        
        /// <remarks/>
        public event InsertEmployeeClockOutCompletedEventHandler InsertEmployeeClockOutCompleted;
        
        /// <remarks/>
        public event InsertEmployeeRequisitionCompletedEventHandler InsertEmployeeRequisitionCompleted;
        
        /// <remarks/>
        public event InsertExpenseLinesImprestCompletedEventHandler InsertExpenseLinesImprestCompleted;
        
        /// <remarks/>
        public event InsertExpenseLinesPurchaseCompletedEventHandler InsertExpenseLinesPurchaseCompleted;
        
        /// <remarks/>
        public event InsertExpenseReqAllocationCompletedEventHandler InsertExpenseReqAllocationCompleted;
        
        /// <remarks/>
        public event InsertExpenseRequisitionLineCompletedEventHandler InsertExpenseRequisitionLineCompleted;
        
        /// <remarks/>
        public event InsertExpenseRequisitionCompletedEventHandler InsertExpenseRequisitionCompleted;
        
        /// <remarks/>
        public event InsertFuelCardLinesCompletedEventHandler InsertFuelCardLinesCompleted;
        
        /// <remarks/>
        public event InsertFuelCardCompletedEventHandler InsertFuelCardCompleted;
        
        /// <remarks/>
        public event InsertFuelReqCompletedEventHandler InsertFuelReqCompleted;
        
        /// <remarks/>
        public event InsertGMDLApplicationCompletedEventHandler InsertGMDLApplicationCompleted;
        
        /// <remarks/>
        public event InsertGMDSSApplicationCompletedEventHandler InsertGMDSSApplicationCompleted;
        
        /// <remarks/>
        public event InsertGMOImportExportTransitRecordCompletedEventHandler InsertGMOImportExportTransitRecordCompleted;
        
        /// <remarks/>
        public event InsertGenomeResearchCompletedEventHandler InsertGenomeResearchCompleted;
        
        /// <remarks/>
        public event InsertGrievanceCompletedEventHandler InsertGrievanceCompleted;
        
        /// <remarks/>
        public event InsertHandoverNotesCompletedEventHandler InsertHandoverNotesCompleted;
        
        /// <remarks/>
        public event InsertImperestNoCompletedEventHandler InsertImperestNoCompleted;
        
        /// <remarks/>
        public event InsertInductionHeaderCompletedEventHandler InsertInductionHeaderCompleted;
        
        /// <remarks/>
        public event InsertInductionLinesCompletedEventHandler InsertInductionLinesCompleted;
        
        /// <remarks/>
        public event InsertKpiRecordCompletedEventHandler InsertKpiRecordCompleted;
        
        /// <remarks/>
        public event InsertLabSampleCompletedEventHandler InsertLabSampleCompleted;
        
        /// <remarks/>
        public event InsertLeavePlannerHeaderCompletedEventHandler InsertLeavePlannerHeaderCompleted;
        
        /// <remarks/>
        public event InsertLeavePlannerLinesCompletedEventHandler InsertLeavePlannerLinesCompleted;
        
        /// <remarks/>
        public event InsertLeaveRecallCompletedEventHandler InsertLeaveRecallCompleted;
        
        /// <remarks/>
        public event InsertManagementInitiatedTransferCompletedEventHandler InsertManagementInitiatedTransferCompleted;
        
        /// <remarks/>
        public event InsertOtherCostCompletedEventHandler InsertOtherCostCompleted;
        
        /// <remarks/>
        public event InsertOtherDutyCompletedEventHandler InsertOtherDutyCompleted;
        
        /// <remarks/>
        public event InsertPASValuesCompletedEventHandler InsertPASValuesCompleted;
        
        /// <remarks/>
        public event InsertPMMUHeaderCompletedEventHandler InsertPMMUHeaderCompleted;
        
        /// <remarks/>
        public event InsertPerfomanceTargetsLinesCompletedEventHandler InsertPerfomanceTargetsLinesCompleted;
        
        /// <remarks/>
        public event InsertPettyCashCompletedEventHandler InsertPettyCashCompleted;
        
        /// <remarks/>
        public event InsertPmmuLinesCompletedEventHandler InsertPmmuLinesCompleted;
        
        /// <remarks/>
        public event InsertProcurementPlanEntryCompletedEventHandler InsertProcurementPlanEntryCompleted;
        
        /// <remarks/>
        public event InsertProcurementPlanLinesCompletedEventHandler InsertProcurementPlanLinesCompleted;
        
        /// <remarks/>
        public event InsertProcurementPlanCompletedEventHandler InsertProcurementPlanCompleted;
        
        /// <remarks/>
        public event InsertReallocationHeaderCompletedEventHandler InsertReallocationHeaderCompleted;
        
        /// <remarks/>
        public event InsertReallocationLinesCompletedEventHandler InsertReallocationLinesCompleted;
        
        /// <remarks/>
        public event InsertReservationHeaderCompletedEventHandler InsertReservationHeaderCompleted;
        
        /// <remarks/>
        public event InsertReservationLinesCompletedEventHandler InsertReservationLinesCompleted;
        
        /// <remarks/>
        public event InsertSampleLineCompletedEventHandler InsertSampleLineCompleted;
        
        /// <remarks/>
        public event InsertSelfAssessmentLineCompletedEventHandler InsertSelfAssessmentLineCompleted;
        
        /// <remarks/>
        public event InsertSelfInitiatedTransferCompletedEventHandler InsertSelfInitiatedTransferCompleted;
        
        /// <remarks/>
        public event InsertSurchargeCompletedEventHandler InsertSurchargeCompleted;
        
        /// <remarks/>
        public event InsertTenderCommiteeMembersCompletedEventHandler InsertTenderCommiteeMembersCompleted;
        
        /// <remarks/>
        public event InsertTenderCommiteesCompletedEventHandler InsertTenderCommiteesCompleted;
        
        /// <remarks/>
        public event InsertTrainingCourseSetupCompletedEventHandler InsertTrainingCourseSetupCompleted;
        
        /// <remarks/>
        public event InsertTrainingExtensionCompletedEventHandler InsertTrainingExtensionCompleted;
        
        /// <remarks/>
        public event InsertWorkTicketHeaderCompletedEventHandler InsertWorkTicketHeaderCompleted;
        
        /// <remarks/>
        public event InsertWorkTicketLinesCompletedEventHandler InsertWorkTicketLinesCompleted;
        
        /// <remarks/>
        public event InsertcarLoansApplicationCompletedEventHandler InsertcarLoansApplicationCompleted;
        
        /// <remarks/>
        public event IsSuperVisorCompletedEventHandler IsSuperVisorCompleted;
        
        /// <remarks/>
        public event LeaveRequisitionsApprovalRequestCompletedEventHandler LeaveRequisitionsApprovalRequestCompleted;
        
        /// <remarks/>
        public event LoadAppraisalSectionsHighScaleCompletedEventHandler LoadAppraisalSectionsHighScaleCompleted;
        
        /// <remarks/>
        public event LoadAppraisalSectionsLowerScaleCompletedEventHandler LoadAppraisalSectionsLowerScaleCompleted;
        
        /// <remarks/>
        public event LoadTransportReqCompletedEventHandler LoadTransportReqCompleted;
        
        /// <remarks/>
        public event ModifyBidEvaluationsLInesCompletedEventHandler ModifyBidEvaluationsLInesCompleted;
        
        /// <remarks/>
        public event ModifyBidTabulationHeaderCompletedEventHandler ModifyBidTabulationHeaderCompleted;
        
        /// <remarks/>
        public event ModifyConsolidatedNeedsLinesCompletedEventHandler ModifyConsolidatedNeedsLinesCompleted;
        
        /// <remarks/>
        public event ModifyConsolidatedNeedsCompletedEventHandler ModifyConsolidatedNeedsCompleted;
        
        /// <remarks/>
        public event ModifyEvaluationBidRemarksCompletedEventHandler ModifyEvaluationBidRemarksCompleted;
        
        /// <remarks/>
        public event ModifyExpenseLinesCompletedEventHandler ModifyExpenseLinesCompleted;
        
        /// <remarks/>
        public event ModifyExpenseRequisitionCompletedEventHandler ModifyExpenseRequisitionCompleted;
        
        /// <remarks/>
        public event ModifyFleetLinesCompletedEventHandler ModifyFleetLinesCompleted;
        
        /// <remarks/>
        public event ModifyFuelReqCompletedEventHandler ModifyFuelReqCompleted;
        
        /// <remarks/>
        public event ModifyGMOImportExportTransitRecordCompletedEventHandler ModifyGMOImportExportTransitRecordCompleted;
        
        /// <remarks/>
        public event ModifyHrAppraisalLinesCompletedEventHandler ModifyHrAppraisalLinesCompleted;
        
        /// <remarks/>
        public event ModifyKpiRecordCompletedEventHandler ModifyKpiRecordCompleted;
        
        /// <remarks/>
        public event ModifyLeavePlannerLinesCompletedEventHandler ModifyLeavePlannerLinesCompleted;
        
        /// <remarks/>
        public event ModifyManagementInitiatedTransferCompletedEventHandler ModifyManagementInitiatedTransferCompleted;
        
        /// <remarks/>
        public event ModifyOtherCostCompletedEventHandler ModifyOtherCostCompleted;
        
        /// <remarks/>
        public event ModifyOtherDutyCompletedEventHandler ModifyOtherDutyCompleted;
        
        /// <remarks/>
        public event ModifyPaymentHeaderCompletedEventHandler ModifyPaymentHeaderCompleted;
        
        /// <remarks/>
        public event ModifyProcurementPlanEntryCompletedEventHandler ModifyProcurementPlanEntryCompleted;
        
        /// <remarks/>
        public event ModifyProcurementPlanLinesCompletedEventHandler ModifyProcurementPlanLinesCompleted;
        
        /// <remarks/>
        public event ModifyPurchaseHeaderCompletedEventHandler ModifyPurchaseHeaderCompleted;
        
        /// <remarks/>
        public event ModifyRFQCompletedEventHandler ModifyRFQCompleted;
        
        /// <remarks/>
        public event ModifyReallocationLinesCompletedEventHandler ModifyReallocationLinesCompleted;
        
        /// <remarks/>
        public event ModifySampleLineCompletedEventHandler ModifySampleLineCompleted;
        
        /// <remarks/>
        public event ModifySelfInitiatedTransferCompletedEventHandler ModifySelfInitiatedTransferCompleted;
        
        /// <remarks/>
        public event ModifyTrainingCourseSetupCompletedEventHandler ModifyTrainingCourseSetupCompleted;
        
        /// <remarks/>
        public event ModifyWorkTicketLines1CompletedEventHandler ModifyWorkTicketLines1Completed;
        
        /// <remarks/>
        public event ModifyWorkTicketLinesCompletedEventHandler ModifyWorkTicketLinesCompleted;
        
        /// <remarks/>
        public event NewDisciplinaryCaseCompletedEventHandler NewDisciplinaryCaseCompleted;
        
        /// <remarks/>
        public event NotifySupplyChainCompletedEventHandler NotifySupplyChainCompleted;
        
        /// <remarks/>
        public event PasswordChangedCompletedEventHandler PasswordChangedCompleted;
        
        /// <remarks/>
        public event PerfomSendToSuperVisorCompletedEventHandler PerfomSendToSuperVisorCompleted;
        
        /// <remarks/>
        public event PopulatePettyCashSurrenderCompletedEventHandler PopulatePettyCashSurrenderCompleted;
        
        /// <remarks/>
        public event PopulatePettyCashCompletedEventHandler PopulatePettyCashCompleted;
        
        /// <remarks/>
        public event PosFinanceEvaluationCompletedEventHandler PosFinanceEvaluationCompleted;
        
        /// <remarks/>
        public event PosTechnicalEvaluationCompletedEventHandler PosTechnicalEvaluationCompleted;
        
        /// <remarks/>
        public event PostBidOpeningRegisterCompletedEventHandler PostBidOpeningRegisterCompleted;
        
        /// <remarks/>
        public event PostImprestCompletedEventHandler PostImprestCompleted;
        
        /// <remarks/>
        public event PostPaymentVoucherCompletedEventHandler PostPaymentVoucherCompleted;
        
        /// <remarks/>
        public event PostPreliminaryEvaluationCompletedEventHandler PostPreliminaryEvaluationCompleted;
        
        /// <remarks/>
        public event PostPurchaseInvoiceCompletedEventHandler PostPurchaseInvoiceCompleted;
        
        /// <remarks/>
        public event PostPurchaseOrderCompletedEventHandler PostPurchaseOrderCompleted;
        
        /// <remarks/>
        public event PostReceiptsCompletedEventHandler PostReceiptsCompleted;
        
        /// <remarks/>
        public event PostStaffClaimCompletedEventHandler PostStaffClaimCompleted;
        
        /// <remarks/>
        public event ProceedToProffessionalOpinionCompletedEventHandler ProceedToProffessionalOpinionCompleted;
        
        /// <remarks/>
        public event ProcessDriverAllocationsCompletedEventHandler ProcessDriverAllocationsCompleted;
        
        /// <remarks/>
        public event ProvideIctfeedbackCompletedEventHandler ProvideIctfeedbackCompleted;
        
        /// <remarks/>
        public event PurchasesPerEmployeeCompletedEventHandler PurchasesPerEmployeeCompleted;
        
        /// <remarks/>
        public event RecordExistsCompletedEventHandler RecordExistsCompleted;
        
        /// <remarks/>
        public event RecordGDMSSApplicationExistsCompletedEventHandler RecordGDMSSApplicationExistsCompleted;
        
        /// <remarks/>
        public event RejectApplicationCompletedEventHandler RejectApplicationCompleted;
        
        /// <remarks/>
        public event RejectApprovalRequestCompletedEventHandler RejectApprovalRequestCompleted;
        
        /// <remarks/>
        public event RemoveTrainingCostCompletedEventHandler RemoveTrainingCostCompleted;
        
        /// <remarks/>
        public event ReopenHelpdeskRequestCompletedEventHandler ReopenHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event ResolveHelpdeskRequestCompletedEventHandler ResolveHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event ReturnBase64FromReportCompletedEventHandler ReturnBase64FromReportCompleted;
        
        /// <remarks/>
        public event ReturnOTPExpirationCompletedEventHandler ReturnOTPExpirationCompleted;
        
        /// <remarks/>
        public event ReturnPortalOTPCodeCompletedEventHandler ReturnPortalOTPCodeCompleted;
        
        /// <remarks/>
        public event ReturntoAppraiseeCompletedEventHandler ReturntoAppraiseeCompleted;
        
        /// <remarks/>
        public event ScheduleTransfertoBankCompletedEventHandler ScheduleTransfertoBankCompleted;
        
        /// <remarks/>
        public event SendApprovalEmailAlertCompletedEventHandler SendApprovalEmailAlertCompleted;
        
        /// <remarks/>
        public event SendAwardLetterCompletedEventHandler SendAwardLetterCompleted;
        
        /// <remarks/>
        public event SendBidTabulationHeaderForApprvalCompletedEventHandler SendBidTabulationHeaderForApprvalCompleted;
        
        /// <remarks/>
        public event SendBidcodesCompletedEventHandler SendBidcodesCompleted;
        
        /// <remarks/>
        public event SendConsolidatedNeedsForApprovalCompletedEventHandler SendConsolidatedNeedsForApprovalCompleted;
        
        /// <remarks/>
        public event SendDocForApprvalCompletedEventHandler SendDocForApprvalCompleted;
        
        /// <remarks/>
        public event SendDriverEmailNotificationCompletedEventHandler SendDriverEmailNotificationCompleted;
        
        /// <remarks/>
        public event SendEftForApprvalCompletedEventHandler SendEftForApprvalCompleted;
        
        /// <remarks/>
        public event SendEmailCompletedEventHandler SendEmailCompleted;
        
        /// <remarks/>
        public event SendFuelCardApprovalCompletedEventHandler SendFuelCardApprovalCompleted;
        
        /// <remarks/>
        public event SendFuelRequisitionforApprovalCompletedEventHandler SendFuelRequisitionforApprovalCompleted;
        
        /// <remarks/>
        public event SendIFSTEnderCommiteeForApprovalCompletedEventHandler SendIFSTEnderCommiteeForApprovalCompleted;
        
        /// <remarks/>
        public event SendImprestWarrantforApprovalCompletedEventHandler SendImprestWarrantforApprovalCompleted;
        
        /// <remarks/>
        public event SendInductionApprovalCompletedEventHandler SendInductionApprovalCompleted;
        
        /// <remarks/>
        public event SendLabSampleMgtForApprovalCompletedEventHandler SendLabSampleMgtForApprovalCompleted;
        
        /// <remarks/>
        public event SendLeavePlannerApprovalCompletedEventHandler SendLeavePlannerApprovalCompleted;
        
        /// <remarks/>
        public event SendLeaveRecallApprovalCompletedEventHandler SendLeaveRecallApprovalCompleted;
        
        /// <remarks/>
        public event SendLoanAppForApprovalCompletedEventHandler SendLoanAppForApprovalCompleted;
        
        /// <remarks/>
        public event SendMobilityApprovalCompletedEventHandler SendMobilityApprovalCompleted;
        
        /// <remarks/>
        public event SendPMMUApprovalCompletedEventHandler SendPMMUApprovalCompleted;
        
        /// <remarks/>
        public event SendProcurementPlanApprovalCompletedEventHandler SendProcurementPlanApprovalCompleted;
        
        /// <remarks/>
        public event SendRFQforApprovalCompletedEventHandler SendRFQforApprovalCompleted;
        
        /// <remarks/>
        public event SendRegretLetterCompletedEventHandler SendRegretLetterCompleted;
        
        /// <remarks/>
        public event SendReservationHeaderCompletedEventHandler SendReservationHeaderCompleted;
        
        /// <remarks/>
        public event SendSMSCompletedEventHandler SendSMSCompleted;
        
        /// <remarks/>
        public event SendStaffClaimforApprovalCompletedEventHandler SendStaffClaimforApprovalCompleted;
        
        /// <remarks/>
        public event SendTrainingExtensionApprovalCompletedEventHandler SendTrainingExtensionApprovalCompleted;
        
        /// <remarks/>
        public event SendTrainingNeedsApprovalCompletedEventHandler SendTrainingNeedsApprovalCompleted;
        
        /// <remarks/>
        public event SendVehicleMaintenancetforApprovalCompletedEventHandler SendVehicleMaintenancetforApprovalCompleted;
        
        /// <remarks/>
        public event SendVehicleRequisitionApprovalCompletedEventHandler SendVehicleRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event SendWorkTicketforApprovalCompletedEventHandler SendWorkTicketforApprovalCompleted;
        
        /// <remarks/>
        public event SendforModerationCompletedEventHandler SendforModerationCompleted;
        
        /// <remarks/>
        public event SendforReviewCompletedEventHandler SendforReviewCompleted;
        
        /// <remarks/>
        public event SendtosupervisorCompletedEventHandler SendtosupervisorCompleted;
        
        /// <remarks/>
        public event SendtransportReqApprovalRequestCompletedEventHandler SendtransportReqApprovalRequestCompleted;
        
        /// <remarks/>
        public event StaffClaimPerMonthCompletedEventHandler StaffClaimPerMonthCompleted;
        
        /// <remarks/>
        public event StartPMMUEvaluationCompletedEventHandler StartPMMUEvaluationCompleted;
        
        /// <remarks/>
        public event StoreReqReportCompletedEventHandler StoreReqReportCompleted;
        
        /// <remarks/>
        public event SubmitApplicationCompletedEventHandler SubmitApplicationCompleted;
        
        /// <remarks/>
        public event SubmitConsolidatedTrainingNeedsCompletedEventHandler SubmitConsolidatedTrainingNeedsCompleted;
        
        /// <remarks/>
        public event SubmitDutyStationTrainingNeedsCompletedEventHandler SubmitDutyStationTrainingNeedsCompleted;
        
        /// <remarks/>
        public event SubmitFinalEvalutionReportCompletedEventHandler SubmitFinalEvalutionReportCompleted;
        
        /// <remarks/>
        public event SubmitTrainingEvaluation1CompletedEventHandler SubmitTrainingEvaluation1Completed;
        
        /// <remarks/>
        public event SubmitTrainingFeedbackCompletedEventHandler SubmitTrainingFeedbackCompleted;
        
        /// <remarks/>
        public event SubmitTrainingNeedsCompletedEventHandler SubmitTrainingNeedsCompleted;
        
        /// <remarks/>
        public event SubmitVehicleFuelRequestDetails2CompletedEventHandler SubmitVehicleFuelRequestDetails2Completed;
        
        /// <remarks/>
        public event SuggestLinesFromWorksRequisitionTemplateCompletedEventHandler SuggestLinesFromWorksRequisitionTemplateCompleted;
        
        /// <remarks/>
        public event SuggestPersonnelEquipmentSpecificationCompletedEventHandler SuggestPersonnelEquipmentSpecificationCompleted;
        
        /// <remarks/>
        public event SuggestRFQBidsCompletedEventHandler SuggestRFQBidsCompleted;
        
        /// <remarks/>
        public event SuggestTechnicalPassedBidsCompletedEventHandler SuggestTechnicalPassedBidsCompleted;
        
        /// <remarks/>
        public event SuperVisorActionsCompletedEventHandler SuperVisorActionsCompleted;
        
        /// <remarks/>
        public event SupervisorsRatingCompletedEventHandler SupervisorsRatingCompleted;
        
        /// <remarks/>
        public event SurrenderPettyCashCompletedEventHandler SurrenderPettyCashCompleted;
        
        /// <remarks/>
        public event TechFeesCompletedEventHandler TechFeesCompleted;
        
        /// <remarks/>
        public event TravelAdvancePerMonthCompletedEventHandler TravelAdvancePerMonthCompleted;
        
        /// <remarks/>
        public event TravelLiquidationPerMonthCompletedEventHandler TravelLiquidationPerMonthCompleted;
        
        /// <remarks/>
        public event UnsealBidCompletedEventHandler UnsealBidCompleted;
        
        /// <remarks/>
        public event UpateDriverAllocationToImprestMemoCompletedEventHandler UpateDriverAllocationToImprestMemoCompleted;
        
        /// <remarks/>
        public event UpdateApplicationStatusCompletedEventHandler UpdateApplicationStatusCompleted;
        
        /// <remarks/>
        public event UpdateAppointmentComitteeCompletedEventHandler UpdateAppointmentComitteeCompleted;
        
        /// <remarks/>
        public event UpdateAppointmentLinesCompletedEventHandler UpdateAppointmentLinesCompleted;
        
        /// <remarks/>
        public event UpdateApprovalEntrySenderIDCompletedEventHandler UpdateApprovalEntrySenderIDCompleted;
        
        /// <remarks/>
        public event UpdateBankNameCompletedEventHandler UpdateBankNameCompleted;
        
        /// <remarks/>
        public event UpdateBidCodesCompletedEventHandler UpdateBidCodesCompleted;
        
        /// <remarks/>
        public event UpdateBidOpeningLineCompletedEventHandler UpdateBidOpeningLineCompleted;
        
        /// <remarks/>
        public event UpdateDirectApproverCompletedEventHandler UpdateDirectApproverCompleted;
        
        /// <remarks/>
        public event UpdateEmployeeActionsCompletedEventHandler UpdateEmployeeActionsCompleted;
        
        /// <remarks/>
        public event UpdateExpenseRequisitionCompletedEventHandler UpdateExpenseRequisitionCompleted;
        
        /// <remarks/>
        public event UpdateFeesCompletedEventHandler UpdateFeesCompleted;
        
        /// <remarks/>
        public event UpdateGMDLApplicationCompletedEventHandler UpdateGMDLApplicationCompleted;
        
        /// <remarks/>
        public event UpdateGMDSSApplicationCompletedEventHandler UpdateGMDSSApplicationCompleted;
        
        /// <remarks/>
        public event UpdateGMOFreeApplicationCompletedEventHandler UpdateGMOFreeApplicationCompleted;
        
        /// <remarks/>
        public event UpdateGenomeResearchCompletedEventHandler UpdateGenomeResearchCompleted;
        
        /// <remarks/>
        public event UpdateLeaveApproverCompletedEventHandler UpdateLeaveApproverCompleted;
        
        /// <remarks/>
        public event UpdateLeaveRejectionCompletedEventHandler UpdateLeaveRejectionCompleted;
        
        /// <remarks/>
        public event UpdateLoanCommentsCompletedEventHandler UpdateLoanCommentsCompleted;
        
        /// <remarks/>
        public event UpdateMobilityRecommendationsCompletedEventHandler UpdateMobilityRecommendationsCompleted;
        
        /// <remarks/>
        public event UpdateNoObjectionRequestCompletedEventHandler UpdateNoObjectionRequestCompleted;
        
        /// <remarks/>
        public event UpdatePASValuesCompletedEventHandler UpdatePASValuesCompleted;
        
        /// <remarks/>
        public event UpdatePMMUHeaderCompletedEventHandler UpdatePMMUHeaderCompleted;
        
        /// <remarks/>
        public event UpdatePaymentStatusCompletedEventHandler UpdatePaymentStatusCompleted;
        
        /// <remarks/>
        public event UpdatePerfomanceTargetsLinesCompletedEventHandler UpdatePerfomanceTargetsLinesCompleted;
        
        /// <remarks/>
        public event UpdatePmmuLineCompletedEventHandler UpdatePmmuLineCompleted;
        
        /// <remarks/>
        public event UpdateRequestStatusCompletedEventHandler UpdateRequestStatusCompleted;
        
        /// <remarks/>
        public event UploadApprovalQRDocumentCompletedEventHandler UploadApprovalQRDocumentCompleted;
        
        /// <remarks/>
        public event UploadAttachedDocumentCompletedEventHandler UploadAttachedDocumentCompleted;
        
        /// <remarks/>
        public event ValidateOTPCompletedEventHandler ValidateOTPCompleted;
        
        /// <remarks/>
        public event ValidateRequiredDocumentsCompletedEventHandler ValidateRequiredDocumentsCompleted;
        
        /// <remarks/>
        public event ValidateRequiredFields_637680746CompletedEventHandler ValidateRequiredFields_637680746Completed;
        
        /// <remarks/>
        public event ValidateRequiredFields_1019673509CompletedEventHandler ValidateRequiredFields_1019673509Completed;
        
        /// <remarks/>
        public event ValidateVesselDataCompletedEventHandler ValidateVesselDataCompleted;
        
        /// <remarks/>
        public event VoidEftCompletedEventHandler VoidEftCompleted;
        
        /// <remarks/>
        public event WorkshopAdvancePerMonthCompletedEventHandler WorkshopAdvancePerMonthCompleted;
        
        /// <remarks/>
        public event addAbilityDetailsCompletedEventHandler addAbilityDetailsCompleted;
        
        /// <remarks/>
        public event addAcademicQualificationsForExternalApplcantsCompletedEventHandler addAcademicQualificationsForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event addAcademicQualificationsCompletedEventHandler addAcademicQualificationsCompleted;
        
        /// <remarks/>
        public event addApplicantAccomplishmentCompletedEventHandler addApplicantAccomplishmentCompleted;
        
        /// <remarks/>
        public event addCasualsCompletedEventHandler addCasualsCompleted;
        
        /// <remarks/>
        public event addCurrentDutiesSkillsCompletedEventHandler addCurrentDutiesSkillsCompleted;
        
        /// <remarks/>
        public event addDeclarationCompletedEventHandler addDeclarationCompleted;
        
        /// <remarks/>
        public event addDutiesDetailsCompletedEventHandler addDutiesDetailsCompleted;
        
        /// <remarks/>
        public event addEmploymentHistoryForExternalApplcantsCompletedEventHandler addEmploymentHistoryForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event addEmploymentHistoryCompletedEventHandler addEmploymentHistoryCompleted;
        
        /// <remarks/>
        public event addFavouriteJobsCompletedEventHandler addFavouriteJobsCompleted;
        
        /// <remarks/>
        public event addFileLinksCompletedEventHandler addFileLinksCompleted;
        
        /// <remarks/>
        public event addFleetRequisitionNonStaffCompletedEventHandler addFleetRequisitionNonStaffCompleted;
        
        /// <remarks/>
        public event addFleetRequisitionSharepointLinksCompletedEventHandler addFleetRequisitionSharepointLinksCompleted;
        
        /// <remarks/>
        public event addFleetRequisitionStaffCompletedEventHandler addFleetRequisitionStaffCompleted;
        
        /// <remarks/>
        public event addFuelCompletedEventHandler addFuelCompleted;
        
        /// <remarks/>
        public event addHobbyCompletedEventHandler addHobbyCompleted;
        
        /// <remarks/>
        public event addImprestSharepointLinksCompletedEventHandler addImprestSharepointLinksCompleted;
        
        /// <remarks/>
        public event addImprestSurrenderSharepointLinksCompletedEventHandler addImprestSurrenderSharepointLinksCompleted;
        
        /// <remarks/>
        public event addLeaveSharepointLinksCompletedEventHandler addLeaveSharepointLinksCompleted;
        
        /// <remarks/>
        public event addOtherCostsCompletedEventHandler addOtherCostsCompleted;
        
        /// <remarks/>
        public event addOtherPersonalDetailsCompletedEventHandler addOtherPersonalDetailsCompleted;
        
        /// <remarks/>
        public event addPettyCashRequisitionLinesCompletedEventHandler addPettyCashRequisitionLinesCompleted;
        
        /// <remarks/>
        public event addPettyCashSharepointLinksCompletedEventHandler addPettyCashSharepointLinksCompleted;
        
        /// <remarks/>
        public event addPettyCashSurrenderSharepointLinksCompletedEventHandler addPettyCashSurrenderSharepointLinksCompleted;
        
        /// <remarks/>
        public event addProfessionalBodyForExternalApplcantsCompletedEventHandler addProfessionalBodyForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event addProfessionalBodyCompletedEventHandler addProfessionalBodyCompleted;
        
        /// <remarks/>
        public event addProffessionalQualificationsForExternalApplcantsCompletedEventHandler addProffessionalQualificationsForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event addProffessionalQualificationsCompletedEventHandler addProffessionalQualificationsCompleted;
        
        /// <remarks/>
        public event addProjectDetailsCompletedEventHandler addProjectDetailsCompleted;
        
        /// <remarks/>
        public event addPurchaseRequisitionSharepointLinksCompletedEventHandler addPurchaseRequisitionSharepointLinksCompleted;
        
        /// <remarks/>
        public event addQualificationCompletedEventHandler addQualificationCompleted;
        
        /// <remarks/>
        public event addRefereeCompletedEventHandler addRefereeCompleted;
        
        /// <remarks/>
        public event addStaffClaimSharepointLinksCompletedEventHandler addStaffClaimSharepointLinksCompleted;
        
        /// <remarks/>
        public event addStoreRequsitionSharepointLinksCompletedEventHandler addStoreRequsitionSharepointLinksCompleted;
        
        /// <remarks/>
        public event addTeamMember1CompletedEventHandler addTeamMember1Completed;
        
        /// <remarks/>
        public event addTeamMemberCompletedEventHandler addTeamMemberCompleted;
        
        /// <remarks/>
        public event addTrainingAttendedForExternalApplcantsCompletedEventHandler addTrainingAttendedForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event addTrainingAttendedCompletedEventHandler addTrainingAttendedCompleted;
        
        /// <remarks/>
        public event addTrainingCost2CompletedEventHandler addTrainingCost2Completed;
        
        /// <remarks/>
        public event addTrainingCostCompletedEventHandler addTrainingCostCompleted;
        
        /// <remarks/>
        public event addTrainingParticipants2CompletedEventHandler addTrainingParticipants2Completed;
        
        /// <remarks/>
        public event addTrainingParticipantsCompletedEventHandler addTrainingParticipantsCompleted;
        
        /// <remarks/>
        public event addTrainingRequisitionSharepointLinksCompletedEventHandler addTrainingRequisitionSharepointLinksCompleted;
        
        /// <remarks/>
        public event applyOnlineCompletedEventHandler applyOnlineCompleted;
        
        /// <remarks/>
        public event applyCompletedEventHandler applyCompleted;
        
        /// <remarks/>
        public event applyexternalHrJobsCompletedEventHandler applyexternalHrJobsCompleted;
        
        /// <remarks/>
        public event applyexternalJobCompletedEventHandler applyexternalJobCompleted;
        
        /// <remarks/>
        public event applyinternalHrJobsCompletedEventHandler applyinternalHrJobsCompleted;
        
        /// <remarks/>
        public event cancelImprestApprovalRequestCompletedEventHandler cancelImprestApprovalRequestCompleted;
        
        /// <remarks/>
        public event cancelPasApprovalCompletedEventHandler cancelPasApprovalCompleted;
        
        /// <remarks/>
        public event cancelPettyCashSurrenderApprovalCompletedEventHandler cancelPettyCashSurrenderApprovalCompleted;
        
        /// <remarks/>
        public event cancelRecordApprovalCompletedEventHandler cancelRecordApprovalCompleted;
        
        /// <remarks/>
        public event cancelTrainingRequestApprovalCompletedEventHandler cancelTrainingRequestApprovalCompleted;
        
        /// <remarks/>
        public event changePasswordCompletedEventHandler changePasswordCompleted;
        
        /// <remarks/>
        public event createDependantsChangeCompletedEventHandler createDependantsChangeCompleted;
        
        /// <remarks/>
        public event createEmployeeExitVoucherCompletedEventHandler createEmployeeExitVoucherCompleted;
        
        /// <remarks/>
        public event createFeedbackFormCompletedEventHandler createFeedbackFormCompleted;
        
        /// <remarks/>
        public event createFleetRequisitionCompletedEventHandler createFleetRequisitionCompleted;
        
        /// <remarks/>
        public event createIctRequestCompletedEventHandler createIctRequestCompleted;
        
        /// <remarks/>
        public event createImprestSurrender1CompletedEventHandler createImprestSurrender1Completed;
        
        /// <remarks/>
        public event createImprestSurrenderCompletedEventHandler createImprestSurrenderCompleted;
        
        /// <remarks/>
        public event createLPODirectlyCompletedEventHandler createLPODirectlyCompleted;
        
        /// <remarks/>
        public event createLoansApplicationCompletedEventHandler createLoansApplicationCompleted;
        
        /// <remarks/>
        public event createNewPaymentVoucherCompletedEventHandler createNewPaymentVoucherCompleted;
        
        /// <remarks/>
        public event createNewPettyCashRequisitionCompletedEventHandler createNewPettyCashRequisitionCompleted;
        
        /// <remarks/>
        public event createNewTrainingEvaluationCompletedEventHandler createNewTrainingEvaluationCompleted;
        
        /// <remarks/>
        public event createNewTrainingFeedbackCompletedEventHandler createNewTrainingFeedbackCompleted;
        
        /// <remarks/>
        public event createNewTrainingNeedsLinesCompletedEventHandler createNewTrainingNeedsLinesCompleted;
        
        /// <remarks/>
        public event createNewTrainingRequestCompletedEventHandler createNewTrainingRequestCompleted;
        
        /// <remarks/>
        public event createPaymentVoucherLinesCompletedEventHandler createPaymentVoucherLinesCompleted;
        
        /// <remarks/>
        public event createPettyCashLinesCompletedEventHandler createPettyCashLinesCompleted;
        
        /// <remarks/>
        public event createPettyCashCompletedEventHandler createPettyCashCompleted;
        
        /// <remarks/>
        public event createProfileForExternalApplicantsCompletedEventHandler createProfileForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event createPurchaseReqLineCompletedEventHandler createPurchaseReqLineCompleted;
        
        /// <remarks/>
        public event createPurchaseReqCompletedEventHandler createPurchaseReqCompleted;
        
        /// <remarks/>
        public event createPurchaseRequisitionCompletedEventHandler createPurchaseRequisitionCompleted;
        
        /// <remarks/>
        public event createPurchaseStoreRequisitionCompletedEventHandler createPurchaseStoreRequisitionCompleted;
        
        /// <remarks/>
        public event createRefereeForExternalApplcantsCompletedEventHandler createRefereeForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event createRefereeCompletedEventHandler createRefereeCompleted;
        
        /// <remarks/>
        public event createRequisitionLine1CompletedEventHandler createRequisitionLine1Completed;
        
        /// <remarks/>
        public event createRequisitionLineCompletedEventHandler createRequisitionLineCompleted;
        
        /// <remarks/>
        public event createStaffClaim1CompletedEventHandler createStaffClaim1Completed;
        
        /// <remarks/>
        public event createStaffClaimLineCompletedEventHandler createStaffClaimLineCompleted;
        
        /// <remarks/>
        public event createStaffClaimCompletedEventHandler createStaffClaimCompleted;
        
        /// <remarks/>
        public event createTrainingFeedbackLinesCompletedEventHandler createTrainingFeedbackLinesCompleted;
        
        /// <remarks/>
        public event createTrainingRequisitionCompletedEventHandler createTrainingRequisitionCompleted;
        
        /// <remarks/>
        public event createVehicleIncidenceCompletedEventHandler createVehicleIncidenceCompleted;
        
        /// <remarks/>
        public event createWelfareIncidenceCompletedEventHandler createWelfareIncidenceCompleted;
        
        /// <remarks/>
        public event createWelfareIncidentCompletedEventHandler createWelfareIncidentCompleted;
        
        /// <remarks/>
        public event createstandardpurchasereqCompletedEventHandler createstandardpurchasereqCompleted;
        
        /// <remarks/>
        public event deleteAcademicLineForExternalApplicantsCompletedEventHandler deleteAcademicLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event deleteAcademicLineCompletedEventHandler deleteAcademicLineCompleted;
        
        /// <remarks/>
        public event deleteAttachDocsCompletedEventHandler deleteAttachDocsCompleted;
        
        /// <remarks/>
        public event deleteEmploymentHistoryLineForExternalApplicantsCompletedEventHandler deleteEmploymentHistoryLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event deleteEmploymentHistoryLineCompletedEventHandler deleteEmploymentHistoryLineCompleted;
        
        /// <remarks/>
        public event deleteEquipmentSpecificationsCompletedEventHandler deleteEquipmentSpecificationsCompleted;
        
        /// <remarks/>
        public event deleteFavouriteJobsCompletedEventHandler deleteFavouriteJobsCompleted;
        
        /// <remarks/>
        public event deletePersonnelSpecificationsCompletedEventHandler deletePersonnelSpecificationsCompleted;
        
        /// <remarks/>
        public event deletePettyCashLinesCompletedEventHandler deletePettyCashLinesCompleted;
        
        /// <remarks/>
        public event deletePettyCashRequisitionLinesCompletedEventHandler deletePettyCashRequisitionLinesCompleted;
        
        /// <remarks/>
        public event deleteProfessionalLineForExternalApplicantsCompletedEventHandler deleteProfessionalLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event deleteProfessionalLineCompletedEventHandler deleteProfessionalLineCompleted;
        
        /// <remarks/>
        public event deleteProffessionalBodyLineForExternalApplicantsCompletedEventHandler deleteProffessionalBodyLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event deleteProffessionalBodyLineCompletedEventHandler deleteProffessionalBodyLineCompleted;
        
        /// <remarks/>
        public event deletePurchaseRequisitionLinesCompletedEventHandler deletePurchaseRequisitionLinesCompleted;
        
        /// <remarks/>
        public event deleteRefereeLineForExternalApplicantsCompletedEventHandler deleteRefereeLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event deleteRefereeLineCompletedEventHandler deleteRefereeLineCompleted;
        
        /// <remarks/>
        public event deleteRequisitionLineCompletedEventHandler deleteRequisitionLineCompleted;
        
        /// <remarks/>
        public event deleteStaffClaimLineCompletedEventHandler deleteStaffClaimLineCompleted;
        
        /// <remarks/>
        public event deleteTrainingLineForExternalApplicantsCompletedEventHandler deleteTrainingLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event deleteTrainingLineCompletedEventHandler deleteTrainingLineCompleted;
        
        /// <remarks/>
        public event deleteTrainingParticipants2CompletedEventHandler deleteTrainingParticipants2Completed;
        
        /// <remarks/>
        public event deleteTrainingParticipantsCompletedEventHandler deleteTrainingParticipantsCompleted;
        
        /// <remarks/>
        public event deleteTrainingcost2CompletedEventHandler deleteTrainingcost2Completed;
        
        /// <remarks/>
        public event deleteTrainingcostsCompletedEventHandler deleteTrainingcostsCompleted;
        
        /// <remarks/>
        public event editCasualsCompletedEventHandler editCasualsCompleted;
        
        /// <remarks/>
        public event editFuelCompletedEventHandler editFuelCompleted;
        
        /// <remarks/>
        public event editHelpDeskRequestCompletedEventHandler editHelpDeskRequestCompleted;
        
        /// <remarks/>
        public event editOtherCostsCompletedEventHandler editOtherCostsCompleted;
        
        /// <remarks/>
        public event editPaymentVoucherLinesCompletedEventHandler editPaymentVoucherLinesCompleted;
        
        /// <remarks/>
        public event editPettyCashLinesCompletedEventHandler editPettyCashLinesCompleted;
        
        /// <remarks/>
        public event editPettyCashRequisitionLines2CompletedEventHandler editPettyCashRequisitionLines2Completed;
        
        /// <remarks/>
        public event editPettyCashSurrenderLinesCompletedEventHandler editPettyCashSurrenderLinesCompleted;
        
        /// <remarks/>
        public event editStaffClaimLineCompletedEventHandler editStaffClaimLineCompleted;
        
        /// <remarks/>
        public event editTeamMemberCompletedEventHandler editTeamMemberCompleted;
        
        /// <remarks/>
        public event editTrainingParticipants2CompletedEventHandler editTrainingParticipants2Completed;
        
        /// <remarks/>
        public event editTrainingParticipantsCompletedEventHandler editTrainingParticipantsCompleted;
        
        /// <remarks/>
        public event exportWorkplanCompletedEventHandler exportWorkplanCompleted;
        
        /// <remarks/>
        public event fnApproveRequestCompletedEventHandler fnApproveRequestCompleted;
        
        /// <remarks/>
        public event fnCancelFuelRequistionApprovalCompletedEventHandler fnCancelFuelRequistionApprovalCompleted;
        
        /// <remarks/>
        public event fnCancelImprestMemoApprovalCompletedEventHandler fnCancelImprestMemoApprovalCompleted;
        
        /// <remarks/>
        public event fnCancelImprestSurrenderApprovalCompletedEventHandler fnCancelImprestSurrenderApprovalCompleted;
        
        /// <remarks/>
        public event fnCancelLPOApprovalCompletedEventHandler fnCancelLPOApprovalCompleted;
        
        /// <remarks/>
        public event fnCancelMaintenanceRequistionApprovalCompletedEventHandler fnCancelMaintenanceRequistionApprovalCompleted;
        
        /// <remarks/>
        public event fnCancelPaymentVoucherApprovalCompletedEventHandler fnCancelPaymentVoucherApprovalCompleted;
        
        /// <remarks/>
        public event fnCancelPlogApprovalCompletedEventHandler fnCancelPlogApprovalCompleted;
        
        /// <remarks/>
        public event fnCancelPurchaseRequisitionApprovalCompletedEventHandler fnCancelPurchaseRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event fnCancelStaffPerformanceContractCompletedEventHandler fnCancelStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event fnCancelStoreReqApprovalCompletedEventHandler fnCancelStoreReqApprovalCompleted;
        
        /// <remarks/>
        public event fnCancelSubmitofStandardAppraisalCompletedEventHandler fnCancelSubmitofStandardAppraisalCompleted;
        
        /// <remarks/>
        public event fnChangePasswordCompletedEventHandler fnChangePasswordCompleted;
        
        /// <remarks/>
        public event fnConvertFileCompletedEventHandler fnConvertFileCompleted;
        
        /// <remarks/>
        public event fnCreateFolderCompletedEventHandler fnCreateFolderCompleted;
        
        /// <remarks/>
        public event fnCreateFuelRequistionCompletedEventHandler fnCreateFuelRequistionCompleted;
        
        /// <remarks/>
        public event fnCreateMaintenanceRequistionCompletedEventHandler fnCreateMaintenanceRequistionCompleted;
        
        /// <remarks/>
        public event fnCreateStoreReqLineCompletedEventHandler fnCreateStoreReqLineCompleted;
        
        /// <remarks/>
        public event fnCreateStoreRequisitionCompletedEventHandler fnCreateStoreRequisitionCompleted;
        
        /// <remarks/>
        public event fnDeleteStaffClaimsLinesCompletedEventHandler fnDeleteStaffClaimsLinesCompleted;
        
        /// <remarks/>
        public event fnDeleteStaffClaimsCompletedEventHandler fnDeleteStaffClaimsCompleted;
        
        /// <remarks/>
        public event fnDeleteStoreReqLineCompletedEventHandler fnDeleteStoreReqLineCompleted;
        
        /// <remarks/>
        public event fnDeleteTrainingFeedbackLinesCompletedEventHandler fnDeleteTrainingFeedbackLinesCompleted;
        
        /// <remarks/>
        public event fnDeleteTrainingNeedsLinesCompletedEventHandler fnDeleteTrainingNeedsLinesCompleted;
        
        /// <remarks/>
        public event fnEditStandardAppraisalPIPCompletedEventHandler fnEditStandardAppraisalPIPCompleted;
        
        /// <remarks/>
        public event fnEditStandardAppraisalTrainigNeedsCompletedEventHandler fnEditStandardAppraisalTrainigNeedsCompleted;
        
        /// <remarks/>
        public event fnEditTrainingFeedbackLinesCompletedEventHandler fnEditTrainingFeedbackLinesCompleted;
        
        /// <remarks/>
        public event fnEditTrainingNeedsRequestLinesCompletedEventHandler fnEditTrainingNeedsRequestLinesCompleted;
        
        /// <remarks/>
        public event fnGenerateAWPReportCompletedEventHandler fnGenerateAWPReportCompleted;
        
        /// <remarks/>
        public event fnGenerateBoardPCReportCompletedEventHandler fnGenerateBoardPCReportCompleted;
        
        /// <remarks/>
        public event fnGenerateCSPReportCompletedEventHandler fnGenerateCSPReportCompleted;
        
        /// <remarks/>
        public event fnGenerateIndividualPcReportCompletedEventHandler fnGenerateIndividualPcReportCompleted;
        
        /// <remarks/>
        public event fnGenerateIndividualPcSubIndicatorReportCompletedEventHandler fnGenerateIndividualPcSubIndicatorReportCompleted;
        
        /// <remarks/>
        public event fnGenerateOTPCompletedEventHandler fnGenerateOTPCompleted;
        
        /// <remarks/>
        public event fnGeneratePlogReportCompletedEventHandler fnGeneratePlogReportCompleted;
        
        /// <remarks/>
        public event fnGenerateStandardAppraisalReportCompletedEventHandler fnGenerateStandardAppraisalReportCompleted;
        
        /// <remarks/>
        public event fnGenerateTrainingApplicationReportCompletedEventHandler fnGenerateTrainingApplicationReportCompleted;
        
        /// <remarks/>
        public event fnGenerateTrainingEvaluationReport1CompletedEventHandler fnGenerateTrainingEvaluationReport1Completed;
        
        /// <remarks/>
        public event fnGenerateTrainingFeedbackReportCompletedEventHandler fnGenerateTrainingFeedbackReportCompleted;
        
        /// <remarks/>
        public event fnGenerateTrainingPlanReportCompletedEventHandler fnGenerateTrainingPlanReportCompleted;
        
        /// <remarks/>
        public event fnGetAnnualWorkplanLinesCompletedEventHandler fnGetAnnualWorkplanLinesCompleted;
        
        /// <remarks/>
        public event fnGetPlogLinesCompletedEventHandler fnGetPlogLinesCompleted;
        
        /// <remarks/>
        public event fnGetSubPlogLinesCompletedEventHandler fnGetSubPlogLinesCompleted;
        
        /// <remarks/>
        public event fnGetUserIDCompletedEventHandler fnGetUserIDCompleted;
        
        /// <remarks/>
        public event fnInsertAgenciesCompletedEventHandler fnInsertAgenciesCompleted;
        
        /// <remarks/>
        public event fnInsertEducationInfoCompletedEventHandler fnInsertEducationInfoCompleted;
        
        /// <remarks/>
        public event fnInsertEmploymentHistCompletedEventHandler fnInsertEmploymentHistCompleted;
        
        /// <remarks/>
        public event fnInsertEvaluationLinesCompletedEventHandler fnInsertEvaluationLinesCompleted;
        
        /// <remarks/>
        public event fnInsertHelpDeskIssueCompletedEventHandler fnInsertHelpDeskIssueCompleted;
        
        /// <remarks/>
        public event fnInsertJDTargetsCompletedEventHandler fnInsertJDTargetsCompleted;
        
        /// <remarks/>
        public event fnInsertMembershipSummaryCompletedEventHandler fnInsertMembershipSummaryCompleted;
        
        /// <remarks/>
        public event fnInsertPlogSubActivitiesCompletedEventHandler fnInsertPlogSubActivitiesCompleted;
        
        /// <remarks/>
        public event fnInsertProcurementProfessionalsCompletedEventHandler fnInsertProcurementProfessionalsCompleted;
        
        /// <remarks/>
        public event fnInsertSelectedAdditionalActivitiesCompletedEventHandler fnInsertSelectedAdditionalActivitiesCompleted;
        
        /// <remarks/>
        public event fnInsertStaffClaimsLinesCompletedEventHandler fnInsertStaffClaimsLinesCompleted;
        
        /// <remarks/>
        public event fnInsertStaffClaimsCompletedEventHandler fnInsertStaffClaimsCompleted;
        
        /// <remarks/>
        public event fnInsertStandardAppraisalPIPCompletedEventHandler fnInsertStandardAppraisalPIPCompleted;
        
        /// <remarks/>
        public event fnInsertStandardAppraisalTrainigNeedsCompletedEventHandler fnInsertStandardAppraisalTrainigNeedsCompleted;
        
        /// <remarks/>
        public event fnLockStaffPerformanceContractCompletedEventHandler fnLockStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event fnLoginCompletedEventHandler fnLoginCompleted;
        
        /// <remarks/>
        public event fnMergePdfsCompletedEventHandler fnMergePdfsCompleted;
        
        /// <remarks/>
        public event fnModifyStaffClaimsLinesCompletedEventHandler fnModifyStaffClaimsLinesCompleted;
        
        /// <remarks/>
        public event fnModifyStaffClaimsCompletedEventHandler fnModifyStaffClaimsCompleted;
        
        /// <remarks/>
        public event fnNewStaffPerformanceContractCompletedEventHandler fnNewStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event fnPasswordResetCompletedEventHandler fnPasswordResetCompleted;
        
        /// <remarks/>
        public event fnProcPlanReportCompletedEventHandler fnProcPlanReportCompleted;
        
        /// <remarks/>
        public event fnRegistrationCompletedEventHandler fnRegistrationCompleted;
        
        /// <remarks/>
        public event fnRemoveAditionalInitiativeCompletedEventHandler fnRemoveAditionalInitiativeCompleted;
        
        /// <remarks/>
        public event fnRemoveAgenciesCompletedEventHandler fnRemoveAgenciesCompleted;
        
        /// <remarks/>
        public event fnRemoveEducationInfoCompletedEventHandler fnRemoveEducationInfoCompleted;
        
        /// <remarks/>
        public event fnRemoveEmploymentHistCompletedEventHandler fnRemoveEmploymentHistCompleted;
        
        /// <remarks/>
        public event fnRemoveMembershipSummaryCompletedEventHandler fnRemoveMembershipSummaryCompleted;
        
        /// <remarks/>
        public event fnRemoveProcurementProfessionalsCompletedEventHandler fnRemoveProcurementProfessionalsCompleted;
        
        /// <remarks/>
        public event fnRemoveStandardAppraisalPIPCompletedEventHandler fnRemoveStandardAppraisalPIPCompleted;
        
        /// <remarks/>
        public event fnRemoveStandardAppraisalTrainigNeedsCompletedEventHandler fnRemoveStandardAppraisalTrainigNeedsCompleted;
        
        /// <remarks/>
        public event fnRequestEmailVerificationOTPCompletedEventHandler fnRequestEmailVerificationOTPCompleted;
        
        /// <remarks/>
        public event fnRequestLoginOTPCompletedEventHandler fnRequestLoginOTPCompleted;
        
        /// <remarks/>
        public event fnSaveAditionalInitiativesCompletedEventHandler fnSaveAditionalInitiativesCompleted;
        
        /// <remarks/>
        public event fnSelectPracticeCatgeoriesCompletedEventHandler fnSelectPracticeCatgeoriesCompleted;
        
        /// <remarks/>
        public event fnSendAppraisalEmailCompletedEventHandler fnSendAppraisalEmailCompleted;
        
        /// <remarks/>
        public event fnSendHelpDeskRequestCompletedEventHandler fnSendHelpDeskRequestCompleted;
        
        /// <remarks/>
        public event fnSendImprestSurrenderApprovalCompletedEventHandler fnSendImprestSurrenderApprovalCompleted;
        
        /// <remarks/>
        public event fnSendPaymentVoucherApprovalCompletedEventHandler fnSendPaymentVoucherApprovalCompleted;
        
        /// <remarks/>
        public event fnSendPlogApprovalCompletedEventHandler fnSendPlogApprovalCompleted;
        
        /// <remarks/>
        public event fnSendStaffPerformanceContractApprovalCompletedEventHandler fnSendStaffPerformanceContractApprovalCompleted;
        
        /// <remarks/>
        public event fnSendStoreReqApprovalCompletedEventHandler fnSendStoreReqApprovalCompleted;
        
        /// <remarks/>
        public event fnSignStaffPerformanceContractCompletedEventHandler fnSignStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event fnStoreOTPCompletedEventHandler fnStoreOTPCompleted;
        
        /// <remarks/>
        public event fnSubmitStandardAppraisalConfirmationCompletedEventHandler fnSubmitStandardAppraisalConfirmationCompleted;
        
        /// <remarks/>
        public event fnSubmitStandardAppraisalObjCompletedEventHandler fnSubmitStandardAppraisalObjCompleted;
        
        /// <remarks/>
        public event fnSubmitStandardAppraisalPECompletedEventHandler fnSubmitStandardAppraisalPECompleted;
        
        /// <remarks/>
        public event fnSubmitStandardAppraisalCompletedEventHandler fnSubmitStandardAppraisalCompleted;
        
        /// <remarks/>
        public event fnSuggestPlogandSubPlogDataCompletedEventHandler fnSuggestPlogandSubPlogDataCompleted;
        
        /// <remarks/>
        public event fnUpdateAgenciesCompletedEventHandler fnUpdateAgenciesCompleted;
        
        /// <remarks/>
        public event fnUpdateEducationInfoCompletedEventHandler fnUpdateEducationInfoCompleted;
        
        /// <remarks/>
        public event fnUpdateEmploymentHistCompletedEventHandler fnUpdateEmploymentHistCompleted;
        
        /// <remarks/>
        public event fnUpdateHelpDeskIssueCompletedEventHandler fnUpdateHelpDeskIssueCompleted;
        
        /// <remarks/>
        public event fnUpdateMembershipSummaryCompletedEventHandler fnUpdateMembershipSummaryCompleted;
        
        /// <remarks/>
        public event fnUpdateProcurementProfessionalsCompletedEventHandler fnUpdateProcurementProfessionalsCompleted;
        
        /// <remarks/>
        public event fnUpdateStoreReqLineCompletedEventHandler fnUpdateStoreReqLineCompleted;
        
        /// <remarks/>
        public event fnUpdateUserAgreementCompletedEventHandler fnUpdateUserAgreementCompleted;
        
        /// <remarks/>
        public event fnUpdateUserBankruptcyOrConvictionCompletedEventHandler fnUpdateUserBankruptcyOrConvictionCompleted;
        
        /// <remarks/>
        public event fnUpdateUserEmploymentHistCompletedEventHandler fnUpdateUserEmploymentHistCompleted;
        
        /// <remarks/>
        public event fnUpdateUserMembershipCompletedEventHandler fnUpdateUserMembershipCompleted;
        
        /// <remarks/>
        public event fnUpdateUserOtherPracticesCompletedEventHandler fnUpdateUserOtherPracticesCompleted;
        
        /// <remarks/>
        public event fnUpdateUserProfileCompletedEventHandler fnUpdateUserProfileCompleted;
        
        /// <remarks/>
        public event fnUpdateUserSelfEmployedCompletedEventHandler fnUpdateUserSelfEmployedCompleted;
        
        /// <remarks/>
        public event fnUploadLicenceRegistrationDocsCompletedEventHandler fnUploadLicenceRegistrationDocsCompleted;
        
        /// <remarks/>
        public event fnVerifyEmailAddressCompletedEventHandler fnVerifyEmailAddressCompleted;
        
        /// <remarks/>
        public event fnVerifyLoginOTPCompletedEventHandler fnVerifyLoginOTPCompleted;
        
        /// <remarks/>
        public event fncreatePurchaseRequisitionCompletedEventHandler fncreatePurchaseRequisitionCompleted;
        
        /// <remarks/>
        public event fnsendFuelRequistionForApprovalCompletedEventHandler fnsendFuelRequistionForApprovalCompleted;
        
        /// <remarks/>
        public event fnsendMaintenanceRequistionForApprovalCompletedEventHandler fnsendMaintenanceRequistionForApprovalCompleted;
        
        /// <remarks/>
        public event forgotPasswordtForExtenalApplicantsCompletedEventHandler forgotPasswordtForExtenalApplicantsCompleted;
        
        /// <remarks/>
        public event generateCommitmentReportCompletedEventHandler generateCommitmentReportCompleted;
        
        /// <remarks/>
        public event generateEmployeeStatementCompletedEventHandler generateEmployeeStatementCompleted;
        
        /// <remarks/>
        public event generateFleetRequisitionCompletedEventHandler generateFleetRequisitionCompleted;
        
        /// <remarks/>
        public event generateImprestMemoCompletedEventHandler generateImprestMemoCompleted;
        
        /// <remarks/>
        public event generateIssueVoucherCompletedEventHandler generateIssueVoucherCompleted;
        
        /// <remarks/>
        public event generateLeaveFormCompletedEventHandler generateLeaveFormCompleted;
        
        /// <remarks/>
        public event generateP9CompletedEventHandler generateP9Completed;
        
        /// <remarks/>
        public event generatePayslipCompletedEventHandler generatePayslipCompleted;
        
        /// <remarks/>
        public event generatePettyCashVoucherCompletedEventHandler generatePettyCashVoucherCompleted;
        
        /// <remarks/>
        public event generatePurchaseReqCompletedEventHandler generatePurchaseReqCompleted;
        
        /// <remarks/>
        public event generatePurchaseRequisitionCompletedEventHandler generatePurchaseRequisitionCompleted;
        
        /// <remarks/>
        public event generateStaffClaimCompletedEventHandler generateStaffClaimCompleted;
        
        /// <remarks/>
        public event generateStoreReqReportCompletedEventHandler generateStoreReqReportCompleted;
        
        /// <remarks/>
        public event generateStoreRequisitionCompletedEventHandler generateStoreRequisitionCompleted;
        
        /// <remarks/>
        public event getAdminUnitCodeCompletedEventHandler getAdminUnitCodeCompleted;
        
        /// <remarks/>
        public event getCtsOrderCompletedEventHandler getCtsOrderCompleted;
        
        /// <remarks/>
        public event getImprestObjectiveCompletedEventHandler getImprestObjectiveCompleted;
        
        /// <remarks/>
        public event getItemDescByLocationCompletedEventHandler getItemDescByLocationCompleted;
        
        /// <remarks/>
        public event getItemsByLocationCompletedEventHandler getItemsByLocationCompleted;
        
        /// <remarks/>
        public event getUrlsCompletedEventHandler getUrlsCompleted;
        
        /// <remarks/>
        public event importWorkplanCompletedEventHandler importWorkplanCompleted;
        
        /// <remarks/>
        public event imprestGeneralDetails1CompletedEventHandler imprestGeneralDetails1Completed;
        
        /// <remarks/>
        public event imprestGeneralDetailsCompletedEventHandler imprestGeneralDetailsCompleted;
        
        /// <remarks/>
        public event insertAppointmentComittee2CompletedEventHandler insertAppointmentComittee2Completed;
        
        /// <remarks/>
        public event insertAppointmentComitteeCompletedEventHandler insertAppointmentComitteeCompleted;
        
        /// <remarks/>
        public event insertBudgetAmountsCompletedEventHandler insertBudgetAmountsCompleted;
        
        /// <remarks/>
        public event insertInputsCompletedEventHandler insertInputsCompleted;
        
        /// <remarks/>
        public event insertPASTrainingNeedsCompletedEventHandler insertPASTrainingNeedsCompleted;
        
        /// <remarks/>
        public event insertPMMULinesActivitiesCompletedEventHandler insertPMMULinesActivitiesCompleted;
        
        /// <remarks/>
        public event insertPlanEntriesCompletedEventHandler insertPlanEntriesCompleted;
        
        /// <remarks/>
        public event insertWorkingsCompletedEventHandler insertWorkingsCompleted;
        
        /// <remarks/>
        public event leaveApplicationCompletedEventHandler leaveApplicationCompleted;
        
        /// <remarks/>
        public event reassignDriverCompletedEventHandler reassignDriverCompleted;
        
        /// <remarks/>
        public event registerCompletedEventHandler registerCompleted;
        
        /// <remarks/>
        public event removeCasualsCompletedEventHandler removeCasualsCompleted;
        
        /// <remarks/>
        public event removeFuelFromImprestMemoCompletedEventHandler removeFuelFromImprestMemoCompleted;
        
        /// <remarks/>
        public event removeImprestMemoLinesCompletedEventHandler removeImprestMemoLinesCompleted;
        
        /// <remarks/>
        public event removeMemberFromImprestMemoCompletedEventHandler removeMemberFromImprestMemoCompleted;
        
        /// <remarks/>
        public event removeNonStaffFromTravelRequisitionCompletedEventHandler removeNonStaffFromTravelRequisitionCompleted;
        
        /// <remarks/>
        public event removeOtherCostsCompletedEventHandler removeOtherCostsCompleted;
        
        /// <remarks/>
        public event removeStaffFromTravelRequisitionCompletedEventHandler removeStaffFromTravelRequisitionCompleted;
        
        /// <remarks/>
        public event resetPasswordCompletedEventHandler resetPasswordCompleted;
        
        /// <remarks/>
        public event sendBudgetRelocationForApprovalCompletedEventHandler sendBudgetRelocationForApprovalCompleted;
        
        /// <remarks/>
        public event sendFleetRequisitionApprovalCompletedEventHandler sendFleetRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event sendImprestApprovalRequestCompletedEventHandler sendImprestApprovalRequestCompleted;
        
        /// <remarks/>
        public event sendImprestMemoApprovalCompletedEventHandler sendImprestMemoApprovalCompleted;
        
        /// <remarks/>
        public event sendImprestRequisitionApprovalCompletedEventHandler sendImprestRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event sendImprestSurrenderApprovalCompletedEventHandler sendImprestSurrenderApprovalCompleted;
        
        /// <remarks/>
        public event sendLPOApprovalCompletedEventHandler sendLPOApprovalCompleted;
        
        /// <remarks/>
        public event sendLeaveForApprovalCompletedEventHandler sendLeaveForApprovalCompleted;
        
        /// <remarks/>
        public event sendPasforApprovalCompletedEventHandler sendPasforApprovalCompleted;
        
        /// <remarks/>
        public event sendPayChangeAdviceForApprovalCompletedEventHandler sendPayChangeAdviceForApprovalCompleted;
        
        /// <remarks/>
        public event sendPettyCashSurrenderApprovalCompletedEventHandler sendPettyCashSurrenderApprovalCompleted;
        
        /// <remarks/>
        public event sendPurchaseRequisitionApprovalCompletedEventHandler sendPurchaseRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event sendRecordForApprovalCompletedEventHandler sendRecordForApprovalCompleted;
        
        /// <remarks/>
        public event sendStaffClaimApprovalCompletedEventHandler sendStaffClaimApprovalCompleted;
        
        /// <remarks/>
        public event sendStoreRequisitionApprovalCompletedEventHandler sendStoreRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event sendTrainingRequestApprovalCompletedEventHandler sendTrainingRequestApprovalCompleted;
        
        /// <remarks/>
        public event suggestLinesFromRequisitionTemplateCompletedEventHandler suggestLinesFromRequisitionTemplateCompleted;
        
        /// <remarks/>
        public event updateClaimsBankCompletedEventHandler updateClaimsBankCompleted;
        
        /// <remarks/>
        public event updateCommunicationDetailsCompletedEventHandler updateCommunicationDetailsCompleted;
        
        /// <remarks/>
        public event updateEmpBankDetailsCompletedEventHandler updateEmpBankDetailsCompleted;
        
        /// <remarks/>
        public event updateEmploymentHistoryCompletedEventHandler updateEmploymentHistoryCompleted;
        
        /// <remarks/>
        public event updateEquipmentSpecificationsCompletedEventHandler updateEquipmentSpecificationsCompleted;
        
        /// <remarks/>
        public event updateGeneralDetailsCompletedEventHandler updateGeneralDetailsCompleted;
        
        /// <remarks/>
        public event updateHrBankDetailsCompletedEventHandler updateHrBankDetailsCompleted;
        
        /// <remarks/>
        public event updateIctRequestCompletedEventHandler updateIctRequestCompleted;
        
        /// <remarks/>
        public event updatePASTrainingNeedsCompletedEventHandler updatePASTrainingNeedsCompleted;
        
        /// <remarks/>
        public event updatePMMULinesActivitiesCompletedEventHandler updatePMMULinesActivitiesCompleted;
        
        /// <remarks/>
        public event updatePersonalDetailsCompletedEventHandler updatePersonalDetailsCompleted;
        
        /// <remarks/>
        public event updatePersonnelSpecificationsCompletedEventHandler updatePersonnelSpecificationsCompleted;
        
        /// <remarks/>
        public event updatePettyCashSurrenderLineCompletedEventHandler updatePettyCashSurrenderLineCompleted;
        
        /// <remarks/>
        public event updateReceiptCompletedEventHandler updateReceiptCompleted;
        
        /// <remarks/>
        public event updateRequisitionLinesCompletedEventHandler updateRequisitionLinesCompleted;
        
        /// <remarks/>
        public event updateSurrenderLineCompletedEventHandler updateSurrenderLineCompleted;
        
        /// <remarks/>
        public event validateBankAccountCompletedEventHandler validateBankAccountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:AddContractLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="AddContractLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddContractLines(string contractNo, string documentNo, int lineNumber) {
            this.Invoke("AddContractLines", new object[] {
                        contractNo,
                        documentNo,
                        lineNumber});
        }
        
        /// <remarks/>
        public void AddContractLinesAsync(string contractNo, string documentNo, int lineNumber) {
            this.AddContractLinesAsync(contractNo, documentNo, lineNumber, null);
        }
        
        /// <remarks/>
        public void AddContractLinesAsync(string contractNo, string documentNo, int lineNumber, object userState) {
            if ((this.AddContractLinesOperationCompleted == null)) {
                this.AddContractLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContractLinesOperationCompleted);
            }
            this.InvokeAsync("AddContractLines", new object[] {
                        contractNo,
                        documentNo,
                        lineNumber}, this.AddContractLinesOperationCompleted, userState);
        }
        
        private void OnAddContractLinesOperationCompleted(object arg) {
            if ((this.AddContractLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContractLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:AddContractNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="AddContractNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddContractNo(string contractNo, int lineNo, string docNo) {
            this.Invoke("AddContractNo", new object[] {
                        contractNo,
                        lineNo,
                        docNo});
        }
        
        /// <remarks/>
        public void AddContractNoAsync(string contractNo, int lineNo, string docNo) {
            this.AddContractNoAsync(contractNo, lineNo, docNo, null);
        }
        
        /// <remarks/>
        public void AddContractNoAsync(string contractNo, int lineNo, string docNo, object userState) {
            if ((this.AddContractNoOperationCompleted == null)) {
                this.AddContractNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContractNoOperationCompleted);
            }
            this.InvokeAsync("AddContractNo", new object[] {
                        contractNo,
                        lineNo,
                        docNo}, this.AddContractNoOperationCompleted, userState);
        }
        
        private void OnAddContractNoOperationCompleted(object arg) {
            if ((this.AddContractNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContractNoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:AddDeptPerformanceTargets", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="AddDeptPerformanceTargets_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddDeptPerformanceTargets(string docNo) {
            this.Invoke("AddDeptPerformanceTargets", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void AddDeptPerformanceTargetsAsync(string docNo) {
            this.AddDeptPerformanceTargetsAsync(docNo, null);
        }
        
        /// <remarks/>
        public void AddDeptPerformanceTargetsAsync(string docNo, object userState) {
            if ((this.AddDeptPerformanceTargetsOperationCompleted == null)) {
                this.AddDeptPerformanceTargetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDeptPerformanceTargetsOperationCompleted);
            }
            this.InvokeAsync("AddDeptPerformanceTargets", new object[] {
                        docNo}, this.AddDeptPerformanceTargetsOperationCompleted, userState);
        }
        
        private void OnAddDeptPerformanceTargetsOperationCompleted(object arg) {
            if ((this.AddDeptPerformanceTargetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDeptPerformanceTargetsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:AddDriverAllocations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="AddDriverAllocations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDriverAllocations(string requisitionNumber, string driverCode, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofTrip, string vehiclenumber, int noofdays) {
            object[] results = this.Invoke("AddDriverAllocations", new object[] {
                        requisitionNumber,
                        driverCode,
                        dateofTrip,
                        vehiclenumber,
                        noofdays});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDriverAllocationsAsync(string requisitionNumber, string driverCode, System.DateTime dateofTrip, string vehiclenumber, int noofdays) {
            this.AddDriverAllocationsAsync(requisitionNumber, driverCode, dateofTrip, vehiclenumber, noofdays, null);
        }
        
        /// <remarks/>
        public void AddDriverAllocationsAsync(string requisitionNumber, string driverCode, System.DateTime dateofTrip, string vehiclenumber, int noofdays, object userState) {
            if ((this.AddDriverAllocationsOperationCompleted == null)) {
                this.AddDriverAllocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDriverAllocationsOperationCompleted);
            }
            this.InvokeAsync("AddDriverAllocations", new object[] {
                        requisitionNumber,
                        driverCode,
                        dateofTrip,
                        vehiclenumber,
                        noofdays}, this.AddDriverAllocationsOperationCompleted, userState);
        }
        
        private void OnAddDriverAllocationsOperationCompleted(object arg) {
            if ((this.AddDriverAllocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDriverAllocationsCompleted(this, new AddDriverAllocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:AddFleetLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="AddFleetLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int AddFleetLines(string docNo, string itemType, string description, int quantity, string purpose) {
            object[] results = this.Invoke("AddFleetLines", new object[] {
                        docNo,
                        itemType,
                        description,
                        quantity,
                        purpose});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddFleetLinesAsync(string docNo, string itemType, string description, int quantity, string purpose) {
            this.AddFleetLinesAsync(docNo, itemType, description, quantity, purpose, null);
        }
        
        /// <remarks/>
        public void AddFleetLinesAsync(string docNo, string itemType, string description, int quantity, string purpose, object userState) {
            if ((this.AddFleetLinesOperationCompleted == null)) {
                this.AddFleetLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFleetLinesOperationCompleted);
            }
            this.InvokeAsync("AddFleetLines", new object[] {
                        docNo,
                        itemType,
                        description,
                        quantity,
                        purpose}, this.AddFleetLinesOperationCompleted, userState);
        }
        
        private void OnAddFleetLinesOperationCompleted(object arg) {
            if ((this.AddFleetLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFleetLinesCompleted(this, new AddFleetLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:AddFuelRequisitionDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="AddFuelRequisitionDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFuelRequisitionDetails(string employeeNo, int fueltype, string vendornumber, decimal litersrequested, string vehicleregistration, decimal mileage, decimal pricerperLiter, string driverCode) {
            object[] results = this.Invoke("AddFuelRequisitionDetails", new object[] {
                        employeeNo,
                        fueltype,
                        vendornumber,
                        litersrequested,
                        vehicleregistration,
                        mileage,
                        pricerperLiter,
                        driverCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFuelRequisitionDetailsAsync(string employeeNo, int fueltype, string vendornumber, decimal litersrequested, string vehicleregistration, decimal mileage, decimal pricerperLiter, string driverCode) {
            this.AddFuelRequisitionDetailsAsync(employeeNo, fueltype, vendornumber, litersrequested, vehicleregistration, mileage, pricerperLiter, driverCode, null);
        }
        
        /// <remarks/>
        public void AddFuelRequisitionDetailsAsync(string employeeNo, int fueltype, string vendornumber, decimal litersrequested, string vehicleregistration, decimal mileage, decimal pricerperLiter, string driverCode, object userState) {
            if ((this.AddFuelRequisitionDetailsOperationCompleted == null)) {
                this.AddFuelRequisitionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFuelRequisitionDetailsOperationCompleted);
            }
            this.InvokeAsync("AddFuelRequisitionDetails", new object[] {
                        employeeNo,
                        fueltype,
                        vendornumber,
                        litersrequested,
                        vehicleregistration,
                        mileage,
                        pricerperLiter,
                        driverCode}, this.AddFuelRequisitionDetailsOperationCompleted, userState);
        }
        
        private void OnAddFuelRequisitionDetailsOperationCompleted(object arg) {
            if ((this.AddFuelRequisitionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFuelRequisitionDetailsCompleted(this, new AddFuelRequisitionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:AddHrAppraisalLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="AddHrAppraisalLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddHrAppraisalLines(string docNo, string perfomanceGoals, string kpi) {
            object[] results = this.Invoke("AddHrAppraisalLines", new object[] {
                        docNo,
                        perfomanceGoals,
                        kpi});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddHrAppraisalLinesAsync(string docNo, string perfomanceGoals, string kpi) {
            this.AddHrAppraisalLinesAsync(docNo, perfomanceGoals, kpi, null);
        }
        
        /// <remarks/>
        public void AddHrAppraisalLinesAsync(string docNo, string perfomanceGoals, string kpi, object userState) {
            if ((this.AddHrAppraisalLinesOperationCompleted == null)) {
                this.AddHrAppraisalLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHrAppraisalLinesOperationCompleted);
            }
            this.InvokeAsync("AddHrAppraisalLines", new object[] {
                        docNo,
                        perfomanceGoals,
                        kpi}, this.AddHrAppraisalLinesOperationCompleted, userState);
        }
        
        private void OnAddHrAppraisalLinesOperationCompleted(object arg) {
            if ((this.AddHrAppraisalLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHrAppraisalLinesCompleted(this, new AddHrAppraisalLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:AddNonKeRRADriverAllocations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="AddNonKeRRADriverAllocations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddNonKeRRADriverAllocations(string requisitionNumber, string driverIDNumber, string driverName, string phonenumber, string emailaddress, string drivinglicenseNumber) {
            object[] results = this.Invoke("AddNonKeRRADriverAllocations", new object[] {
                        requisitionNumber,
                        driverIDNumber,
                        driverName,
                        phonenumber,
                        emailaddress,
                        drivinglicenseNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddNonKeRRADriverAllocationsAsync(string requisitionNumber, string driverIDNumber, string driverName, string phonenumber, string emailaddress, string drivinglicenseNumber) {
            this.AddNonKeRRADriverAllocationsAsync(requisitionNumber, driverIDNumber, driverName, phonenumber, emailaddress, drivinglicenseNumber, null);
        }
        
        /// <remarks/>
        public void AddNonKeRRADriverAllocationsAsync(string requisitionNumber, string driverIDNumber, string driverName, string phonenumber, string emailaddress, string drivinglicenseNumber, object userState) {
            if ((this.AddNonKeRRADriverAllocationsOperationCompleted == null)) {
                this.AddNonKeRRADriverAllocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNonKeRRADriverAllocationsOperationCompleted);
            }
            this.InvokeAsync("AddNonKeRRADriverAllocations", new object[] {
                        requisitionNumber,
                        driverIDNumber,
                        driverName,
                        phonenumber,
                        emailaddress,
                        drivinglicenseNumber}, this.AddNonKeRRADriverAllocationsOperationCompleted, userState);
        }
        
        private void OnAddNonKeRRADriverAllocationsOperationCompleted(object arg) {
            if ((this.AddNonKeRRADriverAllocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNonKeRRADriverAllocationsCompleted(this, new AddNonKeRRADriverAllocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:AddTravellingStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="AddTravellingStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddTravellingStaff(string reqNo, string empNo) {
            this.Invoke("AddTravellingStaff", new object[] {
                        reqNo,
                        empNo});
        }
        
        /// <remarks/>
        public void AddTravellingStaffAsync(string reqNo, string empNo) {
            this.AddTravellingStaffAsync(reqNo, empNo, null);
        }
        
        /// <remarks/>
        public void AddTravellingStaffAsync(string reqNo, string empNo, object userState) {
            if ((this.AddTravellingStaffOperationCompleted == null)) {
                this.AddTravellingStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTravellingStaffOperationCompleted);
            }
            this.InvokeAsync("AddTravellingStaff", new object[] {
                        reqNo,
                        empNo}, this.AddTravellingStaffOperationCompleted, userState);
        }
        
        private void OnAddTravellingStaffOperationCompleted(object arg) {
            if ((this.AddTravellingStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTravellingStaffCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:AddVehicleMaintenanceRequestDeta" +
            "ils", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="AddVehicleMaintenanceRequestDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddVehicleMaintenanceRequestDetails(string employeeNo, string region, string registrationnumber, decimal odometerreading, int servicetype, string description, string fundingcode, string projectnumber, string budgetline, string maintenancecost, string vendornumber, string tservicecode) {
            object[] results = this.Invoke("AddVehicleMaintenanceRequestDetails", new object[] {
                        employeeNo,
                        region,
                        registrationnumber,
                        odometerreading,
                        servicetype,
                        description,
                        fundingcode,
                        projectnumber,
                        budgetline,
                        maintenancecost,
                        vendornumber,
                        tservicecode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddVehicleMaintenanceRequestDetailsAsync(string employeeNo, string region, string registrationnumber, decimal odometerreading, int servicetype, string description, string fundingcode, string projectnumber, string budgetline, string maintenancecost, string vendornumber, string tservicecode) {
            this.AddVehicleMaintenanceRequestDetailsAsync(employeeNo, region, registrationnumber, odometerreading, servicetype, description, fundingcode, projectnumber, budgetline, maintenancecost, vendornumber, tservicecode, null);
        }
        
        /// <remarks/>
        public void AddVehicleMaintenanceRequestDetailsAsync(string employeeNo, string region, string registrationnumber, decimal odometerreading, int servicetype, string description, string fundingcode, string projectnumber, string budgetline, string maintenancecost, string vendornumber, string tservicecode, object userState) {
            if ((this.AddVehicleMaintenanceRequestDetailsOperationCompleted == null)) {
                this.AddVehicleMaintenanceRequestDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVehicleMaintenanceRequestDetailsOperationCompleted);
            }
            this.InvokeAsync("AddVehicleMaintenanceRequestDetails", new object[] {
                        employeeNo,
                        region,
                        registrationnumber,
                        odometerreading,
                        servicetype,
                        description,
                        fundingcode,
                        projectnumber,
                        budgetline,
                        maintenancecost,
                        vendornumber,
                        tservicecode}, this.AddVehicleMaintenanceRequestDetailsOperationCompleted, userState);
        }
        
        private void OnAddVehicleMaintenanceRequestDetailsOperationCompleted(object arg) {
            if ((this.AddVehicleMaintenanceRequestDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVehicleMaintenanceRequestDetailsCompleted(this, new AddVehicleMaintenanceRequestDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ApproveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ApproveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ApproveApplication(string entryNo) {
            object[] results = this.Invoke("ApproveApplication", new object[] {
                        entryNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveApplicationAsync(string entryNo) {
            this.ApproveApplicationAsync(entryNo, null);
        }
        
        /// <remarks/>
        public void ApproveApplicationAsync(string entryNo, object userState) {
            if ((this.ApproveApplicationOperationCompleted == null)) {
                this.ApproveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveApplicationOperationCompleted);
            }
            this.InvokeAsync("ApproveApplication", new object[] {
                        entryNo}, this.ApproveApplicationOperationCompleted, userState);
        }
        
        private void OnApproveApplicationOperationCompleted(object arg) {
            if ((this.ApproveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveApplicationCompleted(this, new ApproveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ApproveLeaveReimbursement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ApproveLeaveReimbursement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApproveLeaveReimbursement(string docNo, int approvedDays, string approversComments, string approverID) {
            this.Invoke("ApproveLeaveReimbursement", new object[] {
                        docNo,
                        approvedDays,
                        approversComments,
                        approverID});
        }
        
        /// <remarks/>
        public void ApproveLeaveReimbursementAsync(string docNo, int approvedDays, string approversComments, string approverID) {
            this.ApproveLeaveReimbursementAsync(docNo, approvedDays, approversComments, approverID, null);
        }
        
        /// <remarks/>
        public void ApproveLeaveReimbursementAsync(string docNo, int approvedDays, string approversComments, string approverID, object userState) {
            if ((this.ApproveLeaveReimbursementOperationCompleted == null)) {
                this.ApproveLeaveReimbursementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveLeaveReimbursementOperationCompleted);
            }
            this.InvokeAsync("ApproveLeaveReimbursement", new object[] {
                        docNo,
                        approvedDays,
                        approversComments,
                        approverID}, this.ApproveLeaveReimbursementOperationCompleted, userState);
        }
        
        private void OnApproveLeaveReimbursementOperationCompleted(object arg) {
            if ((this.ApproveLeaveReimbursementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveLeaveReimbursementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ApproveStaffClaim", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ApproveStaffClaim_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApproveStaffClaim(string employeeNo, string staffClaim) {
            object[] results = this.Invoke("ApproveStaffClaim", new object[] {
                        employeeNo,
                        staffClaim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveStaffClaimAsync(string employeeNo, string staffClaim) {
            this.ApproveStaffClaimAsync(employeeNo, staffClaim, null);
        }
        
        /// <remarks/>
        public void ApproveStaffClaimAsync(string employeeNo, string staffClaim, object userState) {
            if ((this.ApproveStaffClaimOperationCompleted == null)) {
                this.ApproveStaffClaimOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveStaffClaimOperationCompleted);
            }
            this.InvokeAsync("ApproveStaffClaim", new object[] {
                        employeeNo,
                        staffClaim}, this.ApproveStaffClaimOperationCompleted, userState);
        }
        
        private void OnApproveStaffClaimOperationCompleted(object arg) {
            if ((this.ApproveStaffClaimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveStaffClaimCompleted(this, new ApproveStaffClaimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ApproveTarget", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ApproveTarget_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApproveTarget(string docNo) {
            this.Invoke("ApproveTarget", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void ApproveTargetAsync(string docNo) {
            this.ApproveTargetAsync(docNo, null);
        }
        
        /// <remarks/>
        public void ApproveTargetAsync(string docNo, object userState) {
            if ((this.ApproveTargetOperationCompleted == null)) {
                this.ApproveTargetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveTargetOperationCompleted);
            }
            this.InvokeAsync("ApproveTarget", new object[] {
                        docNo}, this.ApproveTargetOperationCompleted, userState);
        }
        
        private void OnApproveTargetOperationCompleted(object arg) {
            if ((this.ApproveTargetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveTargetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:AssignHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="AssignHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AssignHelpdeskRequest(string jobNo, string assignee) {
            object[] results = this.Invoke("AssignHelpdeskRequest", new object[] {
                        jobNo,
                        assignee});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AssignHelpdeskRequestAsync(string jobNo, string assignee) {
            this.AssignHelpdeskRequestAsync(jobNo, assignee, null);
        }
        
        /// <remarks/>
        public void AssignHelpdeskRequestAsync(string jobNo, string assignee, object userState) {
            if ((this.AssignHelpdeskRequestOperationCompleted == null)) {
                this.AssignHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("AssignHelpdeskRequest", new object[] {
                        jobNo,
                        assignee}, this.AssignHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnAssignHelpdeskRequestOperationCompleted(object arg) {
            if ((this.AssignHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignHelpdeskRequestCompleted(this, new AssignHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:AssignProcurementOfficer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="AssignProcurementOfficer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AssignProcurementOfficer(string docNo, string perchNum) {
            this.Invoke("AssignProcurementOfficer", new object[] {
                        docNo,
                        perchNum});
        }
        
        /// <remarks/>
        public void AssignProcurementOfficerAsync(string docNo, string perchNum) {
            this.AssignProcurementOfficerAsync(docNo, perchNum, null);
        }
        
        /// <remarks/>
        public void AssignProcurementOfficerAsync(string docNo, string perchNum, object userState) {
            if ((this.AssignProcurementOfficerOperationCompleted == null)) {
                this.AssignProcurementOfficerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignProcurementOfficerOperationCompleted);
            }
            this.InvokeAsync("AssignProcurementOfficer", new object[] {
                        docNo,
                        perchNum}, this.AssignProcurementOfficerOperationCompleted, userState);
        }
        
        private void OnAssignProcurementOfficerOperationCompleted(object arg) {
            if ((this.AssignProcurementOfficerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignProcurementOfficerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:AssignTransportRequisitionDriver" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="AssignTransportRequisitionDriver_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AssignTransportRequisitionDriver(string docNo, string driver, string vehicle, string allocatedby) {
            this.Invoke("AssignTransportRequisitionDriver", new object[] {
                        docNo,
                        driver,
                        vehicle,
                        allocatedby});
        }
        
        /// <remarks/>
        public void AssignTransportRequisitionDriverAsync(string docNo, string driver, string vehicle, string allocatedby) {
            this.AssignTransportRequisitionDriverAsync(docNo, driver, vehicle, allocatedby, null);
        }
        
        /// <remarks/>
        public void AssignTransportRequisitionDriverAsync(string docNo, string driver, string vehicle, string allocatedby, object userState) {
            if ((this.AssignTransportRequisitionDriverOperationCompleted == null)) {
                this.AssignTransportRequisitionDriverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignTransportRequisitionDriverOperationCompleted);
            }
            this.InvokeAsync("AssignTransportRequisitionDriver", new object[] {
                        docNo,
                        driver,
                        vehicle,
                        allocatedby}, this.AssignTransportRequisitionDriverOperationCompleted, userState);
        }
        
        private void OnAssignTransportRequisitionDriverOperationCompleted(object arg) {
            if ((this.AssignTransportRequisitionDriverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignTransportRequisitionDriverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:AttachDocumentsLink", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="AttachDocumentsLink_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AttachDocumentsLink(string docNo, string fileName, string docID, int tableID) {
            this.Invoke("AttachDocumentsLink", new object[] {
                        docNo,
                        fileName,
                        docID,
                        tableID});
        }
        
        /// <remarks/>
        public void AttachDocumentsLinkAsync(string docNo, string fileName, string docID, int tableID) {
            this.AttachDocumentsLinkAsync(docNo, fileName, docID, tableID, null);
        }
        
        /// <remarks/>
        public void AttachDocumentsLinkAsync(string docNo, string fileName, string docID, int tableID, object userState) {
            if ((this.AttachDocumentsLinkOperationCompleted == null)) {
                this.AttachDocumentsLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAttachDocumentsLinkOperationCompleted);
            }
            this.InvokeAsync("AttachDocumentsLink", new object[] {
                        docNo,
                        fileName,
                        docID,
                        tableID}, this.AttachDocumentsLinkOperationCompleted, userState);
        }
        
        private void OnAttachDocumentsLinkOperationCompleted(object arg) {
            if ((this.AttachDocumentsLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AttachDocumentsLinkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:BidScoreEvaluationEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="BidScoreEvaluationEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string BidScoreEvaluationEntry(string docNo, int lIneNu, string findings, string remarks) {
            object[] results = this.Invoke("BidScoreEvaluationEntry", new object[] {
                        docNo,
                        lIneNu,
                        findings,
                        remarks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BidScoreEvaluationEntryAsync(string docNo, int lIneNu, string findings, string remarks) {
            this.BidScoreEvaluationEntryAsync(docNo, lIneNu, findings, remarks, null);
        }
        
        /// <remarks/>
        public void BidScoreEvaluationEntryAsync(string docNo, int lIneNu, string findings, string remarks, object userState) {
            if ((this.BidScoreEvaluationEntryOperationCompleted == null)) {
                this.BidScoreEvaluationEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBidScoreEvaluationEntryOperationCompleted);
            }
            this.InvokeAsync("BidScoreEvaluationEntry", new object[] {
                        docNo,
                        lIneNu,
                        findings,
                        remarks}, this.BidScoreEvaluationEntryOperationCompleted, userState);
        }
        
        private void OnBidScoreEvaluationEntryOperationCompleted(object arg) {
            if ((this.BidScoreEvaluationEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BidScoreEvaluationEntryCompleted(this, new BidScoreEvaluationEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:BidfinancialEvaluationsRankings", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="BidfinancialEvaluationsRankings_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BidfinancialEvaluationsRankings(string docNo, decimal marketValu, string evaluationCommiteeRemark, int evalutionReco, string ranking) {
            this.Invoke("BidfinancialEvaluationsRankings", new object[] {
                        docNo,
                        marketValu,
                        evaluationCommiteeRemark,
                        evalutionReco,
                        ranking});
        }
        
        /// <remarks/>
        public void BidfinancialEvaluationsRankingsAsync(string docNo, decimal marketValu, string evaluationCommiteeRemark, int evalutionReco, string ranking) {
            this.BidfinancialEvaluationsRankingsAsync(docNo, marketValu, evaluationCommiteeRemark, evalutionReco, ranking, null);
        }
        
        /// <remarks/>
        public void BidfinancialEvaluationsRankingsAsync(string docNo, decimal marketValu, string evaluationCommiteeRemark, int evalutionReco, string ranking, object userState) {
            if ((this.BidfinancialEvaluationsRankingsOperationCompleted == null)) {
                this.BidfinancialEvaluationsRankingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBidfinancialEvaluationsRankingsOperationCompleted);
            }
            this.InvokeAsync("BidfinancialEvaluationsRankings", new object[] {
                        docNo,
                        marketValu,
                        evaluationCommiteeRemark,
                        evalutionReco,
                        ranking}, this.BidfinancialEvaluationsRankingsOperationCompleted, userState);
        }
        
        private void OnBidfinancialEvaluationsRankingsOperationCompleted(object arg) {
            if ((this.BidfinancialEvaluationsRankingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BidfinancialEvaluationsRankingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CalcEndDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CalcEndDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime CalcEndDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime sDate, int lDays, string leave_Type) {
            object[] results = this.Invoke("CalcEndDate", new object[] {
                        sDate,
                        lDays,
                        leave_Type});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void CalcEndDateAsync(System.DateTime sDate, int lDays, string leave_Type) {
            this.CalcEndDateAsync(sDate, lDays, leave_Type, null);
        }
        
        /// <remarks/>
        public void CalcEndDateAsync(System.DateTime sDate, int lDays, string leave_Type, object userState) {
            if ((this.CalcEndDateOperationCompleted == null)) {
                this.CalcEndDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcEndDateOperationCompleted);
            }
            this.InvokeAsync("CalcEndDate", new object[] {
                        sDate,
                        lDays,
                        leave_Type}, this.CalcEndDateOperationCompleted, userState);
        }
        
        private void OnCalcEndDateOperationCompleted(object arg) {
            if ((this.CalcEndDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcEndDateCompleted(this, new CalcEndDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CalcReturnDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CalcReturnDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime CalcReturnDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string leave_Type) {
            object[] results = this.Invoke("CalcReturnDate", new object[] {
                        endDate,
                        leave_Type});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void CalcReturnDateAsync(System.DateTime endDate, string leave_Type) {
            this.CalcReturnDateAsync(endDate, leave_Type, null);
        }
        
        /// <remarks/>
        public void CalcReturnDateAsync(System.DateTime endDate, string leave_Type, object userState) {
            if ((this.CalcReturnDateOperationCompleted == null)) {
                this.CalcReturnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcReturnDateOperationCompleted);
            }
            this.InvokeAsync("CalcReturnDate", new object[] {
                        endDate,
                        leave_Type}, this.CalcReturnDateOperationCompleted, userState);
        }
        
        private void OnCalcReturnDateOperationCompleted(object arg) {
            if ((this.CalcReturnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcReturnDateCompleted(this, new CalcReturnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CanceLeaveApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CanceLeaveApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CanceLeaveApproval(string employeeNo, string recordNo) {
            object[] results = this.Invoke("CanceLeaveApproval", new object[] {
                        employeeNo,
                        recordNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CanceLeaveApprovalAsync(string employeeNo, string recordNo) {
            this.CanceLeaveApprovalAsync(employeeNo, recordNo, null);
        }
        
        /// <remarks/>
        public void CanceLeaveApprovalAsync(string employeeNo, string recordNo, object userState) {
            if ((this.CanceLeaveApprovalOperationCompleted == null)) {
                this.CanceLeaveApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanceLeaveApprovalOperationCompleted);
            }
            this.InvokeAsync("CanceLeaveApproval", new object[] {
                        employeeNo,
                        recordNo}, this.CanceLeaveApprovalOperationCompleted, userState);
        }
        
        private void OnCanceLeaveApprovalOperationCompleted(object arg) {
            if ((this.CanceLeaveApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanceLeaveApprovalCompleted(this, new CanceLeaveApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelBidTabulationHeaderapprova" +
            "l", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelBidTabulationHeaderapproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelBidTabulationHeaderapproval(string docNo) {
            this.Invoke("CancelBidTabulationHeaderapproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelBidTabulationHeaderapprovalAsync(string docNo) {
            this.CancelBidTabulationHeaderapprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelBidTabulationHeaderapprovalAsync(string docNo, object userState) {
            if ((this.CancelBidTabulationHeaderapprovalOperationCompleted == null)) {
                this.CancelBidTabulationHeaderapprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelBidTabulationHeaderapprovalOperationCompleted);
            }
            this.InvokeAsync("CancelBidTabulationHeaderapproval", new object[] {
                        docNo}, this.CancelBidTabulationHeaderapprovalOperationCompleted, userState);
        }
        
        private void OnCancelBidTabulationHeaderapprovalOperationCompleted(object arg) {
            if ((this.CancelBidTabulationHeaderapprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelBidTabulationHeaderapprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelBudgetRelocationApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelBudgetRelocationApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelBudgetRelocationApproval(string docNo) {
            this.Invoke("CancelBudgetRelocationApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelBudgetRelocationApprovalAsync(string docNo) {
            this.CancelBudgetRelocationApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelBudgetRelocationApprovalAsync(string docNo, object userState) {
            if ((this.CancelBudgetRelocationApprovalOperationCompleted == null)) {
                this.CancelBudgetRelocationApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelBudgetRelocationApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelBudgetRelocationApproval", new object[] {
                        docNo}, this.CancelBudgetRelocationApprovalOperationCompleted, userState);
        }
        
        private void OnCancelBudgetRelocationApprovalOperationCompleted(object arg) {
            if ((this.CancelBudgetRelocationApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelBudgetRelocationApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelConsolidatedNeedsApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelConsolidatedNeedsApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelConsolidatedNeedsApproval(string docNo) {
            this.Invoke("CancelConsolidatedNeedsApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelConsolidatedNeedsApprovalAsync(string docNo) {
            this.CancelConsolidatedNeedsApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelConsolidatedNeedsApprovalAsync(string docNo, object userState) {
            if ((this.CancelConsolidatedNeedsApprovalOperationCompleted == null)) {
                this.CancelConsolidatedNeedsApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelConsolidatedNeedsApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelConsolidatedNeedsApproval", new object[] {
                        docNo}, this.CancelConsolidatedNeedsApprovalOperationCompleted, userState);
        }
        
        private void OnCancelConsolidatedNeedsApprovalOperationCompleted(object arg) {
            if ((this.CancelConsolidatedNeedsApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelConsolidatedNeedsApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelDocapproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelDocapproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelDocapproval(string docNo) {
            this.Invoke("CancelDocapproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelDocapprovalAsync(string docNo) {
            this.CancelDocapprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelDocapprovalAsync(string docNo, object userState) {
            if ((this.CancelDocapprovalOperationCompleted == null)) {
                this.CancelDocapprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelDocapprovalOperationCompleted);
            }
            this.InvokeAsync("CancelDocapproval", new object[] {
                        docNo}, this.CancelDocapprovalOperationCompleted, userState);
        }
        
        private void OnCancelDocapprovalOperationCompleted(object arg) {
            if ((this.CancelDocapprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelDocapprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelEftapproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelEftapproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelEftapproval(string docNo) {
            this.Invoke("CancelEftapproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelEftapprovalAsync(string docNo) {
            this.CancelEftapprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelEftapprovalAsync(string docNo, object userState) {
            if ((this.CancelEftapprovalOperationCompleted == null)) {
                this.CancelEftapprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelEftapprovalOperationCompleted);
            }
            this.InvokeAsync("CancelEftapproval", new object[] {
                        docNo}, this.CancelEftapprovalOperationCompleted, userState);
        }
        
        private void OnCancelEftapprovalOperationCompleted(object arg) {
            if ((this.CancelEftapprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelEftapprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelExpenseRequisitionApproval" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelExpenseRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelExpenseRequisitionApproval(string docNo) {
            this.Invoke("CancelExpenseRequisitionApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelExpenseRequisitionApprovalAsync(string docNo) {
            this.CancelExpenseRequisitionApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelExpenseRequisitionApprovalAsync(string docNo, object userState) {
            if ((this.CancelExpenseRequisitionApprovalOperationCompleted == null)) {
                this.CancelExpenseRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelExpenseRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelExpenseRequisitionApproval", new object[] {
                        docNo}, this.CancelExpenseRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnCancelExpenseRequisitionApprovalOperationCompleted(object arg) {
            if ((this.CancelExpenseRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelExpenseRequisitionApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelFuelCardApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelFuelCardApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelFuelCardApproval(string docNo) {
            this.Invoke("CancelFuelCardApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelFuelCardApprovalAsync(string docNo) {
            this.CancelFuelCardApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelFuelCardApprovalAsync(string docNo, object userState) {
            if ((this.CancelFuelCardApprovalOperationCompleted == null)) {
                this.CancelFuelCardApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelFuelCardApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelFuelCardApproval", new object[] {
                        docNo}, this.CancelFuelCardApprovalOperationCompleted, userState);
        }
        
        private void OnCancelFuelCardApprovalOperationCompleted(object arg) {
            if ((this.CancelFuelCardApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelFuelCardApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelFullUtilVoucher", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelFullUtilVoucher_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelFullUtilVoucher(string docNo) {
            this.Invoke("CancelFullUtilVoucher", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelFullUtilVoucherAsync(string docNo) {
            this.CancelFullUtilVoucherAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelFullUtilVoucherAsync(string docNo, object userState) {
            if ((this.CancelFullUtilVoucherOperationCompleted == null)) {
                this.CancelFullUtilVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelFullUtilVoucherOperationCompleted);
            }
            this.InvokeAsync("CancelFullUtilVoucher", new object[] {
                        docNo}, this.CancelFullUtilVoucherOperationCompleted, userState);
        }
        
        private void OnCancelFullUtilVoucherOperationCompleted(object arg) {
            if ((this.CancelFullUtilVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelFullUtilVoucherCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelInductionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelInductionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelInductionApproval(string docNo) {
            this.Invoke("CancelInductionApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelInductionApprovalAsync(string docNo) {
            this.CancelInductionApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelInductionApprovalAsync(string docNo, object userState) {
            if ((this.CancelInductionApprovalOperationCompleted == null)) {
                this.CancelInductionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelInductionApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelInductionApproval", new object[] {
                        docNo}, this.CancelInductionApprovalOperationCompleted, userState);
        }
        
        private void OnCancelInductionApprovalOperationCompleted(object arg) {
            if ((this.CancelInductionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelInductionApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelLPOApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelLPOApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelLPOApprovalRequest(string docNo) {
            this.Invoke("CancelLPOApprovalRequest", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelLPOApprovalRequestAsync(string docNo) {
            this.CancelLPOApprovalRequestAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelLPOApprovalRequestAsync(string docNo, object userState) {
            if ((this.CancelLPOApprovalRequestOperationCompleted == null)) {
                this.CancelLPOApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelLPOApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("CancelLPOApprovalRequest", new object[] {
                        docNo}, this.CancelLPOApprovalRequestOperationCompleted, userState);
        }
        
        private void OnCancelLPOApprovalRequestOperationCompleted(object arg) {
            if ((this.CancelLPOApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelLPOApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelLabSampleMgtForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelLabSampleMgtForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelLabSampleMgtForApproval(string docNo) {
            this.Invoke("CancelLabSampleMgtForApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelLabSampleMgtForApprovalAsync(string docNo) {
            this.CancelLabSampleMgtForApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelLabSampleMgtForApprovalAsync(string docNo, object userState) {
            if ((this.CancelLabSampleMgtForApprovalOperationCompleted == null)) {
                this.CancelLabSampleMgtForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelLabSampleMgtForApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelLabSampleMgtForApproval", new object[] {
                        docNo}, this.CancelLabSampleMgtForApprovalOperationCompleted, userState);
        }
        
        private void OnCancelLabSampleMgtForApprovalOperationCompleted(object arg) {
            if ((this.CancelLabSampleMgtForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelLabSampleMgtForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelLeavePlannerHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelLeavePlannerHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelLeavePlannerHeader(string docNo) {
            this.Invoke("CancelLeavePlannerHeader", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelLeavePlannerHeaderAsync(string docNo) {
            this.CancelLeavePlannerHeaderAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelLeavePlannerHeaderAsync(string docNo, object userState) {
            if ((this.CancelLeavePlannerHeaderOperationCompleted == null)) {
                this.CancelLeavePlannerHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelLeavePlannerHeaderOperationCompleted);
            }
            this.InvokeAsync("CancelLeavePlannerHeader", new object[] {
                        docNo}, this.CancelLeavePlannerHeaderOperationCompleted, userState);
        }
        
        private void OnCancelLeavePlannerHeaderOperationCompleted(object arg) {
            if ((this.CancelLeavePlannerHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelLeavePlannerHeaderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelLeaveRecallApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelLeaveRecallApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelLeaveRecallApproval(string employeeNo, string docNumber) {
            object[] results = this.Invoke("CancelLeaveRecallApproval", new object[] {
                        employeeNo,
                        docNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelLeaveRecallApprovalAsync(string employeeNo, string docNumber) {
            this.CancelLeaveRecallApprovalAsync(employeeNo, docNumber, null);
        }
        
        /// <remarks/>
        public void CancelLeaveRecallApprovalAsync(string employeeNo, string docNumber, object userState) {
            if ((this.CancelLeaveRecallApprovalOperationCompleted == null)) {
                this.CancelLeaveRecallApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelLeaveRecallApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelLeaveRecallApproval", new object[] {
                        employeeNo,
                        docNumber}, this.CancelLeaveRecallApprovalOperationCompleted, userState);
        }
        
        private void OnCancelLeaveRecallApprovalOperationCompleted(object arg) {
            if ((this.CancelLeaveRecallApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelLeaveRecallApprovalCompleted(this, new CancelLeaveRecallApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelLeaveRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelLeaveRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelLeaveRequisition(string appNo, bool recalled, bool cancelled) {
            this.Invoke("CancelLeaveRequisition", new object[] {
                        appNo,
                        recalled,
                        cancelled});
        }
        
        /// <remarks/>
        public void CancelLeaveRequisitionAsync(string appNo, bool recalled, bool cancelled) {
            this.CancelLeaveRequisitionAsync(appNo, recalled, cancelled, null);
        }
        
        /// <remarks/>
        public void CancelLeaveRequisitionAsync(string appNo, bool recalled, bool cancelled, object userState) {
            if ((this.CancelLeaveRequisitionOperationCompleted == null)) {
                this.CancelLeaveRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelLeaveRequisitionOperationCompleted);
            }
            this.InvokeAsync("CancelLeaveRequisition", new object[] {
                        appNo,
                        recalled,
                        cancelled}, this.CancelLeaveRequisitionOperationCompleted, userState);
        }
        
        private void OnCancelLeaveRequisitionOperationCompleted(object arg) {
            if ((this.CancelLeaveRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelLeaveRequisitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelMobilityApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelMobilityApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelMobilityApproval(string docNo) {
            this.Invoke("CancelMobilityApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelMobilityApprovalAsync(string docNo) {
            this.CancelMobilityApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelMobilityApprovalAsync(string docNo, object userState) {
            if ((this.CancelMobilityApprovalOperationCompleted == null)) {
                this.CancelMobilityApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelMobilityApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelMobilityApproval", new object[] {
                        docNo}, this.CancelMobilityApprovalOperationCompleted, userState);
        }
        
        private void OnCancelMobilityApprovalOperationCompleted(object arg) {
            if ((this.CancelMobilityApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelMobilityApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelPMMUApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelPMMUApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelPMMUApproval(string docNo) {
            this.Invoke("CancelPMMUApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelPMMUApprovalAsync(string docNo) {
            this.CancelPMMUApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelPMMUApprovalAsync(string docNo, object userState) {
            if ((this.CancelPMMUApprovalOperationCompleted == null)) {
                this.CancelPMMUApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPMMUApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelPMMUApproval", new object[] {
                        docNo}, this.CancelPMMUApprovalOperationCompleted, userState);
        }
        
        private void OnCancelPMMUApprovalOperationCompleted(object arg) {
            if ((this.CancelPMMUApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPMMUApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelPRNApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelPRNApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelPRNApprovalRequest(string docNo) {
            this.Invoke("CancelPRNApprovalRequest", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelPRNApprovalRequestAsync(string docNo) {
            this.CancelPRNApprovalRequestAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelPRNApprovalRequestAsync(string docNo, object userState) {
            if ((this.CancelPRNApprovalRequestOperationCompleted == null)) {
                this.CancelPRNApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPRNApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("CancelPRNApprovalRequest", new object[] {
                        docNo}, this.CancelPRNApprovalRequestOperationCompleted, userState);
        }
        
        private void OnCancelPRNApprovalRequestOperationCompleted(object arg) {
            if ((this.CancelPRNApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPRNApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelProcurementPlanApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelProcurementPlanApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelProcurementPlanApproval(string docNumber) {
            this.Invoke("CancelProcurementPlanApproval", new object[] {
                        docNumber});
        }
        
        /// <remarks/>
        public void CancelProcurementPlanApprovalAsync(string docNumber) {
            this.CancelProcurementPlanApprovalAsync(docNumber, null);
        }
        
        /// <remarks/>
        public void CancelProcurementPlanApprovalAsync(string docNumber, object userState) {
            if ((this.CancelProcurementPlanApprovalOperationCompleted == null)) {
                this.CancelProcurementPlanApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelProcurementPlanApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelProcurementPlanApproval", new object[] {
                        docNumber}, this.CancelProcurementPlanApprovalOperationCompleted, userState);
        }
        
        private void OnCancelProcurementPlanApprovalOperationCompleted(object arg) {
            if ((this.CancelProcurementPlanApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelProcurementPlanApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelStaffClaimRecordApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelStaffClaimRecordApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelStaffClaimRecordApproval(string employeeNo, string recordNo, string recordType) {
            object[] results = this.Invoke("CancelStaffClaimRecordApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelStaffClaimRecordApprovalAsync(string employeeNo, string recordNo, string recordType) {
            this.CancelStaffClaimRecordApprovalAsync(employeeNo, recordNo, recordType, null);
        }
        
        /// <remarks/>
        public void CancelStaffClaimRecordApprovalAsync(string employeeNo, string recordNo, string recordType, object userState) {
            if ((this.CancelStaffClaimRecordApprovalOperationCompleted == null)) {
                this.CancelStaffClaimRecordApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelStaffClaimRecordApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelStaffClaimRecordApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType}, this.CancelStaffClaimRecordApprovalOperationCompleted, userState);
        }
        
        private void OnCancelStaffClaimRecordApprovalOperationCompleted(object arg) {
            if ((this.CancelStaffClaimRecordApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelStaffClaimRecordApprovalCompleted(this, new CancelStaffClaimRecordApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelStaffClaimforApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelStaffClaimforApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelStaffClaimforApproval(string docNo) {
            this.Invoke("CancelStaffClaimforApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelStaffClaimforApprovalAsync(string docNo) {
            this.CancelStaffClaimforApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelStaffClaimforApprovalAsync(string docNo, object userState) {
            if ((this.CancelStaffClaimforApprovalOperationCompleted == null)) {
                this.CancelStaffClaimforApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelStaffClaimforApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelStaffClaimforApproval", new object[] {
                        docNo}, this.CancelStaffClaimforApprovalOperationCompleted, userState);
        }
        
        private void OnCancelStaffClaimforApprovalOperationCompleted(object arg) {
            if ((this.CancelStaffClaimforApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelStaffClaimforApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancelWorkTicketforApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancelWorkTicketforApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelWorkTicketforApproval(string docNo) {
            this.Invoke("CancelWorkTicketforApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CancelWorkTicketforApprovalAsync(string docNo) {
            this.CancelWorkTicketforApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelWorkTicketforApprovalAsync(string docNo, object userState) {
            if ((this.CancelWorkTicketforApprovalOperationCompleted == null)) {
                this.CancelWorkTicketforApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelWorkTicketforApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelWorkTicketforApproval", new object[] {
                        docNo}, this.CancelWorkTicketforApprovalOperationCompleted, userState);
        }
        
        private void OnCancelWorkTicketforApprovalOperationCompleted(object arg) {
            if ((this.CancelWorkTicketforApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelWorkTicketforApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancellIFSTEnderCommiteeForAppro" +
            "val", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancellIFSTEnderCommiteeForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancellIFSTEnderCommiteeForApproval(string docNu) {
            object[] results = this.Invoke("CancellIFSTEnderCommiteeForApproval", new object[] {
                        docNu});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancellIFSTEnderCommiteeForApprovalAsync(string docNu) {
            this.CancellIFSTEnderCommiteeForApprovalAsync(docNu, null);
        }
        
        /// <remarks/>
        public void CancellIFSTEnderCommiteeForApprovalAsync(string docNu, object userState) {
            if ((this.CancellIFSTEnderCommiteeForApprovalOperationCompleted == null)) {
                this.CancellIFSTEnderCommiteeForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancellIFSTEnderCommiteeForApprovalOperationCompleted);
            }
            this.InvokeAsync("CancellIFSTEnderCommiteeForApproval", new object[] {
                        docNu}, this.CancellIFSTEnderCommiteeForApprovalOperationCompleted, userState);
        }
        
        private void OnCancellIFSTEnderCommiteeForApprovalOperationCompleted(object arg) {
            if ((this.CancellIFSTEnderCommiteeForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancellIFSTEnderCommiteeForApprovalCompleted(this, new CancellIFSTEnderCommiteeForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CancellRFQApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CancellRFQApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancellRFQApproval(string docuNum) {
            this.Invoke("CancellRFQApproval", new object[] {
                        docuNum});
        }
        
        /// <remarks/>
        public void CancellRFQApprovalAsync(string docuNum) {
            this.CancellRFQApprovalAsync(docuNum, null);
        }
        
        /// <remarks/>
        public void CancellRFQApprovalAsync(string docuNum, object userState) {
            if ((this.CancellRFQApprovalOperationCompleted == null)) {
                this.CancellRFQApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancellRFQApprovalOperationCompleted);
            }
            this.InvokeAsync("CancellRFQApproval", new object[] {
                        docuNum}, this.CancellRFQApprovalOperationCompleted, userState);
        }
        
        private void OnCancellRFQApprovalOperationCompleted(object arg) {
            if ((this.CancellRFQApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancellRFQApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CanceltransportReqApprovalReques" +
            "t", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CanceltransportReqApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CanceltransportReqApprovalRequest(string docNo) {
            this.Invoke("CanceltransportReqApprovalRequest", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CanceltransportReqApprovalRequestAsync(string docNo) {
            this.CanceltransportReqApprovalRequestAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CanceltransportReqApprovalRequestAsync(string docNo, object userState) {
            if ((this.CanceltransportReqApprovalRequestOperationCompleted == null)) {
                this.CanceltransportReqApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanceltransportReqApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("CanceltransportReqApprovalRequest", new object[] {
                        docNo}, this.CanceltransportReqApprovalRequestOperationCompleted, userState);
        }
        
        private void OnCanceltransportReqApprovalRequestOperationCompleted(object arg) {
            if ((this.CanceltransportReqApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanceltransportReqApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ChangeLeaveReliever", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ChangeLeaveReliever_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeLeaveReliever(string docNo, string relieverNo) {
            this.Invoke("ChangeLeaveReliever", new object[] {
                        docNo,
                        relieverNo});
        }
        
        /// <remarks/>
        public void ChangeLeaveRelieverAsync(string docNo, string relieverNo) {
            this.ChangeLeaveRelieverAsync(docNo, relieverNo, null);
        }
        
        /// <remarks/>
        public void ChangeLeaveRelieverAsync(string docNo, string relieverNo, object userState) {
            if ((this.ChangeLeaveRelieverOperationCompleted == null)) {
                this.ChangeLeaveRelieverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeLeaveRelieverOperationCompleted);
            }
            this.InvokeAsync("ChangeLeaveReliever", new object[] {
                        docNo,
                        relieverNo}, this.ChangeLeaveRelieverOperationCompleted, userState);
        }
        
        private void OnChangeLeaveRelieverOperationCompleted(object arg) {
            if ((this.ChangeLeaveRelieverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeLeaveRelieverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CheckAttachmentExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CheckAttachmentExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckAttachmentExists(string docNo, int tableID, int docID) {
            object[] results = this.Invoke("CheckAttachmentExists", new object[] {
                        docNo,
                        tableID,
                        docID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAttachmentExistsAsync(string docNo, int tableID, int docID) {
            this.CheckAttachmentExistsAsync(docNo, tableID, docID, null);
        }
        
        /// <remarks/>
        public void CheckAttachmentExistsAsync(string docNo, int tableID, int docID, object userState) {
            if ((this.CheckAttachmentExistsOperationCompleted == null)) {
                this.CheckAttachmentExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAttachmentExistsOperationCompleted);
            }
            this.InvokeAsync("CheckAttachmentExists", new object[] {
                        docNo,
                        tableID,
                        docID}, this.CheckAttachmentExistsOperationCompleted, userState);
        }
        
        private void OnCheckAttachmentExistsOperationCompleted(object arg) {
            if ((this.CheckAttachmentExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAttachmentExistsCompleted(this, new CheckAttachmentExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CheckAttachmentExists_1888594284" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CheckAttachmentExists_1888594284_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckAttachmentExists_1888594284(string docNo, int docType, int tableID, int docID) {
            object[] results = this.Invoke("CheckAttachmentExists_1888594284", new object[] {
                        docNo,
                        docType,
                        tableID,
                        docID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAttachmentExists_1888594284Async(string docNo, int docType, int tableID, int docID) {
            this.CheckAttachmentExists_1888594284Async(docNo, docType, tableID, docID, null);
        }
        
        /// <remarks/>
        public void CheckAttachmentExists_1888594284Async(string docNo, int docType, int tableID, int docID, object userState) {
            if ((this.CheckAttachmentExists_1888594284OperationCompleted == null)) {
                this.CheckAttachmentExists_1888594284OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAttachmentExists_1888594284OperationCompleted);
            }
            this.InvokeAsync("CheckAttachmentExists_1888594284", new object[] {
                        docNo,
                        docType,
                        tableID,
                        docID}, this.CheckAttachmentExists_1888594284OperationCompleted, userState);
        }
        
        private void OnCheckAttachmentExists_1888594284OperationCompleted(object arg) {
            if ((this.CheckAttachmentExists_1888594284Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAttachmentExists_1888594284Completed(this, new CheckAttachmentExists_1888594284CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CheckPasswordChanged", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CheckPasswordChanged_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckPasswordChanged(string empNo) {
            object[] results = this.Invoke("CheckPasswordChanged", new object[] {
                        empNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPasswordChangedAsync(string empNo) {
            this.CheckPasswordChangedAsync(empNo, null);
        }
        
        /// <remarks/>
        public void CheckPasswordChangedAsync(string empNo, object userState) {
            if ((this.CheckPasswordChangedOperationCompleted == null)) {
                this.CheckPasswordChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPasswordChangedOperationCompleted);
            }
            this.InvokeAsync("CheckPasswordChanged", new object[] {
                        empNo}, this.CheckPasswordChangedOperationCompleted, userState);
        }
        
        private void OnCheckPasswordChangedOperationCompleted(object arg) {
            if ((this.CheckPasswordChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPasswordChangedCompleted(this, new CheckPasswordChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CheckUser", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CheckUser_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckUser(string employeeNo) {
            this.Invoke("CheckUser", new object[] {
                        employeeNo});
        }
        
        /// <remarks/>
        public void CheckUserAsync(string employeeNo) {
            this.CheckUserAsync(employeeNo, null);
        }
        
        /// <remarks/>
        public void CheckUserAsync(string employeeNo, object userState) {
            if ((this.CheckUserOperationCompleted == null)) {
                this.CheckUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserOperationCompleted);
            }
            this.InvokeAsync("CheckUser", new object[] {
                        employeeNo}, this.CheckUserOperationCompleted, userState);
        }
        
        private void OnCheckUserOperationCompleted(object arg) {
            if ((this.CheckUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ClearEftLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ClearEftLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClearEftLines(string docNo) {
            this.Invoke("ClearEftLines", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void ClearEftLinesAsync(string docNo) {
            this.ClearEftLinesAsync(docNo, null);
        }
        
        /// <remarks/>
        public void ClearEftLinesAsync(string docNo, object userState) {
            if ((this.ClearEftLinesOperationCompleted == null)) {
                this.ClearEftLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearEftLinesOperationCompleted);
            }
            this.InvokeAsync("ClearEftLines", new object[] {
                        docNo}, this.ClearEftLinesOperationCompleted, userState);
        }
        
        private void OnClearEftLinesOperationCompleted(object arg) {
            if ((this.ClearEftLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearEftLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ClearExpenseLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ClearExpenseLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClearExpenseLines(string docNu, int lineNu) {
            this.Invoke("ClearExpenseLines", new object[] {
                        docNu,
                        lineNu});
        }
        
        /// <remarks/>
        public void ClearExpenseLinesAsync(string docNu, int lineNu) {
            this.ClearExpenseLinesAsync(docNu, lineNu, null);
        }
        
        /// <remarks/>
        public void ClearExpenseLinesAsync(string docNu, int lineNu, object userState) {
            if ((this.ClearExpenseLinesOperationCompleted == null)) {
                this.ClearExpenseLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearExpenseLinesOperationCompleted);
            }
            this.InvokeAsync("ClearExpenseLines", new object[] {
                        docNu,
                        lineNu}, this.ClearExpenseLinesOperationCompleted, userState);
        }
        
        private void OnClearExpenseLinesOperationCompleted(object arg) {
            if ((this.ClearExpenseLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearExpenseLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CloseAppraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CloseAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseAppraisal(string docNo) {
            this.Invoke("CloseAppraisal", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void CloseAppraisalAsync(string docNo) {
            this.CloseAppraisalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CloseAppraisalAsync(string docNo, object userState) {
            if ((this.CloseAppraisalOperationCompleted == null)) {
                this.CloseAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseAppraisalOperationCompleted);
            }
            this.InvokeAsync("CloseAppraisal", new object[] {
                        docNo}, this.CloseAppraisalOperationCompleted, userState);
        }
        
        private void OnCloseAppraisalOperationCompleted(object arg) {
            if ((this.CloseAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseAppraisalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CloseDriverOpenTrips", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CloseDriverOpenTrips_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CloseDriverOpenTrips(string requisitionNumber) {
            object[] results = this.Invoke("CloseDriverOpenTrips", new object[] {
                        requisitionNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CloseDriverOpenTripsAsync(string requisitionNumber) {
            this.CloseDriverOpenTripsAsync(requisitionNumber, null);
        }
        
        /// <remarks/>
        public void CloseDriverOpenTripsAsync(string requisitionNumber, object userState) {
            if ((this.CloseDriverOpenTripsOperationCompleted == null)) {
                this.CloseDriverOpenTripsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseDriverOpenTripsOperationCompleted);
            }
            this.InvokeAsync("CloseDriverOpenTrips", new object[] {
                        requisitionNumber}, this.CloseDriverOpenTripsOperationCompleted, userState);
        }
        
        private void OnCloseDriverOpenTripsOperationCompleted(object arg) {
            if ((this.CloseDriverOpenTripsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseDriverOpenTripsCompleted(this, new CloseDriverOpenTripsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:Close", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="Close_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Close(string docNo, string comments) {
            object[] results = this.Invoke("Close", new object[] {
                        docNo,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CloseAsync(string docNo, string comments) {
            this.CloseAsync(docNo, comments, null);
        }
        
        /// <remarks/>
        public void CloseAsync(string docNo, string comments, object userState) {
            if ((this.CloseOperationCompleted == null)) {
                this.CloseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseOperationCompleted);
            }
            this.InvokeAsync("Close", new object[] {
                        docNo,
                        comments}, this.CloseOperationCompleted, userState);
        }
        
        private void OnCloseOperationCompleted(object arg) {
            if ((this.CloseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseCompleted(this, new CloseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CountApprovals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CountApprovals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int CountApprovals(string approver) {
            object[] results = this.Invoke("CountApprovals", new object[] {
                        approver});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CountApprovalsAsync(string approver) {
            this.CountApprovalsAsync(approver, null);
        }
        
        /// <remarks/>
        public void CountApprovalsAsync(string approver, object userState) {
            if ((this.CountApprovalsOperationCompleted == null)) {
                this.CountApprovalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountApprovalsOperationCompleted);
            }
            this.InvokeAsync("CountApprovals", new object[] {
                        approver}, this.CountApprovalsOperationCompleted, userState);
        }
        
        private void OnCountApprovalsOperationCompleted(object arg) {
            if ((this.CountApprovalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountApprovalsCompleted(this, new CountApprovalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CountUnfilledTimesheets", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CountUnfilledTimesheets_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int CountUnfilledTimesheets(string approver) {
            object[] results = this.Invoke("CountUnfilledTimesheets", new object[] {
                        approver});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CountUnfilledTimesheetsAsync(string approver) {
            this.CountUnfilledTimesheetsAsync(approver, null);
        }
        
        /// <remarks/>
        public void CountUnfilledTimesheetsAsync(string approver, object userState) {
            if ((this.CountUnfilledTimesheetsOperationCompleted == null)) {
                this.CountUnfilledTimesheetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountUnfilledTimesheetsOperationCompleted);
            }
            this.InvokeAsync("CountUnfilledTimesheets", new object[] {
                        approver}, this.CountUnfilledTimesheetsOperationCompleted, userState);
        }
        
        private void OnCountUnfilledTimesheetsOperationCompleted(object arg) {
            if ((this.CountUnfilledTimesheetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountUnfilledTimesheetsCompleted(this, new CountUnfilledTimesheetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateAccountForExtenalApplicant" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateAccountForExtenalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateAccountForExtenalApplicants(string fname, string lname, string email, string password, string salt) {
            object[] results = this.Invoke("CreateAccountForExtenalApplicants", new object[] {
                        fname,
                        lname,
                        email,
                        password,
                        salt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccountForExtenalApplicantsAsync(string fname, string lname, string email, string password, string salt) {
            this.CreateAccountForExtenalApplicantsAsync(fname, lname, email, password, salt, null);
        }
        
        /// <remarks/>
        public void CreateAccountForExtenalApplicantsAsync(string fname, string lname, string email, string password, string salt, object userState) {
            if ((this.CreateAccountForExtenalApplicantsOperationCompleted == null)) {
                this.CreateAccountForExtenalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountForExtenalApplicantsOperationCompleted);
            }
            this.InvokeAsync("CreateAccountForExtenalApplicants", new object[] {
                        fname,
                        lname,
                        email,
                        password,
                        salt}, this.CreateAccountForExtenalApplicantsOperationCompleted, userState);
        }
        
        private void OnCreateAccountForExtenalApplicantsOperationCompleted(object arg) {
            if ((this.CreateAccountForExtenalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccountForExtenalApplicantsCompleted(this, new CreateAccountForExtenalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateActivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateActivities(string wrkCode, string activities, string outputs, string permomance, string annualTarget) {
            this.Invoke("CreateActivities", new object[] {
                        wrkCode,
                        activities,
                        outputs,
                        permomance,
                        annualTarget});
        }
        
        /// <remarks/>
        public void CreateActivitiesAsync(string wrkCode, string activities, string outputs, string permomance, string annualTarget) {
            this.CreateActivitiesAsync(wrkCode, activities, outputs, permomance, annualTarget, null);
        }
        
        /// <remarks/>
        public void CreateActivitiesAsync(string wrkCode, string activities, string outputs, string permomance, string annualTarget, object userState) {
            if ((this.CreateActivitiesOperationCompleted == null)) {
                this.CreateActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateActivitiesOperationCompleted);
            }
            this.InvokeAsync("CreateActivities", new object[] {
                        wrkCode,
                        activities,
                        outputs,
                        permomance,
                        annualTarget}, this.CreateActivitiesOperationCompleted, userState);
        }
        
        private void OnCreateActivitiesOperationCompleted(object arg) {
            if ((this.CreateActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateActivitiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateAppointmentLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateAppointmentLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateAppointmentLines(string docNo, int docType, string memberNo, int memberRole) {
            object[] results = this.Invoke("CreateAppointmentLines", new object[] {
                        docNo,
                        docType,
                        memberNo,
                        memberRole});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAppointmentLinesAsync(string docNo, int docType, string memberNo, int memberRole) {
            this.CreateAppointmentLinesAsync(docNo, docType, memberNo, memberRole, null);
        }
        
        /// <remarks/>
        public void CreateAppointmentLinesAsync(string docNo, int docType, string memberNo, int memberRole, object userState) {
            if ((this.CreateAppointmentLinesOperationCompleted == null)) {
                this.CreateAppointmentLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAppointmentLinesOperationCompleted);
            }
            this.InvokeAsync("CreateAppointmentLines", new object[] {
                        docNo,
                        docType,
                        memberNo,
                        memberRole}, this.CreateAppointmentLinesOperationCompleted, userState);
        }
        
        private void OnCreateAppointmentLinesOperationCompleted(object arg) {
            if ((this.CreateAppointmentLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAppointmentLinesCompleted(this, new CreateAppointmentLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateBidScoreCreterio", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateBidScoreCreterio_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateBidScoreCreterio(string templateId, string creterioGr, int evaluationTYp, string desc) {
            object[] results = this.Invoke("CreateBidScoreCreterio", new object[] {
                        templateId,
                        creterioGr,
                        evaluationTYp,
                        desc});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateBidScoreCreterioAsync(string templateId, string creterioGr, int evaluationTYp, string desc) {
            this.CreateBidScoreCreterioAsync(templateId, creterioGr, evaluationTYp, desc, null);
        }
        
        /// <remarks/>
        public void CreateBidScoreCreterioAsync(string templateId, string creterioGr, int evaluationTYp, string desc, object userState) {
            if ((this.CreateBidScoreCreterioOperationCompleted == null)) {
                this.CreateBidScoreCreterioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBidScoreCreterioOperationCompleted);
            }
            this.InvokeAsync("CreateBidScoreCreterio", new object[] {
                        templateId,
                        creterioGr,
                        evaluationTYp,
                        desc}, this.CreateBidScoreCreterioOperationCompleted, userState);
        }
        
        private void OnCreateBidScoreCreterioOperationCompleted(object arg) {
            if ((this.CreateBidScoreCreterioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBidScoreCreterioCompleted(this, new CreateBidScoreCreterioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateBidScoringTemplate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateBidScoringTemplate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateBidScoringTemplate(int tempTyp, string desc, string userI) {
            object[] results = this.Invoke("CreateBidScoringTemplate", new object[] {
                        tempTyp,
                        desc,
                        userI});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateBidScoringTemplateAsync(int tempTyp, string desc, string userI) {
            this.CreateBidScoringTemplateAsync(tempTyp, desc, userI, null);
        }
        
        /// <remarks/>
        public void CreateBidScoringTemplateAsync(int tempTyp, string desc, string userI, object userState) {
            if ((this.CreateBidScoringTemplateOperationCompleted == null)) {
                this.CreateBidScoringTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBidScoringTemplateOperationCompleted);
            }
            this.InvokeAsync("CreateBidScoringTemplate", new object[] {
                        tempTyp,
                        desc,
                        userI}, this.CreateBidScoringTemplateOperationCompleted, userState);
        }
        
        private void OnCreateBidScoringTemplateOperationCompleted(object arg) {
            if ((this.CreateBidScoringTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBidScoringTemplateCompleted(this, new CreateBidScoringTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateChangeDependantsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateChangeDependantsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateChangeDependantsLines(string docNo, string employeeNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, string relationship, string surname, string otherNames, string iDNo) {
            object[] results = this.Invoke("CreateChangeDependantsLines", new object[] {
                        docNo,
                        employeeNo,
                        dOB,
                        relationship,
                        surname,
                        otherNames,
                        iDNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateChangeDependantsLinesAsync(string docNo, string employeeNo, System.DateTime dOB, string relationship, string surname, string otherNames, string iDNo) {
            this.CreateChangeDependantsLinesAsync(docNo, employeeNo, dOB, relationship, surname, otherNames, iDNo, null);
        }
        
        /// <remarks/>
        public void CreateChangeDependantsLinesAsync(string docNo, string employeeNo, System.DateTime dOB, string relationship, string surname, string otherNames, string iDNo, object userState) {
            if ((this.CreateChangeDependantsLinesOperationCompleted == null)) {
                this.CreateChangeDependantsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateChangeDependantsLinesOperationCompleted);
            }
            this.InvokeAsync("CreateChangeDependantsLines", new object[] {
                        docNo,
                        employeeNo,
                        dOB,
                        relationship,
                        surname,
                        otherNames,
                        iDNo}, this.CreateChangeDependantsLinesOperationCompleted, userState);
        }
        
        private void OnCreateChangeDependantsLinesOperationCompleted(object arg) {
            if ((this.CreateChangeDependantsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateChangeDependantsLinesCompleted(this, new CreateChangeDependantsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateEftHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateEftHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateEftHeader(string payAct, string geoLoc, string docum, string remarks, string batch, string createdBy) {
            object[] results = this.Invoke("CreateEftHeader", new object[] {
                        payAct,
                        geoLoc,
                        docum,
                        remarks,
                        batch,
                        createdBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateEftHeaderAsync(string payAct, string geoLoc, string docum, string remarks, string batch, string createdBy) {
            this.CreateEftHeaderAsync(payAct, geoLoc, docum, remarks, batch, createdBy, null);
        }
        
        /// <remarks/>
        public void CreateEftHeaderAsync(string payAct, string geoLoc, string docum, string remarks, string batch, string createdBy, object userState) {
            if ((this.CreateEftHeaderOperationCompleted == null)) {
                this.CreateEftHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEftHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateEftHeader", new object[] {
                        payAct,
                        geoLoc,
                        docum,
                        remarks,
                        batch,
                        createdBy}, this.CreateEftHeaderOperationCompleted, userState);
        }
        
        private void OnCreateEftHeaderOperationCompleted(object arg) {
            if ((this.CreateEftHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEftHeaderCompleted(this, new CreateEftHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateEftLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateEftLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateEftLines(string docNo, string sourceDocumentNo, int lineNumber, string paymentType) {
            this.Invoke("CreateEftLines", new object[] {
                        docNo,
                        sourceDocumentNo,
                        lineNumber,
                        paymentType});
        }
        
        /// <remarks/>
        public void CreateEftLinesAsync(string docNo, string sourceDocumentNo, int lineNumber, string paymentType) {
            this.CreateEftLinesAsync(docNo, sourceDocumentNo, lineNumber, paymentType, null);
        }
        
        /// <remarks/>
        public void CreateEftLinesAsync(string docNo, string sourceDocumentNo, int lineNumber, string paymentType, object userState) {
            if ((this.CreateEftLinesOperationCompleted == null)) {
                this.CreateEftLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEftLinesOperationCompleted);
            }
            this.InvokeAsync("CreateEftLines", new object[] {
                        docNo,
                        sourceDocumentNo,
                        lineNumber,
                        paymentType}, this.CreateEftLinesOperationCompleted, userState);
        }
        
        private void OnCreateEftLinesOperationCompleted(object arg) {
            if ((this.CreateEftLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEftLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateGMOFreeApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateGMOFreeApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateGMOFreeApplication(
                    string fullName, 
                    string iDNumber, 
                    string phoneNumber, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string streetAddress, 
                    int typeOfApplication, 
                    string capacityOfApplicant, 
                    string companyRegistrationNumber, 
                    string companyName, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string nationalityCountryOfIncorporation, 
                    string locationOfRegisteredOffices, 
                    string companyMobileNumber, 
                    string companyEmailAddress, 
                    string nameOfExporterManufacturer, 
                    string addressOfExporterManufacturer, 
                    string nameOfImporterConsignee, 
                    string addressOfImporterConsignee, 
                    string notifyingParty, 
                    string nameOfProduct, 
                    string invoiceNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime invoiceDate, 
                    string batchNoLotNo, 
                    string billOfLadingNo, 
                    decimal quantityKgs, 
                    decimal totalNumberOfLots, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime productExpiry, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime manufacturePackageDate, 
                    string typeOfPackaging, 
                    int numberOfContainers, 
                    int numberOfBagsGross, 
                    string shipmentPlaceVessel, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime shipmentDate, 
                    string destinationCountry, 
                    string loadingPlace, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime loadingDate, 
                    decimal fOBValue, 
                    decimal cIFValue, 
                    string anyOtherInformation, 
                    bool informationConfidential, 
                    string confidentialityReason, 
                    bool declarationConfirmed, 
                    decimal applicationFee, 
                    decimal processingFee, 
                    int paymentStatus, 
                    bool invoiceAttached, 
                    bool certificateOfOriginAttached, 
                    bool packingListAttached, 
                    bool analysisReportAttached, 
                    string txtNationality, 
                    decimal amount, 
                    bool otherDocumentsAttached, 
                    string portal_UserID, 
                    string serviceCode) {
            object[] results = this.Invoke("CreateGMOFreeApplication", new object[] {
                        fullName,
                        iDNumber,
                        phoneNumber,
                        emailAddress,
                        postalAddress,
                        postalCode,
                        streetAddress,
                        typeOfApplication,
                        capacityOfApplicant,
                        companyRegistrationNumber,
                        companyName,
                        companyPostalAddress,
                        companyPostalCode,
                        kRAPIN,
                        yearOfRegistration,
                        nationalityCountryOfIncorporation,
                        locationOfRegisteredOffices,
                        companyMobileNumber,
                        companyEmailAddress,
                        nameOfExporterManufacturer,
                        addressOfExporterManufacturer,
                        nameOfImporterConsignee,
                        addressOfImporterConsignee,
                        notifyingParty,
                        nameOfProduct,
                        invoiceNo,
                        invoiceDate,
                        batchNoLotNo,
                        billOfLadingNo,
                        quantityKgs,
                        totalNumberOfLots,
                        productExpiry,
                        manufacturePackageDate,
                        typeOfPackaging,
                        numberOfContainers,
                        numberOfBagsGross,
                        shipmentPlaceVessel,
                        shipmentDate,
                        destinationCountry,
                        loadingPlace,
                        loadingDate,
                        fOBValue,
                        cIFValue,
                        anyOtherInformation,
                        informationConfidential,
                        confidentialityReason,
                        declarationConfirmed,
                        applicationFee,
                        processingFee,
                        paymentStatus,
                        invoiceAttached,
                        certificateOfOriginAttached,
                        packingListAttached,
                        analysisReportAttached,
                        txtNationality,
                        amount,
                        otherDocumentsAttached,
                        portal_UserID,
                        serviceCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateGMOFreeApplicationAsync(
                    string fullName, 
                    string iDNumber, 
                    string phoneNumber, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string streetAddress, 
                    int typeOfApplication, 
                    string capacityOfApplicant, 
                    string companyRegistrationNumber, 
                    string companyName, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string nationalityCountryOfIncorporation, 
                    string locationOfRegisteredOffices, 
                    string companyMobileNumber, 
                    string companyEmailAddress, 
                    string nameOfExporterManufacturer, 
                    string addressOfExporterManufacturer, 
                    string nameOfImporterConsignee, 
                    string addressOfImporterConsignee, 
                    string notifyingParty, 
                    string nameOfProduct, 
                    string invoiceNo, 
                    System.DateTime invoiceDate, 
                    string batchNoLotNo, 
                    string billOfLadingNo, 
                    decimal quantityKgs, 
                    decimal totalNumberOfLots, 
                    System.DateTime productExpiry, 
                    System.DateTime manufacturePackageDate, 
                    string typeOfPackaging, 
                    int numberOfContainers, 
                    int numberOfBagsGross, 
                    string shipmentPlaceVessel, 
                    System.DateTime shipmentDate, 
                    string destinationCountry, 
                    string loadingPlace, 
                    System.DateTime loadingDate, 
                    decimal fOBValue, 
                    decimal cIFValue, 
                    string anyOtherInformation, 
                    bool informationConfidential, 
                    string confidentialityReason, 
                    bool declarationConfirmed, 
                    decimal applicationFee, 
                    decimal processingFee, 
                    int paymentStatus, 
                    bool invoiceAttached, 
                    bool certificateOfOriginAttached, 
                    bool packingListAttached, 
                    bool analysisReportAttached, 
                    string txtNationality, 
                    decimal amount, 
                    bool otherDocumentsAttached, 
                    string portal_UserID, 
                    string serviceCode) {
            this.CreateGMOFreeApplicationAsync(fullName, iDNumber, phoneNumber, emailAddress, postalAddress, postalCode, streetAddress, typeOfApplication, capacityOfApplicant, companyRegistrationNumber, companyName, companyPostalAddress, companyPostalCode, kRAPIN, yearOfRegistration, nationalityCountryOfIncorporation, locationOfRegisteredOffices, companyMobileNumber, companyEmailAddress, nameOfExporterManufacturer, addressOfExporterManufacturer, nameOfImporterConsignee, addressOfImporterConsignee, notifyingParty, nameOfProduct, invoiceNo, invoiceDate, batchNoLotNo, billOfLadingNo, quantityKgs, totalNumberOfLots, productExpiry, manufacturePackageDate, typeOfPackaging, numberOfContainers, numberOfBagsGross, shipmentPlaceVessel, shipmentDate, destinationCountry, loadingPlace, loadingDate, fOBValue, cIFValue, anyOtherInformation, informationConfidential, confidentialityReason, declarationConfirmed, applicationFee, processingFee, paymentStatus, invoiceAttached, certificateOfOriginAttached, packingListAttached, analysisReportAttached, txtNationality, amount, otherDocumentsAttached, portal_UserID, serviceCode, null);
        }
        
        /// <remarks/>
        public void CreateGMOFreeApplicationAsync(
                    string fullName, 
                    string iDNumber, 
                    string phoneNumber, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string streetAddress, 
                    int typeOfApplication, 
                    string capacityOfApplicant, 
                    string companyRegistrationNumber, 
                    string companyName, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string nationalityCountryOfIncorporation, 
                    string locationOfRegisteredOffices, 
                    string companyMobileNumber, 
                    string companyEmailAddress, 
                    string nameOfExporterManufacturer, 
                    string addressOfExporterManufacturer, 
                    string nameOfImporterConsignee, 
                    string addressOfImporterConsignee, 
                    string notifyingParty, 
                    string nameOfProduct, 
                    string invoiceNo, 
                    System.DateTime invoiceDate, 
                    string batchNoLotNo, 
                    string billOfLadingNo, 
                    decimal quantityKgs, 
                    decimal totalNumberOfLots, 
                    System.DateTime productExpiry, 
                    System.DateTime manufacturePackageDate, 
                    string typeOfPackaging, 
                    int numberOfContainers, 
                    int numberOfBagsGross, 
                    string shipmentPlaceVessel, 
                    System.DateTime shipmentDate, 
                    string destinationCountry, 
                    string loadingPlace, 
                    System.DateTime loadingDate, 
                    decimal fOBValue, 
                    decimal cIFValue, 
                    string anyOtherInformation, 
                    bool informationConfidential, 
                    string confidentialityReason, 
                    bool declarationConfirmed, 
                    decimal applicationFee, 
                    decimal processingFee, 
                    int paymentStatus, 
                    bool invoiceAttached, 
                    bool certificateOfOriginAttached, 
                    bool packingListAttached, 
                    bool analysisReportAttached, 
                    string txtNationality, 
                    decimal amount, 
                    bool otherDocumentsAttached, 
                    string portal_UserID, 
                    string serviceCode, 
                    object userState) {
            if ((this.CreateGMOFreeApplicationOperationCompleted == null)) {
                this.CreateGMOFreeApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateGMOFreeApplicationOperationCompleted);
            }
            this.InvokeAsync("CreateGMOFreeApplication", new object[] {
                        fullName,
                        iDNumber,
                        phoneNumber,
                        emailAddress,
                        postalAddress,
                        postalCode,
                        streetAddress,
                        typeOfApplication,
                        capacityOfApplicant,
                        companyRegistrationNumber,
                        companyName,
                        companyPostalAddress,
                        companyPostalCode,
                        kRAPIN,
                        yearOfRegistration,
                        nationalityCountryOfIncorporation,
                        locationOfRegisteredOffices,
                        companyMobileNumber,
                        companyEmailAddress,
                        nameOfExporterManufacturer,
                        addressOfExporterManufacturer,
                        nameOfImporterConsignee,
                        addressOfImporterConsignee,
                        notifyingParty,
                        nameOfProduct,
                        invoiceNo,
                        invoiceDate,
                        batchNoLotNo,
                        billOfLadingNo,
                        quantityKgs,
                        totalNumberOfLots,
                        productExpiry,
                        manufacturePackageDate,
                        typeOfPackaging,
                        numberOfContainers,
                        numberOfBagsGross,
                        shipmentPlaceVessel,
                        shipmentDate,
                        destinationCountry,
                        loadingPlace,
                        loadingDate,
                        fOBValue,
                        cIFValue,
                        anyOtherInformation,
                        informationConfidential,
                        confidentialityReason,
                        declarationConfirmed,
                        applicationFee,
                        processingFee,
                        paymentStatus,
                        invoiceAttached,
                        certificateOfOriginAttached,
                        packingListAttached,
                        analysisReportAttached,
                        txtNationality,
                        amount,
                        otherDocumentsAttached,
                        portal_UserID,
                        serviceCode}, this.CreateGMOFreeApplicationOperationCompleted, userState);
        }
        
        private void OnCreateGMOFreeApplicationOperationCompleted(object arg) {
            if ((this.CreateGMOFreeApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateGMOFreeApplicationCompleted(this, new CreateGMOFreeApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateInvitationNotice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateInvitationNotice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateInvitationNotice(string documentNo, bool display, string userI) {
            object[] results = this.Invoke("CreateInvitationNotice", new object[] {
                        documentNo,
                        display,
                        userI});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateInvitationNoticeAsync(string documentNo, bool display, string userI) {
            this.CreateInvitationNoticeAsync(documentNo, display, userI, null);
        }
        
        /// <remarks/>
        public void CreateInvitationNoticeAsync(string documentNo, bool display, string userI, object userState) {
            if ((this.CreateInvitationNoticeOperationCompleted == null)) {
                this.CreateInvitationNoticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateInvitationNoticeOperationCompleted);
            }
            this.InvokeAsync("CreateInvitationNotice", new object[] {
                        documentNo,
                        display,
                        userI}, this.CreateInvitationNoticeOperationCompleted, userState);
        }
        
        private void OnCreateInvitationNoticeOperationCompleted(object arg) {
            if ((this.CreateInvitationNoticeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateInvitationNoticeCompleted(this, new CreateInvitationNoticeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateInvitedBidders", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateInvitedBidders_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateInvitedBidders(string docNo, string vendorN, string category) {
            this.Invoke("CreateInvitedBidders", new object[] {
                        docNo,
                        vendorN,
                        category});
        }
        
        /// <remarks/>
        public void CreateInvitedBiddersAsync(string docNo, string vendorN, string category) {
            this.CreateInvitedBiddersAsync(docNo, vendorN, category, null);
        }
        
        /// <remarks/>
        public void CreateInvitedBiddersAsync(string docNo, string vendorN, string category, object userState) {
            if ((this.CreateInvitedBiddersOperationCompleted == null)) {
                this.CreateInvitedBiddersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateInvitedBiddersOperationCompleted);
            }
            this.InvokeAsync("CreateInvitedBidders", new object[] {
                        docNo,
                        vendorN,
                        category}, this.CreateInvitedBiddersOperationCompleted, userState);
        }
        
        private void OnCreateInvitedBiddersOperationCompleted(object arg) {
            if ((this.CreateInvitedBiddersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateInvitedBiddersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateLPODoc", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateLPODoc_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateLPODoc(string contractNotoPay, string documentNo, string loggedINuser) {
            object[] results = this.Invoke("CreateLPODoc", new object[] {
                        contractNotoPay,
                        documentNo,
                        loggedINuser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateLPODocAsync(string contractNotoPay, string documentNo, string loggedINuser) {
            this.CreateLPODocAsync(contractNotoPay, documentNo, loggedINuser, null);
        }
        
        /// <remarks/>
        public void CreateLPODocAsync(string contractNotoPay, string documentNo, string loggedINuser, object userState) {
            if ((this.CreateLPODocOperationCompleted == null)) {
                this.CreateLPODocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateLPODocOperationCompleted);
            }
            this.InvokeAsync("CreateLPODoc", new object[] {
                        contractNotoPay,
                        documentNo,
                        loggedINuser}, this.CreateLPODocOperationCompleted, userState);
        }
        
        private void OnCreateLPODocOperationCompleted(object arg) {
            if ((this.CreateLPODocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateLPODocCompleted(this, new CreateLPODocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateLPOFromContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateLPOFromContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateLPOFromContract(string docNo, string contractNo, string logeinUser) {
            object[] results = this.Invoke("CreateLPOFromContract", new object[] {
                        docNo,
                        contractNo,
                        logeinUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateLPOFromContractAsync(string docNo, string contractNo, string logeinUser) {
            this.CreateLPOFromContractAsync(docNo, contractNo, logeinUser, null);
        }
        
        /// <remarks/>
        public void CreateLPOFromContractAsync(string docNo, string contractNo, string logeinUser, object userState) {
            if ((this.CreateLPOFromContractOperationCompleted == null)) {
                this.CreateLPOFromContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateLPOFromContractOperationCompleted);
            }
            this.InvokeAsync("CreateLPOFromContract", new object[] {
                        docNo,
                        contractNo,
                        logeinUser}, this.CreateLPOFromContractOperationCompleted, userState);
        }
        
        private void OnCreateLPOFromContractOperationCompleted(object arg) {
            if ((this.CreateLPOFromContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateLPOFromContractCompleted(this, new CreateLPOFromContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateLeaveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateLeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateLeaveApplication(string employeeNo, string leaveType, int annualLeaveType, int days, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, string reliever, string phone, string email, string examDetails, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime examDate, string comments) {
            object[] results = this.Invoke("CreateLeaveApplication", new object[] {
                        employeeNo,
                        leaveType,
                        annualLeaveType,
                        days,
                        startDate,
                        reliever,
                        phone,
                        email,
                        examDetails,
                        examDate,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateLeaveApplicationAsync(string employeeNo, string leaveType, int annualLeaveType, int days, System.DateTime startDate, string reliever, string phone, string email, string examDetails, System.DateTime examDate, string comments) {
            this.CreateLeaveApplicationAsync(employeeNo, leaveType, annualLeaveType, days, startDate, reliever, phone, email, examDetails, examDate, comments, null);
        }
        
        /// <remarks/>
        public void CreateLeaveApplicationAsync(string employeeNo, string leaveType, int annualLeaveType, int days, System.DateTime startDate, string reliever, string phone, string email, string examDetails, System.DateTime examDate, string comments, object userState) {
            if ((this.CreateLeaveApplicationOperationCompleted == null)) {
                this.CreateLeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("CreateLeaveApplication", new object[] {
                        employeeNo,
                        leaveType,
                        annualLeaveType,
                        days,
                        startDate,
                        reliever,
                        phone,
                        email,
                        examDetails,
                        examDate,
                        comments}, this.CreateLeaveApplicationOperationCompleted, userState);
        }
        
        private void OnCreateLeaveApplicationOperationCompleted(object arg) {
            if ((this.CreateLeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateLeaveApplicationCompleted(this, new CreateLeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateMedicalCard", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateMedicalCard_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateMedicalCard(string employeeNo, string cardNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date, string description, string dependantName) {
            object[] results = this.Invoke("CreateMedicalCard", new object[] {
                        employeeNo,
                        cardNo,
                        date,
                        description,
                        dependantName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateMedicalCardAsync(string employeeNo, string cardNo, System.DateTime date, string description, string dependantName) {
            this.CreateMedicalCardAsync(employeeNo, cardNo, date, description, dependantName, null);
        }
        
        /// <remarks/>
        public void CreateMedicalCardAsync(string employeeNo, string cardNo, System.DateTime date, string description, string dependantName, object userState) {
            if ((this.CreateMedicalCardOperationCompleted == null)) {
                this.CreateMedicalCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMedicalCardOperationCompleted);
            }
            this.InvokeAsync("CreateMedicalCard", new object[] {
                        employeeNo,
                        cardNo,
                        date,
                        description,
                        dependantName}, this.CreateMedicalCardOperationCompleted, userState);
        }
        
        private void OnCreateMedicalCardOperationCompleted(object arg) {
            if ((this.CreateMedicalCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMedicalCardCompleted(this, new CreateMedicalCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateNewResourceRequirement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateNewResourceRequirement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewResourceRequirement(string strategyPlanId, string yearReportingCode, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate, string geographicalCode, string adminUnit, string consolidationTemplate, string proPlantemplate, string empUserId) {
            object[] results = this.Invoke("CreateNewResourceRequirement", new object[] {
                        strategyPlanId,
                        yearReportingCode,
                        fromDate,
                        toDate,
                        geographicalCode,
                        adminUnit,
                        consolidationTemplate,
                        proPlantemplate,
                        empUserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewResourceRequirementAsync(string strategyPlanId, string yearReportingCode, System.DateTime fromDate, System.DateTime toDate, string geographicalCode, string adminUnit, string consolidationTemplate, string proPlantemplate, string empUserId) {
            this.CreateNewResourceRequirementAsync(strategyPlanId, yearReportingCode, fromDate, toDate, geographicalCode, adminUnit, consolidationTemplate, proPlantemplate, empUserId, null);
        }
        
        /// <remarks/>
        public void CreateNewResourceRequirementAsync(string strategyPlanId, string yearReportingCode, System.DateTime fromDate, System.DateTime toDate, string geographicalCode, string adminUnit, string consolidationTemplate, string proPlantemplate, string empUserId, object userState) {
            if ((this.CreateNewResourceRequirementOperationCompleted == null)) {
                this.CreateNewResourceRequirementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewResourceRequirementOperationCompleted);
            }
            this.InvokeAsync("CreateNewResourceRequirement", new object[] {
                        strategyPlanId,
                        yearReportingCode,
                        fromDate,
                        toDate,
                        geographicalCode,
                        adminUnit,
                        consolidationTemplate,
                        proPlantemplate,
                        empUserId}, this.CreateNewResourceRequirementOperationCompleted, userState);
        }
        
        private void OnCreateNewResourceRequirementOperationCompleted(object arg) {
            if ((this.CreateNewResourceRequirementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewResourceRequirementCompleted(this, new CreateNewResourceRequirementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateNoObjectionLetterRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateNoObjectionLetterRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNoObjectionLetterRequest(
                    string fullName, 
                    string iDNumber, 
                    string phoneNumber, 
                    string email, 
                    string postalAddress, 
                    string postalCode, 
                    string nationality, 
                    int typeOfApplication, 
                    string companyRegistrationNumber, 
                    string companyInstitutionName, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string nationalityCountryOfIncorporation, 
                    string locationOfRegisteredOffices, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    string taxComplianceCertificateNumber, 
                    string companyTelephoneNumber, 
                    string companyEmailAddress, 
                    int capacityOfApplicant, 
                    string nameOfProduct, 
                    string billOfLadingNumber, 
                    string nSAPermitReferenceNumber, 
                    string batchNoLotNo, 
                    decimal quantityKgs, 
                    decimal numberOfLots, 
                    string typeOfPackaging, 
                    string containerNo, 
                    decimal numberofBags, 
                    string nameOfExporter, 
                    string addressOfExporter, 
                    string countryOfOrigin, 
                    string destinationCountry, 
                    string shipmentPlaceVessel, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime shipmentDate, 
                    string loadingPlace, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime loadingDate, 
                    string anyOtherInformation, 
                    string gMOAnalysisReportNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfGMOAnalysisReportIssue, 
                    bool informationConfidential, 
                    string confidentialityReason, 
                    bool gMOAnalysisReportAttached, 
                    bool certificateOfOriginAttached, 
                    string portal_UserID, 
                    string serviceCode) {
            object[] results = this.Invoke("CreateNoObjectionLetterRequest", new object[] {
                        fullName,
                        iDNumber,
                        phoneNumber,
                        email,
                        postalAddress,
                        postalCode,
                        nationality,
                        typeOfApplication,
                        companyRegistrationNumber,
                        companyInstitutionName,
                        kRAPIN,
                        yearOfRegistration,
                        nationalityCountryOfIncorporation,
                        locationOfRegisteredOffices,
                        companyPostalAddress,
                        companyPostalCode,
                        taxComplianceCertificateNumber,
                        companyTelephoneNumber,
                        companyEmailAddress,
                        capacityOfApplicant,
                        nameOfProduct,
                        billOfLadingNumber,
                        nSAPermitReferenceNumber,
                        batchNoLotNo,
                        quantityKgs,
                        numberOfLots,
                        typeOfPackaging,
                        containerNo,
                        numberofBags,
                        nameOfExporter,
                        addressOfExporter,
                        countryOfOrigin,
                        destinationCountry,
                        shipmentPlaceVessel,
                        shipmentDate,
                        loadingPlace,
                        loadingDate,
                        anyOtherInformation,
                        gMOAnalysisReportNo,
                        dateOfGMOAnalysisReportIssue,
                        informationConfidential,
                        confidentialityReason,
                        gMOAnalysisReportAttached,
                        certificateOfOriginAttached,
                        portal_UserID,
                        serviceCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNoObjectionLetterRequestAsync(
                    string fullName, 
                    string iDNumber, 
                    string phoneNumber, 
                    string email, 
                    string postalAddress, 
                    string postalCode, 
                    string nationality, 
                    int typeOfApplication, 
                    string companyRegistrationNumber, 
                    string companyInstitutionName, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string nationalityCountryOfIncorporation, 
                    string locationOfRegisteredOffices, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    string taxComplianceCertificateNumber, 
                    string companyTelephoneNumber, 
                    string companyEmailAddress, 
                    int capacityOfApplicant, 
                    string nameOfProduct, 
                    string billOfLadingNumber, 
                    string nSAPermitReferenceNumber, 
                    string batchNoLotNo, 
                    decimal quantityKgs, 
                    decimal numberOfLots, 
                    string typeOfPackaging, 
                    string containerNo, 
                    decimal numberofBags, 
                    string nameOfExporter, 
                    string addressOfExporter, 
                    string countryOfOrigin, 
                    string destinationCountry, 
                    string shipmentPlaceVessel, 
                    System.DateTime shipmentDate, 
                    string loadingPlace, 
                    System.DateTime loadingDate, 
                    string anyOtherInformation, 
                    string gMOAnalysisReportNo, 
                    System.DateTime dateOfGMOAnalysisReportIssue, 
                    bool informationConfidential, 
                    string confidentialityReason, 
                    bool gMOAnalysisReportAttached, 
                    bool certificateOfOriginAttached, 
                    string portal_UserID, 
                    string serviceCode) {
            this.CreateNoObjectionLetterRequestAsync(fullName, iDNumber, phoneNumber, email, postalAddress, postalCode, nationality, typeOfApplication, companyRegistrationNumber, companyInstitutionName, kRAPIN, yearOfRegistration, nationalityCountryOfIncorporation, locationOfRegisteredOffices, companyPostalAddress, companyPostalCode, taxComplianceCertificateNumber, companyTelephoneNumber, companyEmailAddress, capacityOfApplicant, nameOfProduct, billOfLadingNumber, nSAPermitReferenceNumber, batchNoLotNo, quantityKgs, numberOfLots, typeOfPackaging, containerNo, numberofBags, nameOfExporter, addressOfExporter, countryOfOrigin, destinationCountry, shipmentPlaceVessel, shipmentDate, loadingPlace, loadingDate, anyOtherInformation, gMOAnalysisReportNo, dateOfGMOAnalysisReportIssue, informationConfidential, confidentialityReason, gMOAnalysisReportAttached, certificateOfOriginAttached, portal_UserID, serviceCode, null);
        }
        
        /// <remarks/>
        public void CreateNoObjectionLetterRequestAsync(
                    string fullName, 
                    string iDNumber, 
                    string phoneNumber, 
                    string email, 
                    string postalAddress, 
                    string postalCode, 
                    string nationality, 
                    int typeOfApplication, 
                    string companyRegistrationNumber, 
                    string companyInstitutionName, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string nationalityCountryOfIncorporation, 
                    string locationOfRegisteredOffices, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    string taxComplianceCertificateNumber, 
                    string companyTelephoneNumber, 
                    string companyEmailAddress, 
                    int capacityOfApplicant, 
                    string nameOfProduct, 
                    string billOfLadingNumber, 
                    string nSAPermitReferenceNumber, 
                    string batchNoLotNo, 
                    decimal quantityKgs, 
                    decimal numberOfLots, 
                    string typeOfPackaging, 
                    string containerNo, 
                    decimal numberofBags, 
                    string nameOfExporter, 
                    string addressOfExporter, 
                    string countryOfOrigin, 
                    string destinationCountry, 
                    string shipmentPlaceVessel, 
                    System.DateTime shipmentDate, 
                    string loadingPlace, 
                    System.DateTime loadingDate, 
                    string anyOtherInformation, 
                    string gMOAnalysisReportNo, 
                    System.DateTime dateOfGMOAnalysisReportIssue, 
                    bool informationConfidential, 
                    string confidentialityReason, 
                    bool gMOAnalysisReportAttached, 
                    bool certificateOfOriginAttached, 
                    string portal_UserID, 
                    string serviceCode, 
                    object userState) {
            if ((this.CreateNoObjectionLetterRequestOperationCompleted == null)) {
                this.CreateNoObjectionLetterRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNoObjectionLetterRequestOperationCompleted);
            }
            this.InvokeAsync("CreateNoObjectionLetterRequest", new object[] {
                        fullName,
                        iDNumber,
                        phoneNumber,
                        email,
                        postalAddress,
                        postalCode,
                        nationality,
                        typeOfApplication,
                        companyRegistrationNumber,
                        companyInstitutionName,
                        kRAPIN,
                        yearOfRegistration,
                        nationalityCountryOfIncorporation,
                        locationOfRegisteredOffices,
                        companyPostalAddress,
                        companyPostalCode,
                        taxComplianceCertificateNumber,
                        companyTelephoneNumber,
                        companyEmailAddress,
                        capacityOfApplicant,
                        nameOfProduct,
                        billOfLadingNumber,
                        nSAPermitReferenceNumber,
                        batchNoLotNo,
                        quantityKgs,
                        numberOfLots,
                        typeOfPackaging,
                        containerNo,
                        numberofBags,
                        nameOfExporter,
                        addressOfExporter,
                        countryOfOrigin,
                        destinationCountry,
                        shipmentPlaceVessel,
                        shipmentDate,
                        loadingPlace,
                        loadingDate,
                        anyOtherInformation,
                        gMOAnalysisReportNo,
                        dateOfGMOAnalysisReportIssue,
                        informationConfidential,
                        confidentialityReason,
                        gMOAnalysisReportAttached,
                        certificateOfOriginAttached,
                        portal_UserID,
                        serviceCode}, this.CreateNoObjectionLetterRequestOperationCompleted, userState);
        }
        
        private void OnCreateNoObjectionLetterRequestOperationCompleted(object arg) {
            if ((this.CreateNoObjectionLetterRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNoObjectionLetterRequestCompleted(this, new CreateNoObjectionLetterRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreatePayChangeAdvice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreatePayChangeAdvice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreatePayChangeAdvice(string empNo, string createdBy, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime payrollPeriod, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime effectiveDate, string subjectVar, string sourceDoc, string referenceDetails, string descriptionVar) {
            object[] results = this.Invoke("CreatePayChangeAdvice", new object[] {
                        empNo,
                        createdBy,
                        payrollPeriod,
                        effectiveDate,
                        subjectVar,
                        sourceDoc,
                        referenceDetails,
                        descriptionVar});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePayChangeAdviceAsync(string empNo, string createdBy, System.DateTime payrollPeriod, System.DateTime effectiveDate, string subjectVar, string sourceDoc, string referenceDetails, string descriptionVar) {
            this.CreatePayChangeAdviceAsync(empNo, createdBy, payrollPeriod, effectiveDate, subjectVar, sourceDoc, referenceDetails, descriptionVar, null);
        }
        
        /// <remarks/>
        public void CreatePayChangeAdviceAsync(string empNo, string createdBy, System.DateTime payrollPeriod, System.DateTime effectiveDate, string subjectVar, string sourceDoc, string referenceDetails, string descriptionVar, object userState) {
            if ((this.CreatePayChangeAdviceOperationCompleted == null)) {
                this.CreatePayChangeAdviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePayChangeAdviceOperationCompleted);
            }
            this.InvokeAsync("CreatePayChangeAdvice", new object[] {
                        empNo,
                        createdBy,
                        payrollPeriod,
                        effectiveDate,
                        subjectVar,
                        sourceDoc,
                        referenceDetails,
                        descriptionVar}, this.CreatePayChangeAdviceOperationCompleted, userState);
        }
        
        private void OnCreatePayChangeAdviceOperationCompleted(object arg) {
            if ((this.CreatePayChangeAdviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePayChangeAdviceCompleted(this, new CreatePayChangeAdviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreatePaychangeAdviceLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreatePaychangeAdviceLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreatePaychangeAdviceLines(string employeeNo, string changeNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime payrollperiod, string transactionCode, int changeType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate, decimal paidAmount, string commentsVar) {
            object[] results = this.Invoke("CreatePaychangeAdviceLines", new object[] {
                        employeeNo,
                        changeNo,
                        payrollperiod,
                        transactionCode,
                        changeType,
                        fromDate,
                        toDate,
                        paidAmount,
                        commentsVar});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePaychangeAdviceLinesAsync(string employeeNo, string changeNo, System.DateTime payrollperiod, string transactionCode, int changeType, System.DateTime fromDate, System.DateTime toDate, decimal paidAmount, string commentsVar) {
            this.CreatePaychangeAdviceLinesAsync(employeeNo, changeNo, payrollperiod, transactionCode, changeType, fromDate, toDate, paidAmount, commentsVar, null);
        }
        
        /// <remarks/>
        public void CreatePaychangeAdviceLinesAsync(string employeeNo, string changeNo, System.DateTime payrollperiod, string transactionCode, int changeType, System.DateTime fromDate, System.DateTime toDate, decimal paidAmount, string commentsVar, object userState) {
            if ((this.CreatePaychangeAdviceLinesOperationCompleted == null)) {
                this.CreatePaychangeAdviceLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePaychangeAdviceLinesOperationCompleted);
            }
            this.InvokeAsync("CreatePaychangeAdviceLines", new object[] {
                        employeeNo,
                        changeNo,
                        payrollperiod,
                        transactionCode,
                        changeType,
                        fromDate,
                        toDate,
                        paidAmount,
                        commentsVar}, this.CreatePaychangeAdviceLinesOperationCompleted, userState);
        }
        
        private void OnCreatePaychangeAdviceLinesOperationCompleted(object arg) {
            if ((this.CreatePaychangeAdviceLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePaychangeAdviceLinesCompleted(this, new CreatePaychangeAdviceLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreatePurchaseContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreatePurchaseContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreatePurchaseContract(string docNo, string userId, int optionSelected) {
            object[] results = this.Invoke("CreatePurchaseContract", new object[] {
                        docNo,
                        userId,
                        optionSelected});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePurchaseContractAsync(string docNo, string userId, int optionSelected) {
            this.CreatePurchaseContractAsync(docNo, userId, optionSelected, null);
        }
        
        /// <remarks/>
        public void CreatePurchaseContractAsync(string docNo, string userId, int optionSelected, object userState) {
            if ((this.CreatePurchaseContractOperationCompleted == null)) {
                this.CreatePurchaseContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePurchaseContractOperationCompleted);
            }
            this.InvokeAsync("CreatePurchaseContract", new object[] {
                        docNo,
                        userId,
                        optionSelected}, this.CreatePurchaseContractOperationCompleted, userState);
        }
        
        private void OnCreatePurchaseContractOperationCompleted(object arg) {
            if ((this.CreatePurchaseContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePurchaseContractCompleted(this, new CreatePurchaseContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateRecruitmentRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateRecruitmentRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateRecruitmentRequisition(int planType, string planCode, string position, int noofpositions, int cycleType, string leadTime, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string finYear, string fundingSource, decimal budgetCost, decimal costHire, string budgetLineNo) {
            object[] results = this.Invoke("CreateRecruitmentRequisition", new object[] {
                        planType,
                        planCode,
                        position,
                        noofpositions,
                        cycleType,
                        leadTime,
                        startDate,
                        endDate,
                        finYear,
                        fundingSource,
                        budgetCost,
                        costHire,
                        budgetLineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRecruitmentRequisitionAsync(int planType, string planCode, string position, int noofpositions, int cycleType, string leadTime, System.DateTime startDate, System.DateTime endDate, string finYear, string fundingSource, decimal budgetCost, decimal costHire, string budgetLineNo) {
            this.CreateRecruitmentRequisitionAsync(planType, planCode, position, noofpositions, cycleType, leadTime, startDate, endDate, finYear, fundingSource, budgetCost, costHire, budgetLineNo, null);
        }
        
        /// <remarks/>
        public void CreateRecruitmentRequisitionAsync(int planType, string planCode, string position, int noofpositions, int cycleType, string leadTime, System.DateTime startDate, System.DateTime endDate, string finYear, string fundingSource, decimal budgetCost, decimal costHire, string budgetLineNo, object userState) {
            if ((this.CreateRecruitmentRequisitionOperationCompleted == null)) {
                this.CreateRecruitmentRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRecruitmentRequisitionOperationCompleted);
            }
            this.InvokeAsync("CreateRecruitmentRequisition", new object[] {
                        planType,
                        planCode,
                        position,
                        noofpositions,
                        cycleType,
                        leadTime,
                        startDate,
                        endDate,
                        finYear,
                        fundingSource,
                        budgetCost,
                        costHire,
                        budgetLineNo}, this.CreateRecruitmentRequisitionOperationCompleted, userState);
        }
        
        private void OnCreateRecruitmentRequisitionOperationCompleted(object arg) {
            if ((this.CreateRecruitmentRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRecruitmentRequisitionCompleted(this, new CreateRecruitmentRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateStrategyWorkPlanLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateStrategyWorkPlanLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStrategyWorkPlanLines(string documentNo, string strategyNo, string kraId, string coreStrategyId, string strategyID, string activityId) {
            object[] results = this.Invoke("CreateStrategyWorkPlanLines", new object[] {
                        documentNo,
                        strategyNo,
                        kraId,
                        coreStrategyId,
                        strategyID,
                        activityId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStrategyWorkPlanLinesAsync(string documentNo, string strategyNo, string kraId, string coreStrategyId, string strategyID, string activityId) {
            this.CreateStrategyWorkPlanLinesAsync(documentNo, strategyNo, kraId, coreStrategyId, strategyID, activityId, null);
        }
        
        /// <remarks/>
        public void CreateStrategyWorkPlanLinesAsync(string documentNo, string strategyNo, string kraId, string coreStrategyId, string strategyID, string activityId, object userState) {
            if ((this.CreateStrategyWorkPlanLinesOperationCompleted == null)) {
                this.CreateStrategyWorkPlanLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStrategyWorkPlanLinesOperationCompleted);
            }
            this.InvokeAsync("CreateStrategyWorkPlanLines", new object[] {
                        documentNo,
                        strategyNo,
                        kraId,
                        coreStrategyId,
                        strategyID,
                        activityId}, this.CreateStrategyWorkPlanLinesOperationCompleted, userState);
        }
        
        private void OnCreateStrategyWorkPlanLinesOperationCompleted(object arg) {
            if ((this.CreateStrategyWorkPlanLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStrategyWorkPlanLinesCompleted(this, new CreateStrategyWorkPlanLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateWaranties", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateWaranties_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateWaranties(string userName, string docnum) {
            this.Invoke("CreateWaranties", new object[] {
                        userName,
                        docnum});
        }
        
        /// <remarks/>
        public void CreateWarantiesAsync(string userName, string docnum) {
            this.CreateWarantiesAsync(userName, docnum, null);
        }
        
        /// <remarks/>
        public void CreateWarantiesAsync(string userName, string docnum, object userState) {
            if ((this.CreateWarantiesOperationCompleted == null)) {
                this.CreateWarantiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWarantiesOperationCompleted);
            }
            this.InvokeAsync("CreateWaranties", new object[] {
                        userName,
                        docnum}, this.CreateWarantiesOperationCompleted, userState);
        }
        
        private void OnCreateWarantiesOperationCompleted(object arg) {
            if ((this.CreateWarantiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWarantiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:CreateWorksPurchaseRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="CreateWorksPurchaseRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateWorksPurchaseRequisition(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string templateId, string projectStaffingTemplateId, string worksTemplateId) {
            object[] results = this.Invoke("CreateWorksPurchaseRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        priorityLevel,
                        requisitionProductGroup,
                        constituency,
                        planId,
                        planEntryNo,
                        templateId,
                        projectStaffingTemplateId,
                        worksTemplateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateWorksPurchaseRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string templateId, string projectStaffingTemplateId, string worksTemplateId) {
            this.CreateWorksPurchaseRequisitionAsync(employeeNo, requisitionNo, location, description, priorityLevel, requisitionProductGroup, constituency, planId, planEntryNo, templateId, projectStaffingTemplateId, worksTemplateId, null);
        }
        
        /// <remarks/>
        public void CreateWorksPurchaseRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string templateId, string projectStaffingTemplateId, string worksTemplateId, object userState) {
            if ((this.CreateWorksPurchaseRequisitionOperationCompleted == null)) {
                this.CreateWorksPurchaseRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWorksPurchaseRequisitionOperationCompleted);
            }
            this.InvokeAsync("CreateWorksPurchaseRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        priorityLevel,
                        requisitionProductGroup,
                        constituency,
                        planId,
                        planEntryNo,
                        templateId,
                        projectStaffingTemplateId,
                        worksTemplateId}, this.CreateWorksPurchaseRequisitionOperationCompleted, userState);
        }
        
        private void OnCreateWorksPurchaseRequisitionOperationCompleted(object arg) {
            if ((this.CreateWorksPurchaseRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWorksPurchaseRequisitionCompleted(this, new CreateWorksPurchaseRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DelegateApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DelegateApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelegateApproval(string docNUm) {
            this.Invoke("DelegateApproval", new object[] {
                        docNUm});
        }
        
        /// <remarks/>
        public void DelegateApprovalAsync(string docNUm) {
            this.DelegateApprovalAsync(docNUm, null);
        }
        
        /// <remarks/>
        public void DelegateApprovalAsync(string docNUm, object userState) {
            if ((this.DelegateApprovalOperationCompleted == null)) {
                this.DelegateApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelegateApprovalOperationCompleted);
            }
            this.InvokeAsync("DelegateApproval", new object[] {
                        docNUm}, this.DelegateApprovalOperationCompleted, userState);
        }
        
        private void OnDelegateApprovalOperationCompleted(object arg) {
            if ((this.DelegateApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelegateApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteAllocationLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteAllocationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAllocationLines(string documentNo, int sourceLine, int lineNumber) {
            this.Invoke("DeleteAllocationLines", new object[] {
                        documentNo,
                        sourceLine,
                        lineNumber});
        }
        
        /// <remarks/>
        public void DeleteAllocationLinesAsync(string documentNo, int sourceLine, int lineNumber) {
            this.DeleteAllocationLinesAsync(documentNo, sourceLine, lineNumber, null);
        }
        
        /// <remarks/>
        public void DeleteAllocationLinesAsync(string documentNo, int sourceLine, int lineNumber, object userState) {
            if ((this.DeleteAllocationLinesOperationCompleted == null)) {
                this.DeleteAllocationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllocationLinesOperationCompleted);
            }
            this.InvokeAsync("DeleteAllocationLines", new object[] {
                        documentNo,
                        sourceLine,
                        lineNumber}, this.DeleteAllocationLinesOperationCompleted, userState);
        }
        
        private void OnDeleteAllocationLinesOperationCompleted(object arg) {
            if ((this.DeleteAllocationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllocationLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteBudgetAmounts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteBudgetAmounts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteBudgetAmounts(string strategy_Plan_ID, string kRA_ID, string core_Strategy_ID, string strategy_ID, string activity_ID, int input_Line_Noa46, string line_Noa46, string budget_Item) {
            this.Invoke("DeleteBudgetAmounts", new object[] {
                        strategy_Plan_ID,
                        kRA_ID,
                        core_Strategy_ID,
                        strategy_ID,
                        activity_ID,
                        input_Line_Noa46,
                        line_Noa46,
                        budget_Item});
        }
        
        /// <remarks/>
        public void DeleteBudgetAmountsAsync(string strategy_Plan_ID, string kRA_ID, string core_Strategy_ID, string strategy_ID, string activity_ID, int input_Line_Noa46, string line_Noa46, string budget_Item) {
            this.DeleteBudgetAmountsAsync(strategy_Plan_ID, kRA_ID, core_Strategy_ID, strategy_ID, activity_ID, input_Line_Noa46, line_Noa46, budget_Item, null);
        }
        
        /// <remarks/>
        public void DeleteBudgetAmountsAsync(string strategy_Plan_ID, string kRA_ID, string core_Strategy_ID, string strategy_ID, string activity_ID, int input_Line_Noa46, string line_Noa46, string budget_Item, object userState) {
            if ((this.DeleteBudgetAmountsOperationCompleted == null)) {
                this.DeleteBudgetAmountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBudgetAmountsOperationCompleted);
            }
            this.InvokeAsync("DeleteBudgetAmounts", new object[] {
                        strategy_Plan_ID,
                        kRA_ID,
                        core_Strategy_ID,
                        strategy_ID,
                        activity_ID,
                        input_Line_Noa46,
                        line_Noa46,
                        budget_Item}, this.DeleteBudgetAmountsOperationCompleted, userState);
        }
        
        private void OnDeleteBudgetAmountsOperationCompleted(object arg) {
            if ((this.DeleteBudgetAmountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBudgetAmountsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteDocumentAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteDocumentAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDocumentAttachment(string docNo, int tableID, int docID) {
            this.Invoke("DeleteDocumentAttachment", new object[] {
                        docNo,
                        tableID,
                        docID});
        }
        
        /// <remarks/>
        public void DeleteDocumentAttachmentAsync(string docNo, int tableID, int docID) {
            this.DeleteDocumentAttachmentAsync(docNo, tableID, docID, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentAttachmentAsync(string docNo, int tableID, int docID, object userState) {
            if ((this.DeleteDocumentAttachmentOperationCompleted == null)) {
                this.DeleteDocumentAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentAttachmentOperationCompleted);
            }
            this.InvokeAsync("DeleteDocumentAttachment", new object[] {
                        docNo,
                        tableID,
                        docID}, this.DeleteDocumentAttachmentOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentAttachmentOperationCompleted(object arg) {
            if ((this.DeleteDocumentAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentAttachmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteEdmsAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteEdmsAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEdmsAttachment(string docNo, int lineNo) {
            this.Invoke("DeleteEdmsAttachment", new object[] {
                        docNo,
                        lineNo});
        }
        
        /// <remarks/>
        public void DeleteEdmsAttachmentAsync(string docNo, int lineNo) {
            this.DeleteEdmsAttachmentAsync(docNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteEdmsAttachmentAsync(string docNo, int lineNo, object userState) {
            if ((this.DeleteEdmsAttachmentOperationCompleted == null)) {
                this.DeleteEdmsAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEdmsAttachmentOperationCompleted);
            }
            this.InvokeAsync("DeleteEdmsAttachment", new object[] {
                        docNo,
                        lineNo}, this.DeleteEdmsAttachmentOperationCompleted, userState);
        }
        
        private void OnDeleteEdmsAttachmentOperationCompleted(object arg) {
            if ((this.DeleteEdmsAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEdmsAttachmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteExpenseReqLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteExpenseReqLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteExpenseReqLine(string docNo, int lineNumber, int sourceLineNo) {
            this.Invoke("DeleteExpenseReqLine", new object[] {
                        docNo,
                        lineNumber,
                        sourceLineNo});
        }
        
        /// <remarks/>
        public void DeleteExpenseReqLineAsync(string docNo, int lineNumber, int sourceLineNo) {
            this.DeleteExpenseReqLineAsync(docNo, lineNumber, sourceLineNo, null);
        }
        
        /// <remarks/>
        public void DeleteExpenseReqLineAsync(string docNo, int lineNumber, int sourceLineNo, object userState) {
            if ((this.DeleteExpenseReqLineOperationCompleted == null)) {
                this.DeleteExpenseReqLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExpenseReqLineOperationCompleted);
            }
            this.InvokeAsync("DeleteExpenseReqLine", new object[] {
                        docNo,
                        lineNumber,
                        sourceLineNo}, this.DeleteExpenseReqLineOperationCompleted, userState);
        }
        
        private void OnDeleteExpenseReqLineOperationCompleted(object arg) {
            if ((this.DeleteExpenseReqLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExpenseReqLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteFleetLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteFleetLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int DeleteFleetLines(string docNo, int lineNo, string itemType, string description, int quantity, string purpose) {
            object[] results = this.Invoke("DeleteFleetLines", new object[] {
                        docNo,
                        lineNo,
                        itemType,
                        description,
                        quantity,
                        purpose});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFleetLinesAsync(string docNo, int lineNo, string itemType, string description, int quantity, string purpose) {
            this.DeleteFleetLinesAsync(docNo, lineNo, itemType, description, quantity, purpose, null);
        }
        
        /// <remarks/>
        public void DeleteFleetLinesAsync(string docNo, int lineNo, string itemType, string description, int quantity, string purpose, object userState) {
            if ((this.DeleteFleetLinesOperationCompleted == null)) {
                this.DeleteFleetLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFleetLinesOperationCompleted);
            }
            this.InvokeAsync("DeleteFleetLines", new object[] {
                        docNo,
                        lineNo,
                        itemType,
                        description,
                        quantity,
                        purpose}, this.DeleteFleetLinesOperationCompleted, userState);
        }
        
        private void OnDeleteFleetLinesOperationCompleted(object arg) {
            if ((this.DeleteFleetLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFleetLinesCompleted(this, new DeleteFleetLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteFuelReq", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteFuelReq_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFuelReq(string docNo) {
            this.Invoke("DeleteFuelReq", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void DeleteFuelReqAsync(string docNo) {
            this.DeleteFuelReqAsync(docNo, null);
        }
        
        /// <remarks/>
        public void DeleteFuelReqAsync(string docNo, object userState) {
            if ((this.DeleteFuelReqOperationCompleted == null)) {
                this.DeleteFuelReqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFuelReqOperationCompleted);
            }
            this.InvokeAsync("DeleteFuelReq", new object[] {
                        docNo}, this.DeleteFuelReqOperationCompleted, userState);
        }
        
        private void OnDeleteFuelReqOperationCompleted(object arg) {
            if ((this.DeleteFuelReqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFuelReqCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteGMDLApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteGMDLApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteGMDLApplication(string applicationNo) {
            object[] results = this.Invoke("DeleteGMDLApplication", new object[] {
                        applicationNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGMDLApplicationAsync(string applicationNo) {
            this.DeleteGMDLApplicationAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void DeleteGMDLApplicationAsync(string applicationNo, object userState) {
            if ((this.DeleteGMDLApplicationOperationCompleted == null)) {
                this.DeleteGMDLApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGMDLApplicationOperationCompleted);
            }
            this.InvokeAsync("DeleteGMDLApplication", new object[] {
                        applicationNo}, this.DeleteGMDLApplicationOperationCompleted, userState);
        }
        
        private void OnDeleteGMDLApplicationOperationCompleted(object arg) {
            if ((this.DeleteGMDLApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGMDLApplicationCompleted(this, new DeleteGMDLApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteGMDSSApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteGMDSSApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteGMDSSApplication(string entryNo) {
            object[] results = this.Invoke("DeleteGMDSSApplication", new object[] {
                        entryNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGMDSSApplicationAsync(string entryNo) {
            this.DeleteGMDSSApplicationAsync(entryNo, null);
        }
        
        /// <remarks/>
        public void DeleteGMDSSApplicationAsync(string entryNo, object userState) {
            if ((this.DeleteGMDSSApplicationOperationCompleted == null)) {
                this.DeleteGMDSSApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGMDSSApplicationOperationCompleted);
            }
            this.InvokeAsync("DeleteGMDSSApplication", new object[] {
                        entryNo}, this.DeleteGMDSSApplicationOperationCompleted, userState);
        }
        
        private void OnDeleteGMDSSApplicationOperationCompleted(object arg) {
            if ((this.DeleteGMDSSApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGMDSSApplicationCompleted(this, new DeleteGMDSSApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteGenomeResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteGenomeResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteGenomeResearch(string entryNo) {
            object[] results = this.Invoke("DeleteGenomeResearch", new object[] {
                        entryNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGenomeResearchAsync(string entryNo) {
            this.DeleteGenomeResearchAsync(entryNo, null);
        }
        
        /// <remarks/>
        public void DeleteGenomeResearchAsync(string entryNo, object userState) {
            if ((this.DeleteGenomeResearchOperationCompleted == null)) {
                this.DeleteGenomeResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGenomeResearchOperationCompleted);
            }
            this.InvokeAsync("DeleteGenomeResearch", new object[] {
                        entryNo}, this.DeleteGenomeResearchOperationCompleted, userState);
        }
        
        private void OnDeleteGenomeResearchOperationCompleted(object arg) {
            if ((this.DeleteGenomeResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGenomeResearchCompleted(this, new DeleteGenomeResearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteHrAppraisalLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteHrAppraisalLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteHrAppraisalLines(string docNo, int lineNo) {
            object[] results = this.Invoke("DeleteHrAppraisalLines", new object[] {
                        docNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteHrAppraisalLinesAsync(string docNo, int lineNo) {
            this.DeleteHrAppraisalLinesAsync(docNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteHrAppraisalLinesAsync(string docNo, int lineNo, object userState) {
            if ((this.DeleteHrAppraisalLinesOperationCompleted == null)) {
                this.DeleteHrAppraisalLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteHrAppraisalLinesOperationCompleted);
            }
            this.InvokeAsync("DeleteHrAppraisalLines", new object[] {
                        docNo,
                        lineNo}, this.DeleteHrAppraisalLinesOperationCompleted, userState);
        }
        
        private void OnDeleteHrAppraisalLinesOperationCompleted(object arg) {
            if ((this.DeleteHrAppraisalLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteHrAppraisalLinesCompleted(this, new DeleteHrAppraisalLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteKpiRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteKpiRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteKpiRecord(int entryNo) {
            object[] results = this.Invoke("DeleteKpiRecord", new object[] {
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteKpiRecordAsync(int entryNo) {
            this.DeleteKpiRecordAsync(entryNo, null);
        }
        
        /// <remarks/>
        public void DeleteKpiRecordAsync(int entryNo, object userState) {
            if ((this.DeleteKpiRecordOperationCompleted == null)) {
                this.DeleteKpiRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteKpiRecordOperationCompleted);
            }
            this.InvokeAsync("DeleteKpiRecord", new object[] {
                        entryNo}, this.DeleteKpiRecordOperationCompleted, userState);
        }
        
        private void OnDeleteKpiRecordOperationCompleted(object arg) {
            if ((this.DeleteKpiRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteKpiRecordCompleted(this, new DeleteKpiRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteOtherCost", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteOtherCost_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteOtherCost(string imprestMemoNo, int lineNumber) {
            object[] results = this.Invoke("DeleteOtherCost", new object[] {
                        imprestMemoNo,
                        lineNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOtherCostAsync(string imprestMemoNo, int lineNumber) {
            this.DeleteOtherCostAsync(imprestMemoNo, lineNumber, null);
        }
        
        /// <remarks/>
        public void DeleteOtherCostAsync(string imprestMemoNo, int lineNumber, object userState) {
            if ((this.DeleteOtherCostOperationCompleted == null)) {
                this.DeleteOtherCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOtherCostOperationCompleted);
            }
            this.InvokeAsync("DeleteOtherCost", new object[] {
                        imprestMemoNo,
                        lineNumber}, this.DeleteOtherCostOperationCompleted, userState);
        }
        
        private void OnDeleteOtherCostOperationCompleted(object arg) {
            if ((this.DeleteOtherCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOtherCostCompleted(this, new DeleteOtherCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteOtherDuty", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteOtherDuty_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteOtherDuty(string appraisalNo, int lineNo) {
            this.Invoke("DeleteOtherDuty", new object[] {
                        appraisalNo,
                        lineNo});
        }
        
        /// <remarks/>
        public void DeleteOtherDutyAsync(string appraisalNo, int lineNo) {
            this.DeleteOtherDutyAsync(appraisalNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteOtherDutyAsync(string appraisalNo, int lineNo, object userState) {
            if ((this.DeleteOtherDutyOperationCompleted == null)) {
                this.DeleteOtherDutyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOtherDutyOperationCompleted);
            }
            this.InvokeAsync("DeleteOtherDuty", new object[] {
                        appraisalNo,
                        lineNo}, this.DeleteOtherDutyOperationCompleted, userState);
        }
        
        private void OnDeleteOtherDutyOperationCompleted(object arg) {
            if ((this.DeleteOtherDutyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOtherDutyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeletePASTrainingNeeds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeletePASTrainingNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeletePASTrainingNeeds(string pasNo, int lineNo) {
            object[] results = this.Invoke("DeletePASTrainingNeeds", new object[] {
                        pasNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePASTrainingNeedsAsync(string pasNo, int lineNo) {
            this.DeletePASTrainingNeedsAsync(pasNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeletePASTrainingNeedsAsync(string pasNo, int lineNo, object userState) {
            if ((this.DeletePASTrainingNeedsOperationCompleted == null)) {
                this.DeletePASTrainingNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePASTrainingNeedsOperationCompleted);
            }
            this.InvokeAsync("DeletePASTrainingNeeds", new object[] {
                        pasNo,
                        lineNo}, this.DeletePASTrainingNeedsOperationCompleted, userState);
        }
        
        private void OnDeletePASTrainingNeedsOperationCompleted(object arg) {
            if ((this.DeletePASTrainingNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePASTrainingNeedsCompleted(this, new DeletePASTrainingNeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeletePASValues", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeletePASValues_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeletePASValues(string docNo, string strategicPlanID, int lineNo) {
            object[] results = this.Invoke("DeletePASValues", new object[] {
                        docNo,
                        strategicPlanID,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePASValuesAsync(string docNo, string strategicPlanID, int lineNo) {
            this.DeletePASValuesAsync(docNo, strategicPlanID, lineNo, null);
        }
        
        /// <remarks/>
        public void DeletePASValuesAsync(string docNo, string strategicPlanID, int lineNo, object userState) {
            if ((this.DeletePASValuesOperationCompleted == null)) {
                this.DeletePASValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePASValuesOperationCompleted);
            }
            this.InvokeAsync("DeletePASValues", new object[] {
                        docNo,
                        strategicPlanID,
                        lineNo}, this.DeletePASValuesOperationCompleted, userState);
        }
        
        private void OnDeletePASValuesOperationCompleted(object arg) {
            if ((this.DeletePASValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePASValuesCompleted(this, new DeletePASValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeletePRNExpense", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeletePRNExpense_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePRNExpense(string document, int lineNu) {
            this.Invoke("DeletePRNExpense", new object[] {
                        document,
                        lineNu});
        }
        
        /// <remarks/>
        public void DeletePRNExpenseAsync(string document, int lineNu) {
            this.DeletePRNExpenseAsync(document, lineNu, null);
        }
        
        /// <remarks/>
        public void DeletePRNExpenseAsync(string document, int lineNu, object userState) {
            if ((this.DeletePRNExpenseOperationCompleted == null)) {
                this.DeletePRNExpenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePRNExpenseOperationCompleted);
            }
            this.InvokeAsync("DeletePRNExpense", new object[] {
                        document,
                        lineNu}, this.DeletePRNExpenseOperationCompleted, userState);
        }
        
        private void OnDeletePRNExpenseOperationCompleted(object arg) {
            if ((this.DeletePRNExpenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePRNExpenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeletePerfomanceTargetsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeletePerfomanceTargetsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeletePerfomanceTargetsLines(string contractNo, int lineNo) {
            object[] results = this.Invoke("DeletePerfomanceTargetsLines", new object[] {
                        contractNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePerfomanceTargetsLinesAsync(string contractNo, int lineNo) {
            this.DeletePerfomanceTargetsLinesAsync(contractNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeletePerfomanceTargetsLinesAsync(string contractNo, int lineNo, object userState) {
            if ((this.DeletePerfomanceTargetsLinesOperationCompleted == null)) {
                this.DeletePerfomanceTargetsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePerfomanceTargetsLinesOperationCompleted);
            }
            this.InvokeAsync("DeletePerfomanceTargetsLines", new object[] {
                        contractNo,
                        lineNo}, this.DeletePerfomanceTargetsLinesOperationCompleted, userState);
        }
        
        private void OnDeletePerfomanceTargetsLinesOperationCompleted(object arg) {
            if ((this.DeletePerfomanceTargetsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePerfomanceTargetsLinesCompleted(this, new DeletePerfomanceTargetsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteProcurementPlanEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteProcurementPlanEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProcurementPlanEntry(int lineNo, string procurementPlanID, string planCategory) {
            this.Invoke("DeleteProcurementPlanEntry", new object[] {
                        lineNo,
                        procurementPlanID,
                        planCategory});
        }
        
        /// <remarks/>
        public void DeleteProcurementPlanEntryAsync(int lineNo, string procurementPlanID, string planCategory) {
            this.DeleteProcurementPlanEntryAsync(lineNo, procurementPlanID, planCategory, null);
        }
        
        /// <remarks/>
        public void DeleteProcurementPlanEntryAsync(int lineNo, string procurementPlanID, string planCategory, object userState) {
            if ((this.DeleteProcurementPlanEntryOperationCompleted == null)) {
                this.DeleteProcurementPlanEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProcurementPlanEntryOperationCompleted);
            }
            this.InvokeAsync("DeleteProcurementPlanEntry", new object[] {
                        lineNo,
                        procurementPlanID,
                        planCategory}, this.DeleteProcurementPlanEntryOperationCompleted, userState);
        }
        
        private void OnDeleteProcurementPlanEntryOperationCompleted(object arg) {
            if ((this.DeleteProcurementPlanEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProcurementPlanEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteProcurementPlanLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteProcurementPlanLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProcurementPlanLines(string procurementPlanID, int lineNo, string planCategory) {
            this.Invoke("DeleteProcurementPlanLines", new object[] {
                        procurementPlanID,
                        lineNo,
                        planCategory});
        }
        
        /// <remarks/>
        public void DeleteProcurementPlanLinesAsync(string procurementPlanID, int lineNo, string planCategory) {
            this.DeleteProcurementPlanLinesAsync(procurementPlanID, lineNo, planCategory, null);
        }
        
        /// <remarks/>
        public void DeleteProcurementPlanLinesAsync(string procurementPlanID, int lineNo, string planCategory, object userState) {
            if ((this.DeleteProcurementPlanLinesOperationCompleted == null)) {
                this.DeleteProcurementPlanLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProcurementPlanLinesOperationCompleted);
            }
            this.InvokeAsync("DeleteProcurementPlanLines", new object[] {
                        procurementPlanID,
                        lineNo,
                        planCategory}, this.DeleteProcurementPlanLinesOperationCompleted, userState);
        }
        
        private void OnDeleteProcurementPlanLinesOperationCompleted(object arg) {
            if ((this.DeleteProcurementPlanLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProcurementPlanLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteReallocationLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteReallocationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteReallocationLines(string documentNo, int lineNumber) {
            this.Invoke("DeleteReallocationLines", new object[] {
                        documentNo,
                        lineNumber});
        }
        
        /// <remarks/>
        public void DeleteReallocationLinesAsync(string documentNo, int lineNumber) {
            this.DeleteReallocationLinesAsync(documentNo, lineNumber, null);
        }
        
        /// <remarks/>
        public void DeleteReallocationLinesAsync(string documentNo, int lineNumber, object userState) {
            if ((this.DeleteReallocationLinesOperationCompleted == null)) {
                this.DeleteReallocationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReallocationLinesOperationCompleted);
            }
            this.InvokeAsync("DeleteReallocationLines", new object[] {
                        documentNo,
                        lineNumber}, this.DeleteReallocationLinesOperationCompleted, userState);
        }
        
        private void OnDeleteReallocationLinesOperationCompleted(object arg) {
            if ((this.DeleteReallocationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReallocationLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteSampleLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteSampleLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSampleLine(string sampleID, int lineNo) {
            this.Invoke("DeleteSampleLine", new object[] {
                        sampleID,
                        lineNo});
        }
        
        /// <remarks/>
        public void DeleteSampleLineAsync(string sampleID, int lineNo) {
            this.DeleteSampleLineAsync(sampleID, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteSampleLineAsync(string sampleID, int lineNo, object userState) {
            if ((this.DeleteSampleLineOperationCompleted == null)) {
                this.DeleteSampleLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSampleLineOperationCompleted);
            }
            this.InvokeAsync("DeleteSampleLine", new object[] {
                        sampleID,
                        lineNo}, this.DeleteSampleLineOperationCompleted, userState);
        }
        
        private void OnDeleteSampleLineOperationCompleted(object arg) {
            if ((this.DeleteSampleLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSampleLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteTrainingCourseSetup", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteTrainingCourseSetup_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteTrainingCourseSetup(string codeNo) {
            object[] results = this.Invoke("DeleteTrainingCourseSetup", new object[] {
                        codeNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTrainingCourseSetupAsync(string codeNo) {
            this.DeleteTrainingCourseSetupAsync(codeNo, null);
        }
        
        /// <remarks/>
        public void DeleteTrainingCourseSetupAsync(string codeNo, object userState) {
            if ((this.DeleteTrainingCourseSetupOperationCompleted == null)) {
                this.DeleteTrainingCourseSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTrainingCourseSetupOperationCompleted);
            }
            this.InvokeAsync("DeleteTrainingCourseSetup", new object[] {
                        codeNo}, this.DeleteTrainingCourseSetupOperationCompleted, userState);
        }
        
        private void OnDeleteTrainingCourseSetupOperationCompleted(object arg) {
            if ((this.DeleteTrainingCourseSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTrainingCourseSetupCompleted(this, new DeleteTrainingCourseSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteTrainingNeedLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteTrainingNeedLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTrainingNeedLine(string docNo, int lineNo) {
            this.Invoke("DeleteTrainingNeedLine", new object[] {
                        docNo,
                        lineNo});
        }
        
        /// <remarks/>
        public void DeleteTrainingNeedLineAsync(string docNo, int lineNo) {
            this.DeleteTrainingNeedLineAsync(docNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteTrainingNeedLineAsync(string docNo, int lineNo, object userState) {
            if ((this.DeleteTrainingNeedLineOperationCompleted == null)) {
                this.DeleteTrainingNeedLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTrainingNeedLineOperationCompleted);
            }
            this.InvokeAsync("DeleteTrainingNeedLine", new object[] {
                        docNo,
                        lineNo}, this.DeleteTrainingNeedLineOperationCompleted, userState);
        }
        
        private void OnDeleteTrainingNeedLineOperationCompleted(object arg) {
            if ((this.DeleteTrainingNeedLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTrainingNeedLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteWorkTicketLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteWorkTicketLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteWorkTicketLines(string docNo, string transportNo, int entryNo) {
            this.Invoke("DeleteWorkTicketLines", new object[] {
                        docNo,
                        transportNo,
                        entryNo});
        }
        
        /// <remarks/>
        public void DeleteWorkTicketLinesAsync(string docNo, string transportNo, int entryNo) {
            this.DeleteWorkTicketLinesAsync(docNo, transportNo, entryNo, null);
        }
        
        /// <remarks/>
        public void DeleteWorkTicketLinesAsync(string docNo, string transportNo, int entryNo, object userState) {
            if ((this.DeleteWorkTicketLinesOperationCompleted == null)) {
                this.DeleteWorkTicketLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWorkTicketLinesOperationCompleted);
            }
            this.InvokeAsync("DeleteWorkTicketLines", new object[] {
                        docNo,
                        transportNo,
                        entryNo}, this.DeleteWorkTicketLinesOperationCompleted, userState);
        }
        
        private void OnDeleteWorkTicketLinesOperationCompleted(object arg) {
            if ((this.DeleteWorkTicketLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWorkTicketLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DeleteWorkplanLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DeleteWorkplanLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteWorkplanLines(string documentNo, string strategyNo, string kraId, string coreStrategyId, string strategyID, string activityId) {
            this.Invoke("DeleteWorkplanLines", new object[] {
                        documentNo,
                        strategyNo,
                        kraId,
                        coreStrategyId,
                        strategyID,
                        activityId});
        }
        
        /// <remarks/>
        public void DeleteWorkplanLinesAsync(string documentNo, string strategyNo, string kraId, string coreStrategyId, string strategyID, string activityId) {
            this.DeleteWorkplanLinesAsync(documentNo, strategyNo, kraId, coreStrategyId, strategyID, activityId, null);
        }
        
        /// <remarks/>
        public void DeleteWorkplanLinesAsync(string documentNo, string strategyNo, string kraId, string coreStrategyId, string strategyID, string activityId, object userState) {
            if ((this.DeleteWorkplanLinesOperationCompleted == null)) {
                this.DeleteWorkplanLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWorkplanLinesOperationCompleted);
            }
            this.InvokeAsync("DeleteWorkplanLines", new object[] {
                        documentNo,
                        strategyNo,
                        kraId,
                        coreStrategyId,
                        strategyID,
                        activityId}, this.DeleteWorkplanLinesOperationCompleted, userState);
        }
        
        private void OnDeleteWorkplanLinesOperationCompleted(object arg) {
            if ((this.DeleteWorkplanLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWorkplanLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DetermineIfIsNonWorking", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DetermineIfIsNonWorking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DetermineIfIsNonWorking([System.Xml.Serialization.XmlElementAttribute(DataType="date")] ref System.DateTime bcDate, ref string leave_Type) {
            object[] results = this.Invoke("DetermineIfIsNonWorking", new object[] {
                        bcDate,
                        leave_Type});
            bcDate = ((System.DateTime)(results[1]));
            leave_Type = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DetermineIfIsNonWorkingAsync(System.DateTime bcDate, string leave_Type) {
            this.DetermineIfIsNonWorkingAsync(bcDate, leave_Type, null);
        }
        
        /// <remarks/>
        public void DetermineIfIsNonWorkingAsync(System.DateTime bcDate, string leave_Type, object userState) {
            if ((this.DetermineIfIsNonWorkingOperationCompleted == null)) {
                this.DetermineIfIsNonWorkingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetermineIfIsNonWorkingOperationCompleted);
            }
            this.InvokeAsync("DetermineIfIsNonWorking", new object[] {
                        bcDate,
                        leave_Type}, this.DetermineIfIsNonWorkingOperationCompleted, userState);
        }
        
        private void OnDetermineIfIsNonWorkingOperationCompleted(object arg) {
            if ((this.DetermineIfIsNonWorkingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DetermineIfIsNonWorkingCompleted(this, new DetermineIfIsNonWorkingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DocumentApprovals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DocumentApprovals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DocumentApprovals(int lineNo, string userID) {
            object[] results = this.Invoke("DocumentApprovals", new object[] {
                        lineNo,
                        userID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentApprovalsAsync(int lineNo, string userID) {
            this.DocumentApprovalsAsync(lineNo, userID, null);
        }
        
        /// <remarks/>
        public void DocumentApprovalsAsync(int lineNo, string userID, object userState) {
            if ((this.DocumentApprovalsOperationCompleted == null)) {
                this.DocumentApprovalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentApprovalsOperationCompleted);
            }
            this.InvokeAsync("DocumentApprovals", new object[] {
                        lineNo,
                        userID}, this.DocumentApprovalsOperationCompleted, userState);
        }
        
        private void OnDocumentApprovalsOperationCompleted(object arg) {
            if ((this.DocumentApprovalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentApprovalsCompleted(this, new DocumentApprovalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DocumentRejectionCommentLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DocumentRejectionCommentLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DocumentRejectionCommentLine(string documentNo, string commentLineText, string webUser, int documentType, string recID, int table_ID, int seqenceNo) {
            this.Invoke("DocumentRejectionCommentLine", new object[] {
                        documentNo,
                        commentLineText,
                        webUser,
                        documentType,
                        recID,
                        table_ID,
                        seqenceNo});
        }
        
        /// <remarks/>
        public void DocumentRejectionCommentLineAsync(string documentNo, string commentLineText, string webUser, int documentType, string recID, int table_ID, int seqenceNo) {
            this.DocumentRejectionCommentLineAsync(documentNo, commentLineText, webUser, documentType, recID, table_ID, seqenceNo, null);
        }
        
        /// <remarks/>
        public void DocumentRejectionCommentLineAsync(string documentNo, string commentLineText, string webUser, int documentType, string recID, int table_ID, int seqenceNo, object userState) {
            if ((this.DocumentRejectionCommentLineOperationCompleted == null)) {
                this.DocumentRejectionCommentLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentRejectionCommentLineOperationCompleted);
            }
            this.InvokeAsync("DocumentRejectionCommentLine", new object[] {
                        documentNo,
                        commentLineText,
                        webUser,
                        documentType,
                        recID,
                        table_ID,
                        seqenceNo}, this.DocumentRejectionCommentLineOperationCompleted, userState);
        }
        
        private void OnDocumentRejectionCommentLineOperationCompleted(object arg) {
            if ((this.DocumentRejectionCommentLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentRejectionCommentLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:DocumentRejections", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="DocumentRejections_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DocumentRejections(int entryNo, string document_No, string userID, string commentLineText, int table_ID, int seqenceNo) {
            this.Invoke("DocumentRejections", new object[] {
                        entryNo,
                        document_No,
                        userID,
                        commentLineText,
                        table_ID,
                        seqenceNo});
        }
        
        /// <remarks/>
        public void DocumentRejectionsAsync(int entryNo, string document_No, string userID, string commentLineText, int table_ID, int seqenceNo) {
            this.DocumentRejectionsAsync(entryNo, document_No, userID, commentLineText, table_ID, seqenceNo, null);
        }
        
        /// <remarks/>
        public void DocumentRejectionsAsync(int entryNo, string document_No, string userID, string commentLineText, int table_ID, int seqenceNo, object userState) {
            if ((this.DocumentRejectionsOperationCompleted == null)) {
                this.DocumentRejectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentRejectionsOperationCompleted);
            }
            this.InvokeAsync("DocumentRejections", new object[] {
                        entryNo,
                        document_No,
                        userID,
                        commentLineText,
                        table_ID,
                        seqenceNo}, this.DocumentRejectionsOperationCompleted, userState);
        }
        
        private void OnDocumentRejectionsOperationCompleted(object arg) {
            if ((this.DocumentRejectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentRejectionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:EditActivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="EditActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditActivities(string wrkCode, string activities, string outputs, string permomance, string annualTarget, int lineno, string lineCode) {
            this.Invoke("EditActivities", new object[] {
                        wrkCode,
                        activities,
                        outputs,
                        permomance,
                        annualTarget,
                        lineno,
                        lineCode});
        }
        
        /// <remarks/>
        public void EditActivitiesAsync(string wrkCode, string activities, string outputs, string permomance, string annualTarget, int lineno, string lineCode) {
            this.EditActivitiesAsync(wrkCode, activities, outputs, permomance, annualTarget, lineno, lineCode, null);
        }
        
        /// <remarks/>
        public void EditActivitiesAsync(string wrkCode, string activities, string outputs, string permomance, string annualTarget, int lineno, string lineCode, object userState) {
            if ((this.EditActivitiesOperationCompleted == null)) {
                this.EditActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditActivitiesOperationCompleted);
            }
            this.InvokeAsync("EditActivities", new object[] {
                        wrkCode,
                        activities,
                        outputs,
                        permomance,
                        annualTarget,
                        lineno,
                        lineCode}, this.EditActivitiesOperationCompleted, userState);
        }
        
        private void OnEditActivitiesOperationCompleted(object arg) {
            if ((this.EditActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditActivitiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:EscalatedHelpdeskRequestDynasoft" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="EscalatedHelpdeskRequestDynasoft_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EscalatedHelpdeskRequestDynasoft(string jobNo, string assignee, string description) {
            object[] results = this.Invoke("EscalatedHelpdeskRequestDynasoft", new object[] {
                        jobNo,
                        assignee,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EscalatedHelpdeskRequestDynasoftAsync(string jobNo, string assignee, string description) {
            this.EscalatedHelpdeskRequestDynasoftAsync(jobNo, assignee, description, null);
        }
        
        /// <remarks/>
        public void EscalatedHelpdeskRequestDynasoftAsync(string jobNo, string assignee, string description, object userState) {
            if ((this.EscalatedHelpdeskRequestDynasoftOperationCompleted == null)) {
                this.EscalatedHelpdeskRequestDynasoftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEscalatedHelpdeskRequestDynasoftOperationCompleted);
            }
            this.InvokeAsync("EscalatedHelpdeskRequestDynasoft", new object[] {
                        jobNo,
                        assignee,
                        description}, this.EscalatedHelpdeskRequestDynasoftOperationCompleted, userState);
        }
        
        private void OnEscalatedHelpdeskRequestDynasoftOperationCompleted(object arg) {
            if ((this.EscalatedHelpdeskRequestDynasoftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EscalatedHelpdeskRequestDynasoftCompleted(this, new EscalatedHelpdeskRequestDynasoftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:EscalatedHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="EscalatedHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EscalatedHelpdeskRequest(string jobNo, string assignee, string description) {
            object[] results = this.Invoke("EscalatedHelpdeskRequest", new object[] {
                        jobNo,
                        assignee,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EscalatedHelpdeskRequestAsync(string jobNo, string assignee, string description) {
            this.EscalatedHelpdeskRequestAsync(jobNo, assignee, description, null);
        }
        
        /// <remarks/>
        public void EscalatedHelpdeskRequestAsync(string jobNo, string assignee, string description, object userState) {
            if ((this.EscalatedHelpdeskRequestOperationCompleted == null)) {
                this.EscalatedHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEscalatedHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("EscalatedHelpdeskRequest", new object[] {
                        jobNo,
                        assignee,
                        description}, this.EscalatedHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnEscalatedHelpdeskRequestOperationCompleted(object arg) {
            if ((this.EscalatedHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EscalatedHelpdeskRequestCompleted(this, new EscalatedHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:EssCancellPV", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="EssCancellPV_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EssCancellPV(string docNo) {
            this.Invoke("EssCancellPV", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void EssCancellPVAsync(string docNo) {
            this.EssCancellPVAsync(docNo, null);
        }
        
        /// <remarks/>
        public void EssCancellPVAsync(string docNo, object userState) {
            if ((this.EssCancellPVOperationCompleted == null)) {
                this.EssCancellPVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEssCancellPVOperationCompleted);
            }
            this.InvokeAsync("EssCancellPV", new object[] {
                        docNo}, this.EssCancellPVOperationCompleted, userState);
        }
        
        private void OnEssCancellPVOperationCompleted(object arg) {
            if ((this.EssCancellPVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EssCancellPVCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ExpenseRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ExpenseRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExpenseRequisitionApproval(string docNo) {
            this.Invoke("ExpenseRequisitionApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void ExpenseRequisitionApprovalAsync(string docNo) {
            this.ExpenseRequisitionApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void ExpenseRequisitionApprovalAsync(string docNo, object userState) {
            if ((this.ExpenseRequisitionApprovalOperationCompleted == null)) {
                this.ExpenseRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExpenseRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("ExpenseRequisitionApproval", new object[] {
                        docNo}, this.ExpenseRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnExpenseRequisitionApprovalOperationCompleted(object arg) {
            if ((this.ExpenseRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExpenseRequisitionApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ExportWorkplanExcell", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ExportWorkplanExcell_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ExportWorkplanExcell(string docNo) {
            object[] results = this.Invoke("ExportWorkplanExcell", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportWorkplanExcellAsync(string docNo) {
            this.ExportWorkplanExcellAsync(docNo, null);
        }
        
        /// <remarks/>
        public void ExportWorkplanExcellAsync(string docNo, object userState) {
            if ((this.ExportWorkplanExcellOperationCompleted == null)) {
                this.ExportWorkplanExcellOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportWorkplanExcellOperationCompleted);
            }
            this.InvokeAsync("ExportWorkplanExcell", new object[] {
                        docNo}, this.ExportWorkplanExcellOperationCompleted, userState);
        }
        
        private void OnExportWorkplanExcellOperationCompleted(object arg) {
            if ((this.ExportWorkplanExcellCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportWorkplanExcellCompleted(this, new ExportWorkplanExcellCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnAddEvaluationPIP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnAddEvaluationPIP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddEvaluationPIP(string docNo, string category, string description) {
            object[] results = this.Invoke("FnAddEvaluationPIP", new object[] {
                        docNo,
                        category,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddEvaluationPIPAsync(string docNo, string category, string description) {
            this.FnAddEvaluationPIPAsync(docNo, category, description, null);
        }
        
        /// <remarks/>
        public void FnAddEvaluationPIPAsync(string docNo, string category, string description, object userState) {
            if ((this.FnAddEvaluationPIPOperationCompleted == null)) {
                this.FnAddEvaluationPIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddEvaluationPIPOperationCompleted);
            }
            this.InvokeAsync("FnAddEvaluationPIP", new object[] {
                        docNo,
                        category,
                        description}, this.FnAddEvaluationPIPOperationCompleted, userState);
        }
        
        private void OnFnAddEvaluationPIPOperationCompleted(object arg) {
            if ((this.FnAddEvaluationPIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddEvaluationPIPCompleted(this, new FnAddEvaluationPIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnAppointTeamMember", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnAppointTeamMember_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnAppointTeamMember(string docNo) {
            this.Invoke("FnAppointTeamMember", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void FnAppointTeamMemberAsync(string docNo) {
            this.FnAppointTeamMemberAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnAppointTeamMemberAsync(string docNo, object userState) {
            if ((this.FnAppointTeamMemberOperationCompleted == null)) {
                this.FnAppointTeamMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAppointTeamMemberOperationCompleted);
            }
            this.InvokeAsync("FnAppointTeamMember", new object[] {
                        docNo}, this.FnAppointTeamMemberOperationCompleted, userState);
        }
        
        private void OnFnAppointTeamMemberOperationCompleted(object arg) {
            if ((this.FnAppointTeamMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAppointTeamMemberCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnAppraisalSuggestObjectivesOutc" +
            "omes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnAppraisalSuggestObjectivesOutcomes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAppraisalSuggestObjectivesOutcomes(string docNo) {
            object[] results = this.Invoke("FnAppraisalSuggestObjectivesOutcomes", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAppraisalSuggestObjectivesOutcomesAsync(string docNo) {
            this.FnAppraisalSuggestObjectivesOutcomesAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnAppraisalSuggestObjectivesOutcomesAsync(string docNo, object userState) {
            if ((this.FnAppraisalSuggestObjectivesOutcomesOperationCompleted == null)) {
                this.FnAppraisalSuggestObjectivesOutcomesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAppraisalSuggestObjectivesOutcomesOperationCompleted);
            }
            this.InvokeAsync("FnAppraisalSuggestObjectivesOutcomes", new object[] {
                        docNo}, this.FnAppraisalSuggestObjectivesOutcomesOperationCompleted, userState);
        }
        
        private void OnFnAppraisalSuggestObjectivesOutcomesOperationCompleted(object arg) {
            if ((this.FnAppraisalSuggestObjectivesOutcomesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAppraisalSuggestObjectivesOutcomesCompleted(this, new FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnCloseHelpDeskIssue", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnCloseHelpDeskIssue_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnCloseHelpDeskIssue(string empID, string docNo) {
            object[] results = this.Invoke("FnCloseHelpDeskIssue", new object[] {
                        empID,
                        docNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnCloseHelpDeskIssueAsync(string empID, string docNo) {
            this.FnCloseHelpDeskIssueAsync(empID, docNo, null);
        }
        
        /// <remarks/>
        public void FnCloseHelpDeskIssueAsync(string empID, string docNo, object userState) {
            if ((this.FnCloseHelpDeskIssueOperationCompleted == null)) {
                this.FnCloseHelpDeskIssueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCloseHelpDeskIssueOperationCompleted);
            }
            this.InvokeAsync("FnCloseHelpDeskIssue", new object[] {
                        empID,
                        docNo}, this.FnCloseHelpDeskIssueOperationCompleted, userState);
        }
        
        private void OnFnCloseHelpDeskIssueOperationCompleted(object arg) {
            if ((this.FnCloseHelpDeskIssueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCloseHelpDeskIssueCompleted(this, new FnCloseHelpDeskIssueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnCreateLeaveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnCreateLeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateLeaveApplication(string leaveNo, string employeeNo, string leaveType, int annualLeaveType, int days, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, string reliever, string phone, string email, string examDetails, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime examDate, string comments) {
            object[] results = this.Invoke("FnCreateLeaveApplication", new object[] {
                        leaveNo,
                        employeeNo,
                        leaveType,
                        annualLeaveType,
                        days,
                        startDate,
                        reliever,
                        phone,
                        email,
                        examDetails,
                        examDate,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateLeaveApplicationAsync(string leaveNo, string employeeNo, string leaveType, int annualLeaveType, int days, System.DateTime startDate, string reliever, string phone, string email, string examDetails, System.DateTime examDate, string comments) {
            this.FnCreateLeaveApplicationAsync(leaveNo, employeeNo, leaveType, annualLeaveType, days, startDate, reliever, phone, email, examDetails, examDate, comments, null);
        }
        
        /// <remarks/>
        public void FnCreateLeaveApplicationAsync(string leaveNo, string employeeNo, string leaveType, int annualLeaveType, int days, System.DateTime startDate, string reliever, string phone, string email, string examDetails, System.DateTime examDate, string comments, object userState) {
            if ((this.FnCreateLeaveApplicationOperationCompleted == null)) {
                this.FnCreateLeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("FnCreateLeaveApplication", new object[] {
                        leaveNo,
                        employeeNo,
                        leaveType,
                        annualLeaveType,
                        days,
                        startDate,
                        reliever,
                        phone,
                        email,
                        examDetails,
                        examDate,
                        comments}, this.FnCreateLeaveApplicationOperationCompleted, userState);
        }
        
        private void OnFnCreateLeaveApplicationOperationCompleted(object arg) {
            if ((this.FnCreateLeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateLeaveApplicationCompleted(this, new FnCreateLeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnCreatePreliminaryDesignPortal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnCreatePreliminaryDesignPortal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnCreatePreliminaryDesignPortal(string meetingNo) {
            this.Invoke("FnCreatePreliminaryDesignPortal", new object[] {
                        meetingNo});
        }
        
        /// <remarks/>
        public void FnCreatePreliminaryDesignPortalAsync(string meetingNo) {
            this.FnCreatePreliminaryDesignPortalAsync(meetingNo, null);
        }
        
        /// <remarks/>
        public void FnCreatePreliminaryDesignPortalAsync(string meetingNo, object userState) {
            if ((this.FnCreatePreliminaryDesignPortalOperationCompleted == null)) {
                this.FnCreatePreliminaryDesignPortalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreatePreliminaryDesignPortalOperationCompleted);
            }
            this.InvokeAsync("FnCreatePreliminaryDesignPortal", new object[] {
                        meetingNo}, this.FnCreatePreliminaryDesignPortalOperationCompleted, userState);
        }
        
        private void OnFnCreatePreliminaryDesignPortalOperationCompleted(object arg) {
            if ((this.FnCreatePreliminaryDesignPortalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreatePreliminaryDesignPortalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnCreateProjectLeadsAppointment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnCreateProjectLeadsAppointment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnCreateProjectLeadsAppointment(string userRequestNo) {
            this.Invoke("FnCreateProjectLeadsAppointment", new object[] {
                        userRequestNo});
        }
        
        /// <remarks/>
        public void FnCreateProjectLeadsAppointmentAsync(string userRequestNo) {
            this.FnCreateProjectLeadsAppointmentAsync(userRequestNo, null);
        }
        
        /// <remarks/>
        public void FnCreateProjectLeadsAppointmentAsync(string userRequestNo, object userState) {
            if ((this.FnCreateProjectLeadsAppointmentOperationCompleted == null)) {
                this.FnCreateProjectLeadsAppointmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateProjectLeadsAppointmentOperationCompleted);
            }
            this.InvokeAsync("FnCreateProjectLeadsAppointment", new object[] {
                        userRequestNo}, this.FnCreateProjectLeadsAppointmentOperationCompleted, userState);
        }
        
        private void OnFnCreateProjectLeadsAppointmentOperationCompleted(object arg) {
            if ((this.FnCreateProjectLeadsAppointmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateProjectLeadsAppointmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnCreateProjectTeamCard", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnCreateProjectTeamCard_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnCreateProjectTeamCard(string feedBackNo) {
            this.Invoke("FnCreateProjectTeamCard", new object[] {
                        feedBackNo});
        }
        
        /// <remarks/>
        public void FnCreateProjectTeamCardAsync(string feedBackNo) {
            this.FnCreateProjectTeamCardAsync(feedBackNo, null);
        }
        
        /// <remarks/>
        public void FnCreateProjectTeamCardAsync(string feedBackNo, object userState) {
            if ((this.FnCreateProjectTeamCardOperationCompleted == null)) {
                this.FnCreateProjectTeamCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateProjectTeamCardOperationCompleted);
            }
            this.InvokeAsync("FnCreateProjectTeamCard", new object[] {
                        feedBackNo}, this.FnCreateProjectTeamCardOperationCompleted, userState);
        }
        
        private void OnFnCreateProjectTeamCardOperationCompleted(object arg) {
            if ((this.FnCreateProjectTeamCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateProjectTeamCardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnCreateStaffClaimApprovalReques" +
            "ts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnCreateStaffClaimApprovalRequests_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateStaffClaimApprovalRequests(string employeeno, string staffClaimNo) {
            object[] results = this.Invoke("FnCreateStaffClaimApprovalRequests", new object[] {
                        employeeno,
                        staffClaimNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateStaffClaimApprovalRequestsAsync(string employeeno, string staffClaimNo) {
            this.FnCreateStaffClaimApprovalRequestsAsync(employeeno, staffClaimNo, null);
        }
        
        /// <remarks/>
        public void FnCreateStaffClaimApprovalRequestsAsync(string employeeno, string staffClaimNo, object userState) {
            if ((this.FnCreateStaffClaimApprovalRequestsOperationCompleted == null)) {
                this.FnCreateStaffClaimApprovalRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateStaffClaimApprovalRequestsOperationCompleted);
            }
            this.InvokeAsync("FnCreateStaffClaimApprovalRequests", new object[] {
                        employeeno,
                        staffClaimNo}, this.FnCreateStaffClaimApprovalRequestsOperationCompleted, userState);
        }
        
        private void OnFnCreateStaffClaimApprovalRequestsOperationCompleted(object arg) {
            if ((this.FnCreateStaffClaimApprovalRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateStaffClaimApprovalRequestsCompleted(this, new FnCreateStaffClaimApprovalRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnCreateStakeHolderFeedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnCreateStakeHolderFeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateStakeHolderFeedback(string docNo) {
            object[] results = this.Invoke("FnCreateStakeHolderFeedback", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateStakeHolderFeedbackAsync(string docNo) {
            this.FnCreateStakeHolderFeedbackAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnCreateStakeHolderFeedbackAsync(string docNo, object userState) {
            if ((this.FnCreateStakeHolderFeedbackOperationCompleted == null)) {
                this.FnCreateStakeHolderFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateStakeHolderFeedbackOperationCompleted);
            }
            this.InvokeAsync("FnCreateStakeHolderFeedback", new object[] {
                        docNo}, this.FnCreateStakeHolderFeedbackOperationCompleted, userState);
        }
        
        private void OnFnCreateStakeHolderFeedbackOperationCompleted(object arg) {
            if ((this.FnCreateStakeHolderFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateStakeHolderFeedbackCompleted(this, new FnCreateStakeHolderFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnCreateTrainingFeedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnCreateTrainingFeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateTrainingFeedback(string empNo, string applicationCode, int participants) {
            object[] results = this.Invoke("FnCreateTrainingFeedback", new object[] {
                        empNo,
                        applicationCode,
                        participants});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateTrainingFeedbackAsync(string empNo, string applicationCode, int participants) {
            this.FnCreateTrainingFeedbackAsync(empNo, applicationCode, participants, null);
        }
        
        /// <remarks/>
        public void FnCreateTrainingFeedbackAsync(string empNo, string applicationCode, int participants, object userState) {
            if ((this.FnCreateTrainingFeedbackOperationCompleted == null)) {
                this.FnCreateTrainingFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateTrainingFeedbackOperationCompleted);
            }
            this.InvokeAsync("FnCreateTrainingFeedback", new object[] {
                        empNo,
                        applicationCode,
                        participants}, this.FnCreateTrainingFeedbackOperationCompleted, userState);
        }
        
        private void OnFnCreateTrainingFeedbackOperationCompleted(object arg) {
            if ((this.FnCreateTrainingFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateTrainingFeedbackCompleted(this, new FnCreateTrainingFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnCreateTrainingRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnCreateTrainingRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateTrainingRequisition(string empNo, string loggedInUSer, string courseID, string venue) {
            object[] results = this.Invoke("FnCreateTrainingRequisition", new object[] {
                        empNo,
                        loggedInUSer,
                        courseID,
                        venue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateTrainingRequisitionAsync(string empNo, string loggedInUSer, string courseID, string venue) {
            this.FnCreateTrainingRequisitionAsync(empNo, loggedInUSer, courseID, venue, null);
        }
        
        /// <remarks/>
        public void FnCreateTrainingRequisitionAsync(string empNo, string loggedInUSer, string courseID, string venue, object userState) {
            if ((this.FnCreateTrainingRequisitionOperationCompleted == null)) {
                this.FnCreateTrainingRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateTrainingRequisitionOperationCompleted);
            }
            this.InvokeAsync("FnCreateTrainingRequisition", new object[] {
                        empNo,
                        loggedInUSer,
                        courseID,
                        venue}, this.FnCreateTrainingRequisitionOperationCompleted, userState);
        }
        
        private void OnFnCreateTrainingRequisitionOperationCompleted(object arg) {
            if ((this.FnCreateTrainingRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateTrainingRequisitionCompleted(this, new FnCreateTrainingRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnCreateUserRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnCreateUserRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateUserRequest(string name, string dim2, string description, string justification, string county, string subCounty, string requestSource, string loggedInUser) {
            object[] results = this.Invoke("FnCreateUserRequest", new object[] {
                        name,
                        dim2,
                        description,
                        justification,
                        county,
                        subCounty,
                        requestSource,
                        loggedInUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateUserRequestAsync(string name, string dim2, string description, string justification, string county, string subCounty, string requestSource, string loggedInUser) {
            this.FnCreateUserRequestAsync(name, dim2, description, justification, county, subCounty, requestSource, loggedInUser, null);
        }
        
        /// <remarks/>
        public void FnCreateUserRequestAsync(string name, string dim2, string description, string justification, string county, string subCounty, string requestSource, string loggedInUser, object userState) {
            if ((this.FnCreateUserRequestOperationCompleted == null)) {
                this.FnCreateUserRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateUserRequestOperationCompleted);
            }
            this.InvokeAsync("FnCreateUserRequest", new object[] {
                        name,
                        dim2,
                        description,
                        justification,
                        county,
                        subCounty,
                        requestSource,
                        loggedInUser}, this.FnCreateUserRequestOperationCompleted, userState);
        }
        
        private void OnFnCreateUserRequestOperationCompleted(object arg) {
            if ((this.FnCreateUserRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateUserRequestCompleted(this, new FnCreateUserRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnDeleteIndividualCardSubActivit" +
            "ies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnDeleteIndividualCardSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteIndividualCardSubActivities(string empNo, string scorecardNumber, string activityNo, int entryNumber) {
            object[] results = this.Invoke("FnDeleteIndividualCardSubActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        activityNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteIndividualCardSubActivitiesAsync(string empNo, string scorecardNumber, string activityNo, int entryNumber) {
            this.FnDeleteIndividualCardSubActivitiesAsync(empNo, scorecardNumber, activityNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteIndividualCardSubActivitiesAsync(string empNo, string scorecardNumber, string activityNo, int entryNumber, object userState) {
            if ((this.FnDeleteIndividualCardSubActivitiesOperationCompleted == null)) {
                this.FnDeleteIndividualCardSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteIndividualCardSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnDeleteIndividualCardSubActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        activityNo,
                        entryNumber}, this.FnDeleteIndividualCardSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnDeleteIndividualCardSubActivitiesOperationCompleted(object arg) {
            if ((this.FnDeleteIndividualCardSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteIndividualCardSubActivitiesCompleted(this, new FnDeleteIndividualCardSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnEditIndividualCardSubActivitie" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnEditIndividualCardSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditIndividualCardSubActivities(string scorecardNumber, string activityNo, int lineno, string subinitiative, string subindicator, string uom, int targets, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime completiondate, decimal agreedweight) {
            object[] results = this.Invoke("FnEditIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        lineno,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        agreedweight});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, int lineno, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal agreedweight) {
            this.FnEditIndividualCardSubActivitiesAsync(scorecardNumber, activityNo, lineno, subinitiative, subindicator, uom, targets, completiondate, agreedweight, null);
        }
        
        /// <remarks/>
        public void FnEditIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, int lineno, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal agreedweight, object userState) {
            if ((this.FnEditIndividualCardSubActivitiesOperationCompleted == null)) {
                this.FnEditIndividualCardSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditIndividualCardSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnEditIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        lineno,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        agreedweight}, this.FnEditIndividualCardSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnEditIndividualCardSubActivitiesOperationCompleted(object arg) {
            if ((this.FnEditIndividualCardSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditIndividualCardSubActivitiesCompleted(this, new FnEditIndividualCardSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnEditPurchaseLineDescription", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnEditPurchaseLineDescription_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnEditPurchaseLineDescription(string docNo, int lineNo, string description, decimal dcost, int quantity, string genProdPosting, string genBusPostingGroup) {
            object[] results = this.Invoke("FnEditPurchaseLineDescription", new object[] {
                        docNo,
                        lineNo,
                        description,
                        dcost,
                        quantity,
                        genProdPosting,
                        genBusPostingGroup});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditPurchaseLineDescriptionAsync(string docNo, int lineNo, string description, decimal dcost, int quantity, string genProdPosting, string genBusPostingGroup) {
            this.FnEditPurchaseLineDescriptionAsync(docNo, lineNo, description, dcost, quantity, genProdPosting, genBusPostingGroup, null);
        }
        
        /// <remarks/>
        public void FnEditPurchaseLineDescriptionAsync(string docNo, int lineNo, string description, decimal dcost, int quantity, string genProdPosting, string genBusPostingGroup, object userState) {
            if ((this.FnEditPurchaseLineDescriptionOperationCompleted == null)) {
                this.FnEditPurchaseLineDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditPurchaseLineDescriptionOperationCompleted);
            }
            this.InvokeAsync("FnEditPurchaseLineDescription", new object[] {
                        docNo,
                        lineNo,
                        description,
                        dcost,
                        quantity,
                        genProdPosting,
                        genBusPostingGroup}, this.FnEditPurchaseLineDescriptionOperationCompleted, userState);
        }
        
        private void OnFnEditPurchaseLineDescriptionOperationCompleted(object arg) {
            if ((this.FnEditPurchaseLineDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditPurchaseLineDescriptionCompleted(this, new FnEditPurchaseLineDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnGetLastSubPcLineNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnGetLastSubPcLineNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetLastSubPcLineNo() {
            object[] results = this.Invoke("FnGetLastSubPcLineNo", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetLastSubPcLineNoAsync() {
            this.FnGetLastSubPcLineNoAsync(null);
        }
        
        /// <remarks/>
        public void FnGetLastSubPcLineNoAsync(object userState) {
            if ((this.FnGetLastSubPcLineNoOperationCompleted == null)) {
                this.FnGetLastSubPcLineNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetLastSubPcLineNoOperationCompleted);
            }
            this.InvokeAsync("FnGetLastSubPcLineNo", new object[0], this.FnGetLastSubPcLineNoOperationCompleted, userState);
        }
        
        private void OnFnGetLastSubPcLineNoOperationCompleted(object arg) {
            if ((this.FnGetLastSubPcLineNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetLastSubPcLineNoCompleted(this, new FnGetLastSubPcLineNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnInserImprestSurrender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnInserImprestSurrender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnInserImprestSurrender(string docNo, string vendorNo) {
            object[] results = this.Invoke("FnInserImprestSurrender", new object[] {
                        docNo,
                        vendorNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnInserImprestSurrenderAsync(string docNo, string vendorNo) {
            this.FnInserImprestSurrenderAsync(docNo, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnInserImprestSurrenderAsync(string docNo, string vendorNo, object userState) {
            if ((this.FnInserImprestSurrenderOperationCompleted == null)) {
                this.FnInserImprestSurrenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInserImprestSurrenderOperationCompleted);
            }
            this.InvokeAsync("FnInserImprestSurrender", new object[] {
                        docNo,
                        vendorNo}, this.FnInserImprestSurrenderOperationCompleted, userState);
        }
        
        private void OnFnInserImprestSurrenderOperationCompleted(object arg) {
            if ((this.FnInserImprestSurrenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInserImprestSurrenderCompleted(this, new FnInserImprestSurrenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnInsertProjectTeamLeadsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnInsertProjectTeamLeadsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnInsertProjectTeamLeadsLines(string feedBackNo, string resourceNo, string areaLead) {
            this.Invoke("FnInsertProjectTeamLeadsLines", new object[] {
                        feedBackNo,
                        resourceNo,
                        areaLead});
        }
        
        /// <remarks/>
        public void FnInsertProjectTeamLeadsLinesAsync(string feedBackNo, string resourceNo, string areaLead) {
            this.FnInsertProjectTeamLeadsLinesAsync(feedBackNo, resourceNo, areaLead, null);
        }
        
        /// <remarks/>
        public void FnInsertProjectTeamLeadsLinesAsync(string feedBackNo, string resourceNo, string areaLead, object userState) {
            if ((this.FnInsertProjectTeamLeadsLinesOperationCompleted == null)) {
                this.FnInsertProjectTeamLeadsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertProjectTeamLeadsLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertProjectTeamLeadsLines", new object[] {
                        feedBackNo,
                        resourceNo,
                        areaLead}, this.FnInsertProjectTeamLeadsLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertProjectTeamLeadsLinesOperationCompleted(object arg) {
            if ((this.FnInsertProjectTeamLeadsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertProjectTeamLeadsLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnInsertProjectTeamLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnInsertProjectTeamLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnInsertProjectTeamLines(string feedBackNo, string resourceNo, string areaLead, int involvmentStage) {
            this.Invoke("FnInsertProjectTeamLines", new object[] {
                        feedBackNo,
                        resourceNo,
                        areaLead,
                        involvmentStage});
        }
        
        /// <remarks/>
        public void FnInsertProjectTeamLinesAsync(string feedBackNo, string resourceNo, string areaLead, int involvmentStage) {
            this.FnInsertProjectTeamLinesAsync(feedBackNo, resourceNo, areaLead, involvmentStage, null);
        }
        
        /// <remarks/>
        public void FnInsertProjectTeamLinesAsync(string feedBackNo, string resourceNo, string areaLead, int involvmentStage, object userState) {
            if ((this.FnInsertProjectTeamLinesOperationCompleted == null)) {
                this.FnInsertProjectTeamLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertProjectTeamLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertProjectTeamLines", new object[] {
                        feedBackNo,
                        resourceNo,
                        areaLead,
                        involvmentStage}, this.FnInsertProjectTeamLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertProjectTeamLinesOperationCompleted(object arg) {
            if ((this.FnInsertProjectTeamLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertProjectTeamLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnInsertSubObjectiveEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnInsertSubObjectiveEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertSubObjectiveEvaluation(int lineno, string docNo, string initiativeNo, decimal finalTarget) {
            object[] results = this.Invoke("FnInsertSubObjectiveEvaluation", new object[] {
                        lineno,
                        docNo,
                        initiativeNo,
                        finalTarget});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertSubObjectiveEvaluationAsync(int lineno, string docNo, string initiativeNo, decimal finalTarget) {
            this.FnInsertSubObjectiveEvaluationAsync(lineno, docNo, initiativeNo, finalTarget, null);
        }
        
        /// <remarks/>
        public void FnInsertSubObjectiveEvaluationAsync(int lineno, string docNo, string initiativeNo, decimal finalTarget, object userState) {
            if ((this.FnInsertSubObjectiveEvaluationOperationCompleted == null)) {
                this.FnInsertSubObjectiveEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertSubObjectiveEvaluationOperationCompleted);
            }
            this.InvokeAsync("FnInsertSubObjectiveEvaluation", new object[] {
                        lineno,
                        docNo,
                        initiativeNo,
                        finalTarget}, this.FnInsertSubObjectiveEvaluationOperationCompleted, userState);
        }
        
        private void OnFnInsertSubObjectiveEvaluationOperationCompleted(object arg) {
            if ((this.FnInsertSubObjectiveEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertSubObjectiveEvaluationCompleted(this, new FnInsertSubObjectiveEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnInsertTrainingLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnInsertTrainingLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnInsertTrainingLines(string docNo, string empNo, string courseID, string courseDesciption, string domainId, int points, string courseProvider, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            object[] results = this.Invoke("FnInsertTrainingLines", new object[] {
                        docNo,
                        empNo,
                        courseID,
                        courseDesciption,
                        domainId,
                        points,
                        courseProvider,
                        startDate,
                        endDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertTrainingLinesAsync(string docNo, string empNo, string courseID, string courseDesciption, string domainId, int points, string courseProvider, System.DateTime startDate, System.DateTime endDate) {
            this.FnInsertTrainingLinesAsync(docNo, empNo, courseID, courseDesciption, domainId, points, courseProvider, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void FnInsertTrainingLinesAsync(string docNo, string empNo, string courseID, string courseDesciption, string domainId, int points, string courseProvider, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.FnInsertTrainingLinesOperationCompleted == null)) {
                this.FnInsertTrainingLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertTrainingLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertTrainingLines", new object[] {
                        docNo,
                        empNo,
                        courseID,
                        courseDesciption,
                        domainId,
                        points,
                        courseProvider,
                        startDate,
                        endDate}, this.FnInsertTrainingLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertTrainingLinesOperationCompleted(object arg) {
            if ((this.FnInsertTrainingLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertTrainingLinesCompleted(this, new FnInsertTrainingLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnInsertVehicleMaitenanceDetails" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnInsertVehicleMaitenanceDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertVehicleMaitenanceDetails(string docNo, string vehicleRegNo, string employeeNo, decimal odometerReading, string projectNo, string taskNo, decimal maintenanceCost, string vendor, string description, string serviceCode, string repairs) {
            object[] results = this.Invoke("FnInsertVehicleMaitenanceDetails", new object[] {
                        docNo,
                        vehicleRegNo,
                        employeeNo,
                        odometerReading,
                        projectNo,
                        taskNo,
                        maintenanceCost,
                        vendor,
                        description,
                        serviceCode,
                        repairs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertVehicleMaitenanceDetailsAsync(string docNo, string vehicleRegNo, string employeeNo, decimal odometerReading, string projectNo, string taskNo, decimal maintenanceCost, string vendor, string description, string serviceCode, string repairs) {
            this.FnInsertVehicleMaitenanceDetailsAsync(docNo, vehicleRegNo, employeeNo, odometerReading, projectNo, taskNo, maintenanceCost, vendor, description, serviceCode, repairs, null);
        }
        
        /// <remarks/>
        public void FnInsertVehicleMaitenanceDetailsAsync(string docNo, string vehicleRegNo, string employeeNo, decimal odometerReading, string projectNo, string taskNo, decimal maintenanceCost, string vendor, string description, string serviceCode, string repairs, object userState) {
            if ((this.FnInsertVehicleMaitenanceDetailsOperationCompleted == null)) {
                this.FnInsertVehicleMaitenanceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertVehicleMaitenanceDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertVehicleMaitenanceDetails", new object[] {
                        docNo,
                        vehicleRegNo,
                        employeeNo,
                        odometerReading,
                        projectNo,
                        taskNo,
                        maintenanceCost,
                        vendor,
                        description,
                        serviceCode,
                        repairs}, this.FnInsertVehicleMaitenanceDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertVehicleMaitenanceDetailsOperationCompleted(object arg) {
            if ((this.FnInsertVehicleMaitenanceDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertVehicleMaitenanceDetailsCompleted(this, new FnInsertVehicleMaitenanceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnLoadCompetencies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnLoadCompetencies_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLoadCompetencies(string docNo) {
            object[] results = this.Invoke("FnLoadCompetencies", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLoadCompetenciesAsync(string docNo) {
            this.FnLoadCompetenciesAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnLoadCompetenciesAsync(string docNo, object userState) {
            if ((this.FnLoadCompetenciesOperationCompleted == null)) {
                this.FnLoadCompetenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLoadCompetenciesOperationCompleted);
            }
            this.InvokeAsync("FnLoadCompetencies", new object[] {
                        docNo}, this.FnLoadCompetenciesOperationCompleted, userState);
        }
        
        private void OnFnLoadCompetenciesOperationCompleted(object arg) {
            if ((this.FnLoadCompetenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLoadCompetenciesCompleted(this, new FnLoadCompetenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnNewIndividualCardSubActivities" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnNewIndividualCardSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewIndividualCardSubActivities(string scorecardNumber, string activityNo, string subinitiative, string subindicator, string uom, int targets, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime completiondate, decimal assweight) {
            object[] results = this.Invoke("FnNewIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        assweight});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal assweight) {
            this.FnNewIndividualCardSubActivitiesAsync(scorecardNumber, activityNo, subinitiative, subindicator, uom, targets, completiondate, assweight, null);
        }
        
        /// <remarks/>
        public void FnNewIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal assweight, object userState) {
            if ((this.FnNewIndividualCardSubActivitiesOperationCompleted == null)) {
                this.FnNewIndividualCardSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewIndividualCardSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnNewIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        assweight}, this.FnNewIndividualCardSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnNewIndividualCardSubActivitiesOperationCompleted(object arg) {
            if ((this.FnNewIndividualCardSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewIndividualCardSubActivitiesCompleted(this, new FnNewIndividualCardSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnNewPerformanceLogEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnNewPerformanceLogEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewPerformanceLogEntry(string docNo, string empNo, string scorecardNumber, string description) {
            object[] results = this.Invoke("FnNewPerformanceLogEntry", new object[] {
                        docNo,
                        empNo,
                        scorecardNumber,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewPerformanceLogEntryAsync(string docNo, string empNo, string scorecardNumber, string description) {
            this.FnNewPerformanceLogEntryAsync(docNo, empNo, scorecardNumber, description, null);
        }
        
        /// <remarks/>
        public void FnNewPerformanceLogEntryAsync(string docNo, string empNo, string scorecardNumber, string description, object userState) {
            if ((this.FnNewPerformanceLogEntryOperationCompleted == null)) {
                this.FnNewPerformanceLogEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewPerformanceLogEntryOperationCompleted);
            }
            this.InvokeAsync("FnNewPerformanceLogEntry", new object[] {
                        docNo,
                        empNo,
                        scorecardNumber,
                        description}, this.FnNewPerformanceLogEntryOperationCompleted, userState);
        }
        
        private void OnFnNewPerformanceLogEntryOperationCompleted(object arg) {
            if ((this.FnNewPerformanceLogEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewPerformanceLogEntryCompleted(this, new FnNewPerformanceLogEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnNewStandardAppraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnNewStandardAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewStandardAppraisal(string docNo, string empNo, string strategicPlan, string pmp, string tasks, string supervisor, string description, string personalSC) {
            object[] results = this.Invoke("FnNewStandardAppraisal", new object[] {
                        docNo,
                        empNo,
                        strategicPlan,
                        pmp,
                        tasks,
                        supervisor,
                        description,
                        personalSC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewStandardAppraisalAsync(string docNo, string empNo, string strategicPlan, string pmp, string tasks, string supervisor, string description, string personalSC) {
            this.FnNewStandardAppraisalAsync(docNo, empNo, strategicPlan, pmp, tasks, supervisor, description, personalSC, null);
        }
        
        /// <remarks/>
        public void FnNewStandardAppraisalAsync(string docNo, string empNo, string strategicPlan, string pmp, string tasks, string supervisor, string description, string personalSC, object userState) {
            if ((this.FnNewStandardAppraisalOperationCompleted == null)) {
                this.FnNewStandardAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewStandardAppraisalOperationCompleted);
            }
            this.InvokeAsync("FnNewStandardAppraisal", new object[] {
                        docNo,
                        empNo,
                        strategicPlan,
                        pmp,
                        tasks,
                        supervisor,
                        description,
                        personalSC}, this.FnNewStandardAppraisalOperationCompleted, userState);
        }
        
        private void OnFnNewStandardAppraisalOperationCompleted(object arg) {
            if ((this.FnNewStandardAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewStandardAppraisalCompleted(this, new FnNewStandardAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnPublishLPO", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnPublishLPO_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnPublishLPO(string docNo) {
            object[] results = this.Invoke("FnPublishLPO", new object[] {
                        docNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnPublishLPOAsync(string docNo) {
            this.FnPublishLPOAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnPublishLPOAsync(string docNo, object userState) {
            if ((this.FnPublishLPOOperationCompleted == null)) {
                this.FnPublishLPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPublishLPOOperationCompleted);
            }
            this.InvokeAsync("FnPublishLPO", new object[] {
                        docNo}, this.FnPublishLPOOperationCompleted, userState);
        }
        
        private void OnFnPublishLPOOperationCompleted(object arg) {
            if ((this.FnPublishLPOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPublishLPOCompleted(this, new FnPublishLPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnRemoveCoreInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnRemoveCoreInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemoveCoreInitiatives(string docNo, int entryNumber) {
            object[] results = this.Invoke("FnRemoveCoreInitiatives", new object[] {
                        docNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemoveCoreInitiativesAsync(string docNo, int entryNumber) {
            this.FnRemoveCoreInitiativesAsync(docNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnRemoveCoreInitiativesAsync(string docNo, int entryNumber, object userState) {
            if ((this.FnRemoveCoreInitiativesOperationCompleted == null)) {
                this.FnRemoveCoreInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemoveCoreInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnRemoveCoreInitiatives", new object[] {
                        docNo,
                        entryNumber}, this.FnRemoveCoreInitiativesOperationCompleted, userState);
        }
        
        private void OnFnRemoveCoreInitiativesOperationCompleted(object arg) {
            if ((this.FnRemoveCoreInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemoveCoreInitiativesCompleted(this, new FnRemoveCoreInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnRemovePerformanceLogLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnRemovePerformanceLogLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemovePerformanceLogLine(string docNo, int entryNumber) {
            object[] results = this.Invoke("FnRemovePerformanceLogLine", new object[] {
                        docNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemovePerformanceLogLineAsync(string docNo, int entryNumber) {
            this.FnRemovePerformanceLogLineAsync(docNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnRemovePerformanceLogLineAsync(string docNo, int entryNumber, object userState) {
            if ((this.FnRemovePerformanceLogLineOperationCompleted == null)) {
                this.FnRemovePerformanceLogLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemovePerformanceLogLineOperationCompleted);
            }
            this.InvokeAsync("FnRemovePerformanceLogLine", new object[] {
                        docNo,
                        entryNumber}, this.FnRemovePerformanceLogLineOperationCompleted, userState);
        }
        
        private void OnFnRemovePerformanceLogLineOperationCompleted(object arg) {
            if ((this.FnRemovePerformanceLogLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemovePerformanceLogLineCompleted(this, new FnRemovePerformanceLogLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnReopenHelpDeskIssue", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnReopenHelpDeskIssue_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnReopenHelpDeskIssue(string empID, string docNo) {
            object[] results = this.Invoke("FnReopenHelpDeskIssue", new object[] {
                        empID,
                        docNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnReopenHelpDeskIssueAsync(string empID, string docNo) {
            this.FnReopenHelpDeskIssueAsync(empID, docNo, null);
        }
        
        /// <remarks/>
        public void FnReopenHelpDeskIssueAsync(string empID, string docNo, object userState) {
            if ((this.FnReopenHelpDeskIssueOperationCompleted == null)) {
                this.FnReopenHelpDeskIssueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnReopenHelpDeskIssueOperationCompleted);
            }
            this.InvokeAsync("FnReopenHelpDeskIssue", new object[] {
                        empID,
                        docNo}, this.FnReopenHelpDeskIssueOperationCompleted, userState);
        }
        
        private void OnFnReopenHelpDeskIssueOperationCompleted(object arg) {
            if ((this.FnReopenHelpDeskIssueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnReopenHelpDeskIssueCompleted(this, new FnReopenHelpDeskIssueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnSaveCoreInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnSaveCoreInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveCoreInitiatives(int entryNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, decimal agreedTarget, decimal assignedweight, string comments) {
            object[] results = this.Invoke("FnSaveCoreInitiatives", new object[] {
                        entryNumber,
                        startdate,
                        enddate,
                        agreedTarget,
                        assignedweight,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveCoreInitiativesAsync(int entryNumber, System.DateTime startdate, System.DateTime enddate, decimal agreedTarget, decimal assignedweight, string comments) {
            this.FnSaveCoreInitiativesAsync(entryNumber, startdate, enddate, agreedTarget, assignedweight, comments, null);
        }
        
        /// <remarks/>
        public void FnSaveCoreInitiativesAsync(int entryNumber, System.DateTime startdate, System.DateTime enddate, decimal agreedTarget, decimal assignedweight, string comments, object userState) {
            if ((this.FnSaveCoreInitiativesOperationCompleted == null)) {
                this.FnSaveCoreInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveCoreInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnSaveCoreInitiatives", new object[] {
                        entryNumber,
                        startdate,
                        enddate,
                        agreedTarget,
                        assignedweight,
                        comments}, this.FnSaveCoreInitiativesOperationCompleted, userState);
        }
        
        private void OnFnSaveCoreInitiativesOperationCompleted(object arg) {
            if ((this.FnSaveCoreInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveCoreInitiativesCompleted(this, new FnSaveCoreInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnSendLPOViaMail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnSendLPOViaMail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnSendLPOViaMail(string docNo) {
            object[] results = this.Invoke("FnSendLPOViaMail", new object[] {
                        docNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendLPOViaMailAsync(string docNo) {
            this.FnSendLPOViaMailAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSendLPOViaMailAsync(string docNo, object userState) {
            if ((this.FnSendLPOViaMailOperationCompleted == null)) {
                this.FnSendLPOViaMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendLPOViaMailOperationCompleted);
            }
            this.InvokeAsync("FnSendLPOViaMail", new object[] {
                        docNo}, this.FnSendLPOViaMailOperationCompleted, userState);
        }
        
        private void OnFnSendLPOViaMailOperationCompleted(object arg) {
            if ((this.FnSendLPOViaMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendLPOViaMailCompleted(this, new FnSendLPOViaMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnSendTenderCommitteNotification" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnSendTenderCommitteNotification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnSendTenderCommitteNotification(string docNum) {
            this.Invoke("FnSendTenderCommitteNotification", new object[] {
                        docNum});
        }
        
        /// <remarks/>
        public void FnSendTenderCommitteNotificationAsync(string docNum) {
            this.FnSendTenderCommitteNotificationAsync(docNum, null);
        }
        
        /// <remarks/>
        public void FnSendTenderCommitteNotificationAsync(string docNum, object userState) {
            if ((this.FnSendTenderCommitteNotificationOperationCompleted == null)) {
                this.FnSendTenderCommitteNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendTenderCommitteNotificationOperationCompleted);
            }
            this.InvokeAsync("FnSendTenderCommitteNotification", new object[] {
                        docNum}, this.FnSendTenderCommitteNotificationOperationCompleted, userState);
        }
        
        private void OnFnSendTenderCommitteNotificationOperationCompleted(object arg) {
            if ((this.FnSendTenderCommitteNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendTenderCommitteNotificationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnSubmitSelectedCoreInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnSubmitSelectedCoreInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedCoreInitiatives(string strategyid, string personalscorecardid, string workplanNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnSubmitSelectedCoreInitiatives", new object[] {
                        strategyid,
                        personalscorecardid,
                        workplanNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedCoreInitiativesAsync(string strategyid, string personalscorecardid, string workplanNumber, string initiativeNumber) {
            this.FnSubmitSelectedCoreInitiativesAsync(strategyid, personalscorecardid, workplanNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedCoreInitiativesAsync(string strategyid, string personalscorecardid, string workplanNumber, string initiativeNumber, object userState) {
            if ((this.FnSubmitSelectedCoreInitiativesOperationCompleted == null)) {
                this.FnSubmitSelectedCoreInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedCoreInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedCoreInitiatives", new object[] {
                        strategyid,
                        personalscorecardid,
                        workplanNumber,
                        initiativeNumber}, this.FnSubmitSelectedCoreInitiativesOperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedCoreInitiativesOperationCompleted(object arg) {
            if ((this.FnSubmitSelectedCoreInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedCoreInitiativesCompleted(this, new FnSubmitSelectedCoreInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnSubmitSelectedPLogCategories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnSubmitSelectedPLogCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedPLogCategories(string strategyid, string personalscorecardid, string plogNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnSubmitSelectedPLogCategories", new object[] {
                        strategyid,
                        personalscorecardid,
                        plogNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedPLogCategoriesAsync(string strategyid, string personalscorecardid, string plogNumber, string initiativeNumber) {
            this.FnSubmitSelectedPLogCategoriesAsync(strategyid, personalscorecardid, plogNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedPLogCategoriesAsync(string strategyid, string personalscorecardid, string plogNumber, string initiativeNumber, object userState) {
            if ((this.FnSubmitSelectedPLogCategoriesOperationCompleted == null)) {
                this.FnSubmitSelectedPLogCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedPLogCategoriesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedPLogCategories", new object[] {
                        strategyid,
                        personalscorecardid,
                        plogNumber,
                        initiativeNumber}, this.FnSubmitSelectedPLogCategoriesOperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedPLogCategoriesOperationCompleted(object arg) {
            if ((this.FnSubmitSelectedPLogCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedPLogCategoriesCompleted(this, new FnSubmitSelectedPLogCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnSubmitTrainingNeeds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnSubmitTrainingNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnSubmitTrainingNeeds(string docNo) {
            this.Invoke("FnSubmitTrainingNeeds", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void FnSubmitTrainingNeedsAsync(string docNo) {
            this.FnSubmitTrainingNeedsAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitTrainingNeedsAsync(string docNo, object userState) {
            if ((this.FnSubmitTrainingNeedsOperationCompleted == null)) {
                this.FnSubmitTrainingNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitTrainingNeedsOperationCompleted);
            }
            this.InvokeAsync("FnSubmitTrainingNeeds", new object[] {
                        docNo}, this.FnSubmitTrainingNeedsOperationCompleted, userState);
        }
        
        private void OnFnSubmitTrainingNeedsOperationCompleted(object arg) {
            if ((this.FnSubmitTrainingNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitTrainingNeedsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnSubmitUserRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnSubmitUserRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnSubmitUserRequest(string docNo) {
            object[] results = this.Invoke("FnSubmitUserRequest", new object[] {
                        docNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitUserRequestAsync(string docNo) {
            this.FnSubmitUserRequestAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitUserRequestAsync(string docNo, object userState) {
            if ((this.FnSubmitUserRequestOperationCompleted == null)) {
                this.FnSubmitUserRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitUserRequestOperationCompleted);
            }
            this.InvokeAsync("FnSubmitUserRequest", new object[] {
                        docNo}, this.FnSubmitUserRequestOperationCompleted, userState);
        }
        
        private void OnFnSubmitUserRequestOperationCompleted(object arg) {
            if ((this.FnSubmitUserRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitUserRequestCompleted(this, new FnSubmitUserRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnSuggestJD", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnSuggestJD_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSuggestJD(string workplan) {
            object[] results = this.Invoke("FnSuggestJD", new object[] {
                        workplan});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSuggestJDAsync(string workplan) {
            this.FnSuggestJDAsync(workplan, null);
        }
        
        /// <remarks/>
        public void FnSuggestJDAsync(string workplan, object userState) {
            if ((this.FnSuggestJDOperationCompleted == null)) {
                this.FnSuggestJDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestJDOperationCompleted);
            }
            this.InvokeAsync("FnSuggestJD", new object[] {
                        workplan}, this.FnSuggestJDOperationCompleted, userState);
        }
        
        private void OnFnSuggestJDOperationCompleted(object arg) {
            if ((this.FnSuggestJDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestJDCompleted(this, new FnSuggestJDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnSuggestPlogLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnSuggestPlogLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSuggestPlogLines(string docNo, string strategyid, string personalscorecardid, string empNumber) {
            object[] results = this.Invoke("FnSuggestPlogLines", new object[] {
                        docNo,
                        strategyid,
                        personalscorecardid,
                        empNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSuggestPlogLinesAsync(string docNo, string strategyid, string personalscorecardid, string empNumber) {
            this.FnSuggestPlogLinesAsync(docNo, strategyid, personalscorecardid, empNumber, null);
        }
        
        /// <remarks/>
        public void FnSuggestPlogLinesAsync(string docNo, string strategyid, string personalscorecardid, string empNumber, object userState) {
            if ((this.FnSuggestPlogLinesOperationCompleted == null)) {
                this.FnSuggestPlogLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestPlogLinesOperationCompleted);
            }
            this.InvokeAsync("FnSuggestPlogLines", new object[] {
                        docNo,
                        strategyid,
                        personalscorecardid,
                        empNumber}, this.FnSuggestPlogLinesOperationCompleted, userState);
        }
        
        private void OnFnSuggestPlogLinesOperationCompleted(object arg) {
            if ((this.FnSuggestPlogLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestPlogLinesCompleted(this, new FnSuggestPlogLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnUpdatePRNLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnUpdatePRNLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnUpdatePRNLines(int lineNo, string docNo, bool selected) {
            this.Invoke("FnUpdatePRNLines", new object[] {
                        lineNo,
                        docNo,
                        selected});
        }
        
        /// <remarks/>
        public void FnUpdatePRNLinesAsync(int lineNo, string docNo, bool selected) {
            this.FnUpdatePRNLinesAsync(lineNo, docNo, selected, null);
        }
        
        /// <remarks/>
        public void FnUpdatePRNLinesAsync(int lineNo, string docNo, bool selected, object userState) {
            if ((this.FnUpdatePRNLinesOperationCompleted == null)) {
                this.FnUpdatePRNLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdatePRNLinesOperationCompleted);
            }
            this.InvokeAsync("FnUpdatePRNLines", new object[] {
                        lineNo,
                        docNo,
                        selected}, this.FnUpdatePRNLinesOperationCompleted, userState);
        }
        
        private void OnFnUpdatePRNLinesOperationCompleted(object arg) {
            if ((this.FnUpdatePRNLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdatePRNLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnUpdatePerformanceTargetLinesDe" +
            "tails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnUpdatePerformanceTargetLinesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdatePerformanceTargetLinesDetails(string docNo, int entryNumber, decimal agreedTarget, string comments) {
            object[] results = this.Invoke("FnUpdatePerformanceTargetLinesDetails", new object[] {
                        docNo,
                        entryNumber,
                        agreedTarget,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdatePerformanceTargetLinesDetailsAsync(string docNo, int entryNumber, decimal agreedTarget, string comments) {
            this.FnUpdatePerformanceTargetLinesDetailsAsync(docNo, entryNumber, agreedTarget, comments, null);
        }
        
        /// <remarks/>
        public void FnUpdatePerformanceTargetLinesDetailsAsync(string docNo, int entryNumber, decimal agreedTarget, string comments, object userState) {
            if ((this.FnUpdatePerformanceTargetLinesDetailsOperationCompleted == null)) {
                this.FnUpdatePerformanceTargetLinesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdatePerformanceTargetLinesDetailsOperationCompleted);
            }
            this.InvokeAsync("FnUpdatePerformanceTargetLinesDetails", new object[] {
                        docNo,
                        entryNumber,
                        agreedTarget,
                        comments}, this.FnUpdatePerformanceTargetLinesDetailsOperationCompleted, userState);
        }
        
        private void OnFnUpdatePerformanceTargetLinesDetailsOperationCompleted(object arg) {
            if ((this.FnUpdatePerformanceTargetLinesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdatePerformanceTargetLinesDetailsCompleted(this, new FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnUpdateProjectLeadsAppointment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnUpdateProjectLeadsAppointment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnUpdateProjectLeadsAppointment(string feedBackNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfMeeting, string chairManCode, string caseCategory, string caseLoad) {
            object[] results = this.Invoke("FnUpdateProjectLeadsAppointment", new object[] {
                        feedBackNo,
                        dateOfMeeting,
                        chairManCode,
                        caseCategory,
                        caseLoad});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateProjectLeadsAppointmentAsync(string feedBackNo, System.DateTime dateOfMeeting, string chairManCode, string caseCategory, string caseLoad) {
            this.FnUpdateProjectLeadsAppointmentAsync(feedBackNo, dateOfMeeting, chairManCode, caseCategory, caseLoad, null);
        }
        
        /// <remarks/>
        public void FnUpdateProjectLeadsAppointmentAsync(string feedBackNo, System.DateTime dateOfMeeting, string chairManCode, string caseCategory, string caseLoad, object userState) {
            if ((this.FnUpdateProjectLeadsAppointmentOperationCompleted == null)) {
                this.FnUpdateProjectLeadsAppointmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateProjectLeadsAppointmentOperationCompleted);
            }
            this.InvokeAsync("FnUpdateProjectLeadsAppointment", new object[] {
                        feedBackNo,
                        dateOfMeeting,
                        chairManCode,
                        caseCategory,
                        caseLoad}, this.FnUpdateProjectLeadsAppointmentOperationCompleted, userState);
        }
        
        private void OnFnUpdateProjectLeadsAppointmentOperationCompleted(object arg) {
            if ((this.FnUpdateProjectLeadsAppointmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateProjectLeadsAppointmentCompleted(this, new FnUpdateProjectLeadsAppointmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnUpdatePurchaseHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnUpdatePurchaseHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnUpdatePurchaseHeader(string docNo, string vendorNo, string vendorInvoiceNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dueDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime postingDate, int currentStatus) {
            object[] results = this.Invoke("FnUpdatePurchaseHeader", new object[] {
                        docNo,
                        vendorNo,
                        vendorInvoiceNo,
                        dueDate,
                        postingDate,
                        currentStatus});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdatePurchaseHeaderAsync(string docNo, string vendorNo, string vendorInvoiceNo, System.DateTime dueDate, System.DateTime postingDate, int currentStatus) {
            this.FnUpdatePurchaseHeaderAsync(docNo, vendorNo, vendorInvoiceNo, dueDate, postingDate, currentStatus, null);
        }
        
        /// <remarks/>
        public void FnUpdatePurchaseHeaderAsync(string docNo, string vendorNo, string vendorInvoiceNo, System.DateTime dueDate, System.DateTime postingDate, int currentStatus, object userState) {
            if ((this.FnUpdatePurchaseHeaderOperationCompleted == null)) {
                this.FnUpdatePurchaseHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdatePurchaseHeaderOperationCompleted);
            }
            this.InvokeAsync("FnUpdatePurchaseHeader", new object[] {
                        docNo,
                        vendorNo,
                        vendorInvoiceNo,
                        dueDate,
                        postingDate,
                        currentStatus}, this.FnUpdatePurchaseHeaderOperationCompleted, userState);
        }
        
        private void OnFnUpdatePurchaseHeaderOperationCompleted(object arg) {
            if ((this.FnUpdatePurchaseHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdatePurchaseHeaderCompleted(this, new FnUpdatePurchaseHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnUpdatePurchaseRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnUpdatePurchaseRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnUpdatePurchaseRequisition(string docNo, string vendorNo) {
            object[] results = this.Invoke("FnUpdatePurchaseRequisition", new object[] {
                        docNo,
                        vendorNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdatePurchaseRequisitionAsync(string docNo, string vendorNo) {
            this.FnUpdatePurchaseRequisitionAsync(docNo, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnUpdatePurchaseRequisitionAsync(string docNo, string vendorNo, object userState) {
            if ((this.FnUpdatePurchaseRequisitionOperationCompleted == null)) {
                this.FnUpdatePurchaseRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdatePurchaseRequisitionOperationCompleted);
            }
            this.InvokeAsync("FnUpdatePurchaseRequisition", new object[] {
                        docNo,
                        vendorNo}, this.FnUpdatePurchaseRequisitionOperationCompleted, userState);
        }
        
        private void OnFnUpdatePurchaseRequisitionOperationCompleted(object arg) {
            if ((this.FnUpdatePurchaseRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdatePurchaseRequisitionCompleted(this, new FnUpdatePurchaseRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FnUpdateStakeholderFeedBackLines" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FnUpdateStakeholderFeedBackLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnUpdateStakeholderFeedBackLines(string docNo, string suggestion, string proponentVar, string location, string suggestionStatus) {
            this.Invoke("FnUpdateStakeholderFeedBackLines", new object[] {
                        docNo,
                        suggestion,
                        proponentVar,
                        location,
                        suggestionStatus});
        }
        
        /// <remarks/>
        public void FnUpdateStakeholderFeedBackLinesAsync(string docNo, string suggestion, string proponentVar, string location, string suggestionStatus) {
            this.FnUpdateStakeholderFeedBackLinesAsync(docNo, suggestion, proponentVar, location, suggestionStatus, null);
        }
        
        /// <remarks/>
        public void FnUpdateStakeholderFeedBackLinesAsync(string docNo, string suggestion, string proponentVar, string location, string suggestionStatus, object userState) {
            if ((this.FnUpdateStakeholderFeedBackLinesOperationCompleted == null)) {
                this.FnUpdateStakeholderFeedBackLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateStakeholderFeedBackLinesOperationCompleted);
            }
            this.InvokeAsync("FnUpdateStakeholderFeedBackLines", new object[] {
                        docNo,
                        suggestion,
                        proponentVar,
                        location,
                        suggestionStatus}, this.FnUpdateStakeholderFeedBackLinesOperationCompleted, userState);
        }
        
        private void OnFnUpdateStakeholderFeedBackLinesOperationCompleted(object arg) {
            if ((this.FnUpdateStakeholderFeedBackLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateStakeholderFeedBackLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:Fnsuggestsubindicators", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="Fnsuggestsubindicators_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Fnsuggestsubindicators(string strategyid, string docNo, string initiativeNumber, string no) {
            object[] results = this.Invoke("Fnsuggestsubindicators", new object[] {
                        strategyid,
                        docNo,
                        initiativeNumber,
                        no});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnsuggestsubindicatorsAsync(string strategyid, string docNo, string initiativeNumber, string no) {
            this.FnsuggestsubindicatorsAsync(strategyid, docNo, initiativeNumber, no, null);
        }
        
        /// <remarks/>
        public void FnsuggestsubindicatorsAsync(string strategyid, string docNo, string initiativeNumber, string no, object userState) {
            if ((this.FnsuggestsubindicatorsOperationCompleted == null)) {
                this.FnsuggestsubindicatorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnsuggestsubindicatorsOperationCompleted);
            }
            this.InvokeAsync("Fnsuggestsubindicators", new object[] {
                        strategyid,
                        docNo,
                        initiativeNumber,
                        no}, this.FnsuggestsubindicatorsOperationCompleted, userState);
        }
        
        private void OnFnsuggestsubindicatorsOperationCompleted(object arg) {
            if ((this.FnsuggestsubindicatorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnsuggestsubindicatorsCompleted(this, new FnsuggestsubindicatorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FullUtilVoucherApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FullUtilVoucherApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FullUtilVoucherApproval(string docNo) {
            this.Invoke("FullUtilVoucherApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void FullUtilVoucherApprovalAsync(string docNo) {
            this.FullUtilVoucherApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FullUtilVoucherApprovalAsync(string docNo, object userState) {
            if ((this.FullUtilVoucherApprovalOperationCompleted == null)) {
                this.FullUtilVoucherApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFullUtilVoucherApprovalOperationCompleted);
            }
            this.InvokeAsync("FullUtilVoucherApproval", new object[] {
                        docNo}, this.FullUtilVoucherApprovalOperationCompleted, userState);
        }
        
        private void OnFullUtilVoucherApprovalOperationCompleted(object arg) {
            if ((this.FullUtilVoucherApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FullUtilVoucherApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FunctionalCancellApprovalRequest" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FunctionalCancellApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FunctionalCancellApprovalRequest(string docNo) {
            this.Invoke("FunctionalCancellApprovalRequest", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void FunctionalCancellApprovalRequestAsync(string docNo) {
            this.FunctionalCancellApprovalRequestAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FunctionalCancellApprovalRequestAsync(string docNo, object userState) {
            if ((this.FunctionalCancellApprovalRequestOperationCompleted == null)) {
                this.FunctionalCancellApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFunctionalCancellApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("FunctionalCancellApprovalRequest", new object[] {
                        docNo}, this.FunctionalCancellApprovalRequestOperationCompleted, userState);
        }
        
        private void OnFunctionalCancellApprovalRequestOperationCompleted(object arg) {
            if ((this.FunctionalCancellApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FunctionalCancellApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:FunctionalsendApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="FunctionalsendApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FunctionalsendApprovalRequest(string docNo) {
            this.Invoke("FunctionalsendApprovalRequest", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void FunctionalsendApprovalRequestAsync(string docNo) {
            this.FunctionalsendApprovalRequestAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FunctionalsendApprovalRequestAsync(string docNo, object userState) {
            if ((this.FunctionalsendApprovalRequestOperationCompleted == null)) {
                this.FunctionalsendApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFunctionalsendApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("FunctionalsendApprovalRequest", new object[] {
                        docNo}, this.FunctionalsendApprovalRequestOperationCompleted, userState);
        }
        
        private void OnFunctionalsendApprovalRequestOperationCompleted(object arg) {
            if ((this.FunctionalsendApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FunctionalsendApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GMOImportExportTransitRecordExis" +
            "ts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GMOImportExportTransitRecordExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool GMOImportExportTransitRecordExists(int entryNo) {
            object[] results = this.Invoke("GMOImportExportTransitRecordExists", new object[] {
                        entryNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GMOImportExportTransitRecordExistsAsync(int entryNo) {
            this.GMOImportExportTransitRecordExistsAsync(entryNo, null);
        }
        
        /// <remarks/>
        public void GMOImportExportTransitRecordExistsAsync(int entryNo, object userState) {
            if ((this.GMOImportExportTransitRecordExistsOperationCompleted == null)) {
                this.GMOImportExportTransitRecordExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGMOImportExportTransitRecordExistsOperationCompleted);
            }
            this.InvokeAsync("GMOImportExportTransitRecordExists", new object[] {
                        entryNo}, this.GMOImportExportTransitRecordExistsOperationCompleted, userState);
        }
        
        private void OnGMOImportExportTransitRecordExistsOperationCompleted(object arg) {
            if ((this.GMOImportExportTransitRecordExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GMOImportExportTransitRecordExistsCompleted(this, new GMOImportExportTransitRecordExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateAdminVoteBookReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateAdminVoteBookReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateAdminVoteBookReport([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string budget, string _class, string adminunit, int reportType) {
            object[] results = this.Invoke("GenerateAdminVoteBookReport", new object[] {
                        startDate,
                        endDate,
                        budget,
                        _class,
                        adminunit,
                        reportType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateAdminVoteBookReportAsync(System.DateTime startDate, System.DateTime endDate, string budget, string _class, string adminunit, int reportType) {
            this.GenerateAdminVoteBookReportAsync(startDate, endDate, budget, _class, adminunit, reportType, null);
        }
        
        /// <remarks/>
        public void GenerateAdminVoteBookReportAsync(System.DateTime startDate, System.DateTime endDate, string budget, string _class, string adminunit, int reportType, object userState) {
            if ((this.GenerateAdminVoteBookReportOperationCompleted == null)) {
                this.GenerateAdminVoteBookReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateAdminVoteBookReportOperationCompleted);
            }
            this.InvokeAsync("GenerateAdminVoteBookReport", new object[] {
                        startDate,
                        endDate,
                        budget,
                        _class,
                        adminunit,
                        reportType}, this.GenerateAdminVoteBookReportOperationCompleted, userState);
        }
        
        private void OnGenerateAdminVoteBookReportOperationCompleted(object arg) {
            if ((this.GenerateAdminVoteBookReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateAdminVoteBookReportCompleted(this, new GenerateAdminVoteBookReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateAieReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateAieReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateAieReport(string docNo, int reportType) {
            object[] results = this.Invoke("GenerateAieReport", new object[] {
                        docNo,
                        reportType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateAieReportAsync(string docNo, int reportType) {
            this.GenerateAieReportAsync(docNo, reportType, null);
        }
        
        /// <remarks/>
        public void GenerateAieReportAsync(string docNo, int reportType, object userState) {
            if ((this.GenerateAieReportOperationCompleted == null)) {
                this.GenerateAieReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateAieReportOperationCompleted);
            }
            this.InvokeAsync("GenerateAieReport", new object[] {
                        docNo,
                        reportType}, this.GenerateAieReportOperationCompleted, userState);
        }
        
        private void OnGenerateAieReportOperationCompleted(object arg) {
            if ((this.GenerateAieReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateAieReportCompleted(this, new GenerateAieReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateAndSendOTP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateAndSendOTP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateAndSendOTP(string userID, string documentNo, int tableId, int oTPType) {
            this.Invoke("GenerateAndSendOTP", new object[] {
                        userID,
                        documentNo,
                        tableId,
                        oTPType});
        }
        
        /// <remarks/>
        public void GenerateAndSendOTPAsync(string userID, string documentNo, int tableId, int oTPType) {
            this.GenerateAndSendOTPAsync(userID, documentNo, tableId, oTPType, null);
        }
        
        /// <remarks/>
        public void GenerateAndSendOTPAsync(string userID, string documentNo, int tableId, int oTPType, object userState) {
            if ((this.GenerateAndSendOTPOperationCompleted == null)) {
                this.GenerateAndSendOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateAndSendOTPOperationCompleted);
            }
            this.InvokeAsync("GenerateAndSendOTP", new object[] {
                        userID,
                        documentNo,
                        tableId,
                        oTPType}, this.GenerateAndSendOTPOperationCompleted, userState);
        }
        
        private void OnGenerateAndSendOTPOperationCompleted(object arg) {
            if ((this.GenerateAndSendOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateAndSendOTPCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateAnnualFunctionalPlan", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateAnnualFunctionalPlan_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateAnnualFunctionalPlan(string documentNo, int reportType) {
            object[] results = this.Invoke("GenerateAnnualFunctionalPlan", new object[] {
                        documentNo,
                        reportType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateAnnualFunctionalPlanAsync(string documentNo, int reportType) {
            this.GenerateAnnualFunctionalPlanAsync(documentNo, reportType, null);
        }
        
        /// <remarks/>
        public void GenerateAnnualFunctionalPlanAsync(string documentNo, int reportType, object userState) {
            if ((this.GenerateAnnualFunctionalPlanOperationCompleted == null)) {
                this.GenerateAnnualFunctionalPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateAnnualFunctionalPlanOperationCompleted);
            }
            this.InvokeAsync("GenerateAnnualFunctionalPlan", new object[] {
                        documentNo,
                        reportType}, this.GenerateAnnualFunctionalPlanOperationCompleted, userState);
        }
        
        private void OnGenerateAnnualFunctionalPlanOperationCompleted(object arg) {
            if ((this.GenerateAnnualFunctionalPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateAnnualFunctionalPlanCompleted(this, new GenerateAnnualFunctionalPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateAwardNotice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateAwardNotice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateAwardNotice(string docNo) {
            this.Invoke("GenerateAwardNotice", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void GenerateAwardNoticeAsync(string docNo) {
            this.GenerateAwardNoticeAsync(docNo, null);
        }
        
        /// <remarks/>
        public void GenerateAwardNoticeAsync(string docNo, object userState) {
            if ((this.GenerateAwardNoticeOperationCompleted == null)) {
                this.GenerateAwardNoticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateAwardNoticeOperationCompleted);
            }
            this.InvokeAsync("GenerateAwardNotice", new object[] {
                        docNo}, this.GenerateAwardNoticeOperationCompleted, userState);
        }
        
        private void OnGenerateAwardNoticeOperationCompleted(object arg) {
            if ((this.GenerateAwardNoticeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateAwardNoticeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateBankStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateBankStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateBankStatement(string bankAccountNo, string geograhicalCode, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            object[] results = this.Invoke("GenerateBankStatement", new object[] {
                        bankAccountNo,
                        geograhicalCode,
                        fromDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateBankStatementAsync(string bankAccountNo, string geograhicalCode, System.DateTime fromDate, System.DateTime endDate) {
            this.GenerateBankStatementAsync(bankAccountNo, geograhicalCode, fromDate, endDate, null);
        }
        
        /// <remarks/>
        public void GenerateBankStatementAsync(string bankAccountNo, string geograhicalCode, System.DateTime fromDate, System.DateTime endDate, object userState) {
            if ((this.GenerateBankStatementOperationCompleted == null)) {
                this.GenerateBankStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateBankStatementOperationCompleted);
            }
            this.InvokeAsync("GenerateBankStatement", new object[] {
                        bankAccountNo,
                        geograhicalCode,
                        fromDate,
                        endDate}, this.GenerateBankStatementOperationCompleted, userState);
        }
        
        private void OnGenerateBankStatementOperationCompleted(object arg) {
            if ((this.GenerateBankStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateBankStatementCompleted(this, new GenerateBankStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateCashbooklReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateCashbooklReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateCashbooklReport(string bankAccNum, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, string dimensionVal) {
            object[] results = this.Invoke("GenerateCashbooklReport", new object[] {
                        bankAccNum,
                        startDate,
                        enddate,
                        dimensionVal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateCashbooklReportAsync(string bankAccNum, System.DateTime startDate, System.DateTime enddate, string dimensionVal) {
            this.GenerateCashbooklReportAsync(bankAccNum, startDate, enddate, dimensionVal, null);
        }
        
        /// <remarks/>
        public void GenerateCashbooklReportAsync(string bankAccNum, System.DateTime startDate, System.DateTime enddate, string dimensionVal, object userState) {
            if ((this.GenerateCashbooklReportOperationCompleted == null)) {
                this.GenerateCashbooklReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateCashbooklReportOperationCompleted);
            }
            this.InvokeAsync("GenerateCashbooklReport", new object[] {
                        bankAccNum,
                        startDate,
                        enddate,
                        dimensionVal}, this.GenerateCashbooklReportOperationCompleted, userState);
        }
        
        private void OnGenerateCashbooklReportOperationCompleted(object arg) {
            if ((this.GenerateCashbooklReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateCashbooklReportCompleted(this, new GenerateCashbooklReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateClaimsReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateClaimsReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateClaimsReport(string docNo) {
            object[] results = this.Invoke("GenerateClaimsReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateClaimsReportAsync(string docNo) {
            this.GenerateClaimsReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void GenerateClaimsReportAsync(string docNo, object userState) {
            if ((this.GenerateClaimsReportOperationCompleted == null)) {
                this.GenerateClaimsReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateClaimsReportOperationCompleted);
            }
            this.InvokeAsync("GenerateClaimsReport", new object[] {
                        docNo}, this.GenerateClaimsReportOperationCompleted, userState);
        }
        
        private void OnGenerateClaimsReportOperationCompleted(object arg) {
            if ((this.GenerateClaimsReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateClaimsReportCompleted(this, new GenerateClaimsReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateEvalutionReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateEvalutionReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateEvalutionReport(string documentNo) {
            object[] results = this.Invoke("GenerateEvalutionReport", new object[] {
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateEvalutionReportAsync(string documentNo) {
            this.GenerateEvalutionReportAsync(documentNo, null);
        }
        
        /// <remarks/>
        public void GenerateEvalutionReportAsync(string documentNo, object userState) {
            if ((this.GenerateEvalutionReportOperationCompleted == null)) {
                this.GenerateEvalutionReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateEvalutionReportOperationCompleted);
            }
            this.InvokeAsync("GenerateEvalutionReport", new object[] {
                        documentNo}, this.GenerateEvalutionReportOperationCompleted, userState);
        }
        
        private void OnGenerateEvalutionReportOperationCompleted(object arg) {
            if ((this.GenerateEvalutionReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateEvalutionReportCompleted(this, new GenerateEvalutionReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateExpenseRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateExpenseRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateExpenseRequisition(string documentNo) {
            object[] results = this.Invoke("GenerateExpenseRequisition", new object[] {
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateExpenseRequisitionAsync(string documentNo) {
            this.GenerateExpenseRequisitionAsync(documentNo, null);
        }
        
        /// <remarks/>
        public void GenerateExpenseRequisitionAsync(string documentNo, object userState) {
            if ((this.GenerateExpenseRequisitionOperationCompleted == null)) {
                this.GenerateExpenseRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateExpenseRequisitionOperationCompleted);
            }
            this.InvokeAsync("GenerateExpenseRequisition", new object[] {
                        documentNo}, this.GenerateExpenseRequisitionOperationCompleted, userState);
        }
        
        private void OnGenerateExpenseRequisitionOperationCompleted(object arg) {
            if ((this.GenerateExpenseRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateExpenseRequisitionCompleted(this, new GenerateExpenseRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateFuelRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateFuelRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateFuelRequisition(string transportRequisitionNo) {
            object[] results = this.Invoke("GenerateFuelRequisition", new object[] {
                        transportRequisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateFuelRequisitionAsync(string transportRequisitionNo) {
            this.GenerateFuelRequisitionAsync(transportRequisitionNo, null);
        }
        
        /// <remarks/>
        public void GenerateFuelRequisitionAsync(string transportRequisitionNo, object userState) {
            if ((this.GenerateFuelRequisitionOperationCompleted == null)) {
                this.GenerateFuelRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateFuelRequisitionOperationCompleted);
            }
            this.InvokeAsync("GenerateFuelRequisition", new object[] {
                        transportRequisitionNo}, this.GenerateFuelRequisitionOperationCompleted, userState);
        }
        
        private void OnGenerateFuelRequisitionOperationCompleted(object arg) {
            if ((this.GenerateFuelRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateFuelRequisitionCompleted(this, new GenerateFuelRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateGMOFreeReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateGMOFreeReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateGMOFreeReport(string applicationNo) {
            object[] results = this.Invoke("GenerateGMOFreeReport", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateGMOFreeReportAsync(string applicationNo) {
            this.GenerateGMOFreeReportAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void GenerateGMOFreeReportAsync(string applicationNo, object userState) {
            if ((this.GenerateGMOFreeReportOperationCompleted == null)) {
                this.GenerateGMOFreeReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateGMOFreeReportOperationCompleted);
            }
            this.InvokeAsync("GenerateGMOFreeReport", new object[] {
                        applicationNo}, this.GenerateGMOFreeReportOperationCompleted, userState);
        }
        
        private void OnGenerateGMOFreeReportOperationCompleted(object arg) {
            if ((this.GenerateGMOFreeReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateGMOFreeReportCompleted(this, new GenerateGMOFreeReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateLPOReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateLPOReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateLPOReport(string documentNumber) {
            object[] results = this.Invoke("GenerateLPOReport", new object[] {
                        documentNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateLPOReportAsync(string documentNumber) {
            this.GenerateLPOReportAsync(documentNumber, null);
        }
        
        /// <remarks/>
        public void GenerateLPOReportAsync(string documentNumber, object userState) {
            if ((this.GenerateLPOReportOperationCompleted == null)) {
                this.GenerateLPOReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateLPOReportOperationCompleted);
            }
            this.InvokeAsync("GenerateLPOReport", new object[] {
                        documentNumber}, this.GenerateLPOReportOperationCompleted, userState);
        }
        
        private void OnGenerateLPOReportOperationCompleted(object arg) {
            if ((this.GenerateLPOReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateLPOReportCompleted(this, new GenerateLPOReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateLeaveStatementReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateLeaveStatementReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateLeaveStatementReport(string employeeNo, string filenameFromApp) {
            object[] results = this.Invoke("GenerateLeaveStatementReport", new object[] {
                        employeeNo,
                        filenameFromApp});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateLeaveStatementReportAsync(string employeeNo, string filenameFromApp) {
            this.GenerateLeaveStatementReportAsync(employeeNo, filenameFromApp, null);
        }
        
        /// <remarks/>
        public void GenerateLeaveStatementReportAsync(string employeeNo, string filenameFromApp, object userState) {
            if ((this.GenerateLeaveStatementReportOperationCompleted == null)) {
                this.GenerateLeaveStatementReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateLeaveStatementReportOperationCompleted);
            }
            this.InvokeAsync("GenerateLeaveStatementReport", new object[] {
                        employeeNo,
                        filenameFromApp}, this.GenerateLeaveStatementReportOperationCompleted, userState);
        }
        
        private void OnGenerateLeaveStatementReportOperationCompleted(object arg) {
            if ((this.GenerateLeaveStatementReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateLeaveStatementReportCompleted(this, new GenerateLeaveStatementReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateMaintenanceRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateMaintenanceRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateMaintenanceRequisition(string transportRequisitionNo) {
            object[] results = this.Invoke("GenerateMaintenanceRequisition", new object[] {
                        transportRequisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateMaintenanceRequisitionAsync(string transportRequisitionNo) {
            this.GenerateMaintenanceRequisitionAsync(transportRequisitionNo, null);
        }
        
        /// <remarks/>
        public void GenerateMaintenanceRequisitionAsync(string transportRequisitionNo, object userState) {
            if ((this.GenerateMaintenanceRequisitionOperationCompleted == null)) {
                this.GenerateMaintenanceRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateMaintenanceRequisitionOperationCompleted);
            }
            this.InvokeAsync("GenerateMaintenanceRequisition", new object[] {
                        transportRequisitionNo}, this.GenerateMaintenanceRequisitionOperationCompleted, userState);
        }
        
        private void OnGenerateMaintenanceRequisitionOperationCompleted(object arg) {
            if ((this.GenerateMaintenanceRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateMaintenanceRequisitionCompleted(this, new GenerateMaintenanceRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateOutwardReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateOutwardReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateOutwardReport(System.DateTime startDate, System.DateTime endDate, int reportType, bool paid, bool failed, bool senttoBank, string geo) {
            object[] results = this.Invoke("GenerateOutwardReport", new object[] {
                        startDate,
                        endDate,
                        reportType,
                        paid,
                        failed,
                        senttoBank,
                        geo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateOutwardReportAsync(System.DateTime startDate, System.DateTime endDate, int reportType, bool paid, bool failed, bool senttoBank, string geo) {
            this.GenerateOutwardReportAsync(startDate, endDate, reportType, paid, failed, senttoBank, geo, null);
        }
        
        /// <remarks/>
        public void GenerateOutwardReportAsync(System.DateTime startDate, System.DateTime endDate, int reportType, bool paid, bool failed, bool senttoBank, string geo, object userState) {
            if ((this.GenerateOutwardReportOperationCompleted == null)) {
                this.GenerateOutwardReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateOutwardReportOperationCompleted);
            }
            this.InvokeAsync("GenerateOutwardReport", new object[] {
                        startDate,
                        endDate,
                        reportType,
                        paid,
                        failed,
                        senttoBank,
                        geo}, this.GenerateOutwardReportOperationCompleted, userState);
        }
        
        private void OnGenerateOutwardReportOperationCompleted(object arg) {
            if ((this.GenerateOutwardReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateOutwardReportCompleted(this, new GenerateOutwardReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GeneratePASEmpReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GeneratePASEmpReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePASEmpReport(string adminUnit, int docStage, bool filterByAdmin, bool filterByDoc) {
            object[] results = this.Invoke("GeneratePASEmpReport", new object[] {
                        adminUnit,
                        docStage,
                        filterByAdmin,
                        filterByDoc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePASEmpReportAsync(string adminUnit, int docStage, bool filterByAdmin, bool filterByDoc) {
            this.GeneratePASEmpReportAsync(adminUnit, docStage, filterByAdmin, filterByDoc, null);
        }
        
        /// <remarks/>
        public void GeneratePASEmpReportAsync(string adminUnit, int docStage, bool filterByAdmin, bool filterByDoc, object userState) {
            if ((this.GeneratePASEmpReportOperationCompleted == null)) {
                this.GeneratePASEmpReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePASEmpReportOperationCompleted);
            }
            this.InvokeAsync("GeneratePASEmpReport", new object[] {
                        adminUnit,
                        docStage,
                        filterByAdmin,
                        filterByDoc}, this.GeneratePASEmpReportOperationCompleted, userState);
        }
        
        private void OnGeneratePASEmpReportOperationCompleted(object arg) {
            if ((this.GeneratePASEmpReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePASEmpReportCompleted(this, new GeneratePASEmpReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GeneratePASReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GeneratePASReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePASReport(string documentNo) {
            object[] results = this.Invoke("GeneratePASReport", new object[] {
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePASReportAsync(string documentNo) {
            this.GeneratePASReportAsync(documentNo, null);
        }
        
        /// <remarks/>
        public void GeneratePASReportAsync(string documentNo, object userState) {
            if ((this.GeneratePASReportOperationCompleted == null)) {
                this.GeneratePASReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePASReportOperationCompleted);
            }
            this.InvokeAsync("GeneratePASReport", new object[] {
                        documentNo}, this.GeneratePASReportOperationCompleted, userState);
        }
        
        private void OnGeneratePASReportOperationCompleted(object arg) {
            if ((this.GeneratePASReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePASReportCompleted(this, new GeneratePASReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GeneratePMMUReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GeneratePMMUReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePMMUReport(string documentNo) {
            object[] results = this.Invoke("GeneratePMMUReport", new object[] {
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePMMUReportAsync(string documentNo) {
            this.GeneratePMMUReportAsync(documentNo, null);
        }
        
        /// <remarks/>
        public void GeneratePMMUReportAsync(string documentNo, object userState) {
            if ((this.GeneratePMMUReportOperationCompleted == null)) {
                this.GeneratePMMUReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePMMUReportOperationCompleted);
            }
            this.InvokeAsync("GeneratePMMUReport", new object[] {
                        documentNo}, this.GeneratePMMUReportOperationCompleted, userState);
        }
        
        private void OnGeneratePMMUReportOperationCompleted(object arg) {
            if ((this.GeneratePMMUReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePMMUReportCompleted(this, new GeneratePMMUReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GeneratePNineReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GeneratePNineReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePNineReport(string employeeNo, int period) {
            object[] results = this.Invoke("GeneratePNineReport", new object[] {
                        employeeNo,
                        period});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePNineReportAsync(string employeeNo, int period) {
            this.GeneratePNineReportAsync(employeeNo, period, null);
        }
        
        /// <remarks/>
        public void GeneratePNineReportAsync(string employeeNo, int period, object userState) {
            if ((this.GeneratePNineReportOperationCompleted == null)) {
                this.GeneratePNineReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePNineReportOperationCompleted);
            }
            this.InvokeAsync("GeneratePNineReport", new object[] {
                        employeeNo,
                        period}, this.GeneratePNineReportOperationCompleted, userState);
        }
        
        private void OnGeneratePNineReportOperationCompleted(object arg) {
            if ((this.GeneratePNineReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePNineReportCompleted(this, new GeneratePNineReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GeneratePaySlipReport2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GeneratePaySlipReport2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePaySlipReport2(string employeeNo, int pMonth, int pYear) {
            object[] results = this.Invoke("GeneratePaySlipReport2", new object[] {
                        employeeNo,
                        pMonth,
                        pYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePaySlipReport2Async(string employeeNo, int pMonth, int pYear) {
            this.GeneratePaySlipReport2Async(employeeNo, pMonth, pYear, null);
        }
        
        /// <remarks/>
        public void GeneratePaySlipReport2Async(string employeeNo, int pMonth, int pYear, object userState) {
            if ((this.GeneratePaySlipReport2OperationCompleted == null)) {
                this.GeneratePaySlipReport2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePaySlipReport2OperationCompleted);
            }
            this.InvokeAsync("GeneratePaySlipReport2", new object[] {
                        employeeNo,
                        pMonth,
                        pYear}, this.GeneratePaySlipReport2OperationCompleted, userState);
        }
        
        private void OnGeneratePaySlipReport2OperationCompleted(object arg) {
            if ((this.GeneratePaySlipReport2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePaySlipReport2Completed(this, new GeneratePaySlipReport2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GeneratePaySlipReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GeneratePaySlipReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePaySlipReport(string employeeNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime period, string filenameFromApp) {
            object[] results = this.Invoke("GeneratePaySlipReport", new object[] {
                        employeeNo,
                        period,
                        filenameFromApp});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePaySlipReportAsync(string employeeNo, System.DateTime period, string filenameFromApp) {
            this.GeneratePaySlipReportAsync(employeeNo, period, filenameFromApp, null);
        }
        
        /// <remarks/>
        public void GeneratePaySlipReportAsync(string employeeNo, System.DateTime period, string filenameFromApp, object userState) {
            if ((this.GeneratePaySlipReportOperationCompleted == null)) {
                this.GeneratePaySlipReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePaySlipReportOperationCompleted);
            }
            this.InvokeAsync("GeneratePaySlipReport", new object[] {
                        employeeNo,
                        period,
                        filenameFromApp}, this.GeneratePaySlipReportOperationCompleted, userState);
        }
        
        private void OnGeneratePaySlipReportOperationCompleted(object arg) {
            if ((this.GeneratePaySlipReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePaySlipReportCompleted(this, new GeneratePaySlipReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GeneratePortalEmailOTPCode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GeneratePortalEmailOTPCode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GeneratePortalEmailOTPCode(string empNo) {
            this.Invoke("GeneratePortalEmailOTPCode", new object[] {
                        empNo});
        }
        
        /// <remarks/>
        public void GeneratePortalEmailOTPCodeAsync(string empNo) {
            this.GeneratePortalEmailOTPCodeAsync(empNo, null);
        }
        
        /// <remarks/>
        public void GeneratePortalEmailOTPCodeAsync(string empNo, object userState) {
            if ((this.GeneratePortalEmailOTPCodeOperationCompleted == null)) {
                this.GeneratePortalEmailOTPCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePortalEmailOTPCodeOperationCompleted);
            }
            this.InvokeAsync("GeneratePortalEmailOTPCode", new object[] {
                        empNo}, this.GeneratePortalEmailOTPCodeOperationCompleted, userState);
        }
        
        private void OnGeneratePortalEmailOTPCodeOperationCompleted(object arg) {
            if ((this.GeneratePortalEmailOTPCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePortalEmailOTPCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GeneratePortalOTPCode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GeneratePortalOTPCode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GeneratePortalOTPCode(string empNo) {
            this.Invoke("GeneratePortalOTPCode", new object[] {
                        empNo});
        }
        
        /// <remarks/>
        public void GeneratePortalOTPCodeAsync(string empNo) {
            this.GeneratePortalOTPCodeAsync(empNo, null);
        }
        
        /// <remarks/>
        public void GeneratePortalOTPCodeAsync(string empNo, object userState) {
            if ((this.GeneratePortalOTPCodeOperationCompleted == null)) {
                this.GeneratePortalOTPCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePortalOTPCodeOperationCompleted);
            }
            this.InvokeAsync("GeneratePortalOTPCode", new object[] {
                        empNo}, this.GeneratePortalOTPCodeOperationCompleted, userState);
        }
        
        private void OnGeneratePortalOTPCodeOperationCompleted(object arg) {
            if ((this.GeneratePortalOTPCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePortalOTPCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateRMReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateRMReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateRMReport() {
            object[] results = this.Invoke("GenerateRMReport", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateRMReportAsync() {
            this.GenerateRMReportAsync(null);
        }
        
        /// <remarks/>
        public void GenerateRMReportAsync(object userState) {
            if ((this.GenerateRMReportOperationCompleted == null)) {
                this.GenerateRMReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateRMReportOperationCompleted);
            }
            this.InvokeAsync("GenerateRMReport", new object[0], this.GenerateRMReportOperationCompleted, userState);
        }
        
        private void OnGenerateRMReportOperationCompleted(object arg) {
            if ((this.GenerateRMReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateRMReportCompleted(this, new GenerateRMReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateRandomOTPCode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateRandomOTPCode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateRandomOTPCode(int codeLength) {
            object[] results = this.Invoke("GenerateRandomOTPCode", new object[] {
                        codeLength});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateRandomOTPCodeAsync(int codeLength) {
            this.GenerateRandomOTPCodeAsync(codeLength, null);
        }
        
        /// <remarks/>
        public void GenerateRandomOTPCodeAsync(int codeLength, object userState) {
            if ((this.GenerateRandomOTPCodeOperationCompleted == null)) {
                this.GenerateRandomOTPCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateRandomOTPCodeOperationCompleted);
            }
            this.InvokeAsync("GenerateRandomOTPCode", new object[] {
                        codeLength}, this.GenerateRandomOTPCodeOperationCompleted, userState);
        }
        
        private void OnGenerateRandomOTPCodeOperationCompleted(object arg) {
            if ((this.GenerateRandomOTPCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateRandomOTPCodeCompleted(this, new GenerateRandomOTPCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateReceiptReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateReceiptReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateReceiptReport(string docNo) {
            object[] results = this.Invoke("GenerateReceiptReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateReceiptReportAsync(string docNo) {
            this.GenerateReceiptReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void GenerateReceiptReportAsync(string docNo, object userState) {
            if ((this.GenerateReceiptReportOperationCompleted == null)) {
                this.GenerateReceiptReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateReceiptReportOperationCompleted);
            }
            this.InvokeAsync("GenerateReceiptReport", new object[] {
                        docNo}, this.GenerateReceiptReportOperationCompleted, userState);
        }
        
        private void OnGenerateReceiptReportOperationCompleted(object arg) {
            if ((this.GenerateReceiptReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateReceiptReportCompleted(this, new GenerateReceiptReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateReceipt", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateReceipt_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateReceipt(string docNo) {
            object[] results = this.Invoke("GenerateReceipt", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateReceiptAsync(string docNo) {
            this.GenerateReceiptAsync(docNo, null);
        }
        
        /// <remarks/>
        public void GenerateReceiptAsync(string docNo, object userState) {
            if ((this.GenerateReceiptOperationCompleted == null)) {
                this.GenerateReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateReceiptOperationCompleted);
            }
            this.InvokeAsync("GenerateReceipt", new object[] {
                        docNo}, this.GenerateReceiptOperationCompleted, userState);
        }
        
        private void OnGenerateReceiptOperationCompleted(object arg) {
            if ((this.GenerateReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateReceiptCompleted(this, new GenerateReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateReceiptlReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateReceiptlReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateReceiptlReport(string docNum, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, string dimensionVal) {
            object[] results = this.Invoke("GenerateReceiptlReport", new object[] {
                        docNum,
                        startDate,
                        enddate,
                        dimensionVal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateReceiptlReportAsync(string docNum, System.DateTime startDate, System.DateTime enddate, string dimensionVal) {
            this.GenerateReceiptlReportAsync(docNum, startDate, enddate, dimensionVal, null);
        }
        
        /// <remarks/>
        public void GenerateReceiptlReportAsync(string docNum, System.DateTime startDate, System.DateTime enddate, string dimensionVal, object userState) {
            if ((this.GenerateReceiptlReportOperationCompleted == null)) {
                this.GenerateReceiptlReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateReceiptlReportOperationCompleted);
            }
            this.InvokeAsync("GenerateReceiptlReport", new object[] {
                        docNum,
                        startDate,
                        enddate,
                        dimensionVal}, this.GenerateReceiptlReportOperationCompleted, userState);
        }
        
        private void OnGenerateReceiptlReportOperationCompleted(object arg) {
            if ((this.GenerateReceiptlReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateReceiptlReportCompleted(this, new GenerateReceiptlReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateReopenreport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateReopenreport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateReopenreport() {
            object[] results = this.Invoke("GenerateReopenreport", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateReopenreportAsync() {
            this.GenerateReopenreportAsync(null);
        }
        
        /// <remarks/>
        public void GenerateReopenreportAsync(object userState) {
            if ((this.GenerateReopenreportOperationCompleted == null)) {
                this.GenerateReopenreportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateReopenreportOperationCompleted);
            }
            this.InvokeAsync("GenerateReopenreport", new object[0], this.GenerateReopenreportOperationCompleted, userState);
        }
        
        private void OnGenerateReopenreportOperationCompleted(object arg) {
            if ((this.GenerateReopenreportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateReopenreportCompleted(this, new GenerateReopenreportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateVoteBookReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateVoteBookReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateVoteBookReport([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string budget, string _class, string adminunit, int reportType) {
            object[] results = this.Invoke("GenerateVoteBookReport", new object[] {
                        startDate,
                        endDate,
                        budget,
                        _class,
                        adminunit,
                        reportType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateVoteBookReportAsync(System.DateTime startDate, System.DateTime endDate, string budget, string _class, string adminunit, int reportType) {
            this.GenerateVoteBookReportAsync(startDate, endDate, budget, _class, adminunit, reportType, null);
        }
        
        /// <remarks/>
        public void GenerateVoteBookReportAsync(System.DateTime startDate, System.DateTime endDate, string budget, string _class, string adminunit, int reportType, object userState) {
            if ((this.GenerateVoteBookReportOperationCompleted == null)) {
                this.GenerateVoteBookReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateVoteBookReportOperationCompleted);
            }
            this.InvokeAsync("GenerateVoteBookReport", new object[] {
                        startDate,
                        endDate,
                        budget,
                        _class,
                        adminunit,
                        reportType}, this.GenerateVoteBookReportOperationCompleted, userState);
        }
        
        private void OnGenerateVoteBookReportOperationCompleted(object arg) {
            if ((this.GenerateVoteBookReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateVoteBookReportCompleted(this, new GenerateVoteBookReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateVoucherReport2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateVoucherReport2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateVoucherReport2(string docNum) {
            object[] results = this.Invoke("GenerateVoucherReport2", new object[] {
                        docNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateVoucherReport2Async(string docNum) {
            this.GenerateVoucherReport2Async(docNum, null);
        }
        
        /// <remarks/>
        public void GenerateVoucherReport2Async(string docNum, object userState) {
            if ((this.GenerateVoucherReport2OperationCompleted == null)) {
                this.GenerateVoucherReport2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateVoucherReport2OperationCompleted);
            }
            this.InvokeAsync("GenerateVoucherReport2", new object[] {
                        docNum}, this.GenerateVoucherReport2OperationCompleted, userState);
        }
        
        private void OnGenerateVoucherReport2OperationCompleted(object arg) {
            if ((this.GenerateVoucherReport2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateVoucherReport2Completed(this, new GenerateVoucherReport2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateVoucherReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateVoucherReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateVoucherReport(string docNo) {
            object[] results = this.Invoke("GenerateVoucherReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateVoucherReportAsync(string docNo) {
            this.GenerateVoucherReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void GenerateVoucherReportAsync(string docNo, object userState) {
            if ((this.GenerateVoucherReportOperationCompleted == null)) {
                this.GenerateVoucherReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateVoucherReportOperationCompleted);
            }
            this.InvokeAsync("GenerateVoucherReport", new object[] {
                        docNo}, this.GenerateVoucherReportOperationCompleted, userState);
        }
        
        private void OnGenerateVoucherReportOperationCompleted(object arg) {
            if ((this.GenerateVoucherReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateVoucherReportCompleted(this, new GenerateVoucherReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateWarrantReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateWarrantReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateWarrantReport(string documentNumber) {
            object[] results = this.Invoke("GenerateWarrantReport", new object[] {
                        documentNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateWarrantReportAsync(string documentNumber) {
            this.GenerateWarrantReportAsync(documentNumber, null);
        }
        
        /// <remarks/>
        public void GenerateWarrantReportAsync(string documentNumber, object userState) {
            if ((this.GenerateWarrantReportOperationCompleted == null)) {
                this.GenerateWarrantReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateWarrantReportOperationCompleted);
            }
            this.InvokeAsync("GenerateWarrantReport", new object[] {
                        documentNumber}, this.GenerateWarrantReportOperationCompleted, userState);
        }
        
        private void OnGenerateWarrantReportOperationCompleted(object arg) {
            if ((this.GenerateWarrantReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateWarrantReportCompleted(this, new GenerateWarrantReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GenerateWorkplanBudgetStrategy", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GenerateWorkplanBudgetStrategy_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateWorkplanBudgetStrategy(string documentNo, int reportType) {
            object[] results = this.Invoke("GenerateWorkplanBudgetStrategy", new object[] {
                        documentNo,
                        reportType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateWorkplanBudgetStrategyAsync(string documentNo, int reportType) {
            this.GenerateWorkplanBudgetStrategyAsync(documentNo, reportType, null);
        }
        
        /// <remarks/>
        public void GenerateWorkplanBudgetStrategyAsync(string documentNo, int reportType, object userState) {
            if ((this.GenerateWorkplanBudgetStrategyOperationCompleted == null)) {
                this.GenerateWorkplanBudgetStrategyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateWorkplanBudgetStrategyOperationCompleted);
            }
            this.InvokeAsync("GenerateWorkplanBudgetStrategy", new object[] {
                        documentNo,
                        reportType}, this.GenerateWorkplanBudgetStrategyOperationCompleted, userState);
        }
        
        private void OnGenerateWorkplanBudgetStrategyOperationCompleted(object arg) {
            if ((this.GenerateWorkplanBudgetStrategyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateWorkplanBudgetStrategyCompleted(this, new GenerateWorkplanBudgetStrategyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:Generateictreport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="Generateictreport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Generateictreport([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime requestdate) {
            object[] results = this.Invoke("Generateictreport", new object[] {
                        requestdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateictreportAsync(System.DateTime requestdate) {
            this.GenerateictreportAsync(requestdate, null);
        }
        
        /// <remarks/>
        public void GenerateictreportAsync(System.DateTime requestdate, object userState) {
            if ((this.GenerateictreportOperationCompleted == null)) {
                this.GenerateictreportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateictreportOperationCompleted);
            }
            this.InvokeAsync("Generateictreport", new object[] {
                        requestdate}, this.GenerateictreportOperationCompleted, userState);
        }
        
        private void OnGenerateictreportOperationCompleted(object arg) {
            if ((this.GenerateictreportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateictreportCompleted(this, new GenerateictreportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetAllItems", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetAllItems_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAllItems(string itemcategory, string location) {
            object[] results = this.Invoke("GetAllItems", new object[] {
                        itemcategory,
                        location});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllItemsAsync(string itemcategory, string location) {
            this.GetAllItemsAsync(itemcategory, location, null);
        }
        
        /// <remarks/>
        public void GetAllItemsAsync(string itemcategory, string location, object userState) {
            if ((this.GetAllItemsOperationCompleted == null)) {
                this.GetAllItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllItemsOperationCompleted);
            }
            this.InvokeAsync("GetAllItems", new object[] {
                        itemcategory,
                        location}, this.GetAllItemsOperationCompleted, userState);
        }
        
        private void OnGetAllItemsOperationCompleted(object arg) {
            if ((this.GetAllItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllItemsCompleted(this, new GetAllItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetDSARates", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetDSARates_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal GetDSARates(string empNo, string destination) {
            object[] results = this.Invoke("GetDSARates", new object[] {
                        empNo,
                        destination});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetDSARatesAsync(string empNo, string destination) {
            this.GetDSARatesAsync(empNo, destination, null);
        }
        
        /// <remarks/>
        public void GetDSARatesAsync(string empNo, string destination, object userState) {
            if ((this.GetDSARatesOperationCompleted == null)) {
                this.GetDSARatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDSARatesOperationCompleted);
            }
            this.InvokeAsync("GetDSARates", new object[] {
                        empNo,
                        destination}, this.GetDSARatesOperationCompleted, userState);
        }
        
        private void OnGetDSARatesOperationCompleted(object arg) {
            if ((this.GetDSARatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDSARatesCompleted(this, new GetDSARatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetDocumentAttachment_1705862952" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetDocumentAttachment_1705862952_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetDocumentAttachment_1705862952(int tableId, int docType, string no) {
            object[] results = this.Invoke("GetDocumentAttachment_1705862952", new object[] {
                        tableId,
                        docType,
                        no});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentAttachment_1705862952Async(int tableId, int docType, string no) {
            this.GetDocumentAttachment_1705862952Async(tableId, docType, no, null);
        }
        
        /// <remarks/>
        public void GetDocumentAttachment_1705862952Async(int tableId, int docType, string no, object userState) {
            if ((this.GetDocumentAttachment_1705862952OperationCompleted == null)) {
                this.GetDocumentAttachment_1705862952OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentAttachment_1705862952OperationCompleted);
            }
            this.InvokeAsync("GetDocumentAttachment_1705862952", new object[] {
                        tableId,
                        docType,
                        no}, this.GetDocumentAttachment_1705862952OperationCompleted, userState);
        }
        
        private void OnGetDocumentAttachment_1705862952OperationCompleted(object arg) {
            if ((this.GetDocumentAttachment_1705862952Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentAttachment_1705862952Completed(this, new GetDocumentAttachment_1705862952CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetDocumentAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetDocumentAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetDocumentAttachment(int tableId, string no, int recID) {
            object[] results = this.Invoke("GetDocumentAttachment", new object[] {
                        tableId,
                        no,
                        recID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentAttachmentAsync(int tableId, string no, int recID) {
            this.GetDocumentAttachmentAsync(tableId, no, recID, null);
        }
        
        /// <remarks/>
        public void GetDocumentAttachmentAsync(int tableId, string no, int recID, object userState) {
            if ((this.GetDocumentAttachmentOperationCompleted == null)) {
                this.GetDocumentAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentAttachmentOperationCompleted);
            }
            this.InvokeAsync("GetDocumentAttachment", new object[] {
                        tableId,
                        no,
                        recID}, this.GetDocumentAttachmentOperationCompleted, userState);
        }
        
        private void OnGetDocumentAttachmentOperationCompleted(object arg) {
            if ((this.GetDocumentAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentAttachmentCompleted(this, new GetDocumentAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetEndReturnDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetEndReturnDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime[] GetEndReturnDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime sDate, decimal lDays, string leave_Type) {
            object[] results = this.Invoke("GetEndReturnDate", new object[] {
                        sDate,
                        lDays,
                        leave_Type});
            return ((System.DateTime[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEndReturnDateAsync(System.DateTime sDate, decimal lDays, string leave_Type) {
            this.GetEndReturnDateAsync(sDate, lDays, leave_Type, null);
        }
        
        /// <remarks/>
        public void GetEndReturnDateAsync(System.DateTime sDate, decimal lDays, string leave_Type, object userState) {
            if ((this.GetEndReturnDateOperationCompleted == null)) {
                this.GetEndReturnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEndReturnDateOperationCompleted);
            }
            this.InvokeAsync("GetEndReturnDate", new object[] {
                        sDate,
                        lDays,
                        leave_Type}, this.GetEndReturnDateOperationCompleted, userState);
        }
        
        private void OnGetEndReturnDateOperationCompleted(object arg) {
            if ((this.GetEndReturnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEndReturnDateCompleted(this, new GetEndReturnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetFinancialYear", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetFinancialYear_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetFinancialYear() {
            object[] results = this.Invoke("GetFinancialYear", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFinancialYearAsync() {
            this.GetFinancialYearAsync(null);
        }
        
        /// <remarks/>
        public void GetFinancialYearAsync(object userState) {
            if ((this.GetFinancialYearOperationCompleted == null)) {
                this.GetFinancialYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFinancialYearOperationCompleted);
            }
            this.InvokeAsync("GetFinancialYear", new object[0], this.GetFinancialYearOperationCompleted, userState);
        }
        
        private void OnGetFinancialYearOperationCompleted(object arg) {
            if ((this.GetFinancialYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFinancialYearCompleted(this, new GetFinancialYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetImprestDimensions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetImprestDimensions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetImprestDimensions(string docNumber) {
            this.Invoke("GetImprestDimensions", new object[] {
                        docNumber});
        }
        
        /// <remarks/>
        public void GetImprestDimensionsAsync(string docNumber) {
            this.GetImprestDimensionsAsync(docNumber, null);
        }
        
        /// <remarks/>
        public void GetImprestDimensionsAsync(string docNumber, object userState) {
            if ((this.GetImprestDimensionsOperationCompleted == null)) {
                this.GetImprestDimensionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImprestDimensionsOperationCompleted);
            }
            this.InvokeAsync("GetImprestDimensions", new object[] {
                        docNumber}, this.GetImprestDimensionsOperationCompleted, userState);
        }
        
        private void OnGetImprestDimensionsOperationCompleted(object arg) {
            if ((this.GetImprestDimensionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImprestDimensionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetLeaveBalances", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetLeaveBalances_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal[] GetLeaveBalances(string staffNoFilter, string leavevTypeFilter) {
            object[] results = this.Invoke("GetLeaveBalances", new object[] {
                        staffNoFilter,
                        leavevTypeFilter});
            return ((decimal[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLeaveBalancesAsync(string staffNoFilter, string leavevTypeFilter) {
            this.GetLeaveBalancesAsync(staffNoFilter, leavevTypeFilter, null);
        }
        
        /// <remarks/>
        public void GetLeaveBalancesAsync(string staffNoFilter, string leavevTypeFilter, object userState) {
            if ((this.GetLeaveBalancesOperationCompleted == null)) {
                this.GetLeaveBalancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLeaveBalancesOperationCompleted);
            }
            this.InvokeAsync("GetLeaveBalances", new object[] {
                        staffNoFilter,
                        leavevTypeFilter}, this.GetLeaveBalancesOperationCompleted, userState);
        }
        
        private void OnGetLeaveBalancesOperationCompleted(object arg) {
            if ((this.GetLeaveBalancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLeaveBalancesCompleted(this, new GetLeaveBalancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetLoansEntitlementPerGrade", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetLoansEntitlementPerGrade_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal GetLoansEntitlementPerGrade(int loanCategory, string empNo) {
            object[] results = this.Invoke("GetLoansEntitlementPerGrade", new object[] {
                        loanCategory,
                        empNo});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoansEntitlementPerGradeAsync(int loanCategory, string empNo) {
            this.GetLoansEntitlementPerGradeAsync(loanCategory, empNo, null);
        }
        
        /// <remarks/>
        public void GetLoansEntitlementPerGradeAsync(int loanCategory, string empNo, object userState) {
            if ((this.GetLoansEntitlementPerGradeOperationCompleted == null)) {
                this.GetLoansEntitlementPerGradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoansEntitlementPerGradeOperationCompleted);
            }
            this.InvokeAsync("GetLoansEntitlementPerGrade", new object[] {
                        loanCategory,
                        empNo}, this.GetLoansEntitlementPerGradeOperationCompleted, userState);
        }
        
        private void OnGetLoansEntitlementPerGradeOperationCompleted(object arg) {
            if ((this.GetLoansEntitlementPerGradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoansEntitlementPerGradeCompleted(this, new GetLoansEntitlementPerGradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetNextApprover", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetNextApprover_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetNextApprover(string docNo, int tableID) {
            object[] results = this.Invoke("GetNextApprover", new object[] {
                        docNo,
                        tableID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextApproverAsync(string docNo, int tableID) {
            this.GetNextApproverAsync(docNo, tableID, null);
        }
        
        /// <remarks/>
        public void GetNextApproverAsync(string docNo, int tableID, object userState) {
            if ((this.GetNextApproverOperationCompleted == null)) {
                this.GetNextApproverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextApproverOperationCompleted);
            }
            this.InvokeAsync("GetNextApprover", new object[] {
                        docNo,
                        tableID}, this.GetNextApproverOperationCompleted, userState);
        }
        
        private void OnGetNextApproverOperationCompleted(object arg) {
            if ((this.GetNextApproverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextApproverCompleted(this, new GetNextApproverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetPaymentsDocDimensions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetPaymentsDocDimensions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetPaymentsDocDimensions(string docuN) {
            this.Invoke("GetPaymentsDocDimensions", new object[] {
                        docuN});
        }
        
        /// <remarks/>
        public void GetPaymentsDocDimensionsAsync(string docuN) {
            this.GetPaymentsDocDimensionsAsync(docuN, null);
        }
        
        /// <remarks/>
        public void GetPaymentsDocDimensionsAsync(string docuN, object userState) {
            if ((this.GetPaymentsDocDimensionsOperationCompleted == null)) {
                this.GetPaymentsDocDimensionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentsDocDimensionsOperationCompleted);
            }
            this.InvokeAsync("GetPaymentsDocDimensions", new object[] {
                        docuN}, this.GetPaymentsDocDimensionsOperationCompleted, userState);
        }
        
        private void OnGetPaymentsDocDimensionsOperationCompleted(object arg) {
            if ((this.GetPaymentsDocDimensionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentsDocDimensionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetPreviousPay", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetPreviousPay_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal[] GetPreviousPay(string empNo) {
            object[] results = this.Invoke("GetPreviousPay", new object[] {
                        empNo});
            return ((decimal[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPreviousPayAsync(string empNo) {
            this.GetPreviousPayAsync(empNo, null);
        }
        
        /// <remarks/>
        public void GetPreviousPayAsync(string empNo, object userState) {
            if ((this.GetPreviousPayOperationCompleted == null)) {
                this.GetPreviousPayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPreviousPayOperationCompleted);
            }
            this.InvokeAsync("GetPreviousPay", new object[] {
                        empNo}, this.GetPreviousPayOperationCompleted, userState);
        }
        
        private void OnGetPreviousPayOperationCompleted(object arg) {
            if ((this.GetPreviousPayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPreviousPayCompleted(this, new GetPreviousPayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetProfilePicture", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetProfilePicture_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetProfilePicture(string staffNo) {
            object[] results = this.Invoke("GetProfilePicture", new object[] {
                        staffNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProfilePictureAsync(string staffNo) {
            this.GetProfilePictureAsync(staffNo, null);
        }
        
        /// <remarks/>
        public void GetProfilePictureAsync(string staffNo, object userState) {
            if ((this.GetProfilePictureOperationCompleted == null)) {
                this.GetProfilePictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfilePictureOperationCompleted);
            }
            this.InvokeAsync("GetProfilePicture", new object[] {
                        staffNo}, this.GetProfilePictureOperationCompleted, userState);
        }
        
        private void OnGetProfilePictureOperationCompleted(object arg) {
            if ((this.GetProfilePictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfilePictureCompleted(this, new GetProfilePictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetReciptssDocDimensions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetReciptssDocDimensions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetReciptssDocDimensions(string docuN) {
            this.Invoke("GetReciptssDocDimensions", new object[] {
                        docuN});
        }
        
        /// <remarks/>
        public void GetReciptssDocDimensionsAsync(string docuN) {
            this.GetReciptssDocDimensionsAsync(docuN, null);
        }
        
        /// <remarks/>
        public void GetReciptssDocDimensionsAsync(string docuN, object userState) {
            if ((this.GetReciptssDocDimensionsOperationCompleted == null)) {
                this.GetReciptssDocDimensionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReciptssDocDimensionsOperationCompleted);
            }
            this.InvokeAsync("GetReciptssDocDimensions", new object[] {
                        docuN}, this.GetReciptssDocDimensionsOperationCompleted, userState);
        }
        
        private void OnGetReciptssDocDimensionsOperationCompleted(object arg) {
            if ((this.GetReciptssDocDimensionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReciptssDocDimensionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetSubmittedDutyTrainingNeeds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetSubmittedDutyTrainingNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetSubmittedDutyTrainingNeeds(string docNo, string financialYear) {
            this.Invoke("GetSubmittedDutyTrainingNeeds", new object[] {
                        docNo,
                        financialYear});
        }
        
        /// <remarks/>
        public void GetSubmittedDutyTrainingNeedsAsync(string docNo, string financialYear) {
            this.GetSubmittedDutyTrainingNeedsAsync(docNo, financialYear, null);
        }
        
        /// <remarks/>
        public void GetSubmittedDutyTrainingNeedsAsync(string docNo, string financialYear, object userState) {
            if ((this.GetSubmittedDutyTrainingNeedsOperationCompleted == null)) {
                this.GetSubmittedDutyTrainingNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubmittedDutyTrainingNeedsOperationCompleted);
            }
            this.InvokeAsync("GetSubmittedDutyTrainingNeeds", new object[] {
                        docNo,
                        financialYear}, this.GetSubmittedDutyTrainingNeedsOperationCompleted, userState);
        }
        
        private void OnGetSubmittedDutyTrainingNeedsOperationCompleted(object arg) {
            if ((this.GetSubmittedDutyTrainingNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubmittedDutyTrainingNeedsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetTrainingPlanCode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetTrainingPlanCode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetTrainingPlanCode() {
            object[] results = this.Invoke("GetTrainingPlanCode", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrainingPlanCodeAsync() {
            this.GetTrainingPlanCodeAsync(null);
        }
        
        /// <remarks/>
        public void GetTrainingPlanCodeAsync(object userState) {
            if ((this.GetTrainingPlanCodeOperationCompleted == null)) {
                this.GetTrainingPlanCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrainingPlanCodeOperationCompleted);
            }
            this.InvokeAsync("GetTrainingPlanCode", new object[0], this.GetTrainingPlanCodeOperationCompleted, userState);
        }
        
        private void OnGetTrainingPlanCodeOperationCompleted(object arg) {
            if ((this.GetTrainingPlanCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrainingPlanCodeCompleted(this, new GetTrainingPlanCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetUserSignature", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetUserSignature_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetUserSignature(string staffUserID) {
            object[] results = this.Invoke("GetUserSignature", new object[] {
                        staffUserID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSignatureAsync(string staffUserID) {
            this.GetUserSignatureAsync(staffUserID, null);
        }
        
        /// <remarks/>
        public void GetUserSignatureAsync(string staffUserID, object userState) {
            if ((this.GetUserSignatureOperationCompleted == null)) {
                this.GetUserSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSignatureOperationCompleted);
            }
            this.InvokeAsync("GetUserSignature", new object[] {
                        staffUserID}, this.GetUserSignatureOperationCompleted, userState);
        }
        
        private void OnGetUserSignatureOperationCompleted(object arg) {
            if ((this.GetUserSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSignatureCompleted(this, new GetUserSignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:GetYearsToRetirement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="GetYearsToRetirement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int GetYearsToRetirement(string empNo) {
            object[] results = this.Invoke("GetYearsToRetirement", new object[] {
                        empNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetYearsToRetirementAsync(string empNo) {
            this.GetYearsToRetirementAsync(empNo, null);
        }
        
        /// <remarks/>
        public void GetYearsToRetirementAsync(string empNo, object userState) {
            if ((this.GetYearsToRetirementOperationCompleted == null)) {
                this.GetYearsToRetirementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYearsToRetirementOperationCompleted);
            }
            this.InvokeAsync("GetYearsToRetirement", new object[] {
                        empNo}, this.GetYearsToRetirementOperationCompleted, userState);
        }
        
        private void OnGetYearsToRetirementOperationCompleted(object arg) {
            if ((this.GetYearsToRetirementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYearsToRetirementCompleted(this, new GetYearsToRetirementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:HRAppraisalHeaderInsert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="HRAppraisalHeaderInsert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string HRAppraisalHeaderInsert(string appraisal_Period, string employeeNo) {
            object[] results = this.Invoke("HRAppraisalHeaderInsert", new object[] {
                        appraisal_Period,
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HRAppraisalHeaderInsertAsync(string appraisal_Period, string employeeNo) {
            this.HRAppraisalHeaderInsertAsync(appraisal_Period, employeeNo, null);
        }
        
        /// <remarks/>
        public void HRAppraisalHeaderInsertAsync(string appraisal_Period, string employeeNo, object userState) {
            if ((this.HRAppraisalHeaderInsertOperationCompleted == null)) {
                this.HRAppraisalHeaderInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRAppraisalHeaderInsertOperationCompleted);
            }
            this.InvokeAsync("HRAppraisalHeaderInsert", new object[] {
                        appraisal_Period,
                        employeeNo}, this.HRAppraisalHeaderInsertOperationCompleted, userState);
        }
        
        private void OnHRAppraisalHeaderInsertOperationCompleted(object arg) {
            if ((this.HRAppraisalHeaderInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRAppraisalHeaderInsertCompleted(this, new HRAppraisalHeaderInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:HRLeaveCarryForward", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="HRLeaveCarryForward_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string HRLeaveCarryForward(string employeeNo, decimal appliedDays, string senderComments, string responsibilityCenter, string userID) {
            object[] results = this.Invoke("HRLeaveCarryForward", new object[] {
                        employeeNo,
                        appliedDays,
                        senderComments,
                        responsibilityCenter,
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HRLeaveCarryForwardAsync(string employeeNo, decimal appliedDays, string senderComments, string responsibilityCenter, string userID) {
            this.HRLeaveCarryForwardAsync(employeeNo, appliedDays, senderComments, responsibilityCenter, userID, null);
        }
        
        /// <remarks/>
        public void HRLeaveCarryForwardAsync(string employeeNo, decimal appliedDays, string senderComments, string responsibilityCenter, string userID, object userState) {
            if ((this.HRLeaveCarryForwardOperationCompleted == null)) {
                this.HRLeaveCarryForwardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRLeaveCarryForwardOperationCompleted);
            }
            this.InvokeAsync("HRLeaveCarryForward", new object[] {
                        employeeNo,
                        appliedDays,
                        senderComments,
                        responsibilityCenter,
                        userID}, this.HRLeaveCarryForwardOperationCompleted, userState);
        }
        
        private void OnHRLeaveCarryForwardOperationCompleted(object arg) {
            if ((this.HRLeaveCarryForwardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRLeaveCarryForwardCompleted(this, new HRLeaveCarryForwardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:HRLeaveReimbursement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="HRLeaveReimbursement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string HRLeaveReimbursement(string employeeNo, string leaveNo, decimal appliedDays, string senderComments, string responsibilityCenter, string userID) {
            object[] results = this.Invoke("HRLeaveReimbursement", new object[] {
                        employeeNo,
                        leaveNo,
                        appliedDays,
                        senderComments,
                        responsibilityCenter,
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HRLeaveReimbursementAsync(string employeeNo, string leaveNo, decimal appliedDays, string senderComments, string responsibilityCenter, string userID) {
            this.HRLeaveReimbursementAsync(employeeNo, leaveNo, appliedDays, senderComments, responsibilityCenter, userID, null);
        }
        
        /// <remarks/>
        public void HRLeaveReimbursementAsync(string employeeNo, string leaveNo, decimal appliedDays, string senderComments, string responsibilityCenter, string userID, object userState) {
            if ((this.HRLeaveReimbursementOperationCompleted == null)) {
                this.HRLeaveReimbursementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRLeaveReimbursementOperationCompleted);
            }
            this.InvokeAsync("HRLeaveReimbursement", new object[] {
                        employeeNo,
                        leaveNo,
                        appliedDays,
                        senderComments,
                        responsibilityCenter,
                        userID}, this.HRLeaveReimbursementOperationCompleted, userState);
        }
        
        private void OnHRLeaveReimbursementOperationCompleted(object arg) {
            if ((this.HRLeaveReimbursementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRLeaveReimbursementCompleted(this, new HRLeaveReimbursementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:HRTimeOffLieu", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="HRTimeOffLieu_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string HRTimeOffLieu(string employeeNo, decimal appliedDays, string senderComments, string responsibilityCenter, string userID, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime startTime, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime endTime) {
            object[] results = this.Invoke("HRTimeOffLieu", new object[] {
                        employeeNo,
                        appliedDays,
                        senderComments,
                        responsibilityCenter,
                        userID,
                        startDate,
                        startTime,
                        endTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HRTimeOffLieuAsync(string employeeNo, decimal appliedDays, string senderComments, string responsibilityCenter, string userID, System.DateTime startDate, System.DateTime startTime, System.DateTime endTime) {
            this.HRTimeOffLieuAsync(employeeNo, appliedDays, senderComments, responsibilityCenter, userID, startDate, startTime, endTime, null);
        }
        
        /// <remarks/>
        public void HRTimeOffLieuAsync(string employeeNo, decimal appliedDays, string senderComments, string responsibilityCenter, string userID, System.DateTime startDate, System.DateTime startTime, System.DateTime endTime, object userState) {
            if ((this.HRTimeOffLieuOperationCompleted == null)) {
                this.HRTimeOffLieuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRTimeOffLieuOperationCompleted);
            }
            this.InvokeAsync("HRTimeOffLieu", new object[] {
                        employeeNo,
                        appliedDays,
                        senderComments,
                        responsibilityCenter,
                        userID,
                        startDate,
                        startTime,
                        endTime}, this.HRTimeOffLieuOperationCompleted, userState);
        }
        
        private void OnHRTimeOffLieuOperationCompleted(object arg) {
            if ((this.HRTimeOffLieuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRTimeOffLieuCompleted(this, new HRTimeOffLieuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ImportExcellBudgetValues", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ImportExcellBudgetValues_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ImportExcellBudgetValues(ref string fileNamePath) {
            object[] results = this.Invoke("ImportExcellBudgetValues", new object[] {
                        fileNamePath});
            fileNamePath = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ImportExcellBudgetValuesAsync(string fileNamePath) {
            this.ImportExcellBudgetValuesAsync(fileNamePath, null);
        }
        
        /// <remarks/>
        public void ImportExcellBudgetValuesAsync(string fileNamePath, object userState) {
            if ((this.ImportExcellBudgetValuesOperationCompleted == null)) {
                this.ImportExcellBudgetValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportExcellBudgetValuesOperationCompleted);
            }
            this.InvokeAsync("ImportExcellBudgetValues", new object[] {
                        fileNamePath}, this.ImportExcellBudgetValuesOperationCompleted, userState);
        }
        
        private void OnImportExcellBudgetValuesOperationCompleted(object arg) {
            if ((this.ImportExcellBudgetValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportExcellBudgetValuesCompleted(this, new ImportExcellBudgetValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ImportStaffProfilePicture", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ImportStaffProfilePicture_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImportStaffProfilePicture(string empNo, string fileName, string clientFileName) {
            this.Invoke("ImportStaffProfilePicture", new object[] {
                        empNo,
                        fileName,
                        clientFileName});
        }
        
        /// <remarks/>
        public void ImportStaffProfilePictureAsync(string empNo, string fileName, string clientFileName) {
            this.ImportStaffProfilePictureAsync(empNo, fileName, clientFileName, null);
        }
        
        /// <remarks/>
        public void ImportStaffProfilePictureAsync(string empNo, string fileName, string clientFileName, object userState) {
            if ((this.ImportStaffProfilePictureOperationCompleted == null)) {
                this.ImportStaffProfilePictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportStaffProfilePictureOperationCompleted);
            }
            this.InvokeAsync("ImportStaffProfilePicture", new object[] {
                        empNo,
                        fileName,
                        clientFileName}, this.ImportStaffProfilePictureOperationCompleted, userState);
        }
        
        private void OnImportStaffProfilePictureOperationCompleted(object arg) {
            if ((this.ImportStaffProfilePictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportStaffProfilePictureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InitiateStaffClaim", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InitiateStaffClaim_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InitiateStaffClaim(string docNo, string user) {
            object[] results = this.Invoke("InitiateStaffClaim", new object[] {
                        docNo,
                        user});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitiateStaffClaimAsync(string docNo, string user) {
            this.InitiateStaffClaimAsync(docNo, user, null);
        }
        
        /// <remarks/>
        public void InitiateStaffClaimAsync(string docNo, string user, object userState) {
            if ((this.InitiateStaffClaimOperationCompleted == null)) {
                this.InitiateStaffClaimOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateStaffClaimOperationCompleted);
            }
            this.InvokeAsync("InitiateStaffClaim", new object[] {
                        docNo,
                        user}, this.InitiateStaffClaimOperationCompleted, userState);
        }
        
        private void OnInitiateStaffClaimOperationCompleted(object arg) {
            if ((this.InitiateStaffClaimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateStaffClaimCompleted(this, new InitiateStaffClaimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertAccusedEmployees", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertAccusedEmployees_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertAccusedEmployees(string docNo, string empNo) {
            this.Invoke("InsertAccusedEmployees", new object[] {
                        docNo,
                        empNo});
        }
        
        /// <remarks/>
        public void InsertAccusedEmployeesAsync(string docNo, string empNo) {
            this.InsertAccusedEmployeesAsync(docNo, empNo, null);
        }
        
        /// <remarks/>
        public void InsertAccusedEmployeesAsync(string docNo, string empNo, object userState) {
            if ((this.InsertAccusedEmployeesOperationCompleted == null)) {
                this.InsertAccusedEmployeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAccusedEmployeesOperationCompleted);
            }
            this.InvokeAsync("InsertAccusedEmployees", new object[] {
                        docNo,
                        empNo}, this.InsertAccusedEmployeesOperationCompleted, userState);
        }
        
        private void OnInsertAccusedEmployeesOperationCompleted(object arg) {
            if ((this.InsertAccusedEmployeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAccusedEmployeesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertActualAmount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertActualAmount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertActualAmount(string docNo, int lineNo, decimal amount) {
            object[] results = this.Invoke("InsertActualAmount", new object[] {
                        docNo,
                        lineNo,
                        amount});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertActualAmountAsync(string docNo, int lineNo, decimal amount) {
            this.InsertActualAmountAsync(docNo, lineNo, amount, null);
        }
        
        /// <remarks/>
        public void InsertActualAmountAsync(string docNo, int lineNo, decimal amount, object userState) {
            if ((this.InsertActualAmountOperationCompleted == null)) {
                this.InsertActualAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertActualAmountOperationCompleted);
            }
            this.InvokeAsync("InsertActualAmount", new object[] {
                        docNo,
                        lineNo,
                        amount}, this.InsertActualAmountOperationCompleted, userState);
        }
        
        private void OnInsertActualAmountOperationCompleted(object arg) {
            if ((this.InsertActualAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertActualAmountCompleted(this, new InsertActualAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertAllocationLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertAllocationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertAllocationLines(string documentNo, int sourceLine, string budgetLine, string geographical, string adminUnit, string programme, decimal amount) {
            this.Invoke("InsertAllocationLines", new object[] {
                        documentNo,
                        sourceLine,
                        budgetLine,
                        geographical,
                        adminUnit,
                        programme,
                        amount});
        }
        
        /// <remarks/>
        public void InsertAllocationLinesAsync(string documentNo, int sourceLine, string budgetLine, string geographical, string adminUnit, string programme, decimal amount) {
            this.InsertAllocationLinesAsync(documentNo, sourceLine, budgetLine, geographical, adminUnit, programme, amount, null);
        }
        
        /// <remarks/>
        public void InsertAllocationLinesAsync(string documentNo, int sourceLine, string budgetLine, string geographical, string adminUnit, string programme, decimal amount, object userState) {
            if ((this.InsertAllocationLinesOperationCompleted == null)) {
                this.InsertAllocationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAllocationLinesOperationCompleted);
            }
            this.InvokeAsync("InsertAllocationLines", new object[] {
                        documentNo,
                        sourceLine,
                        budgetLine,
                        geographical,
                        adminUnit,
                        programme,
                        amount}, this.InsertAllocationLinesOperationCompleted, userState);
        }
        
        private void OnInsertAllocationLinesOperationCompleted(object arg) {
            if ((this.InsertAllocationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAllocationLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertBidPreliminaryEvaluationRe" +
            "gister", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertBidPreliminaryEvaluationRegister_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertBidPreliminaryEvaluationRegister(string iFsCode, string bidNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime evaluationDate, string createdBy, int evaluatorCate) {
            object[] results = this.Invoke("InsertBidPreliminaryEvaluationRegister", new object[] {
                        iFsCode,
                        bidNo,
                        evaluationDate,
                        createdBy,
                        evaluatorCate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBidPreliminaryEvaluationRegisterAsync(string iFsCode, string bidNo, System.DateTime evaluationDate, string createdBy, int evaluatorCate) {
            this.InsertBidPreliminaryEvaluationRegisterAsync(iFsCode, bidNo, evaluationDate, createdBy, evaluatorCate, null);
        }
        
        /// <remarks/>
        public void InsertBidPreliminaryEvaluationRegisterAsync(string iFsCode, string bidNo, System.DateTime evaluationDate, string createdBy, int evaluatorCate, object userState) {
            if ((this.InsertBidPreliminaryEvaluationRegisterOperationCompleted == null)) {
                this.InsertBidPreliminaryEvaluationRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBidPreliminaryEvaluationRegisterOperationCompleted);
            }
            this.InvokeAsync("InsertBidPreliminaryEvaluationRegister", new object[] {
                        iFsCode,
                        bidNo,
                        evaluationDate,
                        createdBy,
                        evaluatorCate}, this.InsertBidPreliminaryEvaluationRegisterOperationCompleted, userState);
        }
        
        private void OnInsertBidPreliminaryEvaluationRegisterOperationCompleted(object arg) {
            if ((this.InsertBidPreliminaryEvaluationRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBidPreliminaryEvaluationRegisterCompleted(this, new InsertBidPreliminaryEvaluationRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertBidTechnicalEvaluationRegi" +
            "ster", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertBidTechnicalEvaluationRegister_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertBidTechnicalEvaluationRegister(string iFsCode, string preliminaryBid, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime evaluationDate, string createdBy, int evaluatorCat) {
            object[] results = this.Invoke("InsertBidTechnicalEvaluationRegister", new object[] {
                        iFsCode,
                        preliminaryBid,
                        evaluationDate,
                        createdBy,
                        evaluatorCat});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBidTechnicalEvaluationRegisterAsync(string iFsCode, string preliminaryBid, System.DateTime evaluationDate, string createdBy, int evaluatorCat) {
            this.InsertBidTechnicalEvaluationRegisterAsync(iFsCode, preliminaryBid, evaluationDate, createdBy, evaluatorCat, null);
        }
        
        /// <remarks/>
        public void InsertBidTechnicalEvaluationRegisterAsync(string iFsCode, string preliminaryBid, System.DateTime evaluationDate, string createdBy, int evaluatorCat, object userState) {
            if ((this.InsertBidTechnicalEvaluationRegisterOperationCompleted == null)) {
                this.InsertBidTechnicalEvaluationRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBidTechnicalEvaluationRegisterOperationCompleted);
            }
            this.InvokeAsync("InsertBidTechnicalEvaluationRegister", new object[] {
                        iFsCode,
                        preliminaryBid,
                        evaluationDate,
                        createdBy,
                        evaluatorCat}, this.InsertBidTechnicalEvaluationRegisterOperationCompleted, userState);
        }
        
        private void OnInsertBidTechnicalEvaluationRegisterOperationCompleted(object arg) {
            if ((this.InsertBidTechnicalEvaluationRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBidTechnicalEvaluationRegisterCompleted(this, new InsertBidTechnicalEvaluationRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertBidfinancialEvaluationRegi" +
            "ster", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertBidfinancialEvaluationRegister_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertBidfinancialEvaluationRegister(string iFsCode, int awardType, string createdBy) {
            object[] results = this.Invoke("InsertBidfinancialEvaluationRegister", new object[] {
                        iFsCode,
                        awardType,
                        createdBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBidfinancialEvaluationRegisterAsync(string iFsCode, int awardType, string createdBy) {
            this.InsertBidfinancialEvaluationRegisterAsync(iFsCode, awardType, createdBy, null);
        }
        
        /// <remarks/>
        public void InsertBidfinancialEvaluationRegisterAsync(string iFsCode, int awardType, string createdBy, object userState) {
            if ((this.InsertBidfinancialEvaluationRegisterOperationCompleted == null)) {
                this.InsertBidfinancialEvaluationRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBidfinancialEvaluationRegisterOperationCompleted);
            }
            this.InvokeAsync("InsertBidfinancialEvaluationRegister", new object[] {
                        iFsCode,
                        awardType,
                        createdBy}, this.InsertBidfinancialEvaluationRegisterOperationCompleted, userState);
        }
        
        private void OnInsertBidfinancialEvaluationRegisterOperationCompleted(object arg) {
            if ((this.InsertBidfinancialEvaluationRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBidfinancialEvaluationRegisterCompleted(this, new InsertBidfinancialEvaluationRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertBidscoreRequirement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertBidscoreRequirement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertBidscoreRequirement(string tempLID, int evalty, string evalRequirement, string criteriaGID) {
            object[] results = this.Invoke("InsertBidscoreRequirement", new object[] {
                        tempLID,
                        evalty,
                        evalRequirement,
                        criteriaGID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBidscoreRequirementAsync(string tempLID, int evalty, string evalRequirement, string criteriaGID) {
            this.InsertBidscoreRequirementAsync(tempLID, evalty, evalRequirement, criteriaGID, null);
        }
        
        /// <remarks/>
        public void InsertBidscoreRequirementAsync(string tempLID, int evalty, string evalRequirement, string criteriaGID, object userState) {
            if ((this.InsertBidscoreRequirementOperationCompleted == null)) {
                this.InsertBidscoreRequirementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBidscoreRequirementOperationCompleted);
            }
            this.InvokeAsync("InsertBidscoreRequirement", new object[] {
                        tempLID,
                        evalty,
                        evalRequirement,
                        criteriaGID}, this.InsertBidscoreRequirementOperationCompleted, userState);
        }
        
        private void OnInsertBidscoreRequirementOperationCompleted(object arg) {
            if ((this.InsertBidscoreRequirementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBidscoreRequirementCompleted(this, new InsertBidscoreRequirementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertConsolidatedTrainingNeeds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertConsolidatedTrainingNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertConsolidatedTrainingNeeds(string financialYear, string description) {
            object[] results = this.Invoke("InsertConsolidatedTrainingNeeds", new object[] {
                        financialYear,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertConsolidatedTrainingNeedsAsync(string financialYear, string description) {
            this.InsertConsolidatedTrainingNeedsAsync(financialYear, description, null);
        }
        
        /// <remarks/>
        public void InsertConsolidatedTrainingNeedsAsync(string financialYear, string description, object userState) {
            if ((this.InsertConsolidatedTrainingNeedsOperationCompleted == null)) {
                this.InsertConsolidatedTrainingNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertConsolidatedTrainingNeedsOperationCompleted);
            }
            this.InvokeAsync("InsertConsolidatedTrainingNeeds", new object[] {
                        financialYear,
                        description}, this.InsertConsolidatedTrainingNeedsOperationCompleted, userState);
        }
        
        private void OnInsertConsolidatedTrainingNeedsOperationCompleted(object arg) {
            if ((this.InsertConsolidatedTrainingNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertConsolidatedTrainingNeedsCompleted(this, new InsertConsolidatedTrainingNeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertContractPaymentTerms", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertContractPaymentTerms_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertContractPaymentTerms(string no, string instalmentCode, int paymentCertificateType, string description, decimal paymentPercent, string currencyCode, decimal plannedAmount, decimal paidAmount) {
            this.Invoke("InsertContractPaymentTerms", new object[] {
                        no,
                        instalmentCode,
                        paymentCertificateType,
                        description,
                        paymentPercent,
                        currencyCode,
                        plannedAmount,
                        paidAmount});
        }
        
        /// <remarks/>
        public void InsertContractPaymentTermsAsync(string no, string instalmentCode, int paymentCertificateType, string description, decimal paymentPercent, string currencyCode, decimal plannedAmount, decimal paidAmount) {
            this.InsertContractPaymentTermsAsync(no, instalmentCode, paymentCertificateType, description, paymentPercent, currencyCode, plannedAmount, paidAmount, null);
        }
        
        /// <remarks/>
        public void InsertContractPaymentTermsAsync(string no, string instalmentCode, int paymentCertificateType, string description, decimal paymentPercent, string currencyCode, decimal plannedAmount, decimal paidAmount, object userState) {
            if ((this.InsertContractPaymentTermsOperationCompleted == null)) {
                this.InsertContractPaymentTermsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertContractPaymentTermsOperationCompleted);
            }
            this.InvokeAsync("InsertContractPaymentTerms", new object[] {
                        no,
                        instalmentCode,
                        paymentCertificateType,
                        description,
                        paymentPercent,
                        currencyCode,
                        plannedAmount,
                        paidAmount}, this.InsertContractPaymentTermsOperationCompleted, userState);
        }
        
        private void OnInsertContractPaymentTermsOperationCompleted(object arg) {
            if ((this.InsertContractPaymentTermsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertContractPaymentTermsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertContractPayment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertContractPayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertContractPayment(string documentNo, string contractNumber, string lpoNumber, string itemNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime supplierInvDate, string supplierInvNo, string expenseDescription, string gLAccount, decimal quantity, decimal rate, string destination, string voteItem, int lineNo, int type, string supplier) {
            this.Invoke("InsertContractPayment", new object[] {
                        documentNo,
                        contractNumber,
                        lpoNumber,
                        itemNumber,
                        supplierInvDate,
                        supplierInvNo,
                        expenseDescription,
                        gLAccount,
                        quantity,
                        rate,
                        destination,
                        voteItem,
                        lineNo,
                        type,
                        supplier});
        }
        
        /// <remarks/>
        public void InsertContractPaymentAsync(string documentNo, string contractNumber, string lpoNumber, string itemNumber, System.DateTime supplierInvDate, string supplierInvNo, string expenseDescription, string gLAccount, decimal quantity, decimal rate, string destination, string voteItem, int lineNo, int type, string supplier) {
            this.InsertContractPaymentAsync(documentNo, contractNumber, lpoNumber, itemNumber, supplierInvDate, supplierInvNo, expenseDescription, gLAccount, quantity, rate, destination, voteItem, lineNo, type, supplier, null);
        }
        
        /// <remarks/>
        public void InsertContractPaymentAsync(
                    string documentNo, 
                    string contractNumber, 
                    string lpoNumber, 
                    string itemNumber, 
                    System.DateTime supplierInvDate, 
                    string supplierInvNo, 
                    string expenseDescription, 
                    string gLAccount, 
                    decimal quantity, 
                    decimal rate, 
                    string destination, 
                    string voteItem, 
                    int lineNo, 
                    int type, 
                    string supplier, 
                    object userState) {
            if ((this.InsertContractPaymentOperationCompleted == null)) {
                this.InsertContractPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertContractPaymentOperationCompleted);
            }
            this.InvokeAsync("InsertContractPayment", new object[] {
                        documentNo,
                        contractNumber,
                        lpoNumber,
                        itemNumber,
                        supplierInvDate,
                        supplierInvNo,
                        expenseDescription,
                        gLAccount,
                        quantity,
                        rate,
                        destination,
                        voteItem,
                        lineNo,
                        type,
                        supplier}, this.InsertContractPaymentOperationCompleted, userState);
        }
        
        private void OnInsertContractPaymentOperationCompleted(object arg) {
            if ((this.InsertContractPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertContractPaymentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertCurrentSkills", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertCurrentSkills_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertCurrentSkills(string requestNo, string major_Tasks, int trainingMode, string existingTrainingNeeds, bool trainingRequired, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, string institution) {
            object[] results = this.Invoke("InsertCurrentSkills", new object[] {
                        requestNo,
                        major_Tasks,
                        trainingMode,
                        existingTrainingNeeds,
                        trainingRequired,
                        startDate,
                        institution});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCurrentSkillsAsync(string requestNo, string major_Tasks, int trainingMode, string existingTrainingNeeds, bool trainingRequired, System.DateTime startDate, string institution) {
            this.InsertCurrentSkillsAsync(requestNo, major_Tasks, trainingMode, existingTrainingNeeds, trainingRequired, startDate, institution, null);
        }
        
        /// <remarks/>
        public void InsertCurrentSkillsAsync(string requestNo, string major_Tasks, int trainingMode, string existingTrainingNeeds, bool trainingRequired, System.DateTime startDate, string institution, object userState) {
            if ((this.InsertCurrentSkillsOperationCompleted == null)) {
                this.InsertCurrentSkillsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCurrentSkillsOperationCompleted);
            }
            this.InvokeAsync("InsertCurrentSkills", new object[] {
                        requestNo,
                        major_Tasks,
                        trainingMode,
                        existingTrainingNeeds,
                        trainingRequired,
                        startDate,
                        institution}, this.InsertCurrentSkillsOperationCompleted, userState);
        }
        
        private void OnInsertCurrentSkillsOperationCompleted(object arg) {
            if ((this.InsertCurrentSkillsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCurrentSkillsCompleted(this, new InsertCurrentSkillsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertDirectExpense", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertDirectExpense_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertDirectExpense(string documentNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime supplierInvDate, string supplierInvNo, string expenseDescription, string gLAccount, decimal quantity, decimal rate, string destination, string voteItem, int lineNo, int type, string supplier) {
            this.Invoke("InsertDirectExpense", new object[] {
                        documentNo,
                        supplierInvDate,
                        supplierInvNo,
                        expenseDescription,
                        gLAccount,
                        quantity,
                        rate,
                        destination,
                        voteItem,
                        lineNo,
                        type,
                        supplier});
        }
        
        /// <remarks/>
        public void InsertDirectExpenseAsync(string documentNo, System.DateTime supplierInvDate, string supplierInvNo, string expenseDescription, string gLAccount, decimal quantity, decimal rate, string destination, string voteItem, int lineNo, int type, string supplier) {
            this.InsertDirectExpenseAsync(documentNo, supplierInvDate, supplierInvNo, expenseDescription, gLAccount, quantity, rate, destination, voteItem, lineNo, type, supplier, null);
        }
        
        /// <remarks/>
        public void InsertDirectExpenseAsync(string documentNo, System.DateTime supplierInvDate, string supplierInvNo, string expenseDescription, string gLAccount, decimal quantity, decimal rate, string destination, string voteItem, int lineNo, int type, string supplier, object userState) {
            if ((this.InsertDirectExpenseOperationCompleted == null)) {
                this.InsertDirectExpenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDirectExpenseOperationCompleted);
            }
            this.InvokeAsync("InsertDirectExpense", new object[] {
                        documentNo,
                        supplierInvDate,
                        supplierInvNo,
                        expenseDescription,
                        gLAccount,
                        quantity,
                        rate,
                        destination,
                        voteItem,
                        lineNo,
                        type,
                        supplier}, this.InsertDirectExpenseOperationCompleted, userState);
        }
        
        private void OnInsertDirectExpenseOperationCompleted(object arg) {
            if ((this.InsertDirectExpenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDirectExpenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertDutystationTrainingNeeds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertDutystationTrainingNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertDutystationTrainingNeeds(string dutyStation, string comment) {
            object[] results = this.Invoke("InsertDutystationTrainingNeeds", new object[] {
                        dutyStation,
                        comment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDutystationTrainingNeedsAsync(string dutyStation, string comment) {
            this.InsertDutystationTrainingNeedsAsync(dutyStation, comment, null);
        }
        
        /// <remarks/>
        public void InsertDutystationTrainingNeedsAsync(string dutyStation, string comment, object userState) {
            if ((this.InsertDutystationTrainingNeedsOperationCompleted == null)) {
                this.InsertDutystationTrainingNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDutystationTrainingNeedsOperationCompleted);
            }
            this.InvokeAsync("InsertDutystationTrainingNeeds", new object[] {
                        dutyStation,
                        comment}, this.InsertDutystationTrainingNeedsOperationCompleted, userState);
        }
        
        private void OnInsertDutystationTrainingNeedsOperationCompleted(object arg) {
            if ((this.InsertDutystationTrainingNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDutystationTrainingNeedsCompleted(this, new InsertDutystationTrainingNeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertEmployeeClockIn", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertEmployeeClockIn_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertEmployeeClockIn(string empNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime clockinDate, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime clockinTime) {
            this.Invoke("InsertEmployeeClockIn", new object[] {
                        empNo,
                        clockinDate,
                        clockinTime});
        }
        
        /// <remarks/>
        public void InsertEmployeeClockInAsync(string empNo, System.DateTime clockinDate, System.DateTime clockinTime) {
            this.InsertEmployeeClockInAsync(empNo, clockinDate, clockinTime, null);
        }
        
        /// <remarks/>
        public void InsertEmployeeClockInAsync(string empNo, System.DateTime clockinDate, System.DateTime clockinTime, object userState) {
            if ((this.InsertEmployeeClockInOperationCompleted == null)) {
                this.InsertEmployeeClockInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEmployeeClockInOperationCompleted);
            }
            this.InvokeAsync("InsertEmployeeClockIn", new object[] {
                        empNo,
                        clockinDate,
                        clockinTime}, this.InsertEmployeeClockInOperationCompleted, userState);
        }
        
        private void OnInsertEmployeeClockInOperationCompleted(object arg) {
            if ((this.InsertEmployeeClockInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEmployeeClockInCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertEmployeeClockOut", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertEmployeeClockOut_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertEmployeeClockOut(string empNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime clockOutDate, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime clockOutTime) {
            this.Invoke("InsertEmployeeClockOut", new object[] {
                        empNo,
                        clockOutDate,
                        clockOutTime});
        }
        
        /// <remarks/>
        public void InsertEmployeeClockOutAsync(string empNo, System.DateTime clockOutDate, System.DateTime clockOutTime) {
            this.InsertEmployeeClockOutAsync(empNo, clockOutDate, clockOutTime, null);
        }
        
        /// <remarks/>
        public void InsertEmployeeClockOutAsync(string empNo, System.DateTime clockOutDate, System.DateTime clockOutTime, object userState) {
            if ((this.InsertEmployeeClockOutOperationCompleted == null)) {
                this.InsertEmployeeClockOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEmployeeClockOutOperationCompleted);
            }
            this.InvokeAsync("InsertEmployeeClockOut", new object[] {
                        empNo,
                        clockOutDate,
                        clockOutTime}, this.InsertEmployeeClockOutOperationCompleted, userState);
        }
        
        private void OnInsertEmployeeClockOutOperationCompleted(object arg) {
            if ((this.InsertEmployeeClockOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEmployeeClockOutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertEmployeeRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertEmployeeRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertEmployeeRequisition(string staffNo, string recruitmentPlan, int planType, string position, string directorateCode, string departmentCode, string county, string finacialYear, int vacancies, string recruitmentReason, string justification, int candidateSource, int sourcingMethod, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            object[] results = this.Invoke("InsertEmployeeRequisition", new object[] {
                        staffNo,
                        recruitmentPlan,
                        planType,
                        position,
                        directorateCode,
                        departmentCode,
                        county,
                        finacialYear,
                        vacancies,
                        recruitmentReason,
                        justification,
                        candidateSource,
                        sourcingMethod,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertEmployeeRequisitionAsync(string staffNo, string recruitmentPlan, int planType, string position, string directorateCode, string departmentCode, string county, string finacialYear, int vacancies, string recruitmentReason, string justification, int candidateSource, int sourcingMethod, System.DateTime startDate, System.DateTime endDate) {
            this.InsertEmployeeRequisitionAsync(staffNo, recruitmentPlan, planType, position, directorateCode, departmentCode, county, finacialYear, vacancies, recruitmentReason, justification, candidateSource, sourcingMethod, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void InsertEmployeeRequisitionAsync(
                    string staffNo, 
                    string recruitmentPlan, 
                    int planType, 
                    string position, 
                    string directorateCode, 
                    string departmentCode, 
                    string county, 
                    string finacialYear, 
                    int vacancies, 
                    string recruitmentReason, 
                    string justification, 
                    int candidateSource, 
                    int sourcingMethod, 
                    System.DateTime startDate, 
                    System.DateTime endDate, 
                    object userState) {
            if ((this.InsertEmployeeRequisitionOperationCompleted == null)) {
                this.InsertEmployeeRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEmployeeRequisitionOperationCompleted);
            }
            this.InvokeAsync("InsertEmployeeRequisition", new object[] {
                        staffNo,
                        recruitmentPlan,
                        planType,
                        position,
                        directorateCode,
                        departmentCode,
                        county,
                        finacialYear,
                        vacancies,
                        recruitmentReason,
                        justification,
                        candidateSource,
                        sourcingMethod,
                        startDate,
                        endDate}, this.InsertEmployeeRequisitionOperationCompleted, userState);
        }
        
        private void OnInsertEmployeeRequisitionOperationCompleted(object arg) {
            if ((this.InsertEmployeeRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEmployeeRequisitionCompleted(this, new InsertEmployeeRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertExpenseLinesImprest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertExpenseLinesImprest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertExpenseLinesImprest(string documentNo, string empNo, string expenseDescription, string gLAccount, decimal quantity, decimal rate, string destination, string voteItem, int lineNo, int type) {
            this.Invoke("InsertExpenseLinesImprest", new object[] {
                        documentNo,
                        empNo,
                        expenseDescription,
                        gLAccount,
                        quantity,
                        rate,
                        destination,
                        voteItem,
                        lineNo,
                        type});
        }
        
        /// <remarks/>
        public void InsertExpenseLinesImprestAsync(string documentNo, string empNo, string expenseDescription, string gLAccount, decimal quantity, decimal rate, string destination, string voteItem, int lineNo, int type) {
            this.InsertExpenseLinesImprestAsync(documentNo, empNo, expenseDescription, gLAccount, quantity, rate, destination, voteItem, lineNo, type, null);
        }
        
        /// <remarks/>
        public void InsertExpenseLinesImprestAsync(string documentNo, string empNo, string expenseDescription, string gLAccount, decimal quantity, decimal rate, string destination, string voteItem, int lineNo, int type, object userState) {
            if ((this.InsertExpenseLinesImprestOperationCompleted == null)) {
                this.InsertExpenseLinesImprestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExpenseLinesImprestOperationCompleted);
            }
            this.InvokeAsync("InsertExpenseLinesImprest", new object[] {
                        documentNo,
                        empNo,
                        expenseDescription,
                        gLAccount,
                        quantity,
                        rate,
                        destination,
                        voteItem,
                        lineNo,
                        type}, this.InsertExpenseLinesImprestOperationCompleted, userState);
        }
        
        private void OnInsertExpenseLinesImprestOperationCompleted(object arg) {
            if ((this.InsertExpenseLinesImprestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExpenseLinesImprestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertExpenseLinesPurchase", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertExpenseLinesPurchase_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertExpenseLinesPurchase(string documentNo, string supplier, int procPlanEntry, int procType, int lineType, string itemNo, string expenseDescription, string gLAccount, decimal quantity, decimal rate, int lineNo) {
            this.Invoke("InsertExpenseLinesPurchase", new object[] {
                        documentNo,
                        supplier,
                        procPlanEntry,
                        procType,
                        lineType,
                        itemNo,
                        expenseDescription,
                        gLAccount,
                        quantity,
                        rate,
                        lineNo});
        }
        
        /// <remarks/>
        public void InsertExpenseLinesPurchaseAsync(string documentNo, string supplier, int procPlanEntry, int procType, int lineType, string itemNo, string expenseDescription, string gLAccount, decimal quantity, decimal rate, int lineNo) {
            this.InsertExpenseLinesPurchaseAsync(documentNo, supplier, procPlanEntry, procType, lineType, itemNo, expenseDescription, gLAccount, quantity, rate, lineNo, null);
        }
        
        /// <remarks/>
        public void InsertExpenseLinesPurchaseAsync(string documentNo, string supplier, int procPlanEntry, int procType, int lineType, string itemNo, string expenseDescription, string gLAccount, decimal quantity, decimal rate, int lineNo, object userState) {
            if ((this.InsertExpenseLinesPurchaseOperationCompleted == null)) {
                this.InsertExpenseLinesPurchaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExpenseLinesPurchaseOperationCompleted);
            }
            this.InvokeAsync("InsertExpenseLinesPurchase", new object[] {
                        documentNo,
                        supplier,
                        procPlanEntry,
                        procType,
                        lineType,
                        itemNo,
                        expenseDescription,
                        gLAccount,
                        quantity,
                        rate,
                        lineNo}, this.InsertExpenseLinesPurchaseOperationCompleted, userState);
        }
        
        private void OnInsertExpenseLinesPurchaseOperationCompleted(object arg) {
            if ((this.InsertExpenseLinesPurchaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExpenseLinesPurchaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertExpenseReqAllocation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertExpenseReqAllocation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertExpenseReqAllocation(string supplier, string expenseDescription, string gLAccount, decimal quantity, decimal rate) {
            this.Invoke("InsertExpenseReqAllocation", new object[] {
                        supplier,
                        expenseDescription,
                        gLAccount,
                        quantity,
                        rate});
        }
        
        /// <remarks/>
        public void InsertExpenseReqAllocationAsync(string supplier, string expenseDescription, string gLAccount, decimal quantity, decimal rate) {
            this.InsertExpenseReqAllocationAsync(supplier, expenseDescription, gLAccount, quantity, rate, null);
        }
        
        /// <remarks/>
        public void InsertExpenseReqAllocationAsync(string supplier, string expenseDescription, string gLAccount, decimal quantity, decimal rate, object userState) {
            if ((this.InsertExpenseReqAllocationOperationCompleted == null)) {
                this.InsertExpenseReqAllocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExpenseReqAllocationOperationCompleted);
            }
            this.InvokeAsync("InsertExpenseReqAllocation", new object[] {
                        supplier,
                        expenseDescription,
                        gLAccount,
                        quantity,
                        rate}, this.InsertExpenseReqAllocationOperationCompleted, userState);
        }
        
        private void OnInsertExpenseReqAllocationOperationCompleted(object arg) {
            if ((this.InsertExpenseReqAllocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExpenseReqAllocationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertExpenseRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertExpenseRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertExpenseRequisitionLine(string documentNo, string ga47L_Account, string vote_Book, string _Class, decimal total_Amount, string dim4, string dim6, string activity) {
            this.Invoke("InsertExpenseRequisitionLine", new object[] {
                        documentNo,
                        ga47L_Account,
                        vote_Book,
                        _Class,
                        total_Amount,
                        dim4,
                        dim6,
                        activity});
        }
        
        /// <remarks/>
        public void InsertExpenseRequisitionLineAsync(string documentNo, string ga47L_Account, string vote_Book, string _Class, decimal total_Amount, string dim4, string dim6, string activity) {
            this.InsertExpenseRequisitionLineAsync(documentNo, ga47L_Account, vote_Book, _Class, total_Amount, dim4, dim6, activity, null);
        }
        
        /// <remarks/>
        public void InsertExpenseRequisitionLineAsync(string documentNo, string ga47L_Account, string vote_Book, string _Class, decimal total_Amount, string dim4, string dim6, string activity, object userState) {
            if ((this.InsertExpenseRequisitionLineOperationCompleted == null)) {
                this.InsertExpenseRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExpenseRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("InsertExpenseRequisitionLine", new object[] {
                        documentNo,
                        ga47L_Account,
                        vote_Book,
                        _Class,
                        total_Amount,
                        dim4,
                        dim6,
                        activity}, this.InsertExpenseRequisitionLineOperationCompleted, userState);
        }
        
        private void OnInsertExpenseRequisitionLineOperationCompleted(object arg) {
            if ((this.InsertExpenseRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExpenseRequisitionLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertExpenseRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertExpenseRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertExpenseRequisition(
                    string description, 
                    string global_Dimension_1_Code, 
                    string global_Dimension_2_Code, 
                    string activity_Code, 
                    bool requires_Imprest, 
                    int imprest_Type, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime start_Date, 
                    int no_Of_Days, 
                    string subject, 
                    string objectiveTxt, 
                    bool requires_Direct_Payment, 
                    bool requires_PRN, 
                    string procurement_Plan_ID, 
                    int pRN_Type, 
                    string location_Code, 
                    int requisition_Product_Group, 
                    string pP_Plan_Category, 
                    string created_By, 
                    int directPaymentType, 
                    string docuNo, 
                    string aIECode) {
            object[] results = this.Invoke("InsertExpenseRequisition", new object[] {
                        description,
                        global_Dimension_1_Code,
                        global_Dimension_2_Code,
                        activity_Code,
                        requires_Imprest,
                        imprest_Type,
                        start_Date,
                        no_Of_Days,
                        subject,
                        objectiveTxt,
                        requires_Direct_Payment,
                        requires_PRN,
                        procurement_Plan_ID,
                        pRN_Type,
                        location_Code,
                        requisition_Product_Group,
                        pP_Plan_Category,
                        created_By,
                        directPaymentType,
                        docuNo,
                        aIECode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExpenseRequisitionAsync(
                    string description, 
                    string global_Dimension_1_Code, 
                    string global_Dimension_2_Code, 
                    string activity_Code, 
                    bool requires_Imprest, 
                    int imprest_Type, 
                    System.DateTime start_Date, 
                    int no_Of_Days, 
                    string subject, 
                    string objectiveTxt, 
                    bool requires_Direct_Payment, 
                    bool requires_PRN, 
                    string procurement_Plan_ID, 
                    int pRN_Type, 
                    string location_Code, 
                    int requisition_Product_Group, 
                    string pP_Plan_Category, 
                    string created_By, 
                    int directPaymentType, 
                    string docuNo, 
                    string aIECode) {
            this.InsertExpenseRequisitionAsync(description, global_Dimension_1_Code, global_Dimension_2_Code, activity_Code, requires_Imprest, imprest_Type, start_Date, no_Of_Days, subject, objectiveTxt, requires_Direct_Payment, requires_PRN, procurement_Plan_ID, pRN_Type, location_Code, requisition_Product_Group, pP_Plan_Category, created_By, directPaymentType, docuNo, aIECode, null);
        }
        
        /// <remarks/>
        public void InsertExpenseRequisitionAsync(
                    string description, 
                    string global_Dimension_1_Code, 
                    string global_Dimension_2_Code, 
                    string activity_Code, 
                    bool requires_Imprest, 
                    int imprest_Type, 
                    System.DateTime start_Date, 
                    int no_Of_Days, 
                    string subject, 
                    string objectiveTxt, 
                    bool requires_Direct_Payment, 
                    bool requires_PRN, 
                    string procurement_Plan_ID, 
                    int pRN_Type, 
                    string location_Code, 
                    int requisition_Product_Group, 
                    string pP_Plan_Category, 
                    string created_By, 
                    int directPaymentType, 
                    string docuNo, 
                    string aIECode, 
                    object userState) {
            if ((this.InsertExpenseRequisitionOperationCompleted == null)) {
                this.InsertExpenseRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExpenseRequisitionOperationCompleted);
            }
            this.InvokeAsync("InsertExpenseRequisition", new object[] {
                        description,
                        global_Dimension_1_Code,
                        global_Dimension_2_Code,
                        activity_Code,
                        requires_Imprest,
                        imprest_Type,
                        start_Date,
                        no_Of_Days,
                        subject,
                        objectiveTxt,
                        requires_Direct_Payment,
                        requires_PRN,
                        procurement_Plan_ID,
                        pRN_Type,
                        location_Code,
                        requisition_Product_Group,
                        pP_Plan_Category,
                        created_By,
                        directPaymentType,
                        docuNo,
                        aIECode}, this.InsertExpenseRequisitionOperationCompleted, userState);
        }
        
        private void OnInsertExpenseRequisitionOperationCompleted(object arg) {
            if ((this.InsertExpenseRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExpenseRequisitionCompleted(this, new InsertExpenseRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertFuelCardLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertFuelCardLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertFuelCardLines(string docNo, string recieptNo, decimal amount, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fuelDate, string driver) {
            object[] results = this.Invoke("InsertFuelCardLines", new object[] {
                        docNo,
                        recieptNo,
                        amount,
                        fuelDate,
                        driver});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertFuelCardLinesAsync(string docNo, string recieptNo, decimal amount, System.DateTime fuelDate, string driver) {
            this.InsertFuelCardLinesAsync(docNo, recieptNo, amount, fuelDate, driver, null);
        }
        
        /// <remarks/>
        public void InsertFuelCardLinesAsync(string docNo, string recieptNo, decimal amount, System.DateTime fuelDate, string driver, object userState) {
            if ((this.InsertFuelCardLinesOperationCompleted == null)) {
                this.InsertFuelCardLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFuelCardLinesOperationCompleted);
            }
            this.InvokeAsync("InsertFuelCardLines", new object[] {
                        docNo,
                        recieptNo,
                        amount,
                        fuelDate,
                        driver}, this.InsertFuelCardLinesOperationCompleted, userState);
        }
        
        private void OnInsertFuelCardLinesOperationCompleted(object arg) {
            if ((this.InsertFuelCardLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFuelCardLinesCompleted(this, new InsertFuelCardLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertFuelCard", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertFuelCard_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertFuelCard(string empUserId, string registrationNo, string cardType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate) {
            object[] results = this.Invoke("InsertFuelCard", new object[] {
                        empUserId,
                        registrationNo,
                        cardType,
                        startDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertFuelCardAsync(string empUserId, string registrationNo, string cardType, System.DateTime startDate) {
            this.InsertFuelCardAsync(empUserId, registrationNo, cardType, startDate, null);
        }
        
        /// <remarks/>
        public void InsertFuelCardAsync(string empUserId, string registrationNo, string cardType, System.DateTime startDate, object userState) {
            if ((this.InsertFuelCardOperationCompleted == null)) {
                this.InsertFuelCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFuelCardOperationCompleted);
            }
            this.InvokeAsync("InsertFuelCard", new object[] {
                        empUserId,
                        registrationNo,
                        cardType,
                        startDate}, this.InsertFuelCardOperationCompleted, userState);
        }
        
        private void OnInsertFuelCardOperationCompleted(object arg) {
            if ((this.InsertFuelCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFuelCardCompleted(this, new InsertFuelCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertFuelReq", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertFuelReq_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertFuelReq(decimal totalPrice, string reqNo, string preparedBy) {
            object[] results = this.Invoke("InsertFuelReq", new object[] {
                        totalPrice,
                        reqNo,
                        preparedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertFuelReqAsync(decimal totalPrice, string reqNo, string preparedBy) {
            this.InsertFuelReqAsync(totalPrice, reqNo, preparedBy, null);
        }
        
        /// <remarks/>
        public void InsertFuelReqAsync(decimal totalPrice, string reqNo, string preparedBy, object userState) {
            if ((this.InsertFuelReqOperationCompleted == null)) {
                this.InsertFuelReqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFuelReqOperationCompleted);
            }
            this.InvokeAsync("InsertFuelReq", new object[] {
                        totalPrice,
                        reqNo,
                        preparedBy}, this.InsertFuelReqOperationCompleted, userState);
        }
        
        private void OnInsertFuelReqOperationCompleted(object arg) {
            if ((this.InsertFuelReqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFuelReqCompleted(this, new InsertFuelReqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertGMDLApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertGMDLApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertGMDLApplication(
                    string applicationNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime applicationDate, 
                    int typeOfApplication, 
                    string applicantName, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth, 
                    string placeOfBirth, 
                    string iDNumber, 
                    string phoneNumber, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string town, 
                    string county, 
                    string country, 
                    string physicalAddress, 
                    string physicalTown, 
                    string physicalCounty, 
                    string physicalCountry, 
                    string nextOfKinName, 
                    string nextOfKinPhone, 
                    string nextOfKinAddress, 
                    string nextOfKinRelationship, 
                    string emergencyContactName, 
                    string emergencyContactPhone, 
                    string previousLicenseNumber, 
                    string previousLicenseCountry, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime previousLicenseExpiry, 
                    bool medicalCertificate, 
                    bool birthCertificate, 
                    bool iDCopy, 
                    bool passportPhotos, 
                    bool kRAPin, 
                    bool policeClearance, 
                    bool drivingSchoolCertificate, 
                    bool previousLicenseCopy, 
                    string licenseClassApplied, 
                    decimal feeAmount, 
                    bool declarationAccepted) {
            object[] results = this.Invoke("InsertGMDLApplication", new object[] {
                        applicationNo,
                        applicationDate,
                        typeOfApplication,
                        applicantName,
                        dateOfBirth,
                        placeOfBirth,
                        iDNumber,
                        phoneNumber,
                        emailAddress,
                        postalAddress,
                        postalCode,
                        town,
                        county,
                        country,
                        physicalAddress,
                        physicalTown,
                        physicalCounty,
                        physicalCountry,
                        nextOfKinName,
                        nextOfKinPhone,
                        nextOfKinAddress,
                        nextOfKinRelationship,
                        emergencyContactName,
                        emergencyContactPhone,
                        previousLicenseNumber,
                        previousLicenseCountry,
                        previousLicenseExpiry,
                        medicalCertificate,
                        birthCertificate,
                        iDCopy,
                        passportPhotos,
                        kRAPin,
                        policeClearance,
                        drivingSchoolCertificate,
                        previousLicenseCopy,
                        licenseClassApplied,
                        feeAmount,
                        declarationAccepted});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGMDLApplicationAsync(
                    string applicationNo, 
                    System.DateTime applicationDate, 
                    int typeOfApplication, 
                    string applicantName, 
                    System.DateTime dateOfBirth, 
                    string placeOfBirth, 
                    string iDNumber, 
                    string phoneNumber, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string town, 
                    string county, 
                    string country, 
                    string physicalAddress, 
                    string physicalTown, 
                    string physicalCounty, 
                    string physicalCountry, 
                    string nextOfKinName, 
                    string nextOfKinPhone, 
                    string nextOfKinAddress, 
                    string nextOfKinRelationship, 
                    string emergencyContactName, 
                    string emergencyContactPhone, 
                    string previousLicenseNumber, 
                    string previousLicenseCountry, 
                    System.DateTime previousLicenseExpiry, 
                    bool medicalCertificate, 
                    bool birthCertificate, 
                    bool iDCopy, 
                    bool passportPhotos, 
                    bool kRAPin, 
                    bool policeClearance, 
                    bool drivingSchoolCertificate, 
                    bool previousLicenseCopy, 
                    string licenseClassApplied, 
                    decimal feeAmount, 
                    bool declarationAccepted) {
            this.InsertGMDLApplicationAsync(applicationNo, applicationDate, typeOfApplication, applicantName, dateOfBirth, placeOfBirth, iDNumber, phoneNumber, emailAddress, postalAddress, postalCode, town, county, country, physicalAddress, physicalTown, physicalCounty, physicalCountry, nextOfKinName, nextOfKinPhone, nextOfKinAddress, nextOfKinRelationship, emergencyContactName, emergencyContactPhone, previousLicenseNumber, previousLicenseCountry, previousLicenseExpiry, medicalCertificate, birthCertificate, iDCopy, passportPhotos, kRAPin, policeClearance, drivingSchoolCertificate, previousLicenseCopy, licenseClassApplied, feeAmount, declarationAccepted, null);
        }
        
        /// <remarks/>
        public void InsertGMDLApplicationAsync(
                    string applicationNo, 
                    System.DateTime applicationDate, 
                    int typeOfApplication, 
                    string applicantName, 
                    System.DateTime dateOfBirth, 
                    string placeOfBirth, 
                    string iDNumber, 
                    string phoneNumber, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string town, 
                    string county, 
                    string country, 
                    string physicalAddress, 
                    string physicalTown, 
                    string physicalCounty, 
                    string physicalCountry, 
                    string nextOfKinName, 
                    string nextOfKinPhone, 
                    string nextOfKinAddress, 
                    string nextOfKinRelationship, 
                    string emergencyContactName, 
                    string emergencyContactPhone, 
                    string previousLicenseNumber, 
                    string previousLicenseCountry, 
                    System.DateTime previousLicenseExpiry, 
                    bool medicalCertificate, 
                    bool birthCertificate, 
                    bool iDCopy, 
                    bool passportPhotos, 
                    bool kRAPin, 
                    bool policeClearance, 
                    bool drivingSchoolCertificate, 
                    bool previousLicenseCopy, 
                    string licenseClassApplied, 
                    decimal feeAmount, 
                    bool declarationAccepted, 
                    object userState) {
            if ((this.InsertGMDLApplicationOperationCompleted == null)) {
                this.InsertGMDLApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGMDLApplicationOperationCompleted);
            }
            this.InvokeAsync("InsertGMDLApplication", new object[] {
                        applicationNo,
                        applicationDate,
                        typeOfApplication,
                        applicantName,
                        dateOfBirth,
                        placeOfBirth,
                        iDNumber,
                        phoneNumber,
                        emailAddress,
                        postalAddress,
                        postalCode,
                        town,
                        county,
                        country,
                        physicalAddress,
                        physicalTown,
                        physicalCounty,
                        physicalCountry,
                        nextOfKinName,
                        nextOfKinPhone,
                        nextOfKinAddress,
                        nextOfKinRelationship,
                        emergencyContactName,
                        emergencyContactPhone,
                        previousLicenseNumber,
                        previousLicenseCountry,
                        previousLicenseExpiry,
                        medicalCertificate,
                        birthCertificate,
                        iDCopy,
                        passportPhotos,
                        kRAPin,
                        policeClearance,
                        drivingSchoolCertificate,
                        previousLicenseCopy,
                        licenseClassApplied,
                        feeAmount,
                        declarationAccepted}, this.InsertGMDLApplicationOperationCompleted, userState);
        }
        
        private void OnInsertGMDLApplicationOperationCompleted(object arg) {
            if ((this.InsertGMDLApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGMDLApplicationCompleted(this, new InsertGMDLApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertGMDSSApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertGMDSSApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertGMDSSApplication(
                    string entryNo, 
                    int applicationType, 
                    string vesselName, 
                    string previousName, 
                    string iMONumber, 
                    string callSign, 
                    string mMSI, 
                    string portOfRegistry, 
                    string flagState, 
                    string vesselType, 
                    decimal grossTonnage, 
                    decimal netTonnage, 
                    decimal lengthOverall, 
                    decimal breadth, 
                    decimal depth, 
                    int yearBuilt, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime keelLaidDate, 
                    bool seaAreaA1, 
                    bool seaAreaA2, 
                    bool seaAreaA3, 
                    bool seaAreaA4, 
                    bool vHFRadioTelephone, 
                    bool mFRadioTelephone, 
                    bool mFHFRadioTelephone, 
                    bool inmarsatTerminal, 
                    bool ePIRB406MHz, 
                    bool survivalCraftVHF, 
                    bool searchRescueRadar, 
                    bool nAVTEXReceiver, 
                    bool eGCReceiver, 
                    string vHFDSCMakeModel, 
                    string vHFDSCSerialNo, 
                    string mFDSCMakeModel, 
                    string mFDSCSerialNo, 
                    string mFHFDSCMakeModel, 
                    string mFHFDSCSerialNo, 
                    string inmarsatMakeModel, 
                    string inmarsatSerialNo, 
                    string ePIRBMakeModel, 
                    string ePIRBSerialNo, 
                    string sARTMakeModel, 
                    string sARTSerialNo, 
                    int certificateType, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expiryDatePreviousCert, 
                    bool surveyRequired, 
                    string surveyType, 
                    string plansForLabelling, 
                    string maintenanceArrangements, 
                    int shipFittedVHFTelephone, 
                    int shipFittedMFTelephone, 
                    int shipFittedMFHFTelephone, 
                    int shipFittedInmarsat, 
                    string shipTradingAreas, 
                    string ownerCompanyName, 
                    string ownerAddress, 
                    string contactPerson, 
                    string phoneNumber, 
                    string emailAddress, 
                    string declarationText, 
                    string applicantName, 
                    string applicantPosition, 
                    string signature, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime applicationDate, 
                    string place, 
                    int status, 
                    string serviceCode, 
                    string portalUser) {
            object[] results = this.Invoke("InsertGMDSSApplication", new object[] {
                        entryNo,
                        applicationType,
                        vesselName,
                        previousName,
                        iMONumber,
                        callSign,
                        mMSI,
                        portOfRegistry,
                        flagState,
                        vesselType,
                        grossTonnage,
                        netTonnage,
                        lengthOverall,
                        breadth,
                        depth,
                        yearBuilt,
                        keelLaidDate,
                        seaAreaA1,
                        seaAreaA2,
                        seaAreaA3,
                        seaAreaA4,
                        vHFRadioTelephone,
                        mFRadioTelephone,
                        mFHFRadioTelephone,
                        inmarsatTerminal,
                        ePIRB406MHz,
                        survivalCraftVHF,
                        searchRescueRadar,
                        nAVTEXReceiver,
                        eGCReceiver,
                        vHFDSCMakeModel,
                        vHFDSCSerialNo,
                        mFDSCMakeModel,
                        mFDSCSerialNo,
                        mFHFDSCMakeModel,
                        mFHFDSCSerialNo,
                        inmarsatMakeModel,
                        inmarsatSerialNo,
                        ePIRBMakeModel,
                        ePIRBSerialNo,
                        sARTMakeModel,
                        sARTSerialNo,
                        certificateType,
                        expiryDatePreviousCert,
                        surveyRequired,
                        surveyType,
                        plansForLabelling,
                        maintenanceArrangements,
                        shipFittedVHFTelephone,
                        shipFittedMFTelephone,
                        shipFittedMFHFTelephone,
                        shipFittedInmarsat,
                        shipTradingAreas,
                        ownerCompanyName,
                        ownerAddress,
                        contactPerson,
                        phoneNumber,
                        emailAddress,
                        declarationText,
                        applicantName,
                        applicantPosition,
                        signature,
                        applicationDate,
                        place,
                        status,
                        serviceCode,
                        portalUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGMDSSApplicationAsync(
                    string entryNo, 
                    int applicationType, 
                    string vesselName, 
                    string previousName, 
                    string iMONumber, 
                    string callSign, 
                    string mMSI, 
                    string portOfRegistry, 
                    string flagState, 
                    string vesselType, 
                    decimal grossTonnage, 
                    decimal netTonnage, 
                    decimal lengthOverall, 
                    decimal breadth, 
                    decimal depth, 
                    int yearBuilt, 
                    System.DateTime keelLaidDate, 
                    bool seaAreaA1, 
                    bool seaAreaA2, 
                    bool seaAreaA3, 
                    bool seaAreaA4, 
                    bool vHFRadioTelephone, 
                    bool mFRadioTelephone, 
                    bool mFHFRadioTelephone, 
                    bool inmarsatTerminal, 
                    bool ePIRB406MHz, 
                    bool survivalCraftVHF, 
                    bool searchRescueRadar, 
                    bool nAVTEXReceiver, 
                    bool eGCReceiver, 
                    string vHFDSCMakeModel, 
                    string vHFDSCSerialNo, 
                    string mFDSCMakeModel, 
                    string mFDSCSerialNo, 
                    string mFHFDSCMakeModel, 
                    string mFHFDSCSerialNo, 
                    string inmarsatMakeModel, 
                    string inmarsatSerialNo, 
                    string ePIRBMakeModel, 
                    string ePIRBSerialNo, 
                    string sARTMakeModel, 
                    string sARTSerialNo, 
                    int certificateType, 
                    System.DateTime expiryDatePreviousCert, 
                    bool surveyRequired, 
                    string surveyType, 
                    string plansForLabelling, 
                    string maintenanceArrangements, 
                    int shipFittedVHFTelephone, 
                    int shipFittedMFTelephone, 
                    int shipFittedMFHFTelephone, 
                    int shipFittedInmarsat, 
                    string shipTradingAreas, 
                    string ownerCompanyName, 
                    string ownerAddress, 
                    string contactPerson, 
                    string phoneNumber, 
                    string emailAddress, 
                    string declarationText, 
                    string applicantName, 
                    string applicantPosition, 
                    string signature, 
                    System.DateTime applicationDate, 
                    string place, 
                    int status, 
                    string serviceCode, 
                    string portalUser) {
            this.InsertGMDSSApplicationAsync(entryNo, applicationType, vesselName, previousName, iMONumber, callSign, mMSI, portOfRegistry, flagState, vesselType, grossTonnage, netTonnage, lengthOverall, breadth, depth, yearBuilt, keelLaidDate, seaAreaA1, seaAreaA2, seaAreaA3, seaAreaA4, vHFRadioTelephone, mFRadioTelephone, mFHFRadioTelephone, inmarsatTerminal, ePIRB406MHz, survivalCraftVHF, searchRescueRadar, nAVTEXReceiver, eGCReceiver, vHFDSCMakeModel, vHFDSCSerialNo, mFDSCMakeModel, mFDSCSerialNo, mFHFDSCMakeModel, mFHFDSCSerialNo, inmarsatMakeModel, inmarsatSerialNo, ePIRBMakeModel, ePIRBSerialNo, sARTMakeModel, sARTSerialNo, certificateType, expiryDatePreviousCert, surveyRequired, surveyType, plansForLabelling, maintenanceArrangements, shipFittedVHFTelephone, shipFittedMFTelephone, shipFittedMFHFTelephone, shipFittedInmarsat, shipTradingAreas, ownerCompanyName, ownerAddress, contactPerson, phoneNumber, emailAddress, declarationText, applicantName, applicantPosition, signature, applicationDate, place, status, serviceCode, portalUser, null);
        }
        
        /// <remarks/>
        public void InsertGMDSSApplicationAsync(
                    string entryNo, 
                    int applicationType, 
                    string vesselName, 
                    string previousName, 
                    string iMONumber, 
                    string callSign, 
                    string mMSI, 
                    string portOfRegistry, 
                    string flagState, 
                    string vesselType, 
                    decimal grossTonnage, 
                    decimal netTonnage, 
                    decimal lengthOverall, 
                    decimal breadth, 
                    decimal depth, 
                    int yearBuilt, 
                    System.DateTime keelLaidDate, 
                    bool seaAreaA1, 
                    bool seaAreaA2, 
                    bool seaAreaA3, 
                    bool seaAreaA4, 
                    bool vHFRadioTelephone, 
                    bool mFRadioTelephone, 
                    bool mFHFRadioTelephone, 
                    bool inmarsatTerminal, 
                    bool ePIRB406MHz, 
                    bool survivalCraftVHF, 
                    bool searchRescueRadar, 
                    bool nAVTEXReceiver, 
                    bool eGCReceiver, 
                    string vHFDSCMakeModel, 
                    string vHFDSCSerialNo, 
                    string mFDSCMakeModel, 
                    string mFDSCSerialNo, 
                    string mFHFDSCMakeModel, 
                    string mFHFDSCSerialNo, 
                    string inmarsatMakeModel, 
                    string inmarsatSerialNo, 
                    string ePIRBMakeModel, 
                    string ePIRBSerialNo, 
                    string sARTMakeModel, 
                    string sARTSerialNo, 
                    int certificateType, 
                    System.DateTime expiryDatePreviousCert, 
                    bool surveyRequired, 
                    string surveyType, 
                    string plansForLabelling, 
                    string maintenanceArrangements, 
                    int shipFittedVHFTelephone, 
                    int shipFittedMFTelephone, 
                    int shipFittedMFHFTelephone, 
                    int shipFittedInmarsat, 
                    string shipTradingAreas, 
                    string ownerCompanyName, 
                    string ownerAddress, 
                    string contactPerson, 
                    string phoneNumber, 
                    string emailAddress, 
                    string declarationText, 
                    string applicantName, 
                    string applicantPosition, 
                    string signature, 
                    System.DateTime applicationDate, 
                    string place, 
                    int status, 
                    string serviceCode, 
                    string portalUser, 
                    object userState) {
            if ((this.InsertGMDSSApplicationOperationCompleted == null)) {
                this.InsertGMDSSApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGMDSSApplicationOperationCompleted);
            }
            this.InvokeAsync("InsertGMDSSApplication", new object[] {
                        entryNo,
                        applicationType,
                        vesselName,
                        previousName,
                        iMONumber,
                        callSign,
                        mMSI,
                        portOfRegistry,
                        flagState,
                        vesselType,
                        grossTonnage,
                        netTonnage,
                        lengthOverall,
                        breadth,
                        depth,
                        yearBuilt,
                        keelLaidDate,
                        seaAreaA1,
                        seaAreaA2,
                        seaAreaA3,
                        seaAreaA4,
                        vHFRadioTelephone,
                        mFRadioTelephone,
                        mFHFRadioTelephone,
                        inmarsatTerminal,
                        ePIRB406MHz,
                        survivalCraftVHF,
                        searchRescueRadar,
                        nAVTEXReceiver,
                        eGCReceiver,
                        vHFDSCMakeModel,
                        vHFDSCSerialNo,
                        mFDSCMakeModel,
                        mFDSCSerialNo,
                        mFHFDSCMakeModel,
                        mFHFDSCSerialNo,
                        inmarsatMakeModel,
                        inmarsatSerialNo,
                        ePIRBMakeModel,
                        ePIRBSerialNo,
                        sARTMakeModel,
                        sARTSerialNo,
                        certificateType,
                        expiryDatePreviousCert,
                        surveyRequired,
                        surveyType,
                        plansForLabelling,
                        maintenanceArrangements,
                        shipFittedVHFTelephone,
                        shipFittedMFTelephone,
                        shipFittedMFHFTelephone,
                        shipFittedInmarsat,
                        shipTradingAreas,
                        ownerCompanyName,
                        ownerAddress,
                        contactPerson,
                        phoneNumber,
                        emailAddress,
                        declarationText,
                        applicantName,
                        applicantPosition,
                        signature,
                        applicationDate,
                        place,
                        status,
                        serviceCode,
                        portalUser}, this.InsertGMDSSApplicationOperationCompleted, userState);
        }
        
        private void OnInsertGMDSSApplicationOperationCompleted(object arg) {
            if ((this.InsertGMDSSApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGMDSSApplicationCompleted(this, new InsertGMDSSApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertGMOImportExportTransitReco" +
            "rd", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertGMOImportExportTransitRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertGMOImportExportTransitRecord(
                    string applicationNo, 
                    int typeOfApplicant, 
                    string applicationPurpose, 
                    string postalAddress, 
                    string postalCode, 
                    string physicalAddress, 
                    string companyRegNo, 
                    string companyName, 
                    string kRA_PIN, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    int yearOfRegistration, 
                    string countryOfOperation, 
                    string countyOfOperation, 
                    string exactLocation, 
                    bool hasCompetentAuthority, 
                    string fullNameOfAuthority, 
                    string mobileNumberAuthority, 
                    string emailAuthority, 
                    string importingCountry, 
                    string exportingCountry, 
                    string supplierName, 
                    string supplierLocation, 
                    string supplierContact, 
                    string supplierEmail, 
                    string countryOfOrigin, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expectedDate, 
                    string commonName, 
                    string scientificName, 
                    string tradeName, 
                    string listOfGMOs, 
                    string uniqueIdentifiers, 
                    string pointOfEntry, 
                    string intendedUse, 
                    bool approvedInReporting, 
                    decimal gMOQuantity, 
                    string summaryOfRisk, 
                    string labellingMethods, 
                    string storageMethods, 
                    string transportMethods, 
                    string packagingMethods, 
                    string useMethods, 
                    string documentationMethods, 
                    string disposalMethods, 
                    string contingencyProcedures, 
                    string emergencyResponsePlan, 
                    string approvalEvidenceFile, 
                    bool treatAsConfidential, 
                    string confidentialReason, 
                    string declarationStatement, 
                    string portal_UserID, 
                    decimal decAmount, 
                    string fullname, 
                    string individualPostalCode, 
                    string cdPhoneNo, 
                    string iDNumber, 
                    string serviceCode) {
            object[] results = this.Invoke("InsertGMOImportExportTransitRecord", new object[] {
                        applicationNo,
                        typeOfApplicant,
                        applicationPurpose,
                        postalAddress,
                        postalCode,
                        physicalAddress,
                        companyRegNo,
                        companyName,
                        kRA_PIN,
                        companyPostalAddress,
                        companyPostalCode,
                        yearOfRegistration,
                        countryOfOperation,
                        countyOfOperation,
                        exactLocation,
                        hasCompetentAuthority,
                        fullNameOfAuthority,
                        mobileNumberAuthority,
                        emailAuthority,
                        importingCountry,
                        exportingCountry,
                        supplierName,
                        supplierLocation,
                        supplierContact,
                        supplierEmail,
                        countryOfOrigin,
                        expectedDate,
                        commonName,
                        scientificName,
                        tradeName,
                        listOfGMOs,
                        uniqueIdentifiers,
                        pointOfEntry,
                        intendedUse,
                        approvedInReporting,
                        gMOQuantity,
                        summaryOfRisk,
                        labellingMethods,
                        storageMethods,
                        transportMethods,
                        packagingMethods,
                        useMethods,
                        documentationMethods,
                        disposalMethods,
                        contingencyProcedures,
                        emergencyResponsePlan,
                        approvalEvidenceFile,
                        treatAsConfidential,
                        confidentialReason,
                        declarationStatement,
                        portal_UserID,
                        decAmount,
                        fullname,
                        individualPostalCode,
                        cdPhoneNo,
                        iDNumber,
                        serviceCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGMOImportExportTransitRecordAsync(
                    string applicationNo, 
                    int typeOfApplicant, 
                    string applicationPurpose, 
                    string postalAddress, 
                    string postalCode, 
                    string physicalAddress, 
                    string companyRegNo, 
                    string companyName, 
                    string kRA_PIN, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    int yearOfRegistration, 
                    string countryOfOperation, 
                    string countyOfOperation, 
                    string exactLocation, 
                    bool hasCompetentAuthority, 
                    string fullNameOfAuthority, 
                    string mobileNumberAuthority, 
                    string emailAuthority, 
                    string importingCountry, 
                    string exportingCountry, 
                    string supplierName, 
                    string supplierLocation, 
                    string supplierContact, 
                    string supplierEmail, 
                    string countryOfOrigin, 
                    System.DateTime expectedDate, 
                    string commonName, 
                    string scientificName, 
                    string tradeName, 
                    string listOfGMOs, 
                    string uniqueIdentifiers, 
                    string pointOfEntry, 
                    string intendedUse, 
                    bool approvedInReporting, 
                    decimal gMOQuantity, 
                    string summaryOfRisk, 
                    string labellingMethods, 
                    string storageMethods, 
                    string transportMethods, 
                    string packagingMethods, 
                    string useMethods, 
                    string documentationMethods, 
                    string disposalMethods, 
                    string contingencyProcedures, 
                    string emergencyResponsePlan, 
                    string approvalEvidenceFile, 
                    bool treatAsConfidential, 
                    string confidentialReason, 
                    string declarationStatement, 
                    string portal_UserID, 
                    decimal decAmount, 
                    string fullname, 
                    string individualPostalCode, 
                    string cdPhoneNo, 
                    string iDNumber, 
                    string serviceCode) {
            this.InsertGMOImportExportTransitRecordAsync(applicationNo, typeOfApplicant, applicationPurpose, postalAddress, postalCode, physicalAddress, companyRegNo, companyName, kRA_PIN, companyPostalAddress, companyPostalCode, yearOfRegistration, countryOfOperation, countyOfOperation, exactLocation, hasCompetentAuthority, fullNameOfAuthority, mobileNumberAuthority, emailAuthority, importingCountry, exportingCountry, supplierName, supplierLocation, supplierContact, supplierEmail, countryOfOrigin, expectedDate, commonName, scientificName, tradeName, listOfGMOs, uniqueIdentifiers, pointOfEntry, intendedUse, approvedInReporting, gMOQuantity, summaryOfRisk, labellingMethods, storageMethods, transportMethods, packagingMethods, useMethods, documentationMethods, disposalMethods, contingencyProcedures, emergencyResponsePlan, approvalEvidenceFile, treatAsConfidential, confidentialReason, declarationStatement, portal_UserID, decAmount, fullname, individualPostalCode, cdPhoneNo, iDNumber, serviceCode, null);
        }
        
        /// <remarks/>
        public void InsertGMOImportExportTransitRecordAsync(
                    string applicationNo, 
                    int typeOfApplicant, 
                    string applicationPurpose, 
                    string postalAddress, 
                    string postalCode, 
                    string physicalAddress, 
                    string companyRegNo, 
                    string companyName, 
                    string kRA_PIN, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    int yearOfRegistration, 
                    string countryOfOperation, 
                    string countyOfOperation, 
                    string exactLocation, 
                    bool hasCompetentAuthority, 
                    string fullNameOfAuthority, 
                    string mobileNumberAuthority, 
                    string emailAuthority, 
                    string importingCountry, 
                    string exportingCountry, 
                    string supplierName, 
                    string supplierLocation, 
                    string supplierContact, 
                    string supplierEmail, 
                    string countryOfOrigin, 
                    System.DateTime expectedDate, 
                    string commonName, 
                    string scientificName, 
                    string tradeName, 
                    string listOfGMOs, 
                    string uniqueIdentifiers, 
                    string pointOfEntry, 
                    string intendedUse, 
                    bool approvedInReporting, 
                    decimal gMOQuantity, 
                    string summaryOfRisk, 
                    string labellingMethods, 
                    string storageMethods, 
                    string transportMethods, 
                    string packagingMethods, 
                    string useMethods, 
                    string documentationMethods, 
                    string disposalMethods, 
                    string contingencyProcedures, 
                    string emergencyResponsePlan, 
                    string approvalEvidenceFile, 
                    bool treatAsConfidential, 
                    string confidentialReason, 
                    string declarationStatement, 
                    string portal_UserID, 
                    decimal decAmount, 
                    string fullname, 
                    string individualPostalCode, 
                    string cdPhoneNo, 
                    string iDNumber, 
                    string serviceCode, 
                    object userState) {
            if ((this.InsertGMOImportExportTransitRecordOperationCompleted == null)) {
                this.InsertGMOImportExportTransitRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGMOImportExportTransitRecordOperationCompleted);
            }
            this.InvokeAsync("InsertGMOImportExportTransitRecord", new object[] {
                        applicationNo,
                        typeOfApplicant,
                        applicationPurpose,
                        postalAddress,
                        postalCode,
                        physicalAddress,
                        companyRegNo,
                        companyName,
                        kRA_PIN,
                        companyPostalAddress,
                        companyPostalCode,
                        yearOfRegistration,
                        countryOfOperation,
                        countyOfOperation,
                        exactLocation,
                        hasCompetentAuthority,
                        fullNameOfAuthority,
                        mobileNumberAuthority,
                        emailAuthority,
                        importingCountry,
                        exportingCountry,
                        supplierName,
                        supplierLocation,
                        supplierContact,
                        supplierEmail,
                        countryOfOrigin,
                        expectedDate,
                        commonName,
                        scientificName,
                        tradeName,
                        listOfGMOs,
                        uniqueIdentifiers,
                        pointOfEntry,
                        intendedUse,
                        approvedInReporting,
                        gMOQuantity,
                        summaryOfRisk,
                        labellingMethods,
                        storageMethods,
                        transportMethods,
                        packagingMethods,
                        useMethods,
                        documentationMethods,
                        disposalMethods,
                        contingencyProcedures,
                        emergencyResponsePlan,
                        approvalEvidenceFile,
                        treatAsConfidential,
                        confidentialReason,
                        declarationStatement,
                        portal_UserID,
                        decAmount,
                        fullname,
                        individualPostalCode,
                        cdPhoneNo,
                        iDNumber,
                        serviceCode}, this.InsertGMOImportExportTransitRecordOperationCompleted, userState);
        }
        
        private void OnInsertGMOImportExportTransitRecordOperationCompleted(object arg) {
            if ((this.InsertGMOImportExportTransitRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGMOImportExportTransitRecordCompleted(this, new InsertGMOImportExportTransitRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertGenomeResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertGenomeResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertGenomeResearch(
                    string applicationNo, 
                    string contactName, 
                    string phoneNumber, 
                    string email, 
                    string companyRegistrationNumber, 
                    string companyInstitutionName, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string locationOfRegisteredOffices, 
                    string telephoneNumberOfCompany, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string organizationLeadLocation, 
                    string projectTitle, 
                    string taxonomicDescription, 
                    string nameOfGenus, 
                    string nameOfSpecies, 
                    string breedOfOrganism, 
                    string strainOfOrganism, 
                    string varietyOfOrganism, 
                    string lineOfOrganism, 
                    string purposeOfGenomeEditing, 
                    string intendedUse, 
                    string molecularTechniquesSummary, 
                    string geneOrDNASequenceModified, 
                    string typeOfGenomeEditing, 
                    string targetOrganismDescriptionBefore, 
                    string targetOrganismDescriptionAfter, 
                    bool vectorsUsed, 
                    string vectorName, 
                    string vectorGeneticMappingDescription, 
                    bool vectorNaturallyPathogenic, 
                    bool vectorDisarmed, 
                    string vectorDisarmamentMethod, 
                    string vectorGeneticMapFile, 
                    string deliveryMethods, 
                    bool foreignDNASequencePresent, 
                    bool productExempted, 
                    string portal_UserID, 
                    string idNumber, 
                    string cdCountry, 
                    decimal decAmount, 
                    string portalUser, 
                    string serviceCode, 
                    string forWhatPurpose, 
                    string techniqueToRemoveGeneticSeq, 
                    string detectionprotocols) {
            object[] results = this.Invoke("InsertGenomeResearch", new object[] {
                        applicationNo,
                        contactName,
                        phoneNumber,
                        email,
                        companyRegistrationNumber,
                        companyInstitutionName,
                        kRAPIN,
                        yearOfRegistration,
                        locationOfRegisteredOffices,
                        telephoneNumberOfCompany,
                        emailAddress,
                        postalAddress,
                        postalCode,
                        organizationLeadLocation,
                        projectTitle,
                        taxonomicDescription,
                        nameOfGenus,
                        nameOfSpecies,
                        breedOfOrganism,
                        strainOfOrganism,
                        varietyOfOrganism,
                        lineOfOrganism,
                        purposeOfGenomeEditing,
                        intendedUse,
                        molecularTechniquesSummary,
                        geneOrDNASequenceModified,
                        typeOfGenomeEditing,
                        targetOrganismDescriptionBefore,
                        targetOrganismDescriptionAfter,
                        vectorsUsed,
                        vectorName,
                        vectorGeneticMappingDescription,
                        vectorNaturallyPathogenic,
                        vectorDisarmed,
                        vectorDisarmamentMethod,
                        vectorGeneticMapFile,
                        deliveryMethods,
                        foreignDNASequencePresent,
                        productExempted,
                        portal_UserID,
                        idNumber,
                        cdCountry,
                        decAmount,
                        portalUser,
                        serviceCode,
                        forWhatPurpose,
                        techniqueToRemoveGeneticSeq,
                        detectionprotocols});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGenomeResearchAsync(
                    string applicationNo, 
                    string contactName, 
                    string phoneNumber, 
                    string email, 
                    string companyRegistrationNumber, 
                    string companyInstitutionName, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string locationOfRegisteredOffices, 
                    string telephoneNumberOfCompany, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string organizationLeadLocation, 
                    string projectTitle, 
                    string taxonomicDescription, 
                    string nameOfGenus, 
                    string nameOfSpecies, 
                    string breedOfOrganism, 
                    string strainOfOrganism, 
                    string varietyOfOrganism, 
                    string lineOfOrganism, 
                    string purposeOfGenomeEditing, 
                    string intendedUse, 
                    string molecularTechniquesSummary, 
                    string geneOrDNASequenceModified, 
                    string typeOfGenomeEditing, 
                    string targetOrganismDescriptionBefore, 
                    string targetOrganismDescriptionAfter, 
                    bool vectorsUsed, 
                    string vectorName, 
                    string vectorGeneticMappingDescription, 
                    bool vectorNaturallyPathogenic, 
                    bool vectorDisarmed, 
                    string vectorDisarmamentMethod, 
                    string vectorGeneticMapFile, 
                    string deliveryMethods, 
                    bool foreignDNASequencePresent, 
                    bool productExempted, 
                    string portal_UserID, 
                    string idNumber, 
                    string cdCountry, 
                    decimal decAmount, 
                    string portalUser, 
                    string serviceCode, 
                    string forWhatPurpose, 
                    string techniqueToRemoveGeneticSeq, 
                    string detectionprotocols) {
            this.InsertGenomeResearchAsync(applicationNo, contactName, phoneNumber, email, companyRegistrationNumber, companyInstitutionName, kRAPIN, yearOfRegistration, locationOfRegisteredOffices, telephoneNumberOfCompany, emailAddress, postalAddress, postalCode, organizationLeadLocation, projectTitle, taxonomicDescription, nameOfGenus, nameOfSpecies, breedOfOrganism, strainOfOrganism, varietyOfOrganism, lineOfOrganism, purposeOfGenomeEditing, intendedUse, molecularTechniquesSummary, geneOrDNASequenceModified, typeOfGenomeEditing, targetOrganismDescriptionBefore, targetOrganismDescriptionAfter, vectorsUsed, vectorName, vectorGeneticMappingDescription, vectorNaturallyPathogenic, vectorDisarmed, vectorDisarmamentMethod, vectorGeneticMapFile, deliveryMethods, foreignDNASequencePresent, productExempted, portal_UserID, idNumber, cdCountry, decAmount, portalUser, serviceCode, forWhatPurpose, techniqueToRemoveGeneticSeq, detectionprotocols, null);
        }
        
        /// <remarks/>
        public void InsertGenomeResearchAsync(
                    string applicationNo, 
                    string contactName, 
                    string phoneNumber, 
                    string email, 
                    string companyRegistrationNumber, 
                    string companyInstitutionName, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string locationOfRegisteredOffices, 
                    string telephoneNumberOfCompany, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string organizationLeadLocation, 
                    string projectTitle, 
                    string taxonomicDescription, 
                    string nameOfGenus, 
                    string nameOfSpecies, 
                    string breedOfOrganism, 
                    string strainOfOrganism, 
                    string varietyOfOrganism, 
                    string lineOfOrganism, 
                    string purposeOfGenomeEditing, 
                    string intendedUse, 
                    string molecularTechniquesSummary, 
                    string geneOrDNASequenceModified, 
                    string typeOfGenomeEditing, 
                    string targetOrganismDescriptionBefore, 
                    string targetOrganismDescriptionAfter, 
                    bool vectorsUsed, 
                    string vectorName, 
                    string vectorGeneticMappingDescription, 
                    bool vectorNaturallyPathogenic, 
                    bool vectorDisarmed, 
                    string vectorDisarmamentMethod, 
                    string vectorGeneticMapFile, 
                    string deliveryMethods, 
                    bool foreignDNASequencePresent, 
                    bool productExempted, 
                    string portal_UserID, 
                    string idNumber, 
                    string cdCountry, 
                    decimal decAmount, 
                    string portalUser, 
                    string serviceCode, 
                    string forWhatPurpose, 
                    string techniqueToRemoveGeneticSeq, 
                    string detectionprotocols, 
                    object userState) {
            if ((this.InsertGenomeResearchOperationCompleted == null)) {
                this.InsertGenomeResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGenomeResearchOperationCompleted);
            }
            this.InvokeAsync("InsertGenomeResearch", new object[] {
                        applicationNo,
                        contactName,
                        phoneNumber,
                        email,
                        companyRegistrationNumber,
                        companyInstitutionName,
                        kRAPIN,
                        yearOfRegistration,
                        locationOfRegisteredOffices,
                        telephoneNumberOfCompany,
                        emailAddress,
                        postalAddress,
                        postalCode,
                        organizationLeadLocation,
                        projectTitle,
                        taxonomicDescription,
                        nameOfGenus,
                        nameOfSpecies,
                        breedOfOrganism,
                        strainOfOrganism,
                        varietyOfOrganism,
                        lineOfOrganism,
                        purposeOfGenomeEditing,
                        intendedUse,
                        molecularTechniquesSummary,
                        geneOrDNASequenceModified,
                        typeOfGenomeEditing,
                        targetOrganismDescriptionBefore,
                        targetOrganismDescriptionAfter,
                        vectorsUsed,
                        vectorName,
                        vectorGeneticMappingDescription,
                        vectorNaturallyPathogenic,
                        vectorDisarmed,
                        vectorDisarmamentMethod,
                        vectorGeneticMapFile,
                        deliveryMethods,
                        foreignDNASequencePresent,
                        productExempted,
                        portal_UserID,
                        idNumber,
                        cdCountry,
                        decAmount,
                        portalUser,
                        serviceCode,
                        forWhatPurpose,
                        techniqueToRemoveGeneticSeq,
                        detectionprotocols}, this.InsertGenomeResearchOperationCompleted, userState);
        }
        
        private void OnInsertGenomeResearchOperationCompleted(object arg) {
            if ((this.InsertGenomeResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGenomeResearchCompleted(this, new InsertGenomeResearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertGrievance", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertGrievance_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertGrievance(string employeeNo, string description, string accusedEmployee, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateCreated) {
            object[] results = this.Invoke("InsertGrievance", new object[] {
                        employeeNo,
                        description,
                        accusedEmployee,
                        dateCreated});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGrievanceAsync(string employeeNo, string description, string accusedEmployee, System.DateTime dateCreated) {
            this.InsertGrievanceAsync(employeeNo, description, accusedEmployee, dateCreated, null);
        }
        
        /// <remarks/>
        public void InsertGrievanceAsync(string employeeNo, string description, string accusedEmployee, System.DateTime dateCreated, object userState) {
            if ((this.InsertGrievanceOperationCompleted == null)) {
                this.InsertGrievanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGrievanceOperationCompleted);
            }
            this.InvokeAsync("InsertGrievance", new object[] {
                        employeeNo,
                        description,
                        accusedEmployee,
                        dateCreated}, this.InsertGrievanceOperationCompleted, userState);
        }
        
        private void OnInsertGrievanceOperationCompleted(object arg) {
            if ((this.InsertGrievanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGrievanceCompleted(this, new InsertGrievanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertHandoverNotes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertHandoverNotes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertHandoverNotes(string leaveNo, int handoverType, string activity, string status, string reason) {
            this.Invoke("InsertHandoverNotes", new object[] {
                        leaveNo,
                        handoverType,
                        activity,
                        status,
                        reason});
        }
        
        /// <remarks/>
        public void InsertHandoverNotesAsync(string leaveNo, int handoverType, string activity, string status, string reason) {
            this.InsertHandoverNotesAsync(leaveNo, handoverType, activity, status, reason, null);
        }
        
        /// <remarks/>
        public void InsertHandoverNotesAsync(string leaveNo, int handoverType, string activity, string status, string reason, object userState) {
            if ((this.InsertHandoverNotesOperationCompleted == null)) {
                this.InsertHandoverNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertHandoverNotesOperationCompleted);
            }
            this.InvokeAsync("InsertHandoverNotes", new object[] {
                        leaveNo,
                        handoverType,
                        activity,
                        status,
                        reason}, this.InsertHandoverNotesOperationCompleted, userState);
        }
        
        private void OnInsertHandoverNotesOperationCompleted(object arg) {
            if ((this.InsertHandoverNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertHandoverNotesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertImperestNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertImperestNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertImperestNo(string imprestNo, string docNo) {
            object[] results = this.Invoke("InsertImperestNo", new object[] {
                        imprestNo,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertImperestNoAsync(string imprestNo, string docNo) {
            this.InsertImperestNoAsync(imprestNo, docNo, null);
        }
        
        /// <remarks/>
        public void InsertImperestNoAsync(string imprestNo, string docNo, object userState) {
            if ((this.InsertImperestNoOperationCompleted == null)) {
                this.InsertImperestNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertImperestNoOperationCompleted);
            }
            this.InvokeAsync("InsertImperestNo", new object[] {
                        imprestNo,
                        docNo}, this.InsertImperestNoOperationCompleted, userState);
        }
        
        private void OnInsertImperestNoOperationCompleted(object arg) {
            if ((this.InsertImperestNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertImperestNoCompleted(this, new InsertImperestNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertInductionHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertInductionHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertInductionHeader(string empNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string venue, string workplans) {
            object[] results = this.Invoke("InsertInductionHeader", new object[] {
                        empNo,
                        startDate,
                        endDate,
                        venue,
                        workplans});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertInductionHeaderAsync(string empNo, System.DateTime startDate, System.DateTime endDate, string venue, string workplans) {
            this.InsertInductionHeaderAsync(empNo, startDate, endDate, venue, workplans, null);
        }
        
        /// <remarks/>
        public void InsertInductionHeaderAsync(string empNo, System.DateTime startDate, System.DateTime endDate, string venue, string workplans, object userState) {
            if ((this.InsertInductionHeaderOperationCompleted == null)) {
                this.InsertInductionHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInductionHeaderOperationCompleted);
            }
            this.InvokeAsync("InsertInductionHeader", new object[] {
                        empNo,
                        startDate,
                        endDate,
                        venue,
                        workplans}, this.InsertInductionHeaderOperationCompleted, userState);
        }
        
        private void OnInsertInductionHeaderOperationCompleted(object arg) {
            if ((this.InsertInductionHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInductionHeaderCompleted(this, new InsertInductionHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertInductionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertInductionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertInductionLines(string docNo, string empno) {
            this.Invoke("InsertInductionLines", new object[] {
                        docNo,
                        empno});
        }
        
        /// <remarks/>
        public void InsertInductionLinesAsync(string docNo, string empno) {
            this.InsertInductionLinesAsync(docNo, empno, null);
        }
        
        /// <remarks/>
        public void InsertInductionLinesAsync(string docNo, string empno, object userState) {
            if ((this.InsertInductionLinesOperationCompleted == null)) {
                this.InsertInductionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInductionLinesOperationCompleted);
            }
            this.InvokeAsync("InsertInductionLines", new object[] {
                        docNo,
                        empno}, this.InsertInductionLinesOperationCompleted, userState);
        }
        
        private void OnInsertInductionLinesOperationCompleted(object arg) {
            if ((this.InsertInductionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInductionLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertKpiRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertKpiRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int InsertKpiRecord(int entryNo, string appraisalNo, string kpi, decimal weight) {
            object[] results = this.Invoke("InsertKpiRecord", new object[] {
                        entryNo,
                        appraisalNo,
                        kpi,
                        weight});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertKpiRecordAsync(int entryNo, string appraisalNo, string kpi, decimal weight) {
            this.InsertKpiRecordAsync(entryNo, appraisalNo, kpi, weight, null);
        }
        
        /// <remarks/>
        public void InsertKpiRecordAsync(int entryNo, string appraisalNo, string kpi, decimal weight, object userState) {
            if ((this.InsertKpiRecordOperationCompleted == null)) {
                this.InsertKpiRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertKpiRecordOperationCompleted);
            }
            this.InvokeAsync("InsertKpiRecord", new object[] {
                        entryNo,
                        appraisalNo,
                        kpi,
                        weight}, this.InsertKpiRecordOperationCompleted, userState);
        }
        
        private void OnInsertKpiRecordOperationCompleted(object arg) {
            if ((this.InsertKpiRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertKpiRecordCompleted(this, new InsertKpiRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertLabSample", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertLabSample_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertLabSample(string description, System.DateTime receivedAt, System.DateTime analysedAt, System.DateTime exportedAt, string userId) {
            object[] results = this.Invoke("InsertLabSample", new object[] {
                        description,
                        receivedAt,
                        analysedAt,
                        exportedAt,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLabSampleAsync(string description, System.DateTime receivedAt, System.DateTime analysedAt, System.DateTime exportedAt, string userId) {
            this.InsertLabSampleAsync(description, receivedAt, analysedAt, exportedAt, userId, null);
        }
        
        /// <remarks/>
        public void InsertLabSampleAsync(string description, System.DateTime receivedAt, System.DateTime analysedAt, System.DateTime exportedAt, string userId, object userState) {
            if ((this.InsertLabSampleOperationCompleted == null)) {
                this.InsertLabSampleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLabSampleOperationCompleted);
            }
            this.InvokeAsync("InsertLabSample", new object[] {
                        description,
                        receivedAt,
                        analysedAt,
                        exportedAt,
                        userId}, this.InsertLabSampleOperationCompleted, userState);
        }
        
        private void OnInsertLabSampleOperationCompleted(object arg) {
            if ((this.InsertLabSampleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLabSampleCompleted(this, new InsertLabSampleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertLeavePlannerHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertLeavePlannerHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertLeavePlannerHeader(string employeeNo, string leaveCalendar) {
            object[] results = this.Invoke("InsertLeavePlannerHeader", new object[] {
                        employeeNo,
                        leaveCalendar});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLeavePlannerHeaderAsync(string employeeNo, string leaveCalendar) {
            this.InsertLeavePlannerHeaderAsync(employeeNo, leaveCalendar, null);
        }
        
        /// <remarks/>
        public void InsertLeavePlannerHeaderAsync(string employeeNo, string leaveCalendar, object userState) {
            if ((this.InsertLeavePlannerHeaderOperationCompleted == null)) {
                this.InsertLeavePlannerHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLeavePlannerHeaderOperationCompleted);
            }
            this.InvokeAsync("InsertLeavePlannerHeader", new object[] {
                        employeeNo,
                        leaveCalendar}, this.InsertLeavePlannerHeaderOperationCompleted, userState);
        }
        
        private void OnInsertLeavePlannerHeaderOperationCompleted(object arg) {
            if ((this.InsertLeavePlannerHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLeavePlannerHeaderCompleted(this, new InsertLeavePlannerHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertLeavePlannerLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertLeavePlannerLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertLeavePlannerLines(string docNo, string empNo, string leaveType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, decimal daysApplied) {
            this.Invoke("InsertLeavePlannerLines", new object[] {
                        docNo,
                        empNo,
                        leaveType,
                        startDate,
                        daysApplied});
        }
        
        /// <remarks/>
        public void InsertLeavePlannerLinesAsync(string docNo, string empNo, string leaveType, System.DateTime startDate, decimal daysApplied) {
            this.InsertLeavePlannerLinesAsync(docNo, empNo, leaveType, startDate, daysApplied, null);
        }
        
        /// <remarks/>
        public void InsertLeavePlannerLinesAsync(string docNo, string empNo, string leaveType, System.DateTime startDate, decimal daysApplied, object userState) {
            if ((this.InsertLeavePlannerLinesOperationCompleted == null)) {
                this.InsertLeavePlannerLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLeavePlannerLinesOperationCompleted);
            }
            this.InvokeAsync("InsertLeavePlannerLines", new object[] {
                        docNo,
                        empNo,
                        leaveType,
                        startDate,
                        daysApplied}, this.InsertLeavePlannerLinesOperationCompleted, userState);
        }
        
        private void OnInsertLeavePlannerLinesOperationCompleted(object arg) {
            if ((this.InsertLeavePlannerLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLeavePlannerLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertLeaveRecall", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertLeaveRecall_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertLeaveRecall(string leaveNo, decimal recalledDays, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime recalledDate, string recallReason) {
            object[] results = this.Invoke("InsertLeaveRecall", new object[] {
                        leaveNo,
                        recalledDays,
                        recalledDate,
                        recallReason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLeaveRecallAsync(string leaveNo, decimal recalledDays, System.DateTime recalledDate, string recallReason) {
            this.InsertLeaveRecallAsync(leaveNo, recalledDays, recalledDate, recallReason, null);
        }
        
        /// <remarks/>
        public void InsertLeaveRecallAsync(string leaveNo, decimal recalledDays, System.DateTime recalledDate, string recallReason, object userState) {
            if ((this.InsertLeaveRecallOperationCompleted == null)) {
                this.InsertLeaveRecallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLeaveRecallOperationCompleted);
            }
            this.InvokeAsync("InsertLeaveRecall", new object[] {
                        leaveNo,
                        recalledDays,
                        recalledDate,
                        recallReason}, this.InsertLeaveRecallOperationCompleted, userState);
        }
        
        private void OnInsertLeaveRecallOperationCompleted(object arg) {
            if ((this.InsertLeaveRecallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLeaveRecallCompleted(this, new InsertLeaveRecallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertManagementInitiatedTransfe" +
            "r", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertManagementInitiatedTransfer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertManagementInitiatedTransfer(string employeeNo, string station1, string staffUserId, string comments, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime transferDate) {
            object[] results = this.Invoke("InsertManagementInitiatedTransfer", new object[] {
                        employeeNo,
                        station1,
                        staffUserId,
                        comments,
                        transferDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertManagementInitiatedTransferAsync(string employeeNo, string station1, string staffUserId, string comments, System.DateTime transferDate) {
            this.InsertManagementInitiatedTransferAsync(employeeNo, station1, staffUserId, comments, transferDate, null);
        }
        
        /// <remarks/>
        public void InsertManagementInitiatedTransferAsync(string employeeNo, string station1, string staffUserId, string comments, System.DateTime transferDate, object userState) {
            if ((this.InsertManagementInitiatedTransferOperationCompleted == null)) {
                this.InsertManagementInitiatedTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertManagementInitiatedTransferOperationCompleted);
            }
            this.InvokeAsync("InsertManagementInitiatedTransfer", new object[] {
                        employeeNo,
                        station1,
                        staffUserId,
                        comments,
                        transferDate}, this.InsertManagementInitiatedTransferOperationCompleted, userState);
        }
        
        private void OnInsertManagementInitiatedTransferOperationCompleted(object arg) {
            if ((this.InsertManagementInitiatedTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertManagementInitiatedTransferCompleted(this, new InsertManagementInitiatedTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertOtherCost", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertOtherCost_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int InsertOtherCost(string imprestMemoNo, string voteItem, decimal rate, string requiredFor, int type, decimal days) {
            object[] results = this.Invoke("InsertOtherCost", new object[] {
                        imprestMemoNo,
                        voteItem,
                        rate,
                        requiredFor,
                        type,
                        days});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertOtherCostAsync(string imprestMemoNo, string voteItem, decimal rate, string requiredFor, int type, decimal days) {
            this.InsertOtherCostAsync(imprestMemoNo, voteItem, rate, requiredFor, type, days, null);
        }
        
        /// <remarks/>
        public void InsertOtherCostAsync(string imprestMemoNo, string voteItem, decimal rate, string requiredFor, int type, decimal days, object userState) {
            if ((this.InsertOtherCostOperationCompleted == null)) {
                this.InsertOtherCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOtherCostOperationCompleted);
            }
            this.InvokeAsync("InsertOtherCost", new object[] {
                        imprestMemoNo,
                        voteItem,
                        rate,
                        requiredFor,
                        type,
                        days}, this.InsertOtherCostOperationCompleted, userState);
        }
        
        private void OnInsertOtherCostOperationCompleted(object arg) {
            if ((this.InsertOtherCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOtherCostCompleted(this, new InsertOtherCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertOtherDuty", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertOtherDuty_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertOtherDuty(string employeeNo, string appraisalPeriod, string appraisalNo, string duties) {
            this.Invoke("InsertOtherDuty", new object[] {
                        employeeNo,
                        appraisalPeriod,
                        appraisalNo,
                        duties});
        }
        
        /// <remarks/>
        public void InsertOtherDutyAsync(string employeeNo, string appraisalPeriod, string appraisalNo, string duties) {
            this.InsertOtherDutyAsync(employeeNo, appraisalPeriod, appraisalNo, duties, null);
        }
        
        /// <remarks/>
        public void InsertOtherDutyAsync(string employeeNo, string appraisalPeriod, string appraisalNo, string duties, object userState) {
            if ((this.InsertOtherDutyOperationCompleted == null)) {
                this.InsertOtherDutyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOtherDutyOperationCompleted);
            }
            this.InvokeAsync("InsertOtherDuty", new object[] {
                        employeeNo,
                        appraisalPeriod,
                        appraisalNo,
                        duties}, this.InsertOtherDutyOperationCompleted, userState);
        }
        
        private void OnInsertOtherDutyOperationCompleted(object arg) {
            if ((this.InsertOtherDutyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOtherDutyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertPASValues", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertPASValues_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertPASValues(string docNo, string strategicPlanID, string coreValue, string appraiseeComments, string appraisersComments, string behavioralExpectation, decimal jointAssessment, decimal selfAssessment, string description) {
            object[] results = this.Invoke("InsertPASValues", new object[] {
                        docNo,
                        strategicPlanID,
                        coreValue,
                        appraiseeComments,
                        appraisersComments,
                        behavioralExpectation,
                        jointAssessment,
                        selfAssessment,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPASValuesAsync(string docNo, string strategicPlanID, string coreValue, string appraiseeComments, string appraisersComments, string behavioralExpectation, decimal jointAssessment, decimal selfAssessment, string description) {
            this.InsertPASValuesAsync(docNo, strategicPlanID, coreValue, appraiseeComments, appraisersComments, behavioralExpectation, jointAssessment, selfAssessment, description, null);
        }
        
        /// <remarks/>
        public void InsertPASValuesAsync(string docNo, string strategicPlanID, string coreValue, string appraiseeComments, string appraisersComments, string behavioralExpectation, decimal jointAssessment, decimal selfAssessment, string description, object userState) {
            if ((this.InsertPASValuesOperationCompleted == null)) {
                this.InsertPASValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPASValuesOperationCompleted);
            }
            this.InvokeAsync("InsertPASValues", new object[] {
                        docNo,
                        strategicPlanID,
                        coreValue,
                        appraiseeComments,
                        appraisersComments,
                        behavioralExpectation,
                        jointAssessment,
                        selfAssessment,
                        description}, this.InsertPASValuesOperationCompleted, userState);
        }
        
        private void OnInsertPASValuesOperationCompleted(object arg) {
            if ((this.InsertPASValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPASValuesCompleted(this, new InsertPASValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertPMMUHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertPMMUHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertPMMUHeader(string strategy, string desc, string pmmuH, string emploNumb, string targetCommitee, string evaluationCommitee, string createdBy, int populateActivities) {
            object[] results = this.Invoke("InsertPMMUHeader", new object[] {
                        strategy,
                        desc,
                        pmmuH,
                        emploNumb,
                        targetCommitee,
                        evaluationCommitee,
                        createdBy,
                        populateActivities});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPMMUHeaderAsync(string strategy, string desc, string pmmuH, string emploNumb, string targetCommitee, string evaluationCommitee, string createdBy, int populateActivities) {
            this.InsertPMMUHeaderAsync(strategy, desc, pmmuH, emploNumb, targetCommitee, evaluationCommitee, createdBy, populateActivities, null);
        }
        
        /// <remarks/>
        public void InsertPMMUHeaderAsync(string strategy, string desc, string pmmuH, string emploNumb, string targetCommitee, string evaluationCommitee, string createdBy, int populateActivities, object userState) {
            if ((this.InsertPMMUHeaderOperationCompleted == null)) {
                this.InsertPMMUHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPMMUHeaderOperationCompleted);
            }
            this.InvokeAsync("InsertPMMUHeader", new object[] {
                        strategy,
                        desc,
                        pmmuH,
                        emploNumb,
                        targetCommitee,
                        evaluationCommitee,
                        createdBy,
                        populateActivities}, this.InsertPMMUHeaderOperationCompleted, userState);
        }
        
        private void OnInsertPMMUHeaderOperationCompleted(object arg) {
            if ((this.InsertPMMUHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPMMUHeaderCompleted(this, new InsertPMMUHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertPerfomanceTargetsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertPerfomanceTargetsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertPerfomanceTargetsLines(string contractNo, string activity, string pasActivity, string individualTarget, decimal weight, decimal target, string indicator, string keyPerformanceIndicator, string unitofMeasure, decimal selfAssessmentTarget, decimal jointTarget, decimal weightedScore, string pMMUNumber) {
            object[] results = this.Invoke("InsertPerfomanceTargetsLines", new object[] {
                        contractNo,
                        activity,
                        pasActivity,
                        individualTarget,
                        weight,
                        target,
                        indicator,
                        keyPerformanceIndicator,
                        unitofMeasure,
                        selfAssessmentTarget,
                        jointTarget,
                        weightedScore,
                        pMMUNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPerfomanceTargetsLinesAsync(string contractNo, string activity, string pasActivity, string individualTarget, decimal weight, decimal target, string indicator, string keyPerformanceIndicator, string unitofMeasure, decimal selfAssessmentTarget, decimal jointTarget, decimal weightedScore, string pMMUNumber) {
            this.InsertPerfomanceTargetsLinesAsync(contractNo, activity, pasActivity, individualTarget, weight, target, indicator, keyPerformanceIndicator, unitofMeasure, selfAssessmentTarget, jointTarget, weightedScore, pMMUNumber, null);
        }
        
        /// <remarks/>
        public void InsertPerfomanceTargetsLinesAsync(string contractNo, string activity, string pasActivity, string individualTarget, decimal weight, decimal target, string indicator, string keyPerformanceIndicator, string unitofMeasure, decimal selfAssessmentTarget, decimal jointTarget, decimal weightedScore, string pMMUNumber, object userState) {
            if ((this.InsertPerfomanceTargetsLinesOperationCompleted == null)) {
                this.InsertPerfomanceTargetsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPerfomanceTargetsLinesOperationCompleted);
            }
            this.InvokeAsync("InsertPerfomanceTargetsLines", new object[] {
                        contractNo,
                        activity,
                        pasActivity,
                        individualTarget,
                        weight,
                        target,
                        indicator,
                        keyPerformanceIndicator,
                        unitofMeasure,
                        selfAssessmentTarget,
                        jointTarget,
                        weightedScore,
                        pMMUNumber}, this.InsertPerfomanceTargetsLinesOperationCompleted, userState);
        }
        
        private void OnInsertPerfomanceTargetsLinesOperationCompleted(object arg) {
            if ((this.InsertPerfomanceTargetsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPerfomanceTargetsLinesCompleted(this, new InsertPerfomanceTargetsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertPettyCash", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertPettyCash_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertPettyCash(string docNo, string pettycashNo) {
            object[] results = this.Invoke("InsertPettyCash", new object[] {
                        docNo,
                        pettycashNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPettyCashAsync(string docNo, string pettycashNo) {
            this.InsertPettyCashAsync(docNo, pettycashNo, null);
        }
        
        /// <remarks/>
        public void InsertPettyCashAsync(string docNo, string pettycashNo, object userState) {
            if ((this.InsertPettyCashOperationCompleted == null)) {
                this.InsertPettyCashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPettyCashOperationCompleted);
            }
            this.InvokeAsync("InsertPettyCash", new object[] {
                        docNo,
                        pettycashNo}, this.InsertPettyCashOperationCompleted, userState);
        }
        
        private void OnInsertPettyCashOperationCompleted(object arg) {
            if ((this.InsertPettyCashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPettyCashCompleted(this, new InsertPettyCashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertPmmuLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertPmmuLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int InsertPmmuLines(string docNumber, string sTajPlan, [System.Xml.Serialization.XmlElementAttribute("quantity")] decimal[] quantity, string outcome, string strategies, string strategyOutput, string unitofMeasure, string baselineTarget, string strategicOb, string perspective, string comments) {
            object[] results = this.Invoke("InsertPmmuLines", new object[] {
                        docNumber,
                        sTajPlan,
                        quantity,
                        outcome,
                        strategies,
                        strategyOutput,
                        unitofMeasure,
                        baselineTarget,
                        strategicOb,
                        perspective,
                        comments});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPmmuLinesAsync(string docNumber, string sTajPlan, decimal[] quantity, string outcome, string strategies, string strategyOutput, string unitofMeasure, string baselineTarget, string strategicOb, string perspective, string comments) {
            this.InsertPmmuLinesAsync(docNumber, sTajPlan, quantity, outcome, strategies, strategyOutput, unitofMeasure, baselineTarget, strategicOb, perspective, comments, null);
        }
        
        /// <remarks/>
        public void InsertPmmuLinesAsync(string docNumber, string sTajPlan, decimal[] quantity, string outcome, string strategies, string strategyOutput, string unitofMeasure, string baselineTarget, string strategicOb, string perspective, string comments, object userState) {
            if ((this.InsertPmmuLinesOperationCompleted == null)) {
                this.InsertPmmuLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPmmuLinesOperationCompleted);
            }
            this.InvokeAsync("InsertPmmuLines", new object[] {
                        docNumber,
                        sTajPlan,
                        quantity,
                        outcome,
                        strategies,
                        strategyOutput,
                        unitofMeasure,
                        baselineTarget,
                        strategicOb,
                        perspective,
                        comments}, this.InsertPmmuLinesOperationCompleted, userState);
        }
        
        private void OnInsertPmmuLinesOperationCompleted(object arg) {
            if ((this.InsertPmmuLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPmmuLinesCompleted(this, new InsertPmmuLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertProcurementPlanEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertProcurementPlanEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertProcurementPlanEntry(
                    string procurementPlanID, 
                    string planCategory, 
                    int planItemType, 
                    string planItemNo, 
                    string procurementType, 
                    string solicitationType, 
                    int procurementMethod, 
                    string otherMethods, 
                    string preferenceReservationCode, 
                    string fundingSourceID, 
                    int invitationNoticeType, 
                    decimal quantity, 
                    decimal unitCost, 
                    decimal q1Quantity, 
                    decimal q1Amount, 
                    decimal q2Quantity, 
                    decimal q2Amount, 
                    decimal q3Quantity, 
                    decimal q3Amount, 
                    decimal q4Quantity, 
                    decimal q4Amount) {
            this.Invoke("InsertProcurementPlanEntry", new object[] {
                        procurementPlanID,
                        planCategory,
                        planItemType,
                        planItemNo,
                        procurementType,
                        solicitationType,
                        procurementMethod,
                        otherMethods,
                        preferenceReservationCode,
                        fundingSourceID,
                        invitationNoticeType,
                        quantity,
                        unitCost,
                        q1Quantity,
                        q1Amount,
                        q2Quantity,
                        q2Amount,
                        q3Quantity,
                        q3Amount,
                        q4Quantity,
                        q4Amount});
        }
        
        /// <remarks/>
        public void InsertProcurementPlanEntryAsync(
                    string procurementPlanID, 
                    string planCategory, 
                    int planItemType, 
                    string planItemNo, 
                    string procurementType, 
                    string solicitationType, 
                    int procurementMethod, 
                    string otherMethods, 
                    string preferenceReservationCode, 
                    string fundingSourceID, 
                    int invitationNoticeType, 
                    decimal quantity, 
                    decimal unitCost, 
                    decimal q1Quantity, 
                    decimal q1Amount, 
                    decimal q2Quantity, 
                    decimal q2Amount, 
                    decimal q3Quantity, 
                    decimal q3Amount, 
                    decimal q4Quantity, 
                    decimal q4Amount) {
            this.InsertProcurementPlanEntryAsync(procurementPlanID, planCategory, planItemType, planItemNo, procurementType, solicitationType, procurementMethod, otherMethods, preferenceReservationCode, fundingSourceID, invitationNoticeType, quantity, unitCost, q1Quantity, q1Amount, q2Quantity, q2Amount, q3Quantity, q3Amount, q4Quantity, q4Amount, null);
        }
        
        /// <remarks/>
        public void InsertProcurementPlanEntryAsync(
                    string procurementPlanID, 
                    string planCategory, 
                    int planItemType, 
                    string planItemNo, 
                    string procurementType, 
                    string solicitationType, 
                    int procurementMethod, 
                    string otherMethods, 
                    string preferenceReservationCode, 
                    string fundingSourceID, 
                    int invitationNoticeType, 
                    decimal quantity, 
                    decimal unitCost, 
                    decimal q1Quantity, 
                    decimal q1Amount, 
                    decimal q2Quantity, 
                    decimal q2Amount, 
                    decimal q3Quantity, 
                    decimal q3Amount, 
                    decimal q4Quantity, 
                    decimal q4Amount, 
                    object userState) {
            if ((this.InsertProcurementPlanEntryOperationCompleted == null)) {
                this.InsertProcurementPlanEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProcurementPlanEntryOperationCompleted);
            }
            this.InvokeAsync("InsertProcurementPlanEntry", new object[] {
                        procurementPlanID,
                        planCategory,
                        planItemType,
                        planItemNo,
                        procurementType,
                        solicitationType,
                        procurementMethod,
                        otherMethods,
                        preferenceReservationCode,
                        fundingSourceID,
                        invitationNoticeType,
                        quantity,
                        unitCost,
                        q1Quantity,
                        q1Amount,
                        q2Quantity,
                        q2Amount,
                        q3Quantity,
                        q3Amount,
                        q4Quantity,
                        q4Amount}, this.InsertProcurementPlanEntryOperationCompleted, userState);
        }
        
        private void OnInsertProcurementPlanEntryOperationCompleted(object arg) {
            if ((this.InsertProcurementPlanEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProcurementPlanEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertProcurementPlanLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertProcurementPlanLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertProcurementPlanLines(string procurementPlanID, string planCategory) {
            this.Invoke("InsertProcurementPlanLines", new object[] {
                        procurementPlanID,
                        planCategory});
        }
        
        /// <remarks/>
        public void InsertProcurementPlanLinesAsync(string procurementPlanID, string planCategory) {
            this.InsertProcurementPlanLinesAsync(procurementPlanID, planCategory, null);
        }
        
        /// <remarks/>
        public void InsertProcurementPlanLinesAsync(string procurementPlanID, string planCategory, object userState) {
            if ((this.InsertProcurementPlanLinesOperationCompleted == null)) {
                this.InsertProcurementPlanLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProcurementPlanLinesOperationCompleted);
            }
            this.InvokeAsync("InsertProcurementPlanLines", new object[] {
                        procurementPlanID,
                        planCategory}, this.InsertProcurementPlanLinesOperationCompleted, userState);
        }
        
        private void OnInsertProcurementPlanLinesOperationCompleted(object arg) {
            if ((this.InsertProcurementPlanLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProcurementPlanLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertProcurementPlan", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertProcurementPlan_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertProcurementPlan(string empUserID, string description, string cSRID, string geographicalID, string adminUnit, string voteID) {
            object[] results = this.Invoke("InsertProcurementPlan", new object[] {
                        empUserID,
                        description,
                        cSRID,
                        geographicalID,
                        adminUnit,
                        voteID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertProcurementPlanAsync(string empUserID, string description, string cSRID, string geographicalID, string adminUnit, string voteID) {
            this.InsertProcurementPlanAsync(empUserID, description, cSRID, geographicalID, adminUnit, voteID, null);
        }
        
        /// <remarks/>
        public void InsertProcurementPlanAsync(string empUserID, string description, string cSRID, string geographicalID, string adminUnit, string voteID, object userState) {
            if ((this.InsertProcurementPlanOperationCompleted == null)) {
                this.InsertProcurementPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProcurementPlanOperationCompleted);
            }
            this.InvokeAsync("InsertProcurementPlan", new object[] {
                        empUserID,
                        description,
                        cSRID,
                        geographicalID,
                        adminUnit,
                        voteID}, this.InsertProcurementPlanOperationCompleted, userState);
        }
        
        private void OnInsertProcurementPlanOperationCompleted(object arg) {
            if ((this.InsertProcurementPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProcurementPlanCompleted(this, new InsertProcurementPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertReallocationHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertReallocationHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertReallocationHeader(string budgetCode, string purpose, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime postingDate, string consolidationTemplate, int quarter) {
            object[] results = this.Invoke("InsertReallocationHeader", new object[] {
                        budgetCode,
                        purpose,
                        postingDate,
                        consolidationTemplate,
                        quarter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertReallocationHeaderAsync(string budgetCode, string purpose, System.DateTime postingDate, string consolidationTemplate, int quarter) {
            this.InsertReallocationHeaderAsync(budgetCode, purpose, postingDate, consolidationTemplate, quarter, null);
        }
        
        /// <remarks/>
        public void InsertReallocationHeaderAsync(string budgetCode, string purpose, System.DateTime postingDate, string consolidationTemplate, int quarter, object userState) {
            if ((this.InsertReallocationHeaderOperationCompleted == null)) {
                this.InsertReallocationHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertReallocationHeaderOperationCompleted);
            }
            this.InvokeAsync("InsertReallocationHeader", new object[] {
                        budgetCode,
                        purpose,
                        postingDate,
                        consolidationTemplate,
                        quarter}, this.InsertReallocationHeaderOperationCompleted, userState);
        }
        
        private void OnInsertReallocationHeaderOperationCompleted(object arg) {
            if ((this.InsertReallocationHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertReallocationHeaderCompleted(this, new InsertReallocationHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertReallocationLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertReallocationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertReallocationLines(string documentNo, string budgetLine, string geographical, string adminUnit, string programme, decimal amount) {
            this.Invoke("InsertReallocationLines", new object[] {
                        documentNo,
                        budgetLine,
                        geographical,
                        adminUnit,
                        programme,
                        amount});
        }
        
        /// <remarks/>
        public void InsertReallocationLinesAsync(string documentNo, string budgetLine, string geographical, string adminUnit, string programme, decimal amount) {
            this.InsertReallocationLinesAsync(documentNo, budgetLine, geographical, adminUnit, programme, amount, null);
        }
        
        /// <remarks/>
        public void InsertReallocationLinesAsync(string documentNo, string budgetLine, string geographical, string adminUnit, string programme, decimal amount, object userState) {
            if ((this.InsertReallocationLinesOperationCompleted == null)) {
                this.InsertReallocationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertReallocationLinesOperationCompleted);
            }
            this.InvokeAsync("InsertReallocationLines", new object[] {
                        documentNo,
                        budgetLine,
                        geographical,
                        adminUnit,
                        programme,
                        amount}, this.InsertReallocationLinesOperationCompleted, userState);
        }
        
        private void OnInsertReallocationLinesOperationCompleted(object arg) {
            if ((this.InsertReallocationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertReallocationLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertReservationHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertReservationHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertReservationHeader(string requestorID, string employeeNo, string description, int type2, string implementingUnit, string dutyStation) {
            object[] results = this.Invoke("InsertReservationHeader", new object[] {
                        requestorID,
                        employeeNo,
                        description,
                        type2,
                        implementingUnit,
                        dutyStation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertReservationHeaderAsync(string requestorID, string employeeNo, string description, int type2, string implementingUnit, string dutyStation) {
            this.InsertReservationHeaderAsync(requestorID, employeeNo, description, type2, implementingUnit, dutyStation, null);
        }
        
        /// <remarks/>
        public void InsertReservationHeaderAsync(string requestorID, string employeeNo, string description, int type2, string implementingUnit, string dutyStation, object userState) {
            if ((this.InsertReservationHeaderOperationCompleted == null)) {
                this.InsertReservationHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertReservationHeaderOperationCompleted);
            }
            this.InvokeAsync("InsertReservationHeader", new object[] {
                        requestorID,
                        employeeNo,
                        description,
                        type2,
                        implementingUnit,
                        dutyStation}, this.InsertReservationHeaderOperationCompleted, userState);
        }
        
        private void OnInsertReservationHeaderOperationCompleted(object arg) {
            if ((this.InsertReservationHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertReservationHeaderCompleted(this, new InsertReservationHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertReservationLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertReservationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertReservationLines(string docNo, string propertys, System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime startTime, string floorCode, string room, string reason, int roomType) {
            this.Invoke("InsertReservationLines", new object[] {
                        docNo,
                        propertys,
                        startDate,
                        startTime,
                        floorCode,
                        room,
                        reason,
                        roomType});
        }
        
        /// <remarks/>
        public void InsertReservationLinesAsync(string docNo, string propertys, System.DateTime startDate, System.DateTime startTime, string floorCode, string room, string reason, int roomType) {
            this.InsertReservationLinesAsync(docNo, propertys, startDate, startTime, floorCode, room, reason, roomType, null);
        }
        
        /// <remarks/>
        public void InsertReservationLinesAsync(string docNo, string propertys, System.DateTime startDate, System.DateTime startTime, string floorCode, string room, string reason, int roomType, object userState) {
            if ((this.InsertReservationLinesOperationCompleted == null)) {
                this.InsertReservationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertReservationLinesOperationCompleted);
            }
            this.InvokeAsync("InsertReservationLines", new object[] {
                        docNo,
                        propertys,
                        startDate,
                        startTime,
                        floorCode,
                        room,
                        reason,
                        roomType}, this.InsertReservationLinesOperationCompleted, userState);
        }
        
        private void OnInsertReservationLinesOperationCompleted(object arg) {
            if ((this.InsertReservationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertReservationLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertSampleLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertSampleLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int InsertSampleLine(string sampleID, string sampleType, string source, string staffNo, decimal quantity, string storageLocation, string notes) {
            object[] results = this.Invoke("InsertSampleLine", new object[] {
                        sampleID,
                        sampleType,
                        source,
                        staffNo,
                        quantity,
                        storageLocation,
                        notes});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSampleLineAsync(string sampleID, string sampleType, string source, string staffNo, decimal quantity, string storageLocation, string notes) {
            this.InsertSampleLineAsync(sampleID, sampleType, source, staffNo, quantity, storageLocation, notes, null);
        }
        
        /// <remarks/>
        public void InsertSampleLineAsync(string sampleID, string sampleType, string source, string staffNo, decimal quantity, string storageLocation, string notes, object userState) {
            if ((this.InsertSampleLineOperationCompleted == null)) {
                this.InsertSampleLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSampleLineOperationCompleted);
            }
            this.InvokeAsync("InsertSampleLine", new object[] {
                        sampleID,
                        sampleType,
                        source,
                        staffNo,
                        quantity,
                        storageLocation,
                        notes}, this.InsertSampleLineOperationCompleted, userState);
        }
        
        private void OnInsertSampleLineOperationCompleted(object arg) {
            if ((this.InsertSampleLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSampleLineCompleted(this, new InsertSampleLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertSelfAssessmentLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertSelfAssessmentLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertSelfAssessmentLine(string trainingEvalNo, string categoryCode, string commentsText) {
            this.Invoke("InsertSelfAssessmentLine", new object[] {
                        trainingEvalNo,
                        categoryCode,
                        commentsText});
        }
        
        /// <remarks/>
        public void InsertSelfAssessmentLineAsync(string trainingEvalNo, string categoryCode, string commentsText) {
            this.InsertSelfAssessmentLineAsync(trainingEvalNo, categoryCode, commentsText, null);
        }
        
        /// <remarks/>
        public void InsertSelfAssessmentLineAsync(string trainingEvalNo, string categoryCode, string commentsText, object userState) {
            if ((this.InsertSelfAssessmentLineOperationCompleted == null)) {
                this.InsertSelfAssessmentLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSelfAssessmentLineOperationCompleted);
            }
            this.InvokeAsync("InsertSelfAssessmentLine", new object[] {
                        trainingEvalNo,
                        categoryCode,
                        commentsText}, this.InsertSelfAssessmentLineOperationCompleted, userState);
        }
        
        private void OnInsertSelfAssessmentLineOperationCompleted(object arg) {
            if ((this.InsertSelfAssessmentLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSelfAssessmentLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertSelfInitiatedTransfer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertSelfInitiatedTransfer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertSelfInitiatedTransfer(string employeeNo, string station1, string station2, string station3, string staffUserId, string comments, string reason) {
            object[] results = this.Invoke("InsertSelfInitiatedTransfer", new object[] {
                        employeeNo,
                        station1,
                        station2,
                        station3,
                        staffUserId,
                        comments,
                        reason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSelfInitiatedTransferAsync(string employeeNo, string station1, string station2, string station3, string staffUserId, string comments, string reason) {
            this.InsertSelfInitiatedTransferAsync(employeeNo, station1, station2, station3, staffUserId, comments, reason, null);
        }
        
        /// <remarks/>
        public void InsertSelfInitiatedTransferAsync(string employeeNo, string station1, string station2, string station3, string staffUserId, string comments, string reason, object userState) {
            if ((this.InsertSelfInitiatedTransferOperationCompleted == null)) {
                this.InsertSelfInitiatedTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSelfInitiatedTransferOperationCompleted);
            }
            this.InvokeAsync("InsertSelfInitiatedTransfer", new object[] {
                        employeeNo,
                        station1,
                        station2,
                        station3,
                        staffUserId,
                        comments,
                        reason}, this.InsertSelfInitiatedTransferOperationCompleted, userState);
        }
        
        private void OnInsertSelfInitiatedTransferOperationCompleted(object arg) {
            if ((this.InsertSelfInitiatedTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSelfInitiatedTransferCompleted(this, new InsertSelfInitiatedTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertSurcharge", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertSurcharge_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertSurcharge(string employeeNo, string description, string accusedEmployee, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateCreated, decimal value, string propertyDescription) {
            object[] results = this.Invoke("InsertSurcharge", new object[] {
                        employeeNo,
                        description,
                        accusedEmployee,
                        dateCreated,
                        value,
                        propertyDescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSurchargeAsync(string employeeNo, string description, string accusedEmployee, System.DateTime dateCreated, decimal value, string propertyDescription) {
            this.InsertSurchargeAsync(employeeNo, description, accusedEmployee, dateCreated, value, propertyDescription, null);
        }
        
        /// <remarks/>
        public void InsertSurchargeAsync(string employeeNo, string description, string accusedEmployee, System.DateTime dateCreated, decimal value, string propertyDescription, object userState) {
            if ((this.InsertSurchargeOperationCompleted == null)) {
                this.InsertSurchargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSurchargeOperationCompleted);
            }
            this.InvokeAsync("InsertSurcharge", new object[] {
                        employeeNo,
                        description,
                        accusedEmployee,
                        dateCreated,
                        value,
                        propertyDescription}, this.InsertSurchargeOperationCompleted, userState);
        }
        
        private void OnInsertSurchargeOperationCompleted(object arg) {
            if ((this.InsertSurchargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSurchargeCompleted(this, new InsertSurchargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertTenderCommiteeMembers", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertTenderCommiteeMembers_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertTenderCommiteeMembers(string docNum, string commiteeType, int role, string staffNumber) {
            object[] results = this.Invoke("InsertTenderCommiteeMembers", new object[] {
                        docNum,
                        commiteeType,
                        role,
                        staffNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTenderCommiteeMembersAsync(string docNum, string commiteeType, int role, string staffNumber) {
            this.InsertTenderCommiteeMembersAsync(docNum, commiteeType, role, staffNumber, null);
        }
        
        /// <remarks/>
        public void InsertTenderCommiteeMembersAsync(string docNum, string commiteeType, int role, string staffNumber, object userState) {
            if ((this.InsertTenderCommiteeMembersOperationCompleted == null)) {
                this.InsertTenderCommiteeMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTenderCommiteeMembersOperationCompleted);
            }
            this.InvokeAsync("InsertTenderCommiteeMembers", new object[] {
                        docNum,
                        commiteeType,
                        role,
                        staffNumber}, this.InsertTenderCommiteeMembersOperationCompleted, userState);
        }
        
        private void OnInsertTenderCommiteeMembersOperationCompleted(object arg) {
            if ((this.InsertTenderCommiteeMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTenderCommiteeMembersCompleted(this, new InsertTenderCommiteeMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertTenderCommitees", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertTenderCommitees_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertTenderCommitees(string iFSCode, string commiteeType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime appointEffDate, string appontAuth, decimal commDurat, string raisedBy) {
            object[] results = this.Invoke("InsertTenderCommitees", new object[] {
                        iFSCode,
                        commiteeType,
                        appointEffDate,
                        appontAuth,
                        commDurat,
                        raisedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTenderCommiteesAsync(string iFSCode, string commiteeType, System.DateTime appointEffDate, string appontAuth, decimal commDurat, string raisedBy) {
            this.InsertTenderCommiteesAsync(iFSCode, commiteeType, appointEffDate, appontAuth, commDurat, raisedBy, null);
        }
        
        /// <remarks/>
        public void InsertTenderCommiteesAsync(string iFSCode, string commiteeType, System.DateTime appointEffDate, string appontAuth, decimal commDurat, string raisedBy, object userState) {
            if ((this.InsertTenderCommiteesOperationCompleted == null)) {
                this.InsertTenderCommiteesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTenderCommiteesOperationCompleted);
            }
            this.InvokeAsync("InsertTenderCommitees", new object[] {
                        iFSCode,
                        commiteeType,
                        appointEffDate,
                        appontAuth,
                        commDurat,
                        raisedBy}, this.InsertTenderCommiteesOperationCompleted, userState);
        }
        
        private void OnInsertTenderCommiteesOperationCompleted(object arg) {
            if ((this.InsertTenderCommiteesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTenderCommiteesCompleted(this, new InsertTenderCommiteesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertTrainingCourseSetup", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertTrainingCourseSetup_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertTrainingCourseSetup(string description, string domain, string qualificationCode, int skillType, string courseDuration, bool bonded, string bondingPeriod, decimal bondingPenalty, string trainerCode, bool lMS) {
            object[] results = this.Invoke("InsertTrainingCourseSetup", new object[] {
                        description,
                        domain,
                        qualificationCode,
                        skillType,
                        courseDuration,
                        bonded,
                        bondingPeriod,
                        bondingPenalty,
                        trainerCode,
                        lMS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTrainingCourseSetupAsync(string description, string domain, string qualificationCode, int skillType, string courseDuration, bool bonded, string bondingPeriod, decimal bondingPenalty, string trainerCode, bool lMS) {
            this.InsertTrainingCourseSetupAsync(description, domain, qualificationCode, skillType, courseDuration, bonded, bondingPeriod, bondingPenalty, trainerCode, lMS, null);
        }
        
        /// <remarks/>
        public void InsertTrainingCourseSetupAsync(string description, string domain, string qualificationCode, int skillType, string courseDuration, bool bonded, string bondingPeriod, decimal bondingPenalty, string trainerCode, bool lMS, object userState) {
            if ((this.InsertTrainingCourseSetupOperationCompleted == null)) {
                this.InsertTrainingCourseSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTrainingCourseSetupOperationCompleted);
            }
            this.InvokeAsync("InsertTrainingCourseSetup", new object[] {
                        description,
                        domain,
                        qualificationCode,
                        skillType,
                        courseDuration,
                        bonded,
                        bondingPeriod,
                        bondingPenalty,
                        trainerCode,
                        lMS}, this.InsertTrainingCourseSetupOperationCompleted, userState);
        }
        
        private void OnInsertTrainingCourseSetupOperationCompleted(object arg) {
            if ((this.InsertTrainingCourseSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTrainingCourseSetupCompleted(this, new InsertTrainingCourseSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertTrainingExtension", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertTrainingExtension_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertTrainingExtension(string trainNo, string reason, string remarks, string employeeNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, int fundingSource) {
            object[] results = this.Invoke("InsertTrainingExtension", new object[] {
                        trainNo,
                        reason,
                        remarks,
                        employeeNo,
                        startDate,
                        endDate,
                        fundingSource});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTrainingExtensionAsync(string trainNo, string reason, string remarks, string employeeNo, System.DateTime startDate, System.DateTime endDate, int fundingSource) {
            this.InsertTrainingExtensionAsync(trainNo, reason, remarks, employeeNo, startDate, endDate, fundingSource, null);
        }
        
        /// <remarks/>
        public void InsertTrainingExtensionAsync(string trainNo, string reason, string remarks, string employeeNo, System.DateTime startDate, System.DateTime endDate, int fundingSource, object userState) {
            if ((this.InsertTrainingExtensionOperationCompleted == null)) {
                this.InsertTrainingExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTrainingExtensionOperationCompleted);
            }
            this.InvokeAsync("InsertTrainingExtension", new object[] {
                        trainNo,
                        reason,
                        remarks,
                        employeeNo,
                        startDate,
                        endDate,
                        fundingSource}, this.InsertTrainingExtensionOperationCompleted, userState);
        }
        
        private void OnInsertTrainingExtensionOperationCompleted(object arg) {
            if ((this.InsertTrainingExtensionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTrainingExtensionCompleted(this, new InsertTrainingExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertWorkTicketHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertWorkTicketHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertWorkTicketHeader(string documentNo, string vehicleNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime monthDate, string gOKWorkTicket, string previousWorkTcket, string directorate, string authorizedBy, string createdBy) {
            object[] results = this.Invoke("InsertWorkTicketHeader", new object[] {
                        documentNo,
                        vehicleNo,
                        monthDate,
                        gOKWorkTicket,
                        previousWorkTcket,
                        directorate,
                        authorizedBy,
                        createdBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertWorkTicketHeaderAsync(string documentNo, string vehicleNo, System.DateTime monthDate, string gOKWorkTicket, string previousWorkTcket, string directorate, string authorizedBy, string createdBy) {
            this.InsertWorkTicketHeaderAsync(documentNo, vehicleNo, monthDate, gOKWorkTicket, previousWorkTcket, directorate, authorizedBy, createdBy, null);
        }
        
        /// <remarks/>
        public void InsertWorkTicketHeaderAsync(string documentNo, string vehicleNo, System.DateTime monthDate, string gOKWorkTicket, string previousWorkTcket, string directorate, string authorizedBy, string createdBy, object userState) {
            if ((this.InsertWorkTicketHeaderOperationCompleted == null)) {
                this.InsertWorkTicketHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertWorkTicketHeaderOperationCompleted);
            }
            this.InvokeAsync("InsertWorkTicketHeader", new object[] {
                        documentNo,
                        vehicleNo,
                        monthDate,
                        gOKWorkTicket,
                        previousWorkTcket,
                        directorate,
                        authorizedBy,
                        createdBy}, this.InsertWorkTicketHeaderOperationCompleted, userState);
        }
        
        private void OnInsertWorkTicketHeaderOperationCompleted(object arg) {
            if ((this.InsertWorkTicketHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertWorkTicketHeaderCompleted(this, new InsertWorkTicketHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertWorkTicketLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertWorkTicketLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertWorkTicketLines(
                    string docNo, 
                    string transportNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime workTicketDate, 
                    string journey_Route, 
                    decimal oilDrawn, 
                    decimal fuelDrawn, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime timeout, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime timeIn, 
                    decimal openingOdometer, 
                    decimal closingOdometer, 
                    decimal fuelPerKM, 
                    decimal oilPerKM, 
                    decimal fuelCarriedForward, 
                    string authorizedBy, 
                    string gOKOfficer, 
                    string defectRecorded, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime defectDate, 
                    string actionTaken) {
            this.Invoke("InsertWorkTicketLines", new object[] {
                        docNo,
                        transportNo,
                        workTicketDate,
                        journey_Route,
                        oilDrawn,
                        fuelDrawn,
                        timeout,
                        timeIn,
                        openingOdometer,
                        closingOdometer,
                        fuelPerKM,
                        oilPerKM,
                        fuelCarriedForward,
                        authorizedBy,
                        gOKOfficer,
                        defectRecorded,
                        defectDate,
                        actionTaken});
        }
        
        /// <remarks/>
        public void InsertWorkTicketLinesAsync(
                    string docNo, 
                    string transportNo, 
                    System.DateTime workTicketDate, 
                    string journey_Route, 
                    decimal oilDrawn, 
                    decimal fuelDrawn, 
                    System.DateTime timeout, 
                    System.DateTime timeIn, 
                    decimal openingOdometer, 
                    decimal closingOdometer, 
                    decimal fuelPerKM, 
                    decimal oilPerKM, 
                    decimal fuelCarriedForward, 
                    string authorizedBy, 
                    string gOKOfficer, 
                    string defectRecorded, 
                    System.DateTime defectDate, 
                    string actionTaken) {
            this.InsertWorkTicketLinesAsync(docNo, transportNo, workTicketDate, journey_Route, oilDrawn, fuelDrawn, timeout, timeIn, openingOdometer, closingOdometer, fuelPerKM, oilPerKM, fuelCarriedForward, authorizedBy, gOKOfficer, defectRecorded, defectDate, actionTaken, null);
        }
        
        /// <remarks/>
        public void InsertWorkTicketLinesAsync(
                    string docNo, 
                    string transportNo, 
                    System.DateTime workTicketDate, 
                    string journey_Route, 
                    decimal oilDrawn, 
                    decimal fuelDrawn, 
                    System.DateTime timeout, 
                    System.DateTime timeIn, 
                    decimal openingOdometer, 
                    decimal closingOdometer, 
                    decimal fuelPerKM, 
                    decimal oilPerKM, 
                    decimal fuelCarriedForward, 
                    string authorizedBy, 
                    string gOKOfficer, 
                    string defectRecorded, 
                    System.DateTime defectDate, 
                    string actionTaken, 
                    object userState) {
            if ((this.InsertWorkTicketLinesOperationCompleted == null)) {
                this.InsertWorkTicketLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertWorkTicketLinesOperationCompleted);
            }
            this.InvokeAsync("InsertWorkTicketLines", new object[] {
                        docNo,
                        transportNo,
                        workTicketDate,
                        journey_Route,
                        oilDrawn,
                        fuelDrawn,
                        timeout,
                        timeIn,
                        openingOdometer,
                        closingOdometer,
                        fuelPerKM,
                        oilPerKM,
                        fuelCarriedForward,
                        authorizedBy,
                        gOKOfficer,
                        defectRecorded,
                        defectDate,
                        actionTaken}, this.InsertWorkTicketLinesOperationCompleted, userState);
        }
        
        private void OnInsertWorkTicketLinesOperationCompleted(object arg) {
            if ((this.InsertWorkTicketLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertWorkTicketLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:InsertcarLoansApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="InsertcarLoansApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertcarLoansApplication([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime applicationDate, string empNo, string loanProductType, decimal amountRequested, string reason, int repaymentPeriod, int manufactureYear) {
            object[] results = this.Invoke("InsertcarLoansApplication", new object[] {
                        applicationDate,
                        empNo,
                        loanProductType,
                        amountRequested,
                        reason,
                        repaymentPeriod,
                        manufactureYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertcarLoansApplicationAsync(System.DateTime applicationDate, string empNo, string loanProductType, decimal amountRequested, string reason, int repaymentPeriod, int manufactureYear) {
            this.InsertcarLoansApplicationAsync(applicationDate, empNo, loanProductType, amountRequested, reason, repaymentPeriod, manufactureYear, null);
        }
        
        /// <remarks/>
        public void InsertcarLoansApplicationAsync(System.DateTime applicationDate, string empNo, string loanProductType, decimal amountRequested, string reason, int repaymentPeriod, int manufactureYear, object userState) {
            if ((this.InsertcarLoansApplicationOperationCompleted == null)) {
                this.InsertcarLoansApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertcarLoansApplicationOperationCompleted);
            }
            this.InvokeAsync("InsertcarLoansApplication", new object[] {
                        applicationDate,
                        empNo,
                        loanProductType,
                        amountRequested,
                        reason,
                        repaymentPeriod,
                        manufactureYear}, this.InsertcarLoansApplicationOperationCompleted, userState);
        }
        
        private void OnInsertcarLoansApplicationOperationCompleted(object arg) {
            if ((this.InsertcarLoansApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertcarLoansApplicationCompleted(this, new InsertcarLoansApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:IsSuperVisor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="IsSuperVisor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool IsSuperVisor(string empNo, string superVisorNo) {
            object[] results = this.Invoke("IsSuperVisor", new object[] {
                        empNo,
                        superVisorNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsSuperVisorAsync(string empNo, string superVisorNo) {
            this.IsSuperVisorAsync(empNo, superVisorNo, null);
        }
        
        /// <remarks/>
        public void IsSuperVisorAsync(string empNo, string superVisorNo, object userState) {
            if ((this.IsSuperVisorOperationCompleted == null)) {
                this.IsSuperVisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsSuperVisorOperationCompleted);
            }
            this.InvokeAsync("IsSuperVisor", new object[] {
                        empNo,
                        superVisorNo}, this.IsSuperVisorOperationCompleted, userState);
        }
        
        private void OnIsSuperVisorOperationCompleted(object arg) {
            if ((this.IsSuperVisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsSuperVisorCompleted(this, new IsSuperVisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:LeaveRequisitionsApprovalRequest" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="LeaveRequisitionsApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LeaveRequisitionsApprovalRequest(string reqNo) {
            this.Invoke("LeaveRequisitionsApprovalRequest", new object[] {
                        reqNo});
        }
        
        /// <remarks/>
        public void LeaveRequisitionsApprovalRequestAsync(string reqNo) {
            this.LeaveRequisitionsApprovalRequestAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void LeaveRequisitionsApprovalRequestAsync(string reqNo, object userState) {
            if ((this.LeaveRequisitionsApprovalRequestOperationCompleted == null)) {
                this.LeaveRequisitionsApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLeaveRequisitionsApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("LeaveRequisitionsApprovalRequest", new object[] {
                        reqNo}, this.LeaveRequisitionsApprovalRequestOperationCompleted, userState);
        }
        
        private void OnLeaveRequisitionsApprovalRequestOperationCompleted(object arg) {
            if ((this.LeaveRequisitionsApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LeaveRequisitionsApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:LoadAppraisalSectionsHighScale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="LoadAppraisalSectionsHighScale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoadAppraisalSectionsHighScale(string docNo) {
            this.Invoke("LoadAppraisalSectionsHighScale", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void LoadAppraisalSectionsHighScaleAsync(string docNo) {
            this.LoadAppraisalSectionsHighScaleAsync(docNo, null);
        }
        
        /// <remarks/>
        public void LoadAppraisalSectionsHighScaleAsync(string docNo, object userState) {
            if ((this.LoadAppraisalSectionsHighScaleOperationCompleted == null)) {
                this.LoadAppraisalSectionsHighScaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAppraisalSectionsHighScaleOperationCompleted);
            }
            this.InvokeAsync("LoadAppraisalSectionsHighScale", new object[] {
                        docNo}, this.LoadAppraisalSectionsHighScaleOperationCompleted, userState);
        }
        
        private void OnLoadAppraisalSectionsHighScaleOperationCompleted(object arg) {
            if ((this.LoadAppraisalSectionsHighScaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAppraisalSectionsHighScaleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:LoadAppraisalSectionsLowerScale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="LoadAppraisalSectionsLowerScale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoadAppraisalSectionsLowerScale(string docNo) {
            this.Invoke("LoadAppraisalSectionsLowerScale", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void LoadAppraisalSectionsLowerScaleAsync(string docNo) {
            this.LoadAppraisalSectionsLowerScaleAsync(docNo, null);
        }
        
        /// <remarks/>
        public void LoadAppraisalSectionsLowerScaleAsync(string docNo, object userState) {
            if ((this.LoadAppraisalSectionsLowerScaleOperationCompleted == null)) {
                this.LoadAppraisalSectionsLowerScaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAppraisalSectionsLowerScaleOperationCompleted);
            }
            this.InvokeAsync("LoadAppraisalSectionsLowerScale", new object[] {
                        docNo}, this.LoadAppraisalSectionsLowerScaleOperationCompleted, userState);
        }
        
        private void OnLoadAppraisalSectionsLowerScaleOperationCompleted(object arg) {
            if ((this.LoadAppraisalSectionsLowerScaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAppraisalSectionsLowerScaleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:LoadTransportReq", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="LoadTransportReq_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoadTransportReq(string docNo) {
            this.Invoke("LoadTransportReq", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void LoadTransportReqAsync(string docNo) {
            this.LoadTransportReqAsync(docNo, null);
        }
        
        /// <remarks/>
        public void LoadTransportReqAsync(string docNo, object userState) {
            if ((this.LoadTransportReqOperationCompleted == null)) {
                this.LoadTransportReqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTransportReqOperationCompleted);
            }
            this.InvokeAsync("LoadTransportReq", new object[] {
                        docNo}, this.LoadTransportReqOperationCompleted, userState);
        }
        
        private void OnLoadTransportReqOperationCompleted(object arg) {
            if ((this.LoadTransportReqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTransportReqCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyBidEvaluationsLInes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyBidEvaluationsLInes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyBidEvaluationsLInes(string docNo, int lineNum, string evaFindings, string evalremarks) {
            this.Invoke("ModifyBidEvaluationsLInes", new object[] {
                        docNo,
                        lineNum,
                        evaFindings,
                        evalremarks});
        }
        
        /// <remarks/>
        public void ModifyBidEvaluationsLInesAsync(string docNo, int lineNum, string evaFindings, string evalremarks) {
            this.ModifyBidEvaluationsLInesAsync(docNo, lineNum, evaFindings, evalremarks, null);
        }
        
        /// <remarks/>
        public void ModifyBidEvaluationsLInesAsync(string docNo, int lineNum, string evaFindings, string evalremarks, object userState) {
            if ((this.ModifyBidEvaluationsLInesOperationCompleted == null)) {
                this.ModifyBidEvaluationsLInesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyBidEvaluationsLInesOperationCompleted);
            }
            this.InvokeAsync("ModifyBidEvaluationsLInes", new object[] {
                        docNo,
                        lineNum,
                        evaFindings,
                        evalremarks}, this.ModifyBidEvaluationsLInesOperationCompleted, userState);
        }
        
        private void OnModifyBidEvaluationsLInesOperationCompleted(object arg) {
            if ((this.ModifyBidEvaluationsLInesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyBidEvaluationsLInesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyBidTabulationHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyBidTabulationHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyBidTabulationHeader(string docNo, string remarks) {
            this.Invoke("ModifyBidTabulationHeader", new object[] {
                        docNo,
                        remarks});
        }
        
        /// <remarks/>
        public void ModifyBidTabulationHeaderAsync(string docNo, string remarks) {
            this.ModifyBidTabulationHeaderAsync(docNo, remarks, null);
        }
        
        /// <remarks/>
        public void ModifyBidTabulationHeaderAsync(string docNo, string remarks, object userState) {
            if ((this.ModifyBidTabulationHeaderOperationCompleted == null)) {
                this.ModifyBidTabulationHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyBidTabulationHeaderOperationCompleted);
            }
            this.InvokeAsync("ModifyBidTabulationHeader", new object[] {
                        docNo,
                        remarks}, this.ModifyBidTabulationHeaderOperationCompleted, userState);
        }
        
        private void OnModifyBidTabulationHeaderOperationCompleted(object arg) {
            if ((this.ModifyBidTabulationHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyBidTabulationHeaderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyConsolidatedNeedsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyConsolidatedNeedsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyConsolidatedNeedsLines(string docNo, string courseId, int verdict, string comments) {
            this.Invoke("ModifyConsolidatedNeedsLines", new object[] {
                        docNo,
                        courseId,
                        verdict,
                        comments});
        }
        
        /// <remarks/>
        public void ModifyConsolidatedNeedsLinesAsync(string docNo, string courseId, int verdict, string comments) {
            this.ModifyConsolidatedNeedsLinesAsync(docNo, courseId, verdict, comments, null);
        }
        
        /// <remarks/>
        public void ModifyConsolidatedNeedsLinesAsync(string docNo, string courseId, int verdict, string comments, object userState) {
            if ((this.ModifyConsolidatedNeedsLinesOperationCompleted == null)) {
                this.ModifyConsolidatedNeedsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyConsolidatedNeedsLinesOperationCompleted);
            }
            this.InvokeAsync("ModifyConsolidatedNeedsLines", new object[] {
                        docNo,
                        courseId,
                        verdict,
                        comments}, this.ModifyConsolidatedNeedsLinesOperationCompleted, userState);
        }
        
        private void OnModifyConsolidatedNeedsLinesOperationCompleted(object arg) {
            if ((this.ModifyConsolidatedNeedsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyConsolidatedNeedsLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyConsolidatedNeeds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyConsolidatedNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyConsolidatedNeeds(string docNo, string financialYear) {
            this.Invoke("ModifyConsolidatedNeeds", new object[] {
                        docNo,
                        financialYear});
        }
        
        /// <remarks/>
        public void ModifyConsolidatedNeedsAsync(string docNo, string financialYear) {
            this.ModifyConsolidatedNeedsAsync(docNo, financialYear, null);
        }
        
        /// <remarks/>
        public void ModifyConsolidatedNeedsAsync(string docNo, string financialYear, object userState) {
            if ((this.ModifyConsolidatedNeedsOperationCompleted == null)) {
                this.ModifyConsolidatedNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyConsolidatedNeedsOperationCompleted);
            }
            this.InvokeAsync("ModifyConsolidatedNeeds", new object[] {
                        docNo,
                        financialYear}, this.ModifyConsolidatedNeedsOperationCompleted, userState);
        }
        
        private void OnModifyConsolidatedNeedsOperationCompleted(object arg) {
            if ((this.ModifyConsolidatedNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyConsolidatedNeedsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyEvaluationBidRemarks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyEvaluationBidRemarks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ModifyEvaluationBidRemarks(string docNo, string evaluationRemark, int evaluatioDecision, int evaluationType, int preEvalScore) {
            object[] results = this.Invoke("ModifyEvaluationBidRemarks", new object[] {
                        docNo,
                        evaluationRemark,
                        evaluatioDecision,
                        evaluationType,
                        preEvalScore});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyEvaluationBidRemarksAsync(string docNo, string evaluationRemark, int evaluatioDecision, int evaluationType, int preEvalScore) {
            this.ModifyEvaluationBidRemarksAsync(docNo, evaluationRemark, evaluatioDecision, evaluationType, preEvalScore, null);
        }
        
        /// <remarks/>
        public void ModifyEvaluationBidRemarksAsync(string docNo, string evaluationRemark, int evaluatioDecision, int evaluationType, int preEvalScore, object userState) {
            if ((this.ModifyEvaluationBidRemarksOperationCompleted == null)) {
                this.ModifyEvaluationBidRemarksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyEvaluationBidRemarksOperationCompleted);
            }
            this.InvokeAsync("ModifyEvaluationBidRemarks", new object[] {
                        docNo,
                        evaluationRemark,
                        evaluatioDecision,
                        evaluationType,
                        preEvalScore}, this.ModifyEvaluationBidRemarksOperationCompleted, userState);
        }
        
        private void OnModifyEvaluationBidRemarksOperationCompleted(object arg) {
            if ((this.ModifyEvaluationBidRemarksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyEvaluationBidRemarksCompleted(this, new ModifyEvaluationBidRemarksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyExpenseLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyExpenseLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyExpenseLines(string docNo, int lineNo, string resourseNum, decimal tAmount) {
            this.Invoke("ModifyExpenseLines", new object[] {
                        docNo,
                        lineNo,
                        resourseNum,
                        tAmount});
        }
        
        /// <remarks/>
        public void ModifyExpenseLinesAsync(string docNo, int lineNo, string resourseNum, decimal tAmount) {
            this.ModifyExpenseLinesAsync(docNo, lineNo, resourseNum, tAmount, null);
        }
        
        /// <remarks/>
        public void ModifyExpenseLinesAsync(string docNo, int lineNo, string resourseNum, decimal tAmount, object userState) {
            if ((this.ModifyExpenseLinesOperationCompleted == null)) {
                this.ModifyExpenseLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyExpenseLinesOperationCompleted);
            }
            this.InvokeAsync("ModifyExpenseLines", new object[] {
                        docNo,
                        lineNo,
                        resourseNum,
                        tAmount}, this.ModifyExpenseLinesOperationCompleted, userState);
        }
        
        private void OnModifyExpenseLinesOperationCompleted(object arg) {
            if ((this.ModifyExpenseLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyExpenseLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyExpenseRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyExpenseRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ModifyExpenseRequisition(string description, bool requires_Imprest, int imprest_Type, string activity_Code, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime start_Date, int no_Of_Days, string subject, string objectiveTxt, bool requires_Direct_Payment, bool requires_PRN, int pRN_Type, string requisition_Product_Group, string pP_Plan_Category, int directPaymentType, string docuNo) {
            object[] results = this.Invoke("ModifyExpenseRequisition", new object[] {
                        description,
                        requires_Imprest,
                        imprest_Type,
                        activity_Code,
                        start_Date,
                        no_Of_Days,
                        subject,
                        objectiveTxt,
                        requires_Direct_Payment,
                        requires_PRN,
                        pRN_Type,
                        requisition_Product_Group,
                        pP_Plan_Category,
                        directPaymentType,
                        docuNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyExpenseRequisitionAsync(string description, bool requires_Imprest, int imprest_Type, string activity_Code, System.DateTime start_Date, int no_Of_Days, string subject, string objectiveTxt, bool requires_Direct_Payment, bool requires_PRN, int pRN_Type, string requisition_Product_Group, string pP_Plan_Category, int directPaymentType, string docuNo) {
            this.ModifyExpenseRequisitionAsync(description, requires_Imprest, imprest_Type, activity_Code, start_Date, no_Of_Days, subject, objectiveTxt, requires_Direct_Payment, requires_PRN, pRN_Type, requisition_Product_Group, pP_Plan_Category, directPaymentType, docuNo, null);
        }
        
        /// <remarks/>
        public void ModifyExpenseRequisitionAsync(
                    string description, 
                    bool requires_Imprest, 
                    int imprest_Type, 
                    string activity_Code, 
                    System.DateTime start_Date, 
                    int no_Of_Days, 
                    string subject, 
                    string objectiveTxt, 
                    bool requires_Direct_Payment, 
                    bool requires_PRN, 
                    int pRN_Type, 
                    string requisition_Product_Group, 
                    string pP_Plan_Category, 
                    int directPaymentType, 
                    string docuNo, 
                    object userState) {
            if ((this.ModifyExpenseRequisitionOperationCompleted == null)) {
                this.ModifyExpenseRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyExpenseRequisitionOperationCompleted);
            }
            this.InvokeAsync("ModifyExpenseRequisition", new object[] {
                        description,
                        requires_Imprest,
                        imprest_Type,
                        activity_Code,
                        start_Date,
                        no_Of_Days,
                        subject,
                        objectiveTxt,
                        requires_Direct_Payment,
                        requires_PRN,
                        pRN_Type,
                        requisition_Product_Group,
                        pP_Plan_Category,
                        directPaymentType,
                        docuNo}, this.ModifyExpenseRequisitionOperationCompleted, userState);
        }
        
        private void OnModifyExpenseRequisitionOperationCompleted(object arg) {
            if ((this.ModifyExpenseRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyExpenseRequisitionCompleted(this, new ModifyExpenseRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyFleetLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyFleetLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int ModifyFleetLines(string docNo, int lineNo, string itemType, string description, int quantity, string purpose) {
            object[] results = this.Invoke("ModifyFleetLines", new object[] {
                        docNo,
                        lineNo,
                        itemType,
                        description,
                        quantity,
                        purpose});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyFleetLinesAsync(string docNo, int lineNo, string itemType, string description, int quantity, string purpose) {
            this.ModifyFleetLinesAsync(docNo, lineNo, itemType, description, quantity, purpose, null);
        }
        
        /// <remarks/>
        public void ModifyFleetLinesAsync(string docNo, int lineNo, string itemType, string description, int quantity, string purpose, object userState) {
            if ((this.ModifyFleetLinesOperationCompleted == null)) {
                this.ModifyFleetLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyFleetLinesOperationCompleted);
            }
            this.InvokeAsync("ModifyFleetLines", new object[] {
                        docNo,
                        lineNo,
                        itemType,
                        description,
                        quantity,
                        purpose}, this.ModifyFleetLinesOperationCompleted, userState);
        }
        
        private void OnModifyFleetLinesOperationCompleted(object arg) {
            if ((this.ModifyFleetLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyFleetLinesCompleted(this, new ModifyFleetLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyFuelReq", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyFuelReq_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyFuelReq(string docNo, decimal totalPrice, string reqNo, string preparedBy, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime reqDate) {
            this.Invoke("ModifyFuelReq", new object[] {
                        docNo,
                        totalPrice,
                        reqNo,
                        preparedBy,
                        reqDate});
        }
        
        /// <remarks/>
        public void ModifyFuelReqAsync(string docNo, decimal totalPrice, string reqNo, string preparedBy, System.DateTime reqDate) {
            this.ModifyFuelReqAsync(docNo, totalPrice, reqNo, preparedBy, reqDate, null);
        }
        
        /// <remarks/>
        public void ModifyFuelReqAsync(string docNo, decimal totalPrice, string reqNo, string preparedBy, System.DateTime reqDate, object userState) {
            if ((this.ModifyFuelReqOperationCompleted == null)) {
                this.ModifyFuelReqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyFuelReqOperationCompleted);
            }
            this.InvokeAsync("ModifyFuelReq", new object[] {
                        docNo,
                        totalPrice,
                        reqNo,
                        preparedBy,
                        reqDate}, this.ModifyFuelReqOperationCompleted, userState);
        }
        
        private void OnModifyFuelReqOperationCompleted(object arg) {
            if ((this.ModifyFuelReqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyFuelReqCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyGMOImportExportTransitReco" +
            "rd", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyGMOImportExportTransitRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyGMOImportExportTransitRecord(
                    string applicationNo, 
                    int typeOfApplicant, 
                    string applicationPurpose, 
                    string postalAddress, 
                    string postalCode, 
                    string physicalAddress, 
                    string companyRegNo, 
                    string companyName, 
                    string kRA_PIN, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    int yearOfRegistration, 
                    string countryOfOperation, 
                    string countyOfOperation, 
                    string exactLocation, 
                    bool hasCompetentAuthority, 
                    string fullNameOfAuthority, 
                    string mobileNumberAuthority, 
                    string emailAuthority, 
                    string importingCountry, 
                    string exportingCountry, 
                    string supplierName, 
                    string supplierLocation, 
                    string supplierContact, 
                    string supplierEmail, 
                    string countryOfOrigin, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expectedDate, 
                    string commonName, 
                    string scientificName, 
                    string tradeName, 
                    string listOfGMOs, 
                    string uniqueIdentifiers, 
                    string pointOfEntry, 
                    string intendedUse, 
                    bool approvedInReporting, 
                    decimal gMOQuantity, 
                    string summaryOfRisk, 
                    string labellingMethods, 
                    string storageMethods, 
                    string transportMethods, 
                    string packagingMethods, 
                    string useMethods, 
                    string documentationMethods, 
                    string disposalMethods, 
                    string contingencyProcedures, 
                    string emergencyResponsePlan, 
                    string approvalEvidenceFile, 
                    bool treatAsConfidential, 
                    string confidentialReason, 
                    string declarationStatement, 
                    string eCitizenReferenceNo) {
            this.Invoke("ModifyGMOImportExportTransitRecord", new object[] {
                        applicationNo,
                        typeOfApplicant,
                        applicationPurpose,
                        postalAddress,
                        postalCode,
                        physicalAddress,
                        companyRegNo,
                        companyName,
                        kRA_PIN,
                        companyPostalAddress,
                        companyPostalCode,
                        yearOfRegistration,
                        countryOfOperation,
                        countyOfOperation,
                        exactLocation,
                        hasCompetentAuthority,
                        fullNameOfAuthority,
                        mobileNumberAuthority,
                        emailAuthority,
                        importingCountry,
                        exportingCountry,
                        supplierName,
                        supplierLocation,
                        supplierContact,
                        supplierEmail,
                        countryOfOrigin,
                        expectedDate,
                        commonName,
                        scientificName,
                        tradeName,
                        listOfGMOs,
                        uniqueIdentifiers,
                        pointOfEntry,
                        intendedUse,
                        approvedInReporting,
                        gMOQuantity,
                        summaryOfRisk,
                        labellingMethods,
                        storageMethods,
                        transportMethods,
                        packagingMethods,
                        useMethods,
                        documentationMethods,
                        disposalMethods,
                        contingencyProcedures,
                        emergencyResponsePlan,
                        approvalEvidenceFile,
                        treatAsConfidential,
                        confidentialReason,
                        declarationStatement,
                        eCitizenReferenceNo});
        }
        
        /// <remarks/>
        public void ModifyGMOImportExportTransitRecordAsync(
                    string applicationNo, 
                    int typeOfApplicant, 
                    string applicationPurpose, 
                    string postalAddress, 
                    string postalCode, 
                    string physicalAddress, 
                    string companyRegNo, 
                    string companyName, 
                    string kRA_PIN, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    int yearOfRegistration, 
                    string countryOfOperation, 
                    string countyOfOperation, 
                    string exactLocation, 
                    bool hasCompetentAuthority, 
                    string fullNameOfAuthority, 
                    string mobileNumberAuthority, 
                    string emailAuthority, 
                    string importingCountry, 
                    string exportingCountry, 
                    string supplierName, 
                    string supplierLocation, 
                    string supplierContact, 
                    string supplierEmail, 
                    string countryOfOrigin, 
                    System.DateTime expectedDate, 
                    string commonName, 
                    string scientificName, 
                    string tradeName, 
                    string listOfGMOs, 
                    string uniqueIdentifiers, 
                    string pointOfEntry, 
                    string intendedUse, 
                    bool approvedInReporting, 
                    decimal gMOQuantity, 
                    string summaryOfRisk, 
                    string labellingMethods, 
                    string storageMethods, 
                    string transportMethods, 
                    string packagingMethods, 
                    string useMethods, 
                    string documentationMethods, 
                    string disposalMethods, 
                    string contingencyProcedures, 
                    string emergencyResponsePlan, 
                    string approvalEvidenceFile, 
                    bool treatAsConfidential, 
                    string confidentialReason, 
                    string declarationStatement, 
                    string eCitizenReferenceNo) {
            this.ModifyGMOImportExportTransitRecordAsync(applicationNo, typeOfApplicant, applicationPurpose, postalAddress, postalCode, physicalAddress, companyRegNo, companyName, kRA_PIN, companyPostalAddress, companyPostalCode, yearOfRegistration, countryOfOperation, countyOfOperation, exactLocation, hasCompetentAuthority, fullNameOfAuthority, mobileNumberAuthority, emailAuthority, importingCountry, exportingCountry, supplierName, supplierLocation, supplierContact, supplierEmail, countryOfOrigin, expectedDate, commonName, scientificName, tradeName, listOfGMOs, uniqueIdentifiers, pointOfEntry, intendedUse, approvedInReporting, gMOQuantity, summaryOfRisk, labellingMethods, storageMethods, transportMethods, packagingMethods, useMethods, documentationMethods, disposalMethods, contingencyProcedures, emergencyResponsePlan, approvalEvidenceFile, treatAsConfidential, confidentialReason, declarationStatement, eCitizenReferenceNo, null);
        }
        
        /// <remarks/>
        public void ModifyGMOImportExportTransitRecordAsync(
                    string applicationNo, 
                    int typeOfApplicant, 
                    string applicationPurpose, 
                    string postalAddress, 
                    string postalCode, 
                    string physicalAddress, 
                    string companyRegNo, 
                    string companyName, 
                    string kRA_PIN, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    int yearOfRegistration, 
                    string countryOfOperation, 
                    string countyOfOperation, 
                    string exactLocation, 
                    bool hasCompetentAuthority, 
                    string fullNameOfAuthority, 
                    string mobileNumberAuthority, 
                    string emailAuthority, 
                    string importingCountry, 
                    string exportingCountry, 
                    string supplierName, 
                    string supplierLocation, 
                    string supplierContact, 
                    string supplierEmail, 
                    string countryOfOrigin, 
                    System.DateTime expectedDate, 
                    string commonName, 
                    string scientificName, 
                    string tradeName, 
                    string listOfGMOs, 
                    string uniqueIdentifiers, 
                    string pointOfEntry, 
                    string intendedUse, 
                    bool approvedInReporting, 
                    decimal gMOQuantity, 
                    string summaryOfRisk, 
                    string labellingMethods, 
                    string storageMethods, 
                    string transportMethods, 
                    string packagingMethods, 
                    string useMethods, 
                    string documentationMethods, 
                    string disposalMethods, 
                    string contingencyProcedures, 
                    string emergencyResponsePlan, 
                    string approvalEvidenceFile, 
                    bool treatAsConfidential, 
                    string confidentialReason, 
                    string declarationStatement, 
                    string eCitizenReferenceNo, 
                    object userState) {
            if ((this.ModifyGMOImportExportTransitRecordOperationCompleted == null)) {
                this.ModifyGMOImportExportTransitRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyGMOImportExportTransitRecordOperationCompleted);
            }
            this.InvokeAsync("ModifyGMOImportExportTransitRecord", new object[] {
                        applicationNo,
                        typeOfApplicant,
                        applicationPurpose,
                        postalAddress,
                        postalCode,
                        physicalAddress,
                        companyRegNo,
                        companyName,
                        kRA_PIN,
                        companyPostalAddress,
                        companyPostalCode,
                        yearOfRegistration,
                        countryOfOperation,
                        countyOfOperation,
                        exactLocation,
                        hasCompetentAuthority,
                        fullNameOfAuthority,
                        mobileNumberAuthority,
                        emailAuthority,
                        importingCountry,
                        exportingCountry,
                        supplierName,
                        supplierLocation,
                        supplierContact,
                        supplierEmail,
                        countryOfOrigin,
                        expectedDate,
                        commonName,
                        scientificName,
                        tradeName,
                        listOfGMOs,
                        uniqueIdentifiers,
                        pointOfEntry,
                        intendedUse,
                        approvedInReporting,
                        gMOQuantity,
                        summaryOfRisk,
                        labellingMethods,
                        storageMethods,
                        transportMethods,
                        packagingMethods,
                        useMethods,
                        documentationMethods,
                        disposalMethods,
                        contingencyProcedures,
                        emergencyResponsePlan,
                        approvalEvidenceFile,
                        treatAsConfidential,
                        confidentialReason,
                        declarationStatement,
                        eCitizenReferenceNo}, this.ModifyGMOImportExportTransitRecordOperationCompleted, userState);
        }
        
        private void OnModifyGMOImportExportTransitRecordOperationCompleted(object arg) {
            if ((this.ModifyGMOImportExportTransitRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyGMOImportExportTransitRecordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyHrAppraisalLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyHrAppraisalLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ModifyHrAppraisalLines(string docNo, int lineNo, string perfomanceGoals, decimal target, decimal weight, string kpi, decimal selfRating, string employeeComments, decimal supervisorRating, string supervisorComments, decimal moderatedScore) {
            object[] results = this.Invoke("ModifyHrAppraisalLines", new object[] {
                        docNo,
                        lineNo,
                        perfomanceGoals,
                        target,
                        weight,
                        kpi,
                        selfRating,
                        employeeComments,
                        supervisorRating,
                        supervisorComments,
                        moderatedScore});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyHrAppraisalLinesAsync(string docNo, int lineNo, string perfomanceGoals, decimal target, decimal weight, string kpi, decimal selfRating, string employeeComments, decimal supervisorRating, string supervisorComments, decimal moderatedScore) {
            this.ModifyHrAppraisalLinesAsync(docNo, lineNo, perfomanceGoals, target, weight, kpi, selfRating, employeeComments, supervisorRating, supervisorComments, moderatedScore, null);
        }
        
        /// <remarks/>
        public void ModifyHrAppraisalLinesAsync(string docNo, int lineNo, string perfomanceGoals, decimal target, decimal weight, string kpi, decimal selfRating, string employeeComments, decimal supervisorRating, string supervisorComments, decimal moderatedScore, object userState) {
            if ((this.ModifyHrAppraisalLinesOperationCompleted == null)) {
                this.ModifyHrAppraisalLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyHrAppraisalLinesOperationCompleted);
            }
            this.InvokeAsync("ModifyHrAppraisalLines", new object[] {
                        docNo,
                        lineNo,
                        perfomanceGoals,
                        target,
                        weight,
                        kpi,
                        selfRating,
                        employeeComments,
                        supervisorRating,
                        supervisorComments,
                        moderatedScore}, this.ModifyHrAppraisalLinesOperationCompleted, userState);
        }
        
        private void OnModifyHrAppraisalLinesOperationCompleted(object arg) {
            if ((this.ModifyHrAppraisalLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyHrAppraisalLinesCompleted(this, new ModifyHrAppraisalLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyKpiRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyKpiRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int ModifyKpiRecord(int entryNo, string appraisalNo, string kpi, decimal weight) {
            object[] results = this.Invoke("ModifyKpiRecord", new object[] {
                        entryNo,
                        appraisalNo,
                        kpi,
                        weight});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyKpiRecordAsync(int entryNo, string appraisalNo, string kpi, decimal weight) {
            this.ModifyKpiRecordAsync(entryNo, appraisalNo, kpi, weight, null);
        }
        
        /// <remarks/>
        public void ModifyKpiRecordAsync(int entryNo, string appraisalNo, string kpi, decimal weight, object userState) {
            if ((this.ModifyKpiRecordOperationCompleted == null)) {
                this.ModifyKpiRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyKpiRecordOperationCompleted);
            }
            this.InvokeAsync("ModifyKpiRecord", new object[] {
                        entryNo,
                        appraisalNo,
                        kpi,
                        weight}, this.ModifyKpiRecordOperationCompleted, userState);
        }
        
        private void OnModifyKpiRecordOperationCompleted(object arg) {
            if ((this.ModifyKpiRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyKpiRecordCompleted(this, new ModifyKpiRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyLeavePlannerLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyLeavePlannerLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyLeavePlannerLines(string docNo, int lineNo, string leaveType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, decimal daysApplied) {
            this.Invoke("ModifyLeavePlannerLines", new object[] {
                        docNo,
                        lineNo,
                        leaveType,
                        startDate,
                        daysApplied});
        }
        
        /// <remarks/>
        public void ModifyLeavePlannerLinesAsync(string docNo, int lineNo, string leaveType, System.DateTime startDate, decimal daysApplied) {
            this.ModifyLeavePlannerLinesAsync(docNo, lineNo, leaveType, startDate, daysApplied, null);
        }
        
        /// <remarks/>
        public void ModifyLeavePlannerLinesAsync(string docNo, int lineNo, string leaveType, System.DateTime startDate, decimal daysApplied, object userState) {
            if ((this.ModifyLeavePlannerLinesOperationCompleted == null)) {
                this.ModifyLeavePlannerLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyLeavePlannerLinesOperationCompleted);
            }
            this.InvokeAsync("ModifyLeavePlannerLines", new object[] {
                        docNo,
                        lineNo,
                        leaveType,
                        startDate,
                        daysApplied}, this.ModifyLeavePlannerLinesOperationCompleted, userState);
        }
        
        private void OnModifyLeavePlannerLinesOperationCompleted(object arg) {
            if ((this.ModifyLeavePlannerLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyLeavePlannerLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyManagementInitiatedTransfe" +
            "r", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyManagementInitiatedTransfer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyManagementInitiatedTransfer(string docNo, string employeeNo, string station1, string staffUserId, string comments, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime transferDate) {
            this.Invoke("ModifyManagementInitiatedTransfer", new object[] {
                        docNo,
                        employeeNo,
                        station1,
                        staffUserId,
                        comments,
                        transferDate});
        }
        
        /// <remarks/>
        public void ModifyManagementInitiatedTransferAsync(string docNo, string employeeNo, string station1, string staffUserId, string comments, System.DateTime transferDate) {
            this.ModifyManagementInitiatedTransferAsync(docNo, employeeNo, station1, staffUserId, comments, transferDate, null);
        }
        
        /// <remarks/>
        public void ModifyManagementInitiatedTransferAsync(string docNo, string employeeNo, string station1, string staffUserId, string comments, System.DateTime transferDate, object userState) {
            if ((this.ModifyManagementInitiatedTransferOperationCompleted == null)) {
                this.ModifyManagementInitiatedTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyManagementInitiatedTransferOperationCompleted);
            }
            this.InvokeAsync("ModifyManagementInitiatedTransfer", new object[] {
                        docNo,
                        employeeNo,
                        station1,
                        staffUserId,
                        comments,
                        transferDate}, this.ModifyManagementInitiatedTransferOperationCompleted, userState);
        }
        
        private void OnModifyManagementInitiatedTransferOperationCompleted(object arg) {
            if ((this.ModifyManagementInitiatedTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyManagementInitiatedTransferCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyOtherCost", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyOtherCost_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int ModifyOtherCost(string imprestMemoNo, int lineNumber, string voteItem, decimal rate, string requiredFor, decimal days) {
            object[] results = this.Invoke("ModifyOtherCost", new object[] {
                        imprestMemoNo,
                        lineNumber,
                        voteItem,
                        rate,
                        requiredFor,
                        days});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyOtherCostAsync(string imprestMemoNo, int lineNumber, string voteItem, decimal rate, string requiredFor, decimal days) {
            this.ModifyOtherCostAsync(imprestMemoNo, lineNumber, voteItem, rate, requiredFor, days, null);
        }
        
        /// <remarks/>
        public void ModifyOtherCostAsync(string imprestMemoNo, int lineNumber, string voteItem, decimal rate, string requiredFor, decimal days, object userState) {
            if ((this.ModifyOtherCostOperationCompleted == null)) {
                this.ModifyOtherCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyOtherCostOperationCompleted);
            }
            this.InvokeAsync("ModifyOtherCost", new object[] {
                        imprestMemoNo,
                        lineNumber,
                        voteItem,
                        rate,
                        requiredFor,
                        days}, this.ModifyOtherCostOperationCompleted, userState);
        }
        
        private void OnModifyOtherCostOperationCompleted(object arg) {
            if ((this.ModifyOtherCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyOtherCostCompleted(this, new ModifyOtherCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyOtherDuty", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyOtherDuty_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyOtherDuty(string appraisalNo, int lineNo, string duties) {
            this.Invoke("ModifyOtherDuty", new object[] {
                        appraisalNo,
                        lineNo,
                        duties});
        }
        
        /// <remarks/>
        public void ModifyOtherDutyAsync(string appraisalNo, int lineNo, string duties) {
            this.ModifyOtherDutyAsync(appraisalNo, lineNo, duties, null);
        }
        
        /// <remarks/>
        public void ModifyOtherDutyAsync(string appraisalNo, int lineNo, string duties, object userState) {
            if ((this.ModifyOtherDutyOperationCompleted == null)) {
                this.ModifyOtherDutyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyOtherDutyOperationCompleted);
            }
            this.InvokeAsync("ModifyOtherDuty", new object[] {
                        appraisalNo,
                        lineNo,
                        duties}, this.ModifyOtherDutyOperationCompleted, userState);
        }
        
        private void OnModifyOtherDutyOperationCompleted(object arg) {
            if ((this.ModifyOtherDutyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyOtherDutyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyPaymentHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyPaymentHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyPaymentHeader(string documentNo, string paymentNarration) {
            this.Invoke("ModifyPaymentHeader", new object[] {
                        documentNo,
                        paymentNarration});
        }
        
        /// <remarks/>
        public void ModifyPaymentHeaderAsync(string documentNo, string paymentNarration) {
            this.ModifyPaymentHeaderAsync(documentNo, paymentNarration, null);
        }
        
        /// <remarks/>
        public void ModifyPaymentHeaderAsync(string documentNo, string paymentNarration, object userState) {
            if ((this.ModifyPaymentHeaderOperationCompleted == null)) {
                this.ModifyPaymentHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyPaymentHeaderOperationCompleted);
            }
            this.InvokeAsync("ModifyPaymentHeader", new object[] {
                        documentNo,
                        paymentNarration}, this.ModifyPaymentHeaderOperationCompleted, userState);
        }
        
        private void OnModifyPaymentHeaderOperationCompleted(object arg) {
            if ((this.ModifyPaymentHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyPaymentHeaderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyProcurementPlanEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyProcurementPlanEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyProcurementPlanEntry(
                    int lineNo, 
                    string procurementPlanID, 
                    string planCategory, 
                    int planItemType, 
                    string planItemNo, 
                    string procurementType, 
                    string solicitationType, 
                    int procurementMethod, 
                    string otherMethods, 
                    string preferenceReservationCode, 
                    string fundingSourceID, 
                    int invitationNoticeType, 
                    decimal quantity, 
                    decimal unitCost, 
                    decimal q1Quantity, 
                    decimal q1Amount, 
                    decimal q2Quantity, 
                    decimal q2Amount, 
                    decimal q3Quantity, 
                    decimal q3Amount, 
                    decimal q4Quantity, 
                    decimal q4Amount) {
            this.Invoke("ModifyProcurementPlanEntry", new object[] {
                        lineNo,
                        procurementPlanID,
                        planCategory,
                        planItemType,
                        planItemNo,
                        procurementType,
                        solicitationType,
                        procurementMethod,
                        otherMethods,
                        preferenceReservationCode,
                        fundingSourceID,
                        invitationNoticeType,
                        quantity,
                        unitCost,
                        q1Quantity,
                        q1Amount,
                        q2Quantity,
                        q2Amount,
                        q3Quantity,
                        q3Amount,
                        q4Quantity,
                        q4Amount});
        }
        
        /// <remarks/>
        public void ModifyProcurementPlanEntryAsync(
                    int lineNo, 
                    string procurementPlanID, 
                    string planCategory, 
                    int planItemType, 
                    string planItemNo, 
                    string procurementType, 
                    string solicitationType, 
                    int procurementMethod, 
                    string otherMethods, 
                    string preferenceReservationCode, 
                    string fundingSourceID, 
                    int invitationNoticeType, 
                    decimal quantity, 
                    decimal unitCost, 
                    decimal q1Quantity, 
                    decimal q1Amount, 
                    decimal q2Quantity, 
                    decimal q2Amount, 
                    decimal q3Quantity, 
                    decimal q3Amount, 
                    decimal q4Quantity, 
                    decimal q4Amount) {
            this.ModifyProcurementPlanEntryAsync(lineNo, procurementPlanID, planCategory, planItemType, planItemNo, procurementType, solicitationType, procurementMethod, otherMethods, preferenceReservationCode, fundingSourceID, invitationNoticeType, quantity, unitCost, q1Quantity, q1Amount, q2Quantity, q2Amount, q3Quantity, q3Amount, q4Quantity, q4Amount, null);
        }
        
        /// <remarks/>
        public void ModifyProcurementPlanEntryAsync(
                    int lineNo, 
                    string procurementPlanID, 
                    string planCategory, 
                    int planItemType, 
                    string planItemNo, 
                    string procurementType, 
                    string solicitationType, 
                    int procurementMethod, 
                    string otherMethods, 
                    string preferenceReservationCode, 
                    string fundingSourceID, 
                    int invitationNoticeType, 
                    decimal quantity, 
                    decimal unitCost, 
                    decimal q1Quantity, 
                    decimal q1Amount, 
                    decimal q2Quantity, 
                    decimal q2Amount, 
                    decimal q3Quantity, 
                    decimal q3Amount, 
                    decimal q4Quantity, 
                    decimal q4Amount, 
                    object userState) {
            if ((this.ModifyProcurementPlanEntryOperationCompleted == null)) {
                this.ModifyProcurementPlanEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyProcurementPlanEntryOperationCompleted);
            }
            this.InvokeAsync("ModifyProcurementPlanEntry", new object[] {
                        lineNo,
                        procurementPlanID,
                        planCategory,
                        planItemType,
                        planItemNo,
                        procurementType,
                        solicitationType,
                        procurementMethod,
                        otherMethods,
                        preferenceReservationCode,
                        fundingSourceID,
                        invitationNoticeType,
                        quantity,
                        unitCost,
                        q1Quantity,
                        q1Amount,
                        q2Quantity,
                        q2Amount,
                        q3Quantity,
                        q3Amount,
                        q4Quantity,
                        q4Amount}, this.ModifyProcurementPlanEntryOperationCompleted, userState);
        }
        
        private void OnModifyProcurementPlanEntryOperationCompleted(object arg) {
            if ((this.ModifyProcurementPlanEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyProcurementPlanEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyProcurementPlanLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyProcurementPlanLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyProcurementPlanLines(string procurementPlanID, int lineNo, string planCategory) {
            this.Invoke("ModifyProcurementPlanLines", new object[] {
                        procurementPlanID,
                        lineNo,
                        planCategory});
        }
        
        /// <remarks/>
        public void ModifyProcurementPlanLinesAsync(string procurementPlanID, int lineNo, string planCategory) {
            this.ModifyProcurementPlanLinesAsync(procurementPlanID, lineNo, planCategory, null);
        }
        
        /// <remarks/>
        public void ModifyProcurementPlanLinesAsync(string procurementPlanID, int lineNo, string planCategory, object userState) {
            if ((this.ModifyProcurementPlanLinesOperationCompleted == null)) {
                this.ModifyProcurementPlanLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyProcurementPlanLinesOperationCompleted);
            }
            this.InvokeAsync("ModifyProcurementPlanLines", new object[] {
                        procurementPlanID,
                        lineNo,
                        planCategory}, this.ModifyProcurementPlanLinesOperationCompleted, userState);
        }
        
        private void OnModifyProcurementPlanLinesOperationCompleted(object arg) {
            if ((this.ModifyProcurementPlanLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyProcurementPlanLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyPurchaseHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyPurchaseHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyPurchaseHeader(string documentNo, string solicitation, int noticePurchase, int pPmethod, string preference, string alternatives) {
            this.Invoke("ModifyPurchaseHeader", new object[] {
                        documentNo,
                        solicitation,
                        noticePurchase,
                        pPmethod,
                        preference,
                        alternatives});
        }
        
        /// <remarks/>
        public void ModifyPurchaseHeaderAsync(string documentNo, string solicitation, int noticePurchase, int pPmethod, string preference, string alternatives) {
            this.ModifyPurchaseHeaderAsync(documentNo, solicitation, noticePurchase, pPmethod, preference, alternatives, null);
        }
        
        /// <remarks/>
        public void ModifyPurchaseHeaderAsync(string documentNo, string solicitation, int noticePurchase, int pPmethod, string preference, string alternatives, object userState) {
            if ((this.ModifyPurchaseHeaderOperationCompleted == null)) {
                this.ModifyPurchaseHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyPurchaseHeaderOperationCompleted);
            }
            this.InvokeAsync("ModifyPurchaseHeader", new object[] {
                        documentNo,
                        solicitation,
                        noticePurchase,
                        pPmethod,
                        preference,
                        alternatives}, this.ModifyPurchaseHeaderOperationCompleted, userState);
        }
        
        private void OnModifyPurchaseHeaderOperationCompleted(object arg) {
            if ((this.ModifyPurchaseHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyPurchaseHeaderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyRFQ", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyRFQ_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyRFQ(string docNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime sEndadate, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime sEndaTime, string rFQDuration, string bidTemplate, string bidOPCom, string bidEvaCom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime bidOpeningDate, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime bidOpTime) {
            this.Invoke("ModifyRFQ", new object[] {
                        docNo,
                        sEndadate,
                        sEndaTime,
                        rFQDuration,
                        bidTemplate,
                        bidOPCom,
                        bidEvaCom,
                        bidOpeningDate,
                        bidOpTime});
        }
        
        /// <remarks/>
        public void ModifyRFQAsync(string docNo, System.DateTime sEndadate, System.DateTime sEndaTime, string rFQDuration, string bidTemplate, string bidOPCom, string bidEvaCom, System.DateTime bidOpeningDate, System.DateTime bidOpTime) {
            this.ModifyRFQAsync(docNo, sEndadate, sEndaTime, rFQDuration, bidTemplate, bidOPCom, bidEvaCom, bidOpeningDate, bidOpTime, null);
        }
        
        /// <remarks/>
        public void ModifyRFQAsync(string docNo, System.DateTime sEndadate, System.DateTime sEndaTime, string rFQDuration, string bidTemplate, string bidOPCom, string bidEvaCom, System.DateTime bidOpeningDate, System.DateTime bidOpTime, object userState) {
            if ((this.ModifyRFQOperationCompleted == null)) {
                this.ModifyRFQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyRFQOperationCompleted);
            }
            this.InvokeAsync("ModifyRFQ", new object[] {
                        docNo,
                        sEndadate,
                        sEndaTime,
                        rFQDuration,
                        bidTemplate,
                        bidOPCom,
                        bidEvaCom,
                        bidOpeningDate,
                        bidOpTime}, this.ModifyRFQOperationCompleted, userState);
        }
        
        private void OnModifyRFQOperationCompleted(object arg) {
            if ((this.ModifyRFQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyRFQCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyReallocationLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyReallocationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyReallocationLines(string documentNo, int lineNumber, decimal amount) {
            this.Invoke("ModifyReallocationLines", new object[] {
                        documentNo,
                        lineNumber,
                        amount});
        }
        
        /// <remarks/>
        public void ModifyReallocationLinesAsync(string documentNo, int lineNumber, decimal amount) {
            this.ModifyReallocationLinesAsync(documentNo, lineNumber, amount, null);
        }
        
        /// <remarks/>
        public void ModifyReallocationLinesAsync(string documentNo, int lineNumber, decimal amount, object userState) {
            if ((this.ModifyReallocationLinesOperationCompleted == null)) {
                this.ModifyReallocationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyReallocationLinesOperationCompleted);
            }
            this.InvokeAsync("ModifyReallocationLines", new object[] {
                        documentNo,
                        lineNumber,
                        amount}, this.ModifyReallocationLinesOperationCompleted, userState);
        }
        
        private void OnModifyReallocationLinesOperationCompleted(object arg) {
            if ((this.ModifyReallocationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyReallocationLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifySampleLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifySampleLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifySampleLine(string sampleID, int lineNo, string sampleType, string source, decimal quantity, string storageLocation, string notes) {
            this.Invoke("ModifySampleLine", new object[] {
                        sampleID,
                        lineNo,
                        sampleType,
                        source,
                        quantity,
                        storageLocation,
                        notes});
        }
        
        /// <remarks/>
        public void ModifySampleLineAsync(string sampleID, int lineNo, string sampleType, string source, decimal quantity, string storageLocation, string notes) {
            this.ModifySampleLineAsync(sampleID, lineNo, sampleType, source, quantity, storageLocation, notes, null);
        }
        
        /// <remarks/>
        public void ModifySampleLineAsync(string sampleID, int lineNo, string sampleType, string source, decimal quantity, string storageLocation, string notes, object userState) {
            if ((this.ModifySampleLineOperationCompleted == null)) {
                this.ModifySampleLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifySampleLineOperationCompleted);
            }
            this.InvokeAsync("ModifySampleLine", new object[] {
                        sampleID,
                        lineNo,
                        sampleType,
                        source,
                        quantity,
                        storageLocation,
                        notes}, this.ModifySampleLineOperationCompleted, userState);
        }
        
        private void OnModifySampleLineOperationCompleted(object arg) {
            if ((this.ModifySampleLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifySampleLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifySelfInitiatedTransfer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifySelfInitiatedTransfer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifySelfInitiatedTransfer(string docNo, string employeeNo, string station1, string station2, string station3, string staffUserId, string comments, string reason) {
            this.Invoke("ModifySelfInitiatedTransfer", new object[] {
                        docNo,
                        employeeNo,
                        station1,
                        station2,
                        station3,
                        staffUserId,
                        comments,
                        reason});
        }
        
        /// <remarks/>
        public void ModifySelfInitiatedTransferAsync(string docNo, string employeeNo, string station1, string station2, string station3, string staffUserId, string comments, string reason) {
            this.ModifySelfInitiatedTransferAsync(docNo, employeeNo, station1, station2, station3, staffUserId, comments, reason, null);
        }
        
        /// <remarks/>
        public void ModifySelfInitiatedTransferAsync(string docNo, string employeeNo, string station1, string station2, string station3, string staffUserId, string comments, string reason, object userState) {
            if ((this.ModifySelfInitiatedTransferOperationCompleted == null)) {
                this.ModifySelfInitiatedTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifySelfInitiatedTransferOperationCompleted);
            }
            this.InvokeAsync("ModifySelfInitiatedTransfer", new object[] {
                        docNo,
                        employeeNo,
                        station1,
                        station2,
                        station3,
                        staffUserId,
                        comments,
                        reason}, this.ModifySelfInitiatedTransferOperationCompleted, userState);
        }
        
        private void OnModifySelfInitiatedTransferOperationCompleted(object arg) {
            if ((this.ModifySelfInitiatedTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifySelfInitiatedTransferCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyTrainingCourseSetup", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyTrainingCourseSetup_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyTrainingCourseSetup(string codeNo, string description, string domain, string qualificationCode, int skillType, string courseDuration, bool bonded, string bondingPeriod, decimal bondingPenalty, string trainerCode, bool lMS) {
            object[] results = this.Invoke("ModifyTrainingCourseSetup", new object[] {
                        codeNo,
                        description,
                        domain,
                        qualificationCode,
                        skillType,
                        courseDuration,
                        bonded,
                        bondingPeriod,
                        bondingPenalty,
                        trainerCode,
                        lMS});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyTrainingCourseSetupAsync(string codeNo, string description, string domain, string qualificationCode, int skillType, string courseDuration, bool bonded, string bondingPeriod, decimal bondingPenalty, string trainerCode, bool lMS) {
            this.ModifyTrainingCourseSetupAsync(codeNo, description, domain, qualificationCode, skillType, courseDuration, bonded, bondingPeriod, bondingPenalty, trainerCode, lMS, null);
        }
        
        /// <remarks/>
        public void ModifyTrainingCourseSetupAsync(string codeNo, string description, string domain, string qualificationCode, int skillType, string courseDuration, bool bonded, string bondingPeriod, decimal bondingPenalty, string trainerCode, bool lMS, object userState) {
            if ((this.ModifyTrainingCourseSetupOperationCompleted == null)) {
                this.ModifyTrainingCourseSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyTrainingCourseSetupOperationCompleted);
            }
            this.InvokeAsync("ModifyTrainingCourseSetup", new object[] {
                        codeNo,
                        description,
                        domain,
                        qualificationCode,
                        skillType,
                        courseDuration,
                        bonded,
                        bondingPeriod,
                        bondingPenalty,
                        trainerCode,
                        lMS}, this.ModifyTrainingCourseSetupOperationCompleted, userState);
        }
        
        private void OnModifyTrainingCourseSetupOperationCompleted(object arg) {
            if ((this.ModifyTrainingCourseSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyTrainingCourseSetupCompleted(this, new ModifyTrainingCourseSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyWorkTicketLines1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyWorkTicketLines1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyWorkTicketLines1(string docNo, int entryNo, decimal oilDrawn, decimal fuelDrawn, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime timeout, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime timeIn, decimal openingOdometer, decimal closingOdometer, decimal fuelPerKM, decimal oilPerKM, decimal fuelCarriedForward, string receiptNo) {
            object[] results = this.Invoke("ModifyWorkTicketLines1", new object[] {
                        docNo,
                        entryNo,
                        oilDrawn,
                        fuelDrawn,
                        timeout,
                        timeIn,
                        openingOdometer,
                        closingOdometer,
                        fuelPerKM,
                        oilPerKM,
                        fuelCarriedForward,
                        receiptNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyWorkTicketLines1Async(string docNo, int entryNo, decimal oilDrawn, decimal fuelDrawn, System.DateTime timeout, System.DateTime timeIn, decimal openingOdometer, decimal closingOdometer, decimal fuelPerKM, decimal oilPerKM, decimal fuelCarriedForward, string receiptNo) {
            this.ModifyWorkTicketLines1Async(docNo, entryNo, oilDrawn, fuelDrawn, timeout, timeIn, openingOdometer, closingOdometer, fuelPerKM, oilPerKM, fuelCarriedForward, receiptNo, null);
        }
        
        /// <remarks/>
        public void ModifyWorkTicketLines1Async(string docNo, int entryNo, decimal oilDrawn, decimal fuelDrawn, System.DateTime timeout, System.DateTime timeIn, decimal openingOdometer, decimal closingOdometer, decimal fuelPerKM, decimal oilPerKM, decimal fuelCarriedForward, string receiptNo, object userState) {
            if ((this.ModifyWorkTicketLines1OperationCompleted == null)) {
                this.ModifyWorkTicketLines1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyWorkTicketLines1OperationCompleted);
            }
            this.InvokeAsync("ModifyWorkTicketLines1", new object[] {
                        docNo,
                        entryNo,
                        oilDrawn,
                        fuelDrawn,
                        timeout,
                        timeIn,
                        openingOdometer,
                        closingOdometer,
                        fuelPerKM,
                        oilPerKM,
                        fuelCarriedForward,
                        receiptNo}, this.ModifyWorkTicketLines1OperationCompleted, userState);
        }
        
        private void OnModifyWorkTicketLines1OperationCompleted(object arg) {
            if ((this.ModifyWorkTicketLines1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyWorkTicketLines1Completed(this, new ModifyWorkTicketLines1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ModifyWorkTicketLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ModifyWorkTicketLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyWorkTicketLines(
                    string docNo, 
                    string transportNo, 
                    int entryNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime workTicketDate, 
                    string journey_Route, 
                    decimal oilDrawn, 
                    decimal fuelDrawn, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime timeout, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime timeIn, 
                    decimal openingOdometer, 
                    decimal closingOdometer, 
                    decimal fuelPerKM, 
                    decimal oilPerKM, 
                    decimal fuelCarriedForward, 
                    string authorizedBy, 
                    string gOKOfficer, 
                    string defectRecorded, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime defectDate, 
                    string actionTaken) {
            this.Invoke("ModifyWorkTicketLines", new object[] {
                        docNo,
                        transportNo,
                        entryNo,
                        workTicketDate,
                        journey_Route,
                        oilDrawn,
                        fuelDrawn,
                        timeout,
                        timeIn,
                        openingOdometer,
                        closingOdometer,
                        fuelPerKM,
                        oilPerKM,
                        fuelCarriedForward,
                        authorizedBy,
                        gOKOfficer,
                        defectRecorded,
                        defectDate,
                        actionTaken});
        }
        
        /// <remarks/>
        public void ModifyWorkTicketLinesAsync(
                    string docNo, 
                    string transportNo, 
                    int entryNo, 
                    System.DateTime workTicketDate, 
                    string journey_Route, 
                    decimal oilDrawn, 
                    decimal fuelDrawn, 
                    System.DateTime timeout, 
                    System.DateTime timeIn, 
                    decimal openingOdometer, 
                    decimal closingOdometer, 
                    decimal fuelPerKM, 
                    decimal oilPerKM, 
                    decimal fuelCarriedForward, 
                    string authorizedBy, 
                    string gOKOfficer, 
                    string defectRecorded, 
                    System.DateTime defectDate, 
                    string actionTaken) {
            this.ModifyWorkTicketLinesAsync(docNo, transportNo, entryNo, workTicketDate, journey_Route, oilDrawn, fuelDrawn, timeout, timeIn, openingOdometer, closingOdometer, fuelPerKM, oilPerKM, fuelCarriedForward, authorizedBy, gOKOfficer, defectRecorded, defectDate, actionTaken, null);
        }
        
        /// <remarks/>
        public void ModifyWorkTicketLinesAsync(
                    string docNo, 
                    string transportNo, 
                    int entryNo, 
                    System.DateTime workTicketDate, 
                    string journey_Route, 
                    decimal oilDrawn, 
                    decimal fuelDrawn, 
                    System.DateTime timeout, 
                    System.DateTime timeIn, 
                    decimal openingOdometer, 
                    decimal closingOdometer, 
                    decimal fuelPerKM, 
                    decimal oilPerKM, 
                    decimal fuelCarriedForward, 
                    string authorizedBy, 
                    string gOKOfficer, 
                    string defectRecorded, 
                    System.DateTime defectDate, 
                    string actionTaken, 
                    object userState) {
            if ((this.ModifyWorkTicketLinesOperationCompleted == null)) {
                this.ModifyWorkTicketLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyWorkTicketLinesOperationCompleted);
            }
            this.InvokeAsync("ModifyWorkTicketLines", new object[] {
                        docNo,
                        transportNo,
                        entryNo,
                        workTicketDate,
                        journey_Route,
                        oilDrawn,
                        fuelDrawn,
                        timeout,
                        timeIn,
                        openingOdometer,
                        closingOdometer,
                        fuelPerKM,
                        oilPerKM,
                        fuelCarriedForward,
                        authorizedBy,
                        gOKOfficer,
                        defectRecorded,
                        defectDate,
                        actionTaken}, this.ModifyWorkTicketLinesOperationCompleted, userState);
        }
        
        private void OnModifyWorkTicketLinesOperationCompleted(object arg) {
            if ((this.ModifyWorkTicketLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyWorkTicketLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:NewDisciplinaryCase", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="NewDisciplinaryCase_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string NewDisciplinaryCase(string employeeNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime complaintDate, string disciplinaryCaseType, string caseDescription, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime periodFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime periodTo, bool multipleAccused, int caseSeverity, string modeofLodging, string respC, bool accuserIsStaff, string accuserName, string nonStaffOriginator, string previousInterventions, string user_ID) {
            object[] results = this.Invoke("NewDisciplinaryCase", new object[] {
                        employeeNo,
                        complaintDate,
                        disciplinaryCaseType,
                        caseDescription,
                        periodFrom,
                        periodTo,
                        multipleAccused,
                        caseSeverity,
                        modeofLodging,
                        respC,
                        accuserIsStaff,
                        accuserName,
                        nonStaffOriginator,
                        previousInterventions,
                        user_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewDisciplinaryCaseAsync(string employeeNo, System.DateTime complaintDate, string disciplinaryCaseType, string caseDescription, System.DateTime periodFrom, System.DateTime periodTo, bool multipleAccused, int caseSeverity, string modeofLodging, string respC, bool accuserIsStaff, string accuserName, string nonStaffOriginator, string previousInterventions, string user_ID) {
            this.NewDisciplinaryCaseAsync(employeeNo, complaintDate, disciplinaryCaseType, caseDescription, periodFrom, periodTo, multipleAccused, caseSeverity, modeofLodging, respC, accuserIsStaff, accuserName, nonStaffOriginator, previousInterventions, user_ID, null);
        }
        
        /// <remarks/>
        public void NewDisciplinaryCaseAsync(
                    string employeeNo, 
                    System.DateTime complaintDate, 
                    string disciplinaryCaseType, 
                    string caseDescription, 
                    System.DateTime periodFrom, 
                    System.DateTime periodTo, 
                    bool multipleAccused, 
                    int caseSeverity, 
                    string modeofLodging, 
                    string respC, 
                    bool accuserIsStaff, 
                    string accuserName, 
                    string nonStaffOriginator, 
                    string previousInterventions, 
                    string user_ID, 
                    object userState) {
            if ((this.NewDisciplinaryCaseOperationCompleted == null)) {
                this.NewDisciplinaryCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewDisciplinaryCaseOperationCompleted);
            }
            this.InvokeAsync("NewDisciplinaryCase", new object[] {
                        employeeNo,
                        complaintDate,
                        disciplinaryCaseType,
                        caseDescription,
                        periodFrom,
                        periodTo,
                        multipleAccused,
                        caseSeverity,
                        modeofLodging,
                        respC,
                        accuserIsStaff,
                        accuserName,
                        nonStaffOriginator,
                        previousInterventions,
                        user_ID}, this.NewDisciplinaryCaseOperationCompleted, userState);
        }
        
        private void OnNewDisciplinaryCaseOperationCompleted(object arg) {
            if ((this.NewDisciplinaryCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewDisciplinaryCaseCompleted(this, new NewDisciplinaryCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:NotifySupplyChain", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="NotifySupplyChain_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool NotifySupplyChain(string employ) {
            object[] results = this.Invoke("NotifySupplyChain", new object[] {
                        employ});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotifySupplyChainAsync(string employ) {
            this.NotifySupplyChainAsync(employ, null);
        }
        
        /// <remarks/>
        public void NotifySupplyChainAsync(string employ, object userState) {
            if ((this.NotifySupplyChainOperationCompleted == null)) {
                this.NotifySupplyChainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifySupplyChainOperationCompleted);
            }
            this.InvokeAsync("NotifySupplyChain", new object[] {
                        employ}, this.NotifySupplyChainOperationCompleted, userState);
        }
        
        private void OnNotifySupplyChainOperationCompleted(object arg) {
            if ((this.NotifySupplyChainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifySupplyChainCompleted(this, new NotifySupplyChainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:PasswordChanged", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="PasswordChanged_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PasswordChanged(string empNo, bool changed) {
            this.Invoke("PasswordChanged", new object[] {
                        empNo,
                        changed});
        }
        
        /// <remarks/>
        public void PasswordChangedAsync(string empNo, bool changed) {
            this.PasswordChangedAsync(empNo, changed, null);
        }
        
        /// <remarks/>
        public void PasswordChangedAsync(string empNo, bool changed, object userState) {
            if ((this.PasswordChangedOperationCompleted == null)) {
                this.PasswordChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPasswordChangedOperationCompleted);
            }
            this.InvokeAsync("PasswordChanged", new object[] {
                        empNo,
                        changed}, this.PasswordChangedOperationCompleted, userState);
        }
        
        private void OnPasswordChangedOperationCompleted(object arg) {
            if ((this.PasswordChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PasswordChangedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:PerfomSendToSuperVisor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="PerfomSendToSuperVisor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PerfomSendToSuperVisor(string contractNo) {
            this.Invoke("PerfomSendToSuperVisor", new object[] {
                        contractNo});
        }
        
        /// <remarks/>
        public void PerfomSendToSuperVisorAsync(string contractNo) {
            this.PerfomSendToSuperVisorAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void PerfomSendToSuperVisorAsync(string contractNo, object userState) {
            if ((this.PerfomSendToSuperVisorOperationCompleted == null)) {
                this.PerfomSendToSuperVisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPerfomSendToSuperVisorOperationCompleted);
            }
            this.InvokeAsync("PerfomSendToSuperVisor", new object[] {
                        contractNo}, this.PerfomSendToSuperVisorOperationCompleted, userState);
        }
        
        private void OnPerfomSendToSuperVisorOperationCompleted(object arg) {
            if ((this.PerfomSendToSuperVisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PerfomSendToSuperVisorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:PopulatePettyCashSurrender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="PopulatePettyCashSurrender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PopulatePettyCashSurrender(string employeeNo, string imprestNo, string surrenderNo, string region) {
            object[] results = this.Invoke("PopulatePettyCashSurrender", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo,
                        region});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PopulatePettyCashSurrenderAsync(string employeeNo, string imprestNo, string surrenderNo, string region) {
            this.PopulatePettyCashSurrenderAsync(employeeNo, imprestNo, surrenderNo, region, null);
        }
        
        /// <remarks/>
        public void PopulatePettyCashSurrenderAsync(string employeeNo, string imprestNo, string surrenderNo, string region, object userState) {
            if ((this.PopulatePettyCashSurrenderOperationCompleted == null)) {
                this.PopulatePettyCashSurrenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPopulatePettyCashSurrenderOperationCompleted);
            }
            this.InvokeAsync("PopulatePettyCashSurrender", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo,
                        region}, this.PopulatePettyCashSurrenderOperationCompleted, userState);
        }
        
        private void OnPopulatePettyCashSurrenderOperationCompleted(object arg) {
            if ((this.PopulatePettyCashSurrenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PopulatePettyCashSurrenderCompleted(this, new PopulatePettyCashSurrenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:PopulatePettyCash", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="PopulatePettyCash_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PopulatePettyCash(string docNo, string empNo) {
            object[] results = this.Invoke("PopulatePettyCash", new object[] {
                        docNo,
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PopulatePettyCashAsync(string docNo, string empNo) {
            this.PopulatePettyCashAsync(docNo, empNo, null);
        }
        
        /// <remarks/>
        public void PopulatePettyCashAsync(string docNo, string empNo, object userState) {
            if ((this.PopulatePettyCashOperationCompleted == null)) {
                this.PopulatePettyCashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPopulatePettyCashOperationCompleted);
            }
            this.InvokeAsync("PopulatePettyCash", new object[] {
                        docNo,
                        empNo}, this.PopulatePettyCashOperationCompleted, userState);
        }
        
        private void OnPopulatePettyCashOperationCompleted(object arg) {
            if ((this.PopulatePettyCashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PopulatePettyCashCompleted(this, new PopulatePettyCashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:PosFinanceEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="PosFinanceEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PosFinanceEvaluation(string docNum, string loggedInUser) {
            this.Invoke("PosFinanceEvaluation", new object[] {
                        docNum,
                        loggedInUser});
        }
        
        /// <remarks/>
        public void PosFinanceEvaluationAsync(string docNum, string loggedInUser) {
            this.PosFinanceEvaluationAsync(docNum, loggedInUser, null);
        }
        
        /// <remarks/>
        public void PosFinanceEvaluationAsync(string docNum, string loggedInUser, object userState) {
            if ((this.PosFinanceEvaluationOperationCompleted == null)) {
                this.PosFinanceEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPosFinanceEvaluationOperationCompleted);
            }
            this.InvokeAsync("PosFinanceEvaluation", new object[] {
                        docNum,
                        loggedInUser}, this.PosFinanceEvaluationOperationCompleted, userState);
        }
        
        private void OnPosFinanceEvaluationOperationCompleted(object arg) {
            if ((this.PosFinanceEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PosFinanceEvaluationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:PosTechnicalEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="PosTechnicalEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PosTechnicalEvaluation(string docNum, string loggedInUser) {
            this.Invoke("PosTechnicalEvaluation", new object[] {
                        docNum,
                        loggedInUser});
        }
        
        /// <remarks/>
        public void PosTechnicalEvaluationAsync(string docNum, string loggedInUser) {
            this.PosTechnicalEvaluationAsync(docNum, loggedInUser, null);
        }
        
        /// <remarks/>
        public void PosTechnicalEvaluationAsync(string docNum, string loggedInUser, object userState) {
            if ((this.PosTechnicalEvaluationOperationCompleted == null)) {
                this.PosTechnicalEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPosTechnicalEvaluationOperationCompleted);
            }
            this.InvokeAsync("PosTechnicalEvaluation", new object[] {
                        docNum,
                        loggedInUser}, this.PosTechnicalEvaluationOperationCompleted, userState);
        }
        
        private void OnPosTechnicalEvaluationOperationCompleted(object arg) {
            if ((this.PosTechnicalEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PosTechnicalEvaluationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:PostBidOpeningRegister", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="PostBidOpeningRegister_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PostBidOpeningRegister(string docNo, string postedBy) {
            this.Invoke("PostBidOpeningRegister", new object[] {
                        docNo,
                        postedBy});
        }
        
        /// <remarks/>
        public void PostBidOpeningRegisterAsync(string docNo, string postedBy) {
            this.PostBidOpeningRegisterAsync(docNo, postedBy, null);
        }
        
        /// <remarks/>
        public void PostBidOpeningRegisterAsync(string docNo, string postedBy, object userState) {
            if ((this.PostBidOpeningRegisterOperationCompleted == null)) {
                this.PostBidOpeningRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostBidOpeningRegisterOperationCompleted);
            }
            this.InvokeAsync("PostBidOpeningRegister", new object[] {
                        docNo,
                        postedBy}, this.PostBidOpeningRegisterOperationCompleted, userState);
        }
        
        private void OnPostBidOpeningRegisterOperationCompleted(object arg) {
            if ((this.PostBidOpeningRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostBidOpeningRegisterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:PostImprest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="PostImprest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PostImprest(string docNo) {
            this.Invoke("PostImprest", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void PostImprestAsync(string docNo) {
            this.PostImprestAsync(docNo, null);
        }
        
        /// <remarks/>
        public void PostImprestAsync(string docNo, object userState) {
            if ((this.PostImprestOperationCompleted == null)) {
                this.PostImprestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostImprestOperationCompleted);
            }
            this.InvokeAsync("PostImprest", new object[] {
                        docNo}, this.PostImprestOperationCompleted, userState);
        }
        
        private void OnPostImprestOperationCompleted(object arg) {
            if ((this.PostImprestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostImprestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:PostPaymentVoucher", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="PostPaymentVoucher_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PostPaymentVoucher(string docNo, string creator) {
            this.Invoke("PostPaymentVoucher", new object[] {
                        docNo,
                        creator});
        }
        
        /// <remarks/>
        public void PostPaymentVoucherAsync(string docNo, string creator) {
            this.PostPaymentVoucherAsync(docNo, creator, null);
        }
        
        /// <remarks/>
        public void PostPaymentVoucherAsync(string docNo, string creator, object userState) {
            if ((this.PostPaymentVoucherOperationCompleted == null)) {
                this.PostPaymentVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostPaymentVoucherOperationCompleted);
            }
            this.InvokeAsync("PostPaymentVoucher", new object[] {
                        docNo,
                        creator}, this.PostPaymentVoucherOperationCompleted, userState);
        }
        
        private void OnPostPaymentVoucherOperationCompleted(object arg) {
            if ((this.PostPaymentVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostPaymentVoucherCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:PostPreliminaryEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="PostPreliminaryEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PostPreliminaryEvaluation(string docNum, string loggedInUser) {
            this.Invoke("PostPreliminaryEvaluation", new object[] {
                        docNum,
                        loggedInUser});
        }
        
        /// <remarks/>
        public void PostPreliminaryEvaluationAsync(string docNum, string loggedInUser) {
            this.PostPreliminaryEvaluationAsync(docNum, loggedInUser, null);
        }
        
        /// <remarks/>
        public void PostPreliminaryEvaluationAsync(string docNum, string loggedInUser, object userState) {
            if ((this.PostPreliminaryEvaluationOperationCompleted == null)) {
                this.PostPreliminaryEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostPreliminaryEvaluationOperationCompleted);
            }
            this.InvokeAsync("PostPreliminaryEvaluation", new object[] {
                        docNum,
                        loggedInUser}, this.PostPreliminaryEvaluationOperationCompleted, userState);
        }
        
        private void OnPostPreliminaryEvaluationOperationCompleted(object arg) {
            if ((this.PostPreliminaryEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostPreliminaryEvaluationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:PostPurchaseInvoice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="PostPurchaseInvoice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PostPurchaseInvoice(string documentNo) {
            object[] results = this.Invoke("PostPurchaseInvoice", new object[] {
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostPurchaseInvoiceAsync(string documentNo) {
            this.PostPurchaseInvoiceAsync(documentNo, null);
        }
        
        /// <remarks/>
        public void PostPurchaseInvoiceAsync(string documentNo, object userState) {
            if ((this.PostPurchaseInvoiceOperationCompleted == null)) {
                this.PostPurchaseInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostPurchaseInvoiceOperationCompleted);
            }
            this.InvokeAsync("PostPurchaseInvoice", new object[] {
                        documentNo}, this.PostPurchaseInvoiceOperationCompleted, userState);
        }
        
        private void OnPostPurchaseInvoiceOperationCompleted(object arg) {
            if ((this.PostPurchaseInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostPurchaseInvoiceCompleted(this, new PostPurchaseInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:PostPurchaseOrder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="PostPurchaseOrder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PostPurchaseOrder(string documentNo) {
            object[] results = this.Invoke("PostPurchaseOrder", new object[] {
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostPurchaseOrderAsync(string documentNo) {
            this.PostPurchaseOrderAsync(documentNo, null);
        }
        
        /// <remarks/>
        public void PostPurchaseOrderAsync(string documentNo, object userState) {
            if ((this.PostPurchaseOrderOperationCompleted == null)) {
                this.PostPurchaseOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostPurchaseOrderOperationCompleted);
            }
            this.InvokeAsync("PostPurchaseOrder", new object[] {
                        documentNo}, this.PostPurchaseOrderOperationCompleted, userState);
        }
        
        private void OnPostPurchaseOrderOperationCompleted(object arg) {
            if ((this.PostPurchaseOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostPurchaseOrderCompleted(this, new PostPurchaseOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:PostReceipts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="PostReceipts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PostReceipts(string docNo) {
            this.Invoke("PostReceipts", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void PostReceiptsAsync(string docNo) {
            this.PostReceiptsAsync(docNo, null);
        }
        
        /// <remarks/>
        public void PostReceiptsAsync(string docNo, object userState) {
            if ((this.PostReceiptsOperationCompleted == null)) {
                this.PostReceiptsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostReceiptsOperationCompleted);
            }
            this.InvokeAsync("PostReceipts", new object[] {
                        docNo}, this.PostReceiptsOperationCompleted, userState);
        }
        
        private void OnPostReceiptsOperationCompleted(object arg) {
            if ((this.PostReceiptsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostReceiptsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:PostStaffClaim", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="PostStaffClaim_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PostStaffClaim(string docNo) {
            this.Invoke("PostStaffClaim", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void PostStaffClaimAsync(string docNo) {
            this.PostStaffClaimAsync(docNo, null);
        }
        
        /// <remarks/>
        public void PostStaffClaimAsync(string docNo, object userState) {
            if ((this.PostStaffClaimOperationCompleted == null)) {
                this.PostStaffClaimOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostStaffClaimOperationCompleted);
            }
            this.InvokeAsync("PostStaffClaim", new object[] {
                        docNo}, this.PostStaffClaimOperationCompleted, userState);
        }
        
        private void OnPostStaffClaimOperationCompleted(object arg) {
            if ((this.PostStaffClaimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostStaffClaimCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ProceedToProffessionalOpinion", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ProceedToProffessionalOpinion_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProceedToProffessionalOpinion(string docNo, string userId) {
            this.Invoke("ProceedToProffessionalOpinion", new object[] {
                        docNo,
                        userId});
        }
        
        /// <remarks/>
        public void ProceedToProffessionalOpinionAsync(string docNo, string userId) {
            this.ProceedToProffessionalOpinionAsync(docNo, userId, null);
        }
        
        /// <remarks/>
        public void ProceedToProffessionalOpinionAsync(string docNo, string userId, object userState) {
            if ((this.ProceedToProffessionalOpinionOperationCompleted == null)) {
                this.ProceedToProffessionalOpinionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProceedToProffessionalOpinionOperationCompleted);
            }
            this.InvokeAsync("ProceedToProffessionalOpinion", new object[] {
                        docNo,
                        userId}, this.ProceedToProffessionalOpinionOperationCompleted, userState);
        }
        
        private void OnProceedToProffessionalOpinionOperationCompleted(object arg) {
            if ((this.ProceedToProffessionalOpinionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProceedToProffessionalOpinionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ProcessDriverAllocations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ProcessDriverAllocations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ProcessDriverAllocations(string docNumber) {
            object[] results = this.Invoke("ProcessDriverAllocations", new object[] {
                        docNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessDriverAllocationsAsync(string docNumber) {
            this.ProcessDriverAllocationsAsync(docNumber, null);
        }
        
        /// <remarks/>
        public void ProcessDriverAllocationsAsync(string docNumber, object userState) {
            if ((this.ProcessDriverAllocationsOperationCompleted == null)) {
                this.ProcessDriverAllocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessDriverAllocationsOperationCompleted);
            }
            this.InvokeAsync("ProcessDriverAllocations", new object[] {
                        docNumber}, this.ProcessDriverAllocationsOperationCompleted, userState);
        }
        
        private void OnProcessDriverAllocationsOperationCompleted(object arg) {
            if ((this.ProcessDriverAllocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessDriverAllocationsCompleted(this, new ProcessDriverAllocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ProvideIctfeedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ProvideIctfeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ProvideIctfeedback(string appNo, string description) {
            object[] results = this.Invoke("ProvideIctfeedback", new object[] {
                        appNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProvideIctfeedbackAsync(string appNo, string description) {
            this.ProvideIctfeedbackAsync(appNo, description, null);
        }
        
        /// <remarks/>
        public void ProvideIctfeedbackAsync(string appNo, string description, object userState) {
            if ((this.ProvideIctfeedbackOperationCompleted == null)) {
                this.ProvideIctfeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProvideIctfeedbackOperationCompleted);
            }
            this.InvokeAsync("ProvideIctfeedback", new object[] {
                        appNo,
                        description}, this.ProvideIctfeedbackOperationCompleted, userState);
        }
        
        private void OnProvideIctfeedbackOperationCompleted(object arg) {
            if ((this.ProvideIctfeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProvideIctfeedbackCompleted(this, new ProvideIctfeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:PurchasesPerEmployee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="PurchasesPerEmployee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal[] PurchasesPerEmployee(string employeeNo) {
            object[] results = this.Invoke("PurchasesPerEmployee", new object[] {
                        employeeNo});
            return ((decimal[])(results[0]));
        }
        
        /// <remarks/>
        public void PurchasesPerEmployeeAsync(string employeeNo) {
            this.PurchasesPerEmployeeAsync(employeeNo, null);
        }
        
        /// <remarks/>
        public void PurchasesPerEmployeeAsync(string employeeNo, object userState) {
            if ((this.PurchasesPerEmployeeOperationCompleted == null)) {
                this.PurchasesPerEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchasesPerEmployeeOperationCompleted);
            }
            this.InvokeAsync("PurchasesPerEmployee", new object[] {
                        employeeNo}, this.PurchasesPerEmployeeOperationCompleted, userState);
        }
        
        private void OnPurchasesPerEmployeeOperationCompleted(object arg) {
            if ((this.PurchasesPerEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchasesPerEmployeeCompleted(this, new PurchasesPerEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:RecordExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="RecordExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool RecordExists(string entryNo) {
            object[] results = this.Invoke("RecordExists", new object[] {
                        entryNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RecordExistsAsync(string entryNo) {
            this.RecordExistsAsync(entryNo, null);
        }
        
        /// <remarks/>
        public void RecordExistsAsync(string entryNo, object userState) {
            if ((this.RecordExistsOperationCompleted == null)) {
                this.RecordExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecordExistsOperationCompleted);
            }
            this.InvokeAsync("RecordExists", new object[] {
                        entryNo}, this.RecordExistsOperationCompleted, userState);
        }
        
        private void OnRecordExistsOperationCompleted(object arg) {
            if ((this.RecordExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecordExistsCompleted(this, new RecordExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:RecordGDMSSApplicationExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="RecordGDMSSApplicationExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool RecordGDMSSApplicationExists(string entryNo) {
            object[] results = this.Invoke("RecordGDMSSApplicationExists", new object[] {
                        entryNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RecordGDMSSApplicationExistsAsync(string entryNo) {
            this.RecordGDMSSApplicationExistsAsync(entryNo, null);
        }
        
        /// <remarks/>
        public void RecordGDMSSApplicationExistsAsync(string entryNo, object userState) {
            if ((this.RecordGDMSSApplicationExistsOperationCompleted == null)) {
                this.RecordGDMSSApplicationExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecordGDMSSApplicationExistsOperationCompleted);
            }
            this.InvokeAsync("RecordGDMSSApplicationExists", new object[] {
                        entryNo}, this.RecordGDMSSApplicationExistsOperationCompleted, userState);
        }
        
        private void OnRecordGDMSSApplicationExistsOperationCompleted(object arg) {
            if ((this.RecordGDMSSApplicationExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecordGDMSSApplicationExistsCompleted(this, new RecordGDMSSApplicationExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:RejectApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="RejectApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool RejectApplication(string entryNo) {
            object[] results = this.Invoke("RejectApplication", new object[] {
                        entryNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RejectApplicationAsync(string entryNo) {
            this.RejectApplicationAsync(entryNo, null);
        }
        
        /// <remarks/>
        public void RejectApplicationAsync(string entryNo, object userState) {
            if ((this.RejectApplicationOperationCompleted == null)) {
                this.RejectApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectApplicationOperationCompleted);
            }
            this.InvokeAsync("RejectApplication", new object[] {
                        entryNo}, this.RejectApplicationOperationCompleted, userState);
        }
        
        private void OnRejectApplicationOperationCompleted(object arg) {
            if ((this.RejectApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectApplicationCompleted(this, new RejectApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:RejectApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="RejectApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RejectApprovalRequest(string docNo, string username) {
            object[] results = this.Invoke("RejectApprovalRequest", new object[] {
                        docNo,
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RejectApprovalRequestAsync(string docNo, string username) {
            this.RejectApprovalRequestAsync(docNo, username, null);
        }
        
        /// <remarks/>
        public void RejectApprovalRequestAsync(string docNo, string username, object userState) {
            if ((this.RejectApprovalRequestOperationCompleted == null)) {
                this.RejectApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("RejectApprovalRequest", new object[] {
                        docNo,
                        username}, this.RejectApprovalRequestOperationCompleted, userState);
        }
        
        private void OnRejectApprovalRequestOperationCompleted(object arg) {
            if ((this.RejectApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectApprovalRequestCompleted(this, new RejectApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:RemoveTrainingCost", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="RemoveTrainingCost_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveTrainingCost(string docNo, int lineno) {
            object[] results = this.Invoke("RemoveTrainingCost", new object[] {
                        docNo,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveTrainingCostAsync(string docNo, int lineno) {
            this.RemoveTrainingCostAsync(docNo, lineno, null);
        }
        
        /// <remarks/>
        public void RemoveTrainingCostAsync(string docNo, int lineno, object userState) {
            if ((this.RemoveTrainingCostOperationCompleted == null)) {
                this.RemoveTrainingCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveTrainingCostOperationCompleted);
            }
            this.InvokeAsync("RemoveTrainingCost", new object[] {
                        docNo,
                        lineno}, this.RemoveTrainingCostOperationCompleted, userState);
        }
        
        private void OnRemoveTrainingCostOperationCompleted(object arg) {
            if ((this.RemoveTrainingCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveTrainingCostCompleted(this, new RemoveTrainingCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ReopenHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ReopenHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ReopenHelpdeskRequest(string jobNo, string description) {
            object[] results = this.Invoke("ReopenHelpdeskRequest", new object[] {
                        jobNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReopenHelpdeskRequestAsync(string jobNo, string description) {
            this.ReopenHelpdeskRequestAsync(jobNo, description, null);
        }
        
        /// <remarks/>
        public void ReopenHelpdeskRequestAsync(string jobNo, string description, object userState) {
            if ((this.ReopenHelpdeskRequestOperationCompleted == null)) {
                this.ReopenHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReopenHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("ReopenHelpdeskRequest", new object[] {
                        jobNo,
                        description}, this.ReopenHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnReopenHelpdeskRequestOperationCompleted(object arg) {
            if ((this.ReopenHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReopenHelpdeskRequestCompleted(this, new ReopenHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ResolveHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ResolveHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResolveHelpdeskRequest(string jobNo, string description) {
            object[] results = this.Invoke("ResolveHelpdeskRequest", new object[] {
                        jobNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResolveHelpdeskRequestAsync(string jobNo, string description) {
            this.ResolveHelpdeskRequestAsync(jobNo, description, null);
        }
        
        /// <remarks/>
        public void ResolveHelpdeskRequestAsync(string jobNo, string description, object userState) {
            if ((this.ResolveHelpdeskRequestOperationCompleted == null)) {
                this.ResolveHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResolveHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("ResolveHelpdeskRequest", new object[] {
                        jobNo,
                        description}, this.ResolveHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnResolveHelpdeskRequestOperationCompleted(object arg) {
            if ((this.ResolveHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResolveHelpdeskRequestCompleted(this, new ResolveHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ReturnBase64FromReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ReturnBase64FromReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ReturnBase64FromReport(string reportPath) {
            object[] results = this.Invoke("ReturnBase64FromReport", new object[] {
                        reportPath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnBase64FromReportAsync(string reportPath) {
            this.ReturnBase64FromReportAsync(reportPath, null);
        }
        
        /// <remarks/>
        public void ReturnBase64FromReportAsync(string reportPath, object userState) {
            if ((this.ReturnBase64FromReportOperationCompleted == null)) {
                this.ReturnBase64FromReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnBase64FromReportOperationCompleted);
            }
            this.InvokeAsync("ReturnBase64FromReport", new object[] {
                        reportPath}, this.ReturnBase64FromReportOperationCompleted, userState);
        }
        
        private void OnReturnBase64FromReportOperationCompleted(object arg) {
            if ((this.ReturnBase64FromReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnBase64FromReportCompleted(this, new ReturnBase64FromReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ReturnOTPExpiration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ReturnOTPExpiration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public System.DateTime ReturnOTPExpiration(string empNo, string oTP) {
            object[] results = this.Invoke("ReturnOTPExpiration", new object[] {
                        empNo,
                        oTP});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnOTPExpirationAsync(string empNo, string oTP) {
            this.ReturnOTPExpirationAsync(empNo, oTP, null);
        }
        
        /// <remarks/>
        public void ReturnOTPExpirationAsync(string empNo, string oTP, object userState) {
            if ((this.ReturnOTPExpirationOperationCompleted == null)) {
                this.ReturnOTPExpirationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnOTPExpirationOperationCompleted);
            }
            this.InvokeAsync("ReturnOTPExpiration", new object[] {
                        empNo,
                        oTP}, this.ReturnOTPExpirationOperationCompleted, userState);
        }
        
        private void OnReturnOTPExpirationOperationCompleted(object arg) {
            if ((this.ReturnOTPExpirationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnOTPExpirationCompleted(this, new ReturnOTPExpirationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ReturnPortalOTPCode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ReturnPortalOTPCode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ReturnPortalOTPCode(string empNo, string oTP) {
            object[] results = this.Invoke("ReturnPortalOTPCode", new object[] {
                        empNo,
                        oTP});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnPortalOTPCodeAsync(string empNo, string oTP) {
            this.ReturnPortalOTPCodeAsync(empNo, oTP, null);
        }
        
        /// <remarks/>
        public void ReturnPortalOTPCodeAsync(string empNo, string oTP, object userState) {
            if ((this.ReturnPortalOTPCodeOperationCompleted == null)) {
                this.ReturnPortalOTPCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnPortalOTPCodeOperationCompleted);
            }
            this.InvokeAsync("ReturnPortalOTPCode", new object[] {
                        empNo,
                        oTP}, this.ReturnPortalOTPCodeOperationCompleted, userState);
        }
        
        private void OnReturnPortalOTPCodeOperationCompleted(object arg) {
            if ((this.ReturnPortalOTPCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnPortalOTPCodeCompleted(this, new ReturnPortalOTPCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ReturntoAppraisee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ReturntoAppraisee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReturntoAppraisee(string docNo, string comments) {
            this.Invoke("ReturntoAppraisee", new object[] {
                        docNo,
                        comments});
        }
        
        /// <remarks/>
        public void ReturntoAppraiseeAsync(string docNo, string comments) {
            this.ReturntoAppraiseeAsync(docNo, comments, null);
        }
        
        /// <remarks/>
        public void ReturntoAppraiseeAsync(string docNo, string comments, object userState) {
            if ((this.ReturntoAppraiseeOperationCompleted == null)) {
                this.ReturntoAppraiseeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturntoAppraiseeOperationCompleted);
            }
            this.InvokeAsync("ReturntoAppraisee", new object[] {
                        docNo,
                        comments}, this.ReturntoAppraiseeOperationCompleted, userState);
        }
        
        private void OnReturntoAppraiseeOperationCompleted(object arg) {
            if ((this.ReturntoAppraiseeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturntoAppraiseeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ScheduleTransfertoBank", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ScheduleTransfertoBank_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ScheduleTransfertoBank(string eftDoc, string loggedInUser) {
            this.Invoke("ScheduleTransfertoBank", new object[] {
                        eftDoc,
                        loggedInUser});
        }
        
        /// <remarks/>
        public void ScheduleTransfertoBankAsync(string eftDoc, string loggedInUser) {
            this.ScheduleTransfertoBankAsync(eftDoc, loggedInUser, null);
        }
        
        /// <remarks/>
        public void ScheduleTransfertoBankAsync(string eftDoc, string loggedInUser, object userState) {
            if ((this.ScheduleTransfertoBankOperationCompleted == null)) {
                this.ScheduleTransfertoBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScheduleTransfertoBankOperationCompleted);
            }
            this.InvokeAsync("ScheduleTransfertoBank", new object[] {
                        eftDoc,
                        loggedInUser}, this.ScheduleTransfertoBankOperationCompleted, userState);
        }
        
        private void OnScheduleTransfertoBankOperationCompleted(object arg) {
            if ((this.ScheduleTransfertoBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScheduleTransfertoBankCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendApprovalEmailAlert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendApprovalEmailAlert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendApprovalEmailAlert(string docNumber, int tableID, string userID) {
            this.Invoke("SendApprovalEmailAlert", new object[] {
                        docNumber,
                        tableID,
                        userID});
        }
        
        /// <remarks/>
        public void SendApprovalEmailAlertAsync(string docNumber, int tableID, string userID) {
            this.SendApprovalEmailAlertAsync(docNumber, tableID, userID, null);
        }
        
        /// <remarks/>
        public void SendApprovalEmailAlertAsync(string docNumber, int tableID, string userID, object userState) {
            if ((this.SendApprovalEmailAlertOperationCompleted == null)) {
                this.SendApprovalEmailAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendApprovalEmailAlertOperationCompleted);
            }
            this.InvokeAsync("SendApprovalEmailAlert", new object[] {
                        docNumber,
                        tableID,
                        userID}, this.SendApprovalEmailAlertOperationCompleted, userState);
        }
        
        private void OnSendApprovalEmailAlertOperationCompleted(object arg) {
            if ((this.SendApprovalEmailAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendApprovalEmailAlertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendAwardLetter", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendAwardLetter_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendAwardLetter(string docNo) {
            this.Invoke("SendAwardLetter", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendAwardLetterAsync(string docNo) {
            this.SendAwardLetterAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendAwardLetterAsync(string docNo, object userState) {
            if ((this.SendAwardLetterOperationCompleted == null)) {
                this.SendAwardLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendAwardLetterOperationCompleted);
            }
            this.InvokeAsync("SendAwardLetter", new object[] {
                        docNo}, this.SendAwardLetterOperationCompleted, userState);
        }
        
        private void OnSendAwardLetterOperationCompleted(object arg) {
            if ((this.SendAwardLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendAwardLetterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendBidTabulationHeaderForApprva" +
            "l", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendBidTabulationHeaderForApprval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendBidTabulationHeaderForApprval(string docNo) {
            this.Invoke("SendBidTabulationHeaderForApprval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendBidTabulationHeaderForApprvalAsync(string docNo) {
            this.SendBidTabulationHeaderForApprvalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendBidTabulationHeaderForApprvalAsync(string docNo, object userState) {
            if ((this.SendBidTabulationHeaderForApprvalOperationCompleted == null)) {
                this.SendBidTabulationHeaderForApprvalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendBidTabulationHeaderForApprvalOperationCompleted);
            }
            this.InvokeAsync("SendBidTabulationHeaderForApprval", new object[] {
                        docNo}, this.SendBidTabulationHeaderForApprvalOperationCompleted, userState);
        }
        
        private void OnSendBidTabulationHeaderForApprvalOperationCompleted(object arg) {
            if ((this.SendBidTabulationHeaderForApprvalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendBidTabulationHeaderForApprvalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendBidcodes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendBidcodes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendBidcodes(string docn) {
            this.Invoke("SendBidcodes", new object[] {
                        docn});
        }
        
        /// <remarks/>
        public void SendBidcodesAsync(string docn) {
            this.SendBidcodesAsync(docn, null);
        }
        
        /// <remarks/>
        public void SendBidcodesAsync(string docn, object userState) {
            if ((this.SendBidcodesOperationCompleted == null)) {
                this.SendBidcodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendBidcodesOperationCompleted);
            }
            this.InvokeAsync("SendBidcodes", new object[] {
                        docn}, this.SendBidcodesOperationCompleted, userState);
        }
        
        private void OnSendBidcodesOperationCompleted(object arg) {
            if ((this.SendBidcodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendBidcodesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendConsolidatedNeedsForApproval" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendConsolidatedNeedsForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendConsolidatedNeedsForApproval(string docNo, string financialYear) {
            this.Invoke("SendConsolidatedNeedsForApproval", new object[] {
                        docNo,
                        financialYear});
        }
        
        /// <remarks/>
        public void SendConsolidatedNeedsForApprovalAsync(string docNo, string financialYear) {
            this.SendConsolidatedNeedsForApprovalAsync(docNo, financialYear, null);
        }
        
        /// <remarks/>
        public void SendConsolidatedNeedsForApprovalAsync(string docNo, string financialYear, object userState) {
            if ((this.SendConsolidatedNeedsForApprovalOperationCompleted == null)) {
                this.SendConsolidatedNeedsForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendConsolidatedNeedsForApprovalOperationCompleted);
            }
            this.InvokeAsync("SendConsolidatedNeedsForApproval", new object[] {
                        docNo,
                        financialYear}, this.SendConsolidatedNeedsForApprovalOperationCompleted, userState);
        }
        
        private void OnSendConsolidatedNeedsForApprovalOperationCompleted(object arg) {
            if ((this.SendConsolidatedNeedsForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendConsolidatedNeedsForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendDocForApprval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendDocForApprval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendDocForApprval(string docNo) {
            this.Invoke("SendDocForApprval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendDocForApprvalAsync(string docNo) {
            this.SendDocForApprvalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendDocForApprvalAsync(string docNo, object userState) {
            if ((this.SendDocForApprvalOperationCompleted == null)) {
                this.SendDocForApprvalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDocForApprvalOperationCompleted);
            }
            this.InvokeAsync("SendDocForApprval", new object[] {
                        docNo}, this.SendDocForApprvalOperationCompleted, userState);
        }
        
        private void OnSendDocForApprvalOperationCompleted(object arg) {
            if ((this.SendDocForApprvalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDocForApprvalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendDriverEmailNotification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendDriverEmailNotification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendDriverEmailNotification(string docNumber) {
            object[] results = this.Invoke("SendDriverEmailNotification", new object[] {
                        docNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendDriverEmailNotificationAsync(string docNumber) {
            this.SendDriverEmailNotificationAsync(docNumber, null);
        }
        
        /// <remarks/>
        public void SendDriverEmailNotificationAsync(string docNumber, object userState) {
            if ((this.SendDriverEmailNotificationOperationCompleted == null)) {
                this.SendDriverEmailNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDriverEmailNotificationOperationCompleted);
            }
            this.InvokeAsync("SendDriverEmailNotification", new object[] {
                        docNumber}, this.SendDriverEmailNotificationOperationCompleted, userState);
        }
        
        private void OnSendDriverEmailNotificationOperationCompleted(object arg) {
            if ((this.SendDriverEmailNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDriverEmailNotificationCompleted(this, new SendDriverEmailNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendEftForApprval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendEftForApprval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendEftForApprval(string docNo) {
            this.Invoke("SendEftForApprval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendEftForApprvalAsync(string docNo) {
            this.SendEftForApprvalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendEftForApprvalAsync(string docNo, object userState) {
            if ((this.SendEftForApprvalOperationCompleted == null)) {
                this.SendEftForApprvalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEftForApprvalOperationCompleted);
            }
            this.InvokeAsync("SendEftForApprval", new object[] {
                        docNo}, this.SendEftForApprvalOperationCompleted, userState);
        }
        
        private void OnSendEftForApprvalOperationCompleted(object arg) {
            if ((this.SendEftForApprvalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEftForApprvalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SendEmail(string receiver, string subject, string message) {
            object[] results = this.Invoke("SendEmail", new object[] {
                        receiver,
                        subject,
                        message});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailAsync(string receiver, string subject, string message) {
            this.SendEmailAsync(receiver, subject, message, null);
        }
        
        /// <remarks/>
        public void SendEmailAsync(string receiver, string subject, string message, object userState) {
            if ((this.SendEmailOperationCompleted == null)) {
                this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
            }
            this.InvokeAsync("SendEmail", new object[] {
                        receiver,
                        subject,
                        message}, this.SendEmailOperationCompleted, userState);
        }
        
        private void OnSendEmailOperationCompleted(object arg) {
            if ((this.SendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailCompleted(this, new SendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendFuelCardApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendFuelCardApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendFuelCardApproval(string docNo) {
            this.Invoke("SendFuelCardApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendFuelCardApprovalAsync(string docNo) {
            this.SendFuelCardApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendFuelCardApprovalAsync(string docNo, object userState) {
            if ((this.SendFuelCardApprovalOperationCompleted == null)) {
                this.SendFuelCardApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFuelCardApprovalOperationCompleted);
            }
            this.InvokeAsync("SendFuelCardApproval", new object[] {
                        docNo}, this.SendFuelCardApprovalOperationCompleted, userState);
        }
        
        private void OnSendFuelCardApprovalOperationCompleted(object arg) {
            if ((this.SendFuelCardApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFuelCardApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendFuelRequisitionforApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendFuelRequisitionforApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendFuelRequisitionforApproval(string docNo) {
            object[] results = this.Invoke("SendFuelRequisitionforApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendFuelRequisitionforApprovalAsync(string docNo) {
            this.SendFuelRequisitionforApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendFuelRequisitionforApprovalAsync(string docNo, object userState) {
            if ((this.SendFuelRequisitionforApprovalOperationCompleted == null)) {
                this.SendFuelRequisitionforApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFuelRequisitionforApprovalOperationCompleted);
            }
            this.InvokeAsync("SendFuelRequisitionforApproval", new object[] {
                        docNo}, this.SendFuelRequisitionforApprovalOperationCompleted, userState);
        }
        
        private void OnSendFuelRequisitionforApprovalOperationCompleted(object arg) {
            if ((this.SendFuelRequisitionforApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFuelRequisitionforApprovalCompleted(this, new SendFuelRequisitionforApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendIFSTEnderCommiteeForApproval" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendIFSTEnderCommiteeForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendIFSTEnderCommiteeForApproval(string docNu) {
            object[] results = this.Invoke("SendIFSTEnderCommiteeForApproval", new object[] {
                        docNu});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendIFSTEnderCommiteeForApprovalAsync(string docNu) {
            this.SendIFSTEnderCommiteeForApprovalAsync(docNu, null);
        }
        
        /// <remarks/>
        public void SendIFSTEnderCommiteeForApprovalAsync(string docNu, object userState) {
            if ((this.SendIFSTEnderCommiteeForApprovalOperationCompleted == null)) {
                this.SendIFSTEnderCommiteeForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendIFSTEnderCommiteeForApprovalOperationCompleted);
            }
            this.InvokeAsync("SendIFSTEnderCommiteeForApproval", new object[] {
                        docNu}, this.SendIFSTEnderCommiteeForApprovalOperationCompleted, userState);
        }
        
        private void OnSendIFSTEnderCommiteeForApprovalOperationCompleted(object arg) {
            if ((this.SendIFSTEnderCommiteeForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendIFSTEnderCommiteeForApprovalCompleted(this, new SendIFSTEnderCommiteeForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendImprestWarrantforApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendImprestWarrantforApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendImprestWarrantforApproval(string docNo) {
            this.Invoke("SendImprestWarrantforApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendImprestWarrantforApprovalAsync(string docNo) {
            this.SendImprestWarrantforApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendImprestWarrantforApprovalAsync(string docNo, object userState) {
            if ((this.SendImprestWarrantforApprovalOperationCompleted == null)) {
                this.SendImprestWarrantforApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendImprestWarrantforApprovalOperationCompleted);
            }
            this.InvokeAsync("SendImprestWarrantforApproval", new object[] {
                        docNo}, this.SendImprestWarrantforApprovalOperationCompleted, userState);
        }
        
        private void OnSendImprestWarrantforApprovalOperationCompleted(object arg) {
            if ((this.SendImprestWarrantforApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendImprestWarrantforApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendInductionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendInductionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendInductionApproval(string docNo) {
            this.Invoke("SendInductionApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendInductionApprovalAsync(string docNo) {
            this.SendInductionApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendInductionApprovalAsync(string docNo, object userState) {
            if ((this.SendInductionApprovalOperationCompleted == null)) {
                this.SendInductionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendInductionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendInductionApproval", new object[] {
                        docNo}, this.SendInductionApprovalOperationCompleted, userState);
        }
        
        private void OnSendInductionApprovalOperationCompleted(object arg) {
            if ((this.SendInductionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendInductionApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendLabSampleMgtForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendLabSampleMgtForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendLabSampleMgtForApproval(string docNo) {
            this.Invoke("SendLabSampleMgtForApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendLabSampleMgtForApprovalAsync(string docNo) {
            this.SendLabSampleMgtForApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendLabSampleMgtForApprovalAsync(string docNo, object userState) {
            if ((this.SendLabSampleMgtForApprovalOperationCompleted == null)) {
                this.SendLabSampleMgtForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendLabSampleMgtForApprovalOperationCompleted);
            }
            this.InvokeAsync("SendLabSampleMgtForApproval", new object[] {
                        docNo}, this.SendLabSampleMgtForApprovalOperationCompleted, userState);
        }
        
        private void OnSendLabSampleMgtForApprovalOperationCompleted(object arg) {
            if ((this.SendLabSampleMgtForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendLabSampleMgtForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendLeavePlannerApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendLeavePlannerApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendLeavePlannerApproval(string docNo) {
            this.Invoke("SendLeavePlannerApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendLeavePlannerApprovalAsync(string docNo) {
            this.SendLeavePlannerApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendLeavePlannerApprovalAsync(string docNo, object userState) {
            if ((this.SendLeavePlannerApprovalOperationCompleted == null)) {
                this.SendLeavePlannerApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendLeavePlannerApprovalOperationCompleted);
            }
            this.InvokeAsync("SendLeavePlannerApproval", new object[] {
                        docNo}, this.SendLeavePlannerApprovalOperationCompleted, userState);
        }
        
        private void OnSendLeavePlannerApprovalOperationCompleted(object arg) {
            if ((this.SendLeavePlannerApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendLeavePlannerApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendLeaveRecallApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendLeaveRecallApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendLeaveRecallApproval(string employeeNo, string docNumber) {
            this.Invoke("SendLeaveRecallApproval", new object[] {
                        employeeNo,
                        docNumber});
        }
        
        /// <remarks/>
        public void SendLeaveRecallApprovalAsync(string employeeNo, string docNumber) {
            this.SendLeaveRecallApprovalAsync(employeeNo, docNumber, null);
        }
        
        /// <remarks/>
        public void SendLeaveRecallApprovalAsync(string employeeNo, string docNumber, object userState) {
            if ((this.SendLeaveRecallApprovalOperationCompleted == null)) {
                this.SendLeaveRecallApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendLeaveRecallApprovalOperationCompleted);
            }
            this.InvokeAsync("SendLeaveRecallApproval", new object[] {
                        employeeNo,
                        docNumber}, this.SendLeaveRecallApprovalOperationCompleted, userState);
        }
        
        private void OnSendLeaveRecallApprovalOperationCompleted(object arg) {
            if ((this.SendLeaveRecallApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendLeaveRecallApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendLoanAppForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendLoanAppForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendLoanAppForApproval(string loanNo) {
            object[] results = this.Invoke("SendLoanAppForApproval", new object[] {
                        loanNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendLoanAppForApprovalAsync(string loanNo) {
            this.SendLoanAppForApprovalAsync(loanNo, null);
        }
        
        /// <remarks/>
        public void SendLoanAppForApprovalAsync(string loanNo, object userState) {
            if ((this.SendLoanAppForApprovalOperationCompleted == null)) {
                this.SendLoanAppForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendLoanAppForApprovalOperationCompleted);
            }
            this.InvokeAsync("SendLoanAppForApproval", new object[] {
                        loanNo}, this.SendLoanAppForApprovalOperationCompleted, userState);
        }
        
        private void OnSendLoanAppForApprovalOperationCompleted(object arg) {
            if ((this.SendLoanAppForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendLoanAppForApprovalCompleted(this, new SendLoanAppForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendMobilityApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendMobilityApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMobilityApproval(string docNo) {
            this.Invoke("SendMobilityApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendMobilityApprovalAsync(string docNo) {
            this.SendMobilityApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendMobilityApprovalAsync(string docNo, object userState) {
            if ((this.SendMobilityApprovalOperationCompleted == null)) {
                this.SendMobilityApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMobilityApprovalOperationCompleted);
            }
            this.InvokeAsync("SendMobilityApproval", new object[] {
                        docNo}, this.SendMobilityApprovalOperationCompleted, userState);
        }
        
        private void OnSendMobilityApprovalOperationCompleted(object arg) {
            if ((this.SendMobilityApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMobilityApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendPMMUApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendPMMUApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendPMMUApproval(string docNo) {
            this.Invoke("SendPMMUApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendPMMUApprovalAsync(string docNo) {
            this.SendPMMUApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendPMMUApprovalAsync(string docNo, object userState) {
            if ((this.SendPMMUApprovalOperationCompleted == null)) {
                this.SendPMMUApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPMMUApprovalOperationCompleted);
            }
            this.InvokeAsync("SendPMMUApproval", new object[] {
                        docNo}, this.SendPMMUApprovalOperationCompleted, userState);
        }
        
        private void OnSendPMMUApprovalOperationCompleted(object arg) {
            if ((this.SendPMMUApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPMMUApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendProcurementPlanApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendProcurementPlanApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendProcurementPlanApproval(string docNumber) {
            this.Invoke("SendProcurementPlanApproval", new object[] {
                        docNumber});
        }
        
        /// <remarks/>
        public void SendProcurementPlanApprovalAsync(string docNumber) {
            this.SendProcurementPlanApprovalAsync(docNumber, null);
        }
        
        /// <remarks/>
        public void SendProcurementPlanApprovalAsync(string docNumber, object userState) {
            if ((this.SendProcurementPlanApprovalOperationCompleted == null)) {
                this.SendProcurementPlanApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendProcurementPlanApprovalOperationCompleted);
            }
            this.InvokeAsync("SendProcurementPlanApproval", new object[] {
                        docNumber}, this.SendProcurementPlanApprovalOperationCompleted, userState);
        }
        
        private void OnSendProcurementPlanApprovalOperationCompleted(object arg) {
            if ((this.SendProcurementPlanApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendProcurementPlanApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendRFQforApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendRFQforApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendRFQforApproval(string docNum) {
            this.Invoke("SendRFQforApproval", new object[] {
                        docNum});
        }
        
        /// <remarks/>
        public void SendRFQforApprovalAsync(string docNum) {
            this.SendRFQforApprovalAsync(docNum, null);
        }
        
        /// <remarks/>
        public void SendRFQforApprovalAsync(string docNum, object userState) {
            if ((this.SendRFQforApprovalOperationCompleted == null)) {
                this.SendRFQforApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRFQforApprovalOperationCompleted);
            }
            this.InvokeAsync("SendRFQforApproval", new object[] {
                        docNum}, this.SendRFQforApprovalOperationCompleted, userState);
        }
        
        private void OnSendRFQforApprovalOperationCompleted(object arg) {
            if ((this.SendRFQforApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRFQforApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendRegretLetter", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendRegretLetter_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendRegretLetter(string docNo) {
            this.Invoke("SendRegretLetter", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendRegretLetterAsync(string docNo) {
            this.SendRegretLetterAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendRegretLetterAsync(string docNo, object userState) {
            if ((this.SendRegretLetterOperationCompleted == null)) {
                this.SendRegretLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRegretLetterOperationCompleted);
            }
            this.InvokeAsync("SendRegretLetter", new object[] {
                        docNo}, this.SendRegretLetterOperationCompleted, userState);
        }
        
        private void OnSendRegretLetterOperationCompleted(object arg) {
            if ((this.SendRegretLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRegretLetterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendReservationHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendReservationHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendReservationHeader(string docNo) {
            this.Invoke("SendReservationHeader", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendReservationHeaderAsync(string docNo) {
            this.SendReservationHeaderAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendReservationHeaderAsync(string docNo, object userState) {
            if ((this.SendReservationHeaderOperationCompleted == null)) {
                this.SendReservationHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendReservationHeaderOperationCompleted);
            }
            this.InvokeAsync("SendReservationHeader", new object[] {
                        docNo}, this.SendReservationHeaderOperationCompleted, userState);
        }
        
        private void OnSendReservationHeaderOperationCompleted(object arg) {
            if ((this.SendReservationHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendReservationHeaderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendSMS", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendSMS_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendSMS(string phone, string textMessage) {
            this.Invoke("SendSMS", new object[] {
                        phone,
                        textMessage});
        }
        
        /// <remarks/>
        public void SendSMSAsync(string phone, string textMessage) {
            this.SendSMSAsync(phone, textMessage, null);
        }
        
        /// <remarks/>
        public void SendSMSAsync(string phone, string textMessage, object userState) {
            if ((this.SendSMSOperationCompleted == null)) {
                this.SendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOperationCompleted);
            }
            this.InvokeAsync("SendSMS", new object[] {
                        phone,
                        textMessage}, this.SendSMSOperationCompleted, userState);
        }
        
        private void OnSendSMSOperationCompleted(object arg) {
            if ((this.SendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendStaffClaimforApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendStaffClaimforApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendStaffClaimforApproval(string docNo) {
            this.Invoke("SendStaffClaimforApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendStaffClaimforApprovalAsync(string docNo) {
            this.SendStaffClaimforApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendStaffClaimforApprovalAsync(string docNo, object userState) {
            if ((this.SendStaffClaimforApprovalOperationCompleted == null)) {
                this.SendStaffClaimforApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendStaffClaimforApprovalOperationCompleted);
            }
            this.InvokeAsync("SendStaffClaimforApproval", new object[] {
                        docNo}, this.SendStaffClaimforApprovalOperationCompleted, userState);
        }
        
        private void OnSendStaffClaimforApprovalOperationCompleted(object arg) {
            if ((this.SendStaffClaimforApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendStaffClaimforApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendTrainingExtensionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendTrainingExtensionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendTrainingExtensionApproval(string docno) {
            object[] results = this.Invoke("SendTrainingExtensionApproval", new object[] {
                        docno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendTrainingExtensionApprovalAsync(string docno) {
            this.SendTrainingExtensionApprovalAsync(docno, null);
        }
        
        /// <remarks/>
        public void SendTrainingExtensionApprovalAsync(string docno, object userState) {
            if ((this.SendTrainingExtensionApprovalOperationCompleted == null)) {
                this.SendTrainingExtensionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTrainingExtensionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendTrainingExtensionApproval", new object[] {
                        docno}, this.SendTrainingExtensionApprovalOperationCompleted, userState);
        }
        
        private void OnSendTrainingExtensionApprovalOperationCompleted(object arg) {
            if ((this.SendTrainingExtensionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTrainingExtensionApprovalCompleted(this, new SendTrainingExtensionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendTrainingNeedsApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendTrainingNeedsApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendTrainingNeedsApproval(string employeeno, string needsno) {
            object[] results = this.Invoke("SendTrainingNeedsApproval", new object[] {
                        employeeno,
                        needsno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendTrainingNeedsApprovalAsync(string employeeno, string needsno) {
            this.SendTrainingNeedsApprovalAsync(employeeno, needsno, null);
        }
        
        /// <remarks/>
        public void SendTrainingNeedsApprovalAsync(string employeeno, string needsno, object userState) {
            if ((this.SendTrainingNeedsApprovalOperationCompleted == null)) {
                this.SendTrainingNeedsApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTrainingNeedsApprovalOperationCompleted);
            }
            this.InvokeAsync("SendTrainingNeedsApproval", new object[] {
                        employeeno,
                        needsno}, this.SendTrainingNeedsApprovalOperationCompleted, userState);
        }
        
        private void OnSendTrainingNeedsApprovalOperationCompleted(object arg) {
            if ((this.SendTrainingNeedsApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTrainingNeedsApprovalCompleted(this, new SendTrainingNeedsApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendVehicleMaintenancetforApprov" +
            "al", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendVehicleMaintenancetforApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendVehicleMaintenancetforApproval(string docNo) {
            object[] results = this.Invoke("SendVehicleMaintenancetforApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendVehicleMaintenancetforApprovalAsync(string docNo) {
            this.SendVehicleMaintenancetforApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendVehicleMaintenancetforApprovalAsync(string docNo, object userState) {
            if ((this.SendVehicleMaintenancetforApprovalOperationCompleted == null)) {
                this.SendVehicleMaintenancetforApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendVehicleMaintenancetforApprovalOperationCompleted);
            }
            this.InvokeAsync("SendVehicleMaintenancetforApproval", new object[] {
                        docNo}, this.SendVehicleMaintenancetforApprovalOperationCompleted, userState);
        }
        
        private void OnSendVehicleMaintenancetforApprovalOperationCompleted(object arg) {
            if ((this.SendVehicleMaintenancetforApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendVehicleMaintenancetforApprovalCompleted(this, new SendVehicleMaintenancetforApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendVehicleRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendVehicleRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendVehicleRequisitionApproval(string imprestNumber) {
            object[] results = this.Invoke("SendVehicleRequisitionApproval", new object[] {
                        imprestNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendVehicleRequisitionApprovalAsync(string imprestNumber) {
            this.SendVehicleRequisitionApprovalAsync(imprestNumber, null);
        }
        
        /// <remarks/>
        public void SendVehicleRequisitionApprovalAsync(string imprestNumber, object userState) {
            if ((this.SendVehicleRequisitionApprovalOperationCompleted == null)) {
                this.SendVehicleRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendVehicleRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendVehicleRequisitionApproval", new object[] {
                        imprestNumber}, this.SendVehicleRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendVehicleRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendVehicleRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendVehicleRequisitionApprovalCompleted(this, new SendVehicleRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendWorkTicketforApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendWorkTicketforApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendWorkTicketforApproval(string docNo) {
            this.Invoke("SendWorkTicketforApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendWorkTicketforApprovalAsync(string docNo) {
            this.SendWorkTicketforApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendWorkTicketforApprovalAsync(string docNo, object userState) {
            if ((this.SendWorkTicketforApprovalOperationCompleted == null)) {
                this.SendWorkTicketforApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendWorkTicketforApprovalOperationCompleted);
            }
            this.InvokeAsync("SendWorkTicketforApproval", new object[] {
                        docNo}, this.SendWorkTicketforApprovalOperationCompleted, userState);
        }
        
        private void OnSendWorkTicketforApprovalOperationCompleted(object arg) {
            if ((this.SendWorkTicketforApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendWorkTicketforApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendforModeration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendforModeration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendforModeration(string docNo) {
            this.Invoke("SendforModeration", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendforModerationAsync(string docNo) {
            this.SendforModerationAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendforModerationAsync(string docNo, object userState) {
            if ((this.SendforModerationOperationCompleted == null)) {
                this.SendforModerationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendforModerationOperationCompleted);
            }
            this.InvokeAsync("SendforModeration", new object[] {
                        docNo}, this.SendforModerationOperationCompleted, userState);
        }
        
        private void OnSendforModerationOperationCompleted(object arg) {
            if ((this.SendforModerationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendforModerationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendforReview", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendforReview_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendforReview(string docNo) {
            this.Invoke("SendforReview", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendforReviewAsync(string docNo) {
            this.SendforReviewAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendforReviewAsync(string docNo, object userState) {
            if ((this.SendforReviewOperationCompleted == null)) {
                this.SendforReviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendforReviewOperationCompleted);
            }
            this.InvokeAsync("SendforReview", new object[] {
                        docNo}, this.SendforReviewOperationCompleted, userState);
        }
        
        private void OnSendforReviewOperationCompleted(object arg) {
            if ((this.SendforReviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendforReviewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:Sendtosupervisor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="Sendtosupervisor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Sendtosupervisor(string docNo) {
            this.Invoke("Sendtosupervisor", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendtosupervisorAsync(string docNo) {
            this.SendtosupervisorAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendtosupervisorAsync(string docNo, object userState) {
            if ((this.SendtosupervisorOperationCompleted == null)) {
                this.SendtosupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendtosupervisorOperationCompleted);
            }
            this.InvokeAsync("Sendtosupervisor", new object[] {
                        docNo}, this.SendtosupervisorOperationCompleted, userState);
        }
        
        private void OnSendtosupervisorOperationCompleted(object arg) {
            if ((this.SendtosupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendtosupervisorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SendtransportReqApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SendtransportReqApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendtransportReqApprovalRequest(string docNo) {
            this.Invoke("SendtransportReqApprovalRequest", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SendtransportReqApprovalRequestAsync(string docNo) {
            this.SendtransportReqApprovalRequestAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendtransportReqApprovalRequestAsync(string docNo, object userState) {
            if ((this.SendtransportReqApprovalRequestOperationCompleted == null)) {
                this.SendtransportReqApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendtransportReqApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SendtransportReqApprovalRequest", new object[] {
                        docNo}, this.SendtransportReqApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSendtransportReqApprovalRequestOperationCompleted(object arg) {
            if ((this.SendtransportReqApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendtransportReqApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:StaffClaimPerMonth", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="StaffClaimPerMonth_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal[] StaffClaimPerMonth(string employeeNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate) {
            object[] results = this.Invoke("StaffClaimPerMonth", new object[] {
                        employeeNo,
                        startDate});
            return ((decimal[])(results[0]));
        }
        
        /// <remarks/>
        public void StaffClaimPerMonthAsync(string employeeNo, System.DateTime startDate) {
            this.StaffClaimPerMonthAsync(employeeNo, startDate, null);
        }
        
        /// <remarks/>
        public void StaffClaimPerMonthAsync(string employeeNo, System.DateTime startDate, object userState) {
            if ((this.StaffClaimPerMonthOperationCompleted == null)) {
                this.StaffClaimPerMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStaffClaimPerMonthOperationCompleted);
            }
            this.InvokeAsync("StaffClaimPerMonth", new object[] {
                        employeeNo,
                        startDate}, this.StaffClaimPerMonthOperationCompleted, userState);
        }
        
        private void OnStaffClaimPerMonthOperationCompleted(object arg) {
            if ((this.StaffClaimPerMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StaffClaimPerMonthCompleted(this, new StaffClaimPerMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:StartPMMUEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="StartPMMUEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool StartPMMUEvaluation(string docNo) {
            object[] results = this.Invoke("StartPMMUEvaluation", new object[] {
                        docNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartPMMUEvaluationAsync(string docNo) {
            this.StartPMMUEvaluationAsync(docNo, null);
        }
        
        /// <remarks/>
        public void StartPMMUEvaluationAsync(string docNo, object userState) {
            if ((this.StartPMMUEvaluationOperationCompleted == null)) {
                this.StartPMMUEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartPMMUEvaluationOperationCompleted);
            }
            this.InvokeAsync("StartPMMUEvaluation", new object[] {
                        docNo}, this.StartPMMUEvaluationOperationCompleted, userState);
        }
        
        private void OnStartPMMUEvaluationOperationCompleted(object arg) {
            if ((this.StartPMMUEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartPMMUEvaluationCompleted(this, new StartPMMUEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:StoreReqReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="StoreReqReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string StoreReqReport(string applicationNo) {
            object[] results = this.Invoke("StoreReqReport", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StoreReqReportAsync(string applicationNo) {
            this.StoreReqReportAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void StoreReqReportAsync(string applicationNo, object userState) {
            if ((this.StoreReqReportOperationCompleted == null)) {
                this.StoreReqReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreReqReportOperationCompleted);
            }
            this.InvokeAsync("StoreReqReport", new object[] {
                        applicationNo}, this.StoreReqReportOperationCompleted, userState);
        }
        
        private void OnStoreReqReportOperationCompleted(object arg) {
            if ((this.StoreReqReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreReqReportCompleted(this, new StoreReqReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SubmitApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SubmitApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SubmitApplication(string entryNo) {
            object[] results = this.Invoke("SubmitApplication", new object[] {
                        entryNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitApplicationAsync(string entryNo) {
            this.SubmitApplicationAsync(entryNo, null);
        }
        
        /// <remarks/>
        public void SubmitApplicationAsync(string entryNo, object userState) {
            if ((this.SubmitApplicationOperationCompleted == null)) {
                this.SubmitApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitApplicationOperationCompleted);
            }
            this.InvokeAsync("SubmitApplication", new object[] {
                        entryNo}, this.SubmitApplicationOperationCompleted, userState);
        }
        
        private void OnSubmitApplicationOperationCompleted(object arg) {
            if ((this.SubmitApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitApplicationCompleted(this, new SubmitApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SubmitConsolidatedTrainingNeeds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SubmitConsolidatedTrainingNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitConsolidatedTrainingNeeds(string docNo) {
            this.Invoke("SubmitConsolidatedTrainingNeeds", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SubmitConsolidatedTrainingNeedsAsync(string docNo) {
            this.SubmitConsolidatedTrainingNeedsAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SubmitConsolidatedTrainingNeedsAsync(string docNo, object userState) {
            if ((this.SubmitConsolidatedTrainingNeedsOperationCompleted == null)) {
                this.SubmitConsolidatedTrainingNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitConsolidatedTrainingNeedsOperationCompleted);
            }
            this.InvokeAsync("SubmitConsolidatedTrainingNeeds", new object[] {
                        docNo}, this.SubmitConsolidatedTrainingNeedsOperationCompleted, userState);
        }
        
        private void OnSubmitConsolidatedTrainingNeedsOperationCompleted(object arg) {
            if ((this.SubmitConsolidatedTrainingNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitConsolidatedTrainingNeedsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SubmitDutyStationTrainingNeeds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SubmitDutyStationTrainingNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitDutyStationTrainingNeeds(string docNo) {
            this.Invoke("SubmitDutyStationTrainingNeeds", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SubmitDutyStationTrainingNeedsAsync(string docNo) {
            this.SubmitDutyStationTrainingNeedsAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SubmitDutyStationTrainingNeedsAsync(string docNo, object userState) {
            if ((this.SubmitDutyStationTrainingNeedsOperationCompleted == null)) {
                this.SubmitDutyStationTrainingNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitDutyStationTrainingNeedsOperationCompleted);
            }
            this.InvokeAsync("SubmitDutyStationTrainingNeeds", new object[] {
                        docNo}, this.SubmitDutyStationTrainingNeedsOperationCompleted, userState);
        }
        
        private void OnSubmitDutyStationTrainingNeedsOperationCompleted(object arg) {
            if ((this.SubmitDutyStationTrainingNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitDutyStationTrainingNeedsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SubmitFinalEvalutionReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SubmitFinalEvalutionReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SubmitFinalEvalutionReport(string docNo) {
            object[] results = this.Invoke("SubmitFinalEvalutionReport", new object[] {
                        docNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitFinalEvalutionReportAsync(string docNo) {
            this.SubmitFinalEvalutionReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SubmitFinalEvalutionReportAsync(string docNo, object userState) {
            if ((this.SubmitFinalEvalutionReportOperationCompleted == null)) {
                this.SubmitFinalEvalutionReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitFinalEvalutionReportOperationCompleted);
            }
            this.InvokeAsync("SubmitFinalEvalutionReport", new object[] {
                        docNo}, this.SubmitFinalEvalutionReportOperationCompleted, userState);
        }
        
        private void OnSubmitFinalEvalutionReportOperationCompleted(object arg) {
            if ((this.SubmitFinalEvalutionReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitFinalEvalutionReportCompleted(this, new SubmitFinalEvalutionReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SubmitTrainingEvaluation1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SubmitTrainingEvaluation1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitTrainingEvaluation1(string feedbackNo) {
            object[] results = this.Invoke("SubmitTrainingEvaluation1", new object[] {
                        feedbackNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitTrainingEvaluation1Async(string feedbackNo) {
            this.SubmitTrainingEvaluation1Async(feedbackNo, null);
        }
        
        /// <remarks/>
        public void SubmitTrainingEvaluation1Async(string feedbackNo, object userState) {
            if ((this.SubmitTrainingEvaluation1OperationCompleted == null)) {
                this.SubmitTrainingEvaluation1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitTrainingEvaluation1OperationCompleted);
            }
            this.InvokeAsync("SubmitTrainingEvaluation1", new object[] {
                        feedbackNo}, this.SubmitTrainingEvaluation1OperationCompleted, userState);
        }
        
        private void OnSubmitTrainingEvaluation1OperationCompleted(object arg) {
            if ((this.SubmitTrainingEvaluation1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitTrainingEvaluation1Completed(this, new SubmitTrainingEvaluation1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SubmitTrainingFeedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SubmitTrainingFeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitTrainingFeedback(string feedbackNo) {
            object[] results = this.Invoke("SubmitTrainingFeedback", new object[] {
                        feedbackNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitTrainingFeedbackAsync(string feedbackNo) {
            this.SubmitTrainingFeedbackAsync(feedbackNo, null);
        }
        
        /// <remarks/>
        public void SubmitTrainingFeedbackAsync(string feedbackNo, object userState) {
            if ((this.SubmitTrainingFeedbackOperationCompleted == null)) {
                this.SubmitTrainingFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitTrainingFeedbackOperationCompleted);
            }
            this.InvokeAsync("SubmitTrainingFeedback", new object[] {
                        feedbackNo}, this.SubmitTrainingFeedbackOperationCompleted, userState);
        }
        
        private void OnSubmitTrainingFeedbackOperationCompleted(object arg) {
            if ((this.SubmitTrainingFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitTrainingFeedbackCompleted(this, new SubmitTrainingFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SubmitTrainingNeeds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SubmitTrainingNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitTrainingNeeds(string docNo) {
            this.Invoke("SubmitTrainingNeeds", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void SubmitTrainingNeedsAsync(string docNo) {
            this.SubmitTrainingNeedsAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SubmitTrainingNeedsAsync(string docNo, object userState) {
            if ((this.SubmitTrainingNeedsOperationCompleted == null)) {
                this.SubmitTrainingNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitTrainingNeedsOperationCompleted);
            }
            this.InvokeAsync("SubmitTrainingNeeds", new object[] {
                        docNo}, this.SubmitTrainingNeedsOperationCompleted, userState);
        }
        
        private void OnSubmitTrainingNeedsOperationCompleted(object arg) {
            if ((this.SubmitTrainingNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitTrainingNeedsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SubmitVehicleFuelRequestDetails2" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SubmitVehicleFuelRequestDetails2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitVehicleFuelRequestDetails2(string employeeNo, string requisitionNumber, int expensetype, string jobnumber, string tasknumber, decimal amount) {
            object[] results = this.Invoke("SubmitVehicleFuelRequestDetails2", new object[] {
                        employeeNo,
                        requisitionNumber,
                        expensetype,
                        jobnumber,
                        tasknumber,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitVehicleFuelRequestDetails2Async(string employeeNo, string requisitionNumber, int expensetype, string jobnumber, string tasknumber, decimal amount) {
            this.SubmitVehicleFuelRequestDetails2Async(employeeNo, requisitionNumber, expensetype, jobnumber, tasknumber, amount, null);
        }
        
        /// <remarks/>
        public void SubmitVehicleFuelRequestDetails2Async(string employeeNo, string requisitionNumber, int expensetype, string jobnumber, string tasknumber, decimal amount, object userState) {
            if ((this.SubmitVehicleFuelRequestDetails2OperationCompleted == null)) {
                this.SubmitVehicleFuelRequestDetails2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitVehicleFuelRequestDetails2OperationCompleted);
            }
            this.InvokeAsync("SubmitVehicleFuelRequestDetails2", new object[] {
                        employeeNo,
                        requisitionNumber,
                        expensetype,
                        jobnumber,
                        tasknumber,
                        amount}, this.SubmitVehicleFuelRequestDetails2OperationCompleted, userState);
        }
        
        private void OnSubmitVehicleFuelRequestDetails2OperationCompleted(object arg) {
            if ((this.SubmitVehicleFuelRequestDetails2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitVehicleFuelRequestDetails2Completed(this, new SubmitVehicleFuelRequestDetails2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SuggestLinesFromWorksRequisition" +
            "Template", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SuggestLinesFromWorksRequisitionTemplate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SuggestLinesFromWorksRequisitionTemplate(string docNo, string templateId) {
            object[] results = this.Invoke("SuggestLinesFromWorksRequisitionTemplate", new object[] {
                        docNo,
                        templateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SuggestLinesFromWorksRequisitionTemplateAsync(string docNo, string templateId) {
            this.SuggestLinesFromWorksRequisitionTemplateAsync(docNo, templateId, null);
        }
        
        /// <remarks/>
        public void SuggestLinesFromWorksRequisitionTemplateAsync(string docNo, string templateId, object userState) {
            if ((this.SuggestLinesFromWorksRequisitionTemplateOperationCompleted == null)) {
                this.SuggestLinesFromWorksRequisitionTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuggestLinesFromWorksRequisitionTemplateOperationCompleted);
            }
            this.InvokeAsync("SuggestLinesFromWorksRequisitionTemplate", new object[] {
                        docNo,
                        templateId}, this.SuggestLinesFromWorksRequisitionTemplateOperationCompleted, userState);
        }
        
        private void OnSuggestLinesFromWorksRequisitionTemplateOperationCompleted(object arg) {
            if ((this.SuggestLinesFromWorksRequisitionTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuggestLinesFromWorksRequisitionTemplateCompleted(this, new SuggestLinesFromWorksRequisitionTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SuggestPersonnelEquipmentSpecifi" +
            "cation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SuggestPersonnelEquipmentSpecification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SuggestPersonnelEquipmentSpecification(string docNo, string projectTemplateId, string workTemplateId) {
            object[] results = this.Invoke("SuggestPersonnelEquipmentSpecification", new object[] {
                        docNo,
                        projectTemplateId,
                        workTemplateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SuggestPersonnelEquipmentSpecificationAsync(string docNo, string projectTemplateId, string workTemplateId) {
            this.SuggestPersonnelEquipmentSpecificationAsync(docNo, projectTemplateId, workTemplateId, null);
        }
        
        /// <remarks/>
        public void SuggestPersonnelEquipmentSpecificationAsync(string docNo, string projectTemplateId, string workTemplateId, object userState) {
            if ((this.SuggestPersonnelEquipmentSpecificationOperationCompleted == null)) {
                this.SuggestPersonnelEquipmentSpecificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuggestPersonnelEquipmentSpecificationOperationCompleted);
            }
            this.InvokeAsync("SuggestPersonnelEquipmentSpecification", new object[] {
                        docNo,
                        projectTemplateId,
                        workTemplateId}, this.SuggestPersonnelEquipmentSpecificationOperationCompleted, userState);
        }
        
        private void OnSuggestPersonnelEquipmentSpecificationOperationCompleted(object arg) {
            if ((this.SuggestPersonnelEquipmentSpecificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuggestPersonnelEquipmentSpecificationCompleted(this, new SuggestPersonnelEquipmentSpecificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SuggestRFQBids", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SuggestRFQBids_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SuggestRFQBids(string bidNo) {
            object[] results = this.Invoke("SuggestRFQBids", new object[] {
                        bidNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SuggestRFQBidsAsync(string bidNo) {
            this.SuggestRFQBidsAsync(bidNo, null);
        }
        
        /// <remarks/>
        public void SuggestRFQBidsAsync(string bidNo, object userState) {
            if ((this.SuggestRFQBidsOperationCompleted == null)) {
                this.SuggestRFQBidsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuggestRFQBidsOperationCompleted);
            }
            this.InvokeAsync("SuggestRFQBids", new object[] {
                        bidNo}, this.SuggestRFQBidsOperationCompleted, userState);
        }
        
        private void OnSuggestRFQBidsOperationCompleted(object arg) {
            if ((this.SuggestRFQBidsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuggestRFQBidsCompleted(this, new SuggestRFQBidsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SuggestTechnicalPassedBids", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SuggestTechnicalPassedBids_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SuggestTechnicalPassedBids(string docNo) {
            object[] results = this.Invoke("SuggestTechnicalPassedBids", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SuggestTechnicalPassedBidsAsync(string docNo) {
            this.SuggestTechnicalPassedBidsAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SuggestTechnicalPassedBidsAsync(string docNo, object userState) {
            if ((this.SuggestTechnicalPassedBidsOperationCompleted == null)) {
                this.SuggestTechnicalPassedBidsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuggestTechnicalPassedBidsOperationCompleted);
            }
            this.InvokeAsync("SuggestTechnicalPassedBids", new object[] {
                        docNo}, this.SuggestTechnicalPassedBidsOperationCompleted, userState);
        }
        
        private void OnSuggestTechnicalPassedBidsOperationCompleted(object arg) {
            if ((this.SuggestTechnicalPassedBidsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuggestTechnicalPassedBidsCompleted(this, new SuggestTechnicalPassedBidsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SuperVisorActions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SuperVisorActions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SuperVisorActions(string superVisorNo, string resEmployee, string docNo, int actionType) {
            object[] results = this.Invoke("SuperVisorActions", new object[] {
                        superVisorNo,
                        resEmployee,
                        docNo,
                        actionType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SuperVisorActionsAsync(string superVisorNo, string resEmployee, string docNo, int actionType) {
            this.SuperVisorActionsAsync(superVisorNo, resEmployee, docNo, actionType, null);
        }
        
        /// <remarks/>
        public void SuperVisorActionsAsync(string superVisorNo, string resEmployee, string docNo, int actionType, object userState) {
            if ((this.SuperVisorActionsOperationCompleted == null)) {
                this.SuperVisorActionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuperVisorActionsOperationCompleted);
            }
            this.InvokeAsync("SuperVisorActions", new object[] {
                        superVisorNo,
                        resEmployee,
                        docNo,
                        actionType}, this.SuperVisorActionsOperationCompleted, userState);
        }
        
        private void OnSuperVisorActionsOperationCompleted(object arg) {
            if ((this.SuperVisorActionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuperVisorActionsCompleted(this, new SuperVisorActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SupervisorsRating", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SupervisorsRating_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SupervisorsRating(string docNo, int lineNo, int supervisorRating, string supervisorComments) {
            object[] results = this.Invoke("SupervisorsRating", new object[] {
                        docNo,
                        lineNo,
                        supervisorRating,
                        supervisorComments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SupervisorsRatingAsync(string docNo, int lineNo, int supervisorRating, string supervisorComments) {
            this.SupervisorsRatingAsync(docNo, lineNo, supervisorRating, supervisorComments, null);
        }
        
        /// <remarks/>
        public void SupervisorsRatingAsync(string docNo, int lineNo, int supervisorRating, string supervisorComments, object userState) {
            if ((this.SupervisorsRatingOperationCompleted == null)) {
                this.SupervisorsRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSupervisorsRatingOperationCompleted);
            }
            this.InvokeAsync("SupervisorsRating", new object[] {
                        docNo,
                        lineNo,
                        supervisorRating,
                        supervisorComments}, this.SupervisorsRatingOperationCompleted, userState);
        }
        
        private void OnSupervisorsRatingOperationCompleted(object arg) {
            if ((this.SupervisorsRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SupervisorsRatingCompleted(this, new SupervisorsRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:SurrenderPettyCash", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="SurrenderPettyCash_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SurrenderPettyCash(string docNo, string empNo, string pettycashNo, string paymode) {
            object[] results = this.Invoke("SurrenderPettyCash", new object[] {
                        docNo,
                        empNo,
                        pettycashNo,
                        paymode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SurrenderPettyCashAsync(string docNo, string empNo, string pettycashNo, string paymode) {
            this.SurrenderPettyCashAsync(docNo, empNo, pettycashNo, paymode, null);
        }
        
        /// <remarks/>
        public void SurrenderPettyCashAsync(string docNo, string empNo, string pettycashNo, string paymode, object userState) {
            if ((this.SurrenderPettyCashOperationCompleted == null)) {
                this.SurrenderPettyCashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSurrenderPettyCashOperationCompleted);
            }
            this.InvokeAsync("SurrenderPettyCash", new object[] {
                        docNo,
                        empNo,
                        pettycashNo,
                        paymode}, this.SurrenderPettyCashOperationCompleted, userState);
        }
        
        private void OnSurrenderPettyCashOperationCompleted(object arg) {
            if ((this.SurrenderPettyCashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SurrenderPettyCashCompleted(this, new SurrenderPettyCashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:TechFees", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="TechFees_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal TechFees(string optModule) {
            object[] results = this.Invoke("TechFees", new object[] {
                        optModule});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void TechFeesAsync(string optModule) {
            this.TechFeesAsync(optModule, null);
        }
        
        /// <remarks/>
        public void TechFeesAsync(string optModule, object userState) {
            if ((this.TechFeesOperationCompleted == null)) {
                this.TechFeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTechFeesOperationCompleted);
            }
            this.InvokeAsync("TechFees", new object[] {
                        optModule}, this.TechFeesOperationCompleted, userState);
        }
        
        private void OnTechFeesOperationCompleted(object arg) {
            if ((this.TechFeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TechFeesCompleted(this, new TechFeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:TravelAdvancePerMonth", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="TravelAdvancePerMonth_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal[] TravelAdvancePerMonth(string employeeNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate) {
            object[] results = this.Invoke("TravelAdvancePerMonth", new object[] {
                        employeeNo,
                        startDate});
            return ((decimal[])(results[0]));
        }
        
        /// <remarks/>
        public void TravelAdvancePerMonthAsync(string employeeNo, System.DateTime startDate) {
            this.TravelAdvancePerMonthAsync(employeeNo, startDate, null);
        }
        
        /// <remarks/>
        public void TravelAdvancePerMonthAsync(string employeeNo, System.DateTime startDate, object userState) {
            if ((this.TravelAdvancePerMonthOperationCompleted == null)) {
                this.TravelAdvancePerMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTravelAdvancePerMonthOperationCompleted);
            }
            this.InvokeAsync("TravelAdvancePerMonth", new object[] {
                        employeeNo,
                        startDate}, this.TravelAdvancePerMonthOperationCompleted, userState);
        }
        
        private void OnTravelAdvancePerMonthOperationCompleted(object arg) {
            if ((this.TravelAdvancePerMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TravelAdvancePerMonthCompleted(this, new TravelAdvancePerMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:TravelLiquidationPerMonth", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="TravelLiquidationPerMonth_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal[] TravelLiquidationPerMonth(string employeeNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate) {
            object[] results = this.Invoke("TravelLiquidationPerMonth", new object[] {
                        employeeNo,
                        startDate});
            return ((decimal[])(results[0]));
        }
        
        /// <remarks/>
        public void TravelLiquidationPerMonthAsync(string employeeNo, System.DateTime startDate) {
            this.TravelLiquidationPerMonthAsync(employeeNo, startDate, null);
        }
        
        /// <remarks/>
        public void TravelLiquidationPerMonthAsync(string employeeNo, System.DateTime startDate, object userState) {
            if ((this.TravelLiquidationPerMonthOperationCompleted == null)) {
                this.TravelLiquidationPerMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTravelLiquidationPerMonthOperationCompleted);
            }
            this.InvokeAsync("TravelLiquidationPerMonth", new object[] {
                        employeeNo,
                        startDate}, this.TravelLiquidationPerMonthOperationCompleted, userState);
        }
        
        private void OnTravelLiquidationPerMonthOperationCompleted(object arg) {
            if ((this.TravelLiquidationPerMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TravelLiquidationPerMonthCompleted(this, new TravelLiquidationPerMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UnsealBid", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UnsealBid_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnsealBid(string docNo) {
            this.Invoke("UnsealBid", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void UnsealBidAsync(string docNo) {
            this.UnsealBidAsync(docNo, null);
        }
        
        /// <remarks/>
        public void UnsealBidAsync(string docNo, object userState) {
            if ((this.UnsealBidOperationCompleted == null)) {
                this.UnsealBidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnsealBidOperationCompleted);
            }
            this.InvokeAsync("UnsealBid", new object[] {
                        docNo}, this.UnsealBidOperationCompleted, userState);
        }
        
        private void OnUnsealBidOperationCompleted(object arg) {
            if ((this.UnsealBidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnsealBidCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpateDriverAllocationToImprestMe" +
            "mo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpateDriverAllocationToImprestMemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpateDriverAllocationToImprestMemo(string docNumber, string imprestNumber) {
            object[] results = this.Invoke("UpateDriverAllocationToImprestMemo", new object[] {
                        docNumber,
                        imprestNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpateDriverAllocationToImprestMemoAsync(string docNumber, string imprestNumber) {
            this.UpateDriverAllocationToImprestMemoAsync(docNumber, imprestNumber, null);
        }
        
        /// <remarks/>
        public void UpateDriverAllocationToImprestMemoAsync(string docNumber, string imprestNumber, object userState) {
            if ((this.UpateDriverAllocationToImprestMemoOperationCompleted == null)) {
                this.UpateDriverAllocationToImprestMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpateDriverAllocationToImprestMemoOperationCompleted);
            }
            this.InvokeAsync("UpateDriverAllocationToImprestMemo", new object[] {
                        docNumber,
                        imprestNumber}, this.UpateDriverAllocationToImprestMemoOperationCompleted, userState);
        }
        
        private void OnUpateDriverAllocationToImprestMemoOperationCompleted(object arg) {
            if ((this.UpateDriverAllocationToImprestMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpateDriverAllocationToImprestMemoCompleted(this, new UpateDriverAllocationToImprestMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateApplicationStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateApplicationStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateApplicationStatus(string applicationNo, int newStatus) {
            object[] results = this.Invoke("UpdateApplicationStatus", new object[] {
                        applicationNo,
                        newStatus});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateApplicationStatusAsync(string applicationNo, int newStatus) {
            this.UpdateApplicationStatusAsync(applicationNo, newStatus, null);
        }
        
        /// <remarks/>
        public void UpdateApplicationStatusAsync(string applicationNo, int newStatus, object userState) {
            if ((this.UpdateApplicationStatusOperationCompleted == null)) {
                this.UpdateApplicationStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApplicationStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateApplicationStatus", new object[] {
                        applicationNo,
                        newStatus}, this.UpdateApplicationStatusOperationCompleted, userState);
        }
        
        private void OnUpdateApplicationStatusOperationCompleted(object arg) {
            if ((this.UpdateApplicationStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApplicationStatusCompleted(this, new UpdateApplicationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateAppointmentComittee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateAppointmentComittee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateAppointmentComittee(string docNo, int docType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime docDate, string desc, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime appEffectiveDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string venue, string brief) {
            object[] results = this.Invoke("UpdateAppointmentComittee", new object[] {
                        docNo,
                        docType,
                        docDate,
                        desc,
                        appEffectiveDate,
                        endDate,
                        venue,
                        brief});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAppointmentComitteeAsync(string docNo, int docType, System.DateTime docDate, string desc, System.DateTime appEffectiveDate, System.DateTime endDate, string venue, string brief) {
            this.UpdateAppointmentComitteeAsync(docNo, docType, docDate, desc, appEffectiveDate, endDate, venue, brief, null);
        }
        
        /// <remarks/>
        public void UpdateAppointmentComitteeAsync(string docNo, int docType, System.DateTime docDate, string desc, System.DateTime appEffectiveDate, System.DateTime endDate, string venue, string brief, object userState) {
            if ((this.UpdateAppointmentComitteeOperationCompleted == null)) {
                this.UpdateAppointmentComitteeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAppointmentComitteeOperationCompleted);
            }
            this.InvokeAsync("UpdateAppointmentComittee", new object[] {
                        docNo,
                        docType,
                        docDate,
                        desc,
                        appEffectiveDate,
                        endDate,
                        venue,
                        brief}, this.UpdateAppointmentComitteeOperationCompleted, userState);
        }
        
        private void OnUpdateAppointmentComitteeOperationCompleted(object arg) {
            if ((this.UpdateAppointmentComitteeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAppointmentComitteeCompleted(this, new UpdateAppointmentComitteeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateAppointmentLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateAppointmentLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateAppointmentLines(string docNo, int lineNo, string memberNo, int memberRole) {
            object[] results = this.Invoke("UpdateAppointmentLines", new object[] {
                        docNo,
                        lineNo,
                        memberNo,
                        memberRole});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAppointmentLinesAsync(string docNo, int lineNo, string memberNo, int memberRole) {
            this.UpdateAppointmentLinesAsync(docNo, lineNo, memberNo, memberRole, null);
        }
        
        /// <remarks/>
        public void UpdateAppointmentLinesAsync(string docNo, int lineNo, string memberNo, int memberRole, object userState) {
            if ((this.UpdateAppointmentLinesOperationCompleted == null)) {
                this.UpdateAppointmentLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAppointmentLinesOperationCompleted);
            }
            this.InvokeAsync("UpdateAppointmentLines", new object[] {
                        docNo,
                        lineNo,
                        memberNo,
                        memberRole}, this.UpdateAppointmentLinesOperationCompleted, userState);
        }
        
        private void OnUpdateAppointmentLinesOperationCompleted(object arg) {
            if ((this.UpdateAppointmentLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAppointmentLinesCompleted(this, new UpdateAppointmentLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateApprovalEntrySenderID", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateApprovalEntrySenderID_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateApprovalEntrySenderID(int tableID, string documentNo, string senderID) {
            this.Invoke("UpdateApprovalEntrySenderID", new object[] {
                        tableID,
                        documentNo,
                        senderID});
        }
        
        /// <remarks/>
        public void UpdateApprovalEntrySenderIDAsync(int tableID, string documentNo, string senderID) {
            this.UpdateApprovalEntrySenderIDAsync(tableID, documentNo, senderID, null);
        }
        
        /// <remarks/>
        public void UpdateApprovalEntrySenderIDAsync(int tableID, string documentNo, string senderID, object userState) {
            if ((this.UpdateApprovalEntrySenderIDOperationCompleted == null)) {
                this.UpdateApprovalEntrySenderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApprovalEntrySenderIDOperationCompleted);
            }
            this.InvokeAsync("UpdateApprovalEntrySenderID", new object[] {
                        tableID,
                        documentNo,
                        senderID}, this.UpdateApprovalEntrySenderIDOperationCompleted, userState);
        }
        
        private void OnUpdateApprovalEntrySenderIDOperationCompleted(object arg) {
            if ((this.UpdateApprovalEntrySenderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApprovalEntrySenderIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateBankName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateBankName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateBankName(string docNo) {
            object[] results = this.Invoke("UpdateBankName", new object[] {
                        docNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBankNameAsync(string docNo) {
            this.UpdateBankNameAsync(docNo, null);
        }
        
        /// <remarks/>
        public void UpdateBankNameAsync(string docNo, object userState) {
            if ((this.UpdateBankNameOperationCompleted == null)) {
                this.UpdateBankNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBankNameOperationCompleted);
            }
            this.InvokeAsync("UpdateBankName", new object[] {
                        docNo}, this.UpdateBankNameOperationCompleted, userState);
        }
        
        private void OnUpdateBankNameOperationCompleted(object arg) {
            if ((this.UpdateBankNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBankNameCompleted(this, new UpdateBankNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateBidCodes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateBidCodes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateBidCodes(string document, string memberNo, string bidCode) {
            this.Invoke("UpdateBidCodes", new object[] {
                        document,
                        memberNo,
                        bidCode});
        }
        
        /// <remarks/>
        public void UpdateBidCodesAsync(string document, string memberNo, string bidCode) {
            this.UpdateBidCodesAsync(document, memberNo, bidCode, null);
        }
        
        /// <remarks/>
        public void UpdateBidCodesAsync(string document, string memberNo, string bidCode, object userState) {
            if ((this.UpdateBidCodesOperationCompleted == null)) {
                this.UpdateBidCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBidCodesOperationCompleted);
            }
            this.InvokeAsync("UpdateBidCodes", new object[] {
                        document,
                        memberNo,
                        bidCode}, this.UpdateBidCodesOperationCompleted, userState);
        }
        
        private void OnUpdateBidCodesOperationCompleted(object arg) {
            if ((this.UpdateBidCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBidCodesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateBidOpeningLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateBidOpeningLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateBidOpeningLine(string docNo, string vendNo, bool completeBidSub, int finalBidResult, string remarks) {
            this.Invoke("UpdateBidOpeningLine", new object[] {
                        docNo,
                        vendNo,
                        completeBidSub,
                        finalBidResult,
                        remarks});
        }
        
        /// <remarks/>
        public void UpdateBidOpeningLineAsync(string docNo, string vendNo, bool completeBidSub, int finalBidResult, string remarks) {
            this.UpdateBidOpeningLineAsync(docNo, vendNo, completeBidSub, finalBidResult, remarks, null);
        }
        
        /// <remarks/>
        public void UpdateBidOpeningLineAsync(string docNo, string vendNo, bool completeBidSub, int finalBidResult, string remarks, object userState) {
            if ((this.UpdateBidOpeningLineOperationCompleted == null)) {
                this.UpdateBidOpeningLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBidOpeningLineOperationCompleted);
            }
            this.InvokeAsync("UpdateBidOpeningLine", new object[] {
                        docNo,
                        vendNo,
                        completeBidSub,
                        finalBidResult,
                        remarks}, this.UpdateBidOpeningLineOperationCompleted, userState);
        }
        
        private void OnUpdateBidOpeningLineOperationCompleted(object arg) {
            if ((this.UpdateBidOpeningLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBidOpeningLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateDirectApprover", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateDirectApprover_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDirectApprover(string supervisor) {
            this.Invoke("UpdateDirectApprover", new object[] {
                        supervisor});
        }
        
        /// <remarks/>
        public void UpdateDirectApproverAsync(string supervisor) {
            this.UpdateDirectApproverAsync(supervisor, null);
        }
        
        /// <remarks/>
        public void UpdateDirectApproverAsync(string supervisor, object userState) {
            if ((this.UpdateDirectApproverOperationCompleted == null)) {
                this.UpdateDirectApproverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDirectApproverOperationCompleted);
            }
            this.InvokeAsync("UpdateDirectApprover", new object[] {
                        supervisor}, this.UpdateDirectApproverOperationCompleted, userState);
        }
        
        private void OnUpdateDirectApproverOperationCompleted(object arg) {
            if ((this.UpdateDirectApproverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDirectApproverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateEmployeeActions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateEmployeeActions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateEmployeeActions(string docNo, int theAction, string userId) {
            object[] results = this.Invoke("UpdateEmployeeActions", new object[] {
                        docNo,
                        theAction,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmployeeActionsAsync(string docNo, int theAction, string userId) {
            this.UpdateEmployeeActionsAsync(docNo, theAction, userId, null);
        }
        
        /// <remarks/>
        public void UpdateEmployeeActionsAsync(string docNo, int theAction, string userId, object userState) {
            if ((this.UpdateEmployeeActionsOperationCompleted == null)) {
                this.UpdateEmployeeActionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeActionsOperationCompleted);
            }
            this.InvokeAsync("UpdateEmployeeActions", new object[] {
                        docNo,
                        theAction,
                        userId}, this.UpdateEmployeeActionsOperationCompleted, userState);
        }
        
        private void OnUpdateEmployeeActionsOperationCompleted(object arg) {
            if ((this.UpdateEmployeeActionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmployeeActionsCompleted(this, new UpdateEmployeeActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateExpenseRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateExpenseRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateExpenseRequisition(
                    string documentNo, 
                    string description, 
                    string global_Dimension_1_Code, 
                    string global_Dimension_2_Code, 
                    string activity_Code, 
                    bool requires_Imprest, 
                    int imprest_Type, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime start_Date, 
                    int no_Of_Days, 
                    string subject, 
                    string objectiveTxt, 
                    bool requires_Direct_Payment, 
                    bool requires_PRN, 
                    string procurement_Plan_ID, 
                    int pRN_Type, 
                    string location_Code, 
                    string requisition_Product_Group, 
                    string pP_Plan_Category, 
                    string created_By, 
                    int directPaymentType) {
            object[] results = this.Invoke("UpdateExpenseRequisition", new object[] {
                        documentNo,
                        description,
                        global_Dimension_1_Code,
                        global_Dimension_2_Code,
                        activity_Code,
                        requires_Imprest,
                        imprest_Type,
                        start_Date,
                        no_Of_Days,
                        subject,
                        objectiveTxt,
                        requires_Direct_Payment,
                        requires_PRN,
                        procurement_Plan_ID,
                        pRN_Type,
                        location_Code,
                        requisition_Product_Group,
                        pP_Plan_Category,
                        created_By,
                        directPaymentType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateExpenseRequisitionAsync(
                    string documentNo, 
                    string description, 
                    string global_Dimension_1_Code, 
                    string global_Dimension_2_Code, 
                    string activity_Code, 
                    bool requires_Imprest, 
                    int imprest_Type, 
                    System.DateTime start_Date, 
                    int no_Of_Days, 
                    string subject, 
                    string objectiveTxt, 
                    bool requires_Direct_Payment, 
                    bool requires_PRN, 
                    string procurement_Plan_ID, 
                    int pRN_Type, 
                    string location_Code, 
                    string requisition_Product_Group, 
                    string pP_Plan_Category, 
                    string created_By, 
                    int directPaymentType) {
            this.UpdateExpenseRequisitionAsync(documentNo, description, global_Dimension_1_Code, global_Dimension_2_Code, activity_Code, requires_Imprest, imprest_Type, start_Date, no_Of_Days, subject, objectiveTxt, requires_Direct_Payment, requires_PRN, procurement_Plan_ID, pRN_Type, location_Code, requisition_Product_Group, pP_Plan_Category, created_By, directPaymentType, null);
        }
        
        /// <remarks/>
        public void UpdateExpenseRequisitionAsync(
                    string documentNo, 
                    string description, 
                    string global_Dimension_1_Code, 
                    string global_Dimension_2_Code, 
                    string activity_Code, 
                    bool requires_Imprest, 
                    int imprest_Type, 
                    System.DateTime start_Date, 
                    int no_Of_Days, 
                    string subject, 
                    string objectiveTxt, 
                    bool requires_Direct_Payment, 
                    bool requires_PRN, 
                    string procurement_Plan_ID, 
                    int pRN_Type, 
                    string location_Code, 
                    string requisition_Product_Group, 
                    string pP_Plan_Category, 
                    string created_By, 
                    int directPaymentType, 
                    object userState) {
            if ((this.UpdateExpenseRequisitionOperationCompleted == null)) {
                this.UpdateExpenseRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateExpenseRequisitionOperationCompleted);
            }
            this.InvokeAsync("UpdateExpenseRequisition", new object[] {
                        documentNo,
                        description,
                        global_Dimension_1_Code,
                        global_Dimension_2_Code,
                        activity_Code,
                        requires_Imprest,
                        imprest_Type,
                        start_Date,
                        no_Of_Days,
                        subject,
                        objectiveTxt,
                        requires_Direct_Payment,
                        requires_PRN,
                        procurement_Plan_ID,
                        pRN_Type,
                        location_Code,
                        requisition_Product_Group,
                        pP_Plan_Category,
                        created_By,
                        directPaymentType}, this.UpdateExpenseRequisitionOperationCompleted, userState);
        }
        
        private void OnUpdateExpenseRequisitionOperationCompleted(object arg) {
            if ((this.UpdateExpenseRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateExpenseRequisitionCompleted(this, new UpdateExpenseRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateFees", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateFees_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateFees(string requestNo, decimal applicationFee, decimal citizenAccessFee) {
            object[] results = this.Invoke("UpdateFees", new object[] {
                        requestNo,
                        applicationFee,
                        citizenAccessFee});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFeesAsync(string requestNo, decimal applicationFee, decimal citizenAccessFee) {
            this.UpdateFeesAsync(requestNo, applicationFee, citizenAccessFee, null);
        }
        
        /// <remarks/>
        public void UpdateFeesAsync(string requestNo, decimal applicationFee, decimal citizenAccessFee, object userState) {
            if ((this.UpdateFeesOperationCompleted == null)) {
                this.UpdateFeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFeesOperationCompleted);
            }
            this.InvokeAsync("UpdateFees", new object[] {
                        requestNo,
                        applicationFee,
                        citizenAccessFee}, this.UpdateFeesOperationCompleted, userState);
        }
        
        private void OnUpdateFeesOperationCompleted(object arg) {
            if ((this.UpdateFeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFeesCompleted(this, new UpdateFeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateGMDLApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateGMDLApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateGMDLApplication(
                    string applicationNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime applicationDate, 
                    int typeOfApplication, 
                    string applicantName, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth, 
                    string placeOfBirth, 
                    string iDNumber, 
                    string phoneNumber, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string town, 
                    string county, 
                    string country, 
                    string physicalAddress, 
                    string physicalTown, 
                    string physicalCounty, 
                    string physicalCountry, 
                    string nextOfKinName, 
                    string nextOfKinPhone, 
                    string nextOfKinAddress, 
                    string nextOfKinRelationship, 
                    string emergencyContactName, 
                    string emergencyContactPhone, 
                    string previousLicenseNumber, 
                    string previousLicenseCountry, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime previousLicenseExpiry, 
                    bool medicalCertificate, 
                    bool birthCertificate, 
                    bool iDCopy, 
                    bool passportPhotos, 
                    bool kRAPin, 
                    bool policeClearance, 
                    bool drivingSchoolCertificate, 
                    bool previousLicenseCopy, 
                    int status, 
                    string licenseClassApplied, 
                    decimal feeAmount, 
                    int paymentStatus, 
                    bool declarationAccepted) {
            object[] results = this.Invoke("UpdateGMDLApplication", new object[] {
                        applicationNo,
                        applicationDate,
                        typeOfApplication,
                        applicantName,
                        dateOfBirth,
                        placeOfBirth,
                        iDNumber,
                        phoneNumber,
                        emailAddress,
                        postalAddress,
                        postalCode,
                        town,
                        county,
                        country,
                        physicalAddress,
                        physicalTown,
                        physicalCounty,
                        physicalCountry,
                        nextOfKinName,
                        nextOfKinPhone,
                        nextOfKinAddress,
                        nextOfKinRelationship,
                        emergencyContactName,
                        emergencyContactPhone,
                        previousLicenseNumber,
                        previousLicenseCountry,
                        previousLicenseExpiry,
                        medicalCertificate,
                        birthCertificate,
                        iDCopy,
                        passportPhotos,
                        kRAPin,
                        policeClearance,
                        drivingSchoolCertificate,
                        previousLicenseCopy,
                        status,
                        licenseClassApplied,
                        feeAmount,
                        paymentStatus,
                        declarationAccepted});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGMDLApplicationAsync(
                    string applicationNo, 
                    System.DateTime applicationDate, 
                    int typeOfApplication, 
                    string applicantName, 
                    System.DateTime dateOfBirth, 
                    string placeOfBirth, 
                    string iDNumber, 
                    string phoneNumber, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string town, 
                    string county, 
                    string country, 
                    string physicalAddress, 
                    string physicalTown, 
                    string physicalCounty, 
                    string physicalCountry, 
                    string nextOfKinName, 
                    string nextOfKinPhone, 
                    string nextOfKinAddress, 
                    string nextOfKinRelationship, 
                    string emergencyContactName, 
                    string emergencyContactPhone, 
                    string previousLicenseNumber, 
                    string previousLicenseCountry, 
                    System.DateTime previousLicenseExpiry, 
                    bool medicalCertificate, 
                    bool birthCertificate, 
                    bool iDCopy, 
                    bool passportPhotos, 
                    bool kRAPin, 
                    bool policeClearance, 
                    bool drivingSchoolCertificate, 
                    bool previousLicenseCopy, 
                    int status, 
                    string licenseClassApplied, 
                    decimal feeAmount, 
                    int paymentStatus, 
                    bool declarationAccepted) {
            this.UpdateGMDLApplicationAsync(applicationNo, applicationDate, typeOfApplication, applicantName, dateOfBirth, placeOfBirth, iDNumber, phoneNumber, emailAddress, postalAddress, postalCode, town, county, country, physicalAddress, physicalTown, physicalCounty, physicalCountry, nextOfKinName, nextOfKinPhone, nextOfKinAddress, nextOfKinRelationship, emergencyContactName, emergencyContactPhone, previousLicenseNumber, previousLicenseCountry, previousLicenseExpiry, medicalCertificate, birthCertificate, iDCopy, passportPhotos, kRAPin, policeClearance, drivingSchoolCertificate, previousLicenseCopy, status, licenseClassApplied, feeAmount, paymentStatus, declarationAccepted, null);
        }
        
        /// <remarks/>
        public void UpdateGMDLApplicationAsync(
                    string applicationNo, 
                    System.DateTime applicationDate, 
                    int typeOfApplication, 
                    string applicantName, 
                    System.DateTime dateOfBirth, 
                    string placeOfBirth, 
                    string iDNumber, 
                    string phoneNumber, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string town, 
                    string county, 
                    string country, 
                    string physicalAddress, 
                    string physicalTown, 
                    string physicalCounty, 
                    string physicalCountry, 
                    string nextOfKinName, 
                    string nextOfKinPhone, 
                    string nextOfKinAddress, 
                    string nextOfKinRelationship, 
                    string emergencyContactName, 
                    string emergencyContactPhone, 
                    string previousLicenseNumber, 
                    string previousLicenseCountry, 
                    System.DateTime previousLicenseExpiry, 
                    bool medicalCertificate, 
                    bool birthCertificate, 
                    bool iDCopy, 
                    bool passportPhotos, 
                    bool kRAPin, 
                    bool policeClearance, 
                    bool drivingSchoolCertificate, 
                    bool previousLicenseCopy, 
                    int status, 
                    string licenseClassApplied, 
                    decimal feeAmount, 
                    int paymentStatus, 
                    bool declarationAccepted, 
                    object userState) {
            if ((this.UpdateGMDLApplicationOperationCompleted == null)) {
                this.UpdateGMDLApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGMDLApplicationOperationCompleted);
            }
            this.InvokeAsync("UpdateGMDLApplication", new object[] {
                        applicationNo,
                        applicationDate,
                        typeOfApplication,
                        applicantName,
                        dateOfBirth,
                        placeOfBirth,
                        iDNumber,
                        phoneNumber,
                        emailAddress,
                        postalAddress,
                        postalCode,
                        town,
                        county,
                        country,
                        physicalAddress,
                        physicalTown,
                        physicalCounty,
                        physicalCountry,
                        nextOfKinName,
                        nextOfKinPhone,
                        nextOfKinAddress,
                        nextOfKinRelationship,
                        emergencyContactName,
                        emergencyContactPhone,
                        previousLicenseNumber,
                        previousLicenseCountry,
                        previousLicenseExpiry,
                        medicalCertificate,
                        birthCertificate,
                        iDCopy,
                        passportPhotos,
                        kRAPin,
                        policeClearance,
                        drivingSchoolCertificate,
                        previousLicenseCopy,
                        status,
                        licenseClassApplied,
                        feeAmount,
                        paymentStatus,
                        declarationAccepted}, this.UpdateGMDLApplicationOperationCompleted, userState);
        }
        
        private void OnUpdateGMDLApplicationOperationCompleted(object arg) {
            if ((this.UpdateGMDLApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGMDLApplicationCompleted(this, new UpdateGMDLApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateGMDSSApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateGMDSSApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateGMDSSApplication(
                    string entryNo, 
                    int applicationType, 
                    string vesselName, 
                    string previousName, 
                    string iMONumber, 
                    string callSign, 
                    string mMSI, 
                    string portOfRegistry, 
                    string flagState, 
                    string vesselType, 
                    decimal grossTonnage, 
                    decimal netTonnage, 
                    decimal lengthOverall, 
                    decimal breadth, 
                    decimal depth, 
                    int yearBuilt, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime keelLaidDate, 
                    bool seaAreaA1, 
                    bool seaAreaA2, 
                    bool seaAreaA3, 
                    bool seaAreaA4, 
                    bool vHFRadioTelephone, 
                    bool mFRadioTelephone, 
                    bool mFHFRadioTelephone, 
                    bool inmarsatTerminal, 
                    bool ePIRB406MHz, 
                    bool survivalCraftVHF, 
                    bool searchRescueRadar, 
                    bool nAVTEXReceiver, 
                    bool eGCReceiver, 
                    string vHFDSCMakeModel, 
                    string vHFDSCSerialNo, 
                    string mFDSCMakeModel, 
                    string mFDSCSerialNo, 
                    string mFHFDSCMakeModel, 
                    string mFHFDSCSerialNo, 
                    string inmarsatMakeModel, 
                    string inmarsatSerialNo, 
                    string ePIRBMakeModel, 
                    string ePIRBSerialNo, 
                    string sARTMakeModel, 
                    string sARTSerialNo, 
                    int certificateType, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expiryDatePreviousCert, 
                    bool surveyRequired, 
                    string surveyType, 
                    string plansForLabelling, 
                    string maintenanceArrangements, 
                    int shipFittedVHFTelephone, 
                    int shipFittedMFTelephone, 
                    int shipFittedMFHFTelephone, 
                    int shipFittedInmarsat, 
                    string shipTradingAreas, 
                    string ownerCompanyName, 
                    string ownerAddress, 
                    string contactPerson, 
                    string phoneNumber, 
                    string emailAddress, 
                    string declarationText, 
                    string applicantName, 
                    string applicantPosition, 
                    string signature, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime applicationDate, 
                    string place, 
                    int status, 
                    string portalUser, 
                    string serviceCode) {
            object[] results = this.Invoke("UpdateGMDSSApplication", new object[] {
                        entryNo,
                        applicationType,
                        vesselName,
                        previousName,
                        iMONumber,
                        callSign,
                        mMSI,
                        portOfRegistry,
                        flagState,
                        vesselType,
                        grossTonnage,
                        netTonnage,
                        lengthOverall,
                        breadth,
                        depth,
                        yearBuilt,
                        keelLaidDate,
                        seaAreaA1,
                        seaAreaA2,
                        seaAreaA3,
                        seaAreaA4,
                        vHFRadioTelephone,
                        mFRadioTelephone,
                        mFHFRadioTelephone,
                        inmarsatTerminal,
                        ePIRB406MHz,
                        survivalCraftVHF,
                        searchRescueRadar,
                        nAVTEXReceiver,
                        eGCReceiver,
                        vHFDSCMakeModel,
                        vHFDSCSerialNo,
                        mFDSCMakeModel,
                        mFDSCSerialNo,
                        mFHFDSCMakeModel,
                        mFHFDSCSerialNo,
                        inmarsatMakeModel,
                        inmarsatSerialNo,
                        ePIRBMakeModel,
                        ePIRBSerialNo,
                        sARTMakeModel,
                        sARTSerialNo,
                        certificateType,
                        expiryDatePreviousCert,
                        surveyRequired,
                        surveyType,
                        plansForLabelling,
                        maintenanceArrangements,
                        shipFittedVHFTelephone,
                        shipFittedMFTelephone,
                        shipFittedMFHFTelephone,
                        shipFittedInmarsat,
                        shipTradingAreas,
                        ownerCompanyName,
                        ownerAddress,
                        contactPerson,
                        phoneNumber,
                        emailAddress,
                        declarationText,
                        applicantName,
                        applicantPosition,
                        signature,
                        applicationDate,
                        place,
                        status,
                        portalUser,
                        serviceCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGMDSSApplicationAsync(
                    string entryNo, 
                    int applicationType, 
                    string vesselName, 
                    string previousName, 
                    string iMONumber, 
                    string callSign, 
                    string mMSI, 
                    string portOfRegistry, 
                    string flagState, 
                    string vesselType, 
                    decimal grossTonnage, 
                    decimal netTonnage, 
                    decimal lengthOverall, 
                    decimal breadth, 
                    decimal depth, 
                    int yearBuilt, 
                    System.DateTime keelLaidDate, 
                    bool seaAreaA1, 
                    bool seaAreaA2, 
                    bool seaAreaA3, 
                    bool seaAreaA4, 
                    bool vHFRadioTelephone, 
                    bool mFRadioTelephone, 
                    bool mFHFRadioTelephone, 
                    bool inmarsatTerminal, 
                    bool ePIRB406MHz, 
                    bool survivalCraftVHF, 
                    bool searchRescueRadar, 
                    bool nAVTEXReceiver, 
                    bool eGCReceiver, 
                    string vHFDSCMakeModel, 
                    string vHFDSCSerialNo, 
                    string mFDSCMakeModel, 
                    string mFDSCSerialNo, 
                    string mFHFDSCMakeModel, 
                    string mFHFDSCSerialNo, 
                    string inmarsatMakeModel, 
                    string inmarsatSerialNo, 
                    string ePIRBMakeModel, 
                    string ePIRBSerialNo, 
                    string sARTMakeModel, 
                    string sARTSerialNo, 
                    int certificateType, 
                    System.DateTime expiryDatePreviousCert, 
                    bool surveyRequired, 
                    string surveyType, 
                    string plansForLabelling, 
                    string maintenanceArrangements, 
                    int shipFittedVHFTelephone, 
                    int shipFittedMFTelephone, 
                    int shipFittedMFHFTelephone, 
                    int shipFittedInmarsat, 
                    string shipTradingAreas, 
                    string ownerCompanyName, 
                    string ownerAddress, 
                    string contactPerson, 
                    string phoneNumber, 
                    string emailAddress, 
                    string declarationText, 
                    string applicantName, 
                    string applicantPosition, 
                    string signature, 
                    System.DateTime applicationDate, 
                    string place, 
                    int status, 
                    string portalUser, 
                    string serviceCode) {
            this.UpdateGMDSSApplicationAsync(entryNo, applicationType, vesselName, previousName, iMONumber, callSign, mMSI, portOfRegistry, flagState, vesselType, grossTonnage, netTonnage, lengthOverall, breadth, depth, yearBuilt, keelLaidDate, seaAreaA1, seaAreaA2, seaAreaA3, seaAreaA4, vHFRadioTelephone, mFRadioTelephone, mFHFRadioTelephone, inmarsatTerminal, ePIRB406MHz, survivalCraftVHF, searchRescueRadar, nAVTEXReceiver, eGCReceiver, vHFDSCMakeModel, vHFDSCSerialNo, mFDSCMakeModel, mFDSCSerialNo, mFHFDSCMakeModel, mFHFDSCSerialNo, inmarsatMakeModel, inmarsatSerialNo, ePIRBMakeModel, ePIRBSerialNo, sARTMakeModel, sARTSerialNo, certificateType, expiryDatePreviousCert, surveyRequired, surveyType, plansForLabelling, maintenanceArrangements, shipFittedVHFTelephone, shipFittedMFTelephone, shipFittedMFHFTelephone, shipFittedInmarsat, shipTradingAreas, ownerCompanyName, ownerAddress, contactPerson, phoneNumber, emailAddress, declarationText, applicantName, applicantPosition, signature, applicationDate, place, status, portalUser, serviceCode, null);
        }
        
        /// <remarks/>
        public void UpdateGMDSSApplicationAsync(
                    string entryNo, 
                    int applicationType, 
                    string vesselName, 
                    string previousName, 
                    string iMONumber, 
                    string callSign, 
                    string mMSI, 
                    string portOfRegistry, 
                    string flagState, 
                    string vesselType, 
                    decimal grossTonnage, 
                    decimal netTonnage, 
                    decimal lengthOverall, 
                    decimal breadth, 
                    decimal depth, 
                    int yearBuilt, 
                    System.DateTime keelLaidDate, 
                    bool seaAreaA1, 
                    bool seaAreaA2, 
                    bool seaAreaA3, 
                    bool seaAreaA4, 
                    bool vHFRadioTelephone, 
                    bool mFRadioTelephone, 
                    bool mFHFRadioTelephone, 
                    bool inmarsatTerminal, 
                    bool ePIRB406MHz, 
                    bool survivalCraftVHF, 
                    bool searchRescueRadar, 
                    bool nAVTEXReceiver, 
                    bool eGCReceiver, 
                    string vHFDSCMakeModel, 
                    string vHFDSCSerialNo, 
                    string mFDSCMakeModel, 
                    string mFDSCSerialNo, 
                    string mFHFDSCMakeModel, 
                    string mFHFDSCSerialNo, 
                    string inmarsatMakeModel, 
                    string inmarsatSerialNo, 
                    string ePIRBMakeModel, 
                    string ePIRBSerialNo, 
                    string sARTMakeModel, 
                    string sARTSerialNo, 
                    int certificateType, 
                    System.DateTime expiryDatePreviousCert, 
                    bool surveyRequired, 
                    string surveyType, 
                    string plansForLabelling, 
                    string maintenanceArrangements, 
                    int shipFittedVHFTelephone, 
                    int shipFittedMFTelephone, 
                    int shipFittedMFHFTelephone, 
                    int shipFittedInmarsat, 
                    string shipTradingAreas, 
                    string ownerCompanyName, 
                    string ownerAddress, 
                    string contactPerson, 
                    string phoneNumber, 
                    string emailAddress, 
                    string declarationText, 
                    string applicantName, 
                    string applicantPosition, 
                    string signature, 
                    System.DateTime applicationDate, 
                    string place, 
                    int status, 
                    string portalUser, 
                    string serviceCode, 
                    object userState) {
            if ((this.UpdateGMDSSApplicationOperationCompleted == null)) {
                this.UpdateGMDSSApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGMDSSApplicationOperationCompleted);
            }
            this.InvokeAsync("UpdateGMDSSApplication", new object[] {
                        entryNo,
                        applicationType,
                        vesselName,
                        previousName,
                        iMONumber,
                        callSign,
                        mMSI,
                        portOfRegistry,
                        flagState,
                        vesselType,
                        grossTonnage,
                        netTonnage,
                        lengthOverall,
                        breadth,
                        depth,
                        yearBuilt,
                        keelLaidDate,
                        seaAreaA1,
                        seaAreaA2,
                        seaAreaA3,
                        seaAreaA4,
                        vHFRadioTelephone,
                        mFRadioTelephone,
                        mFHFRadioTelephone,
                        inmarsatTerminal,
                        ePIRB406MHz,
                        survivalCraftVHF,
                        searchRescueRadar,
                        nAVTEXReceiver,
                        eGCReceiver,
                        vHFDSCMakeModel,
                        vHFDSCSerialNo,
                        mFDSCMakeModel,
                        mFDSCSerialNo,
                        mFHFDSCMakeModel,
                        mFHFDSCSerialNo,
                        inmarsatMakeModel,
                        inmarsatSerialNo,
                        ePIRBMakeModel,
                        ePIRBSerialNo,
                        sARTMakeModel,
                        sARTSerialNo,
                        certificateType,
                        expiryDatePreviousCert,
                        surveyRequired,
                        surveyType,
                        plansForLabelling,
                        maintenanceArrangements,
                        shipFittedVHFTelephone,
                        shipFittedMFTelephone,
                        shipFittedMFHFTelephone,
                        shipFittedInmarsat,
                        shipTradingAreas,
                        ownerCompanyName,
                        ownerAddress,
                        contactPerson,
                        phoneNumber,
                        emailAddress,
                        declarationText,
                        applicantName,
                        applicantPosition,
                        signature,
                        applicationDate,
                        place,
                        status,
                        portalUser,
                        serviceCode}, this.UpdateGMDSSApplicationOperationCompleted, userState);
        }
        
        private void OnUpdateGMDSSApplicationOperationCompleted(object arg) {
            if ((this.UpdateGMDSSApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGMDSSApplicationCompleted(this, new UpdateGMDSSApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateGMOFreeApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateGMOFreeApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateGMOFreeApplication(
                    string applicationNo, 
                    string fullName, 
                    string iDNumber, 
                    string phoneNumber, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string streetAddress, 
                    int typeOfApplication, 
                    string capacityOfApplicant, 
                    string companyRegistrationNumber, 
                    string companyName, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string nationalityCountryOfIncorporation, 
                    string locationOfRegisteredOffices, 
                    string companyMobileNumber, 
                    string companyEmailAddress, 
                    string nameOfExporterManufacturer, 
                    string addressOfExporterManufacturer, 
                    string nameOfImporterConsignee, 
                    string addressOfImporterConsignee, 
                    string notifyingParty, 
                    string nameOfProduct, 
                    string invoiceNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime invoiceDate, 
                    string batchNoLotNo, 
                    string billOfLadingNo, 
                    decimal quantityKgs, 
                    int totalNumberOfLots, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime productExpiry, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime manufacturePackageDate, 
                    string typeOfPackaging, 
                    int numberOfContainers, 
                    int numberOfBagsGross, 
                    string shipmentPlaceVessel, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime shipmentDate, 
                    string destinationCountry, 
                    string loadingPlace, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime loadingDate, 
                    decimal fOBValue, 
                    decimal cIFValue, 
                    string anyOtherInformation, 
                    bool informationConfidential, 
                    string confidentialityReason, 
                    bool declarationConfirmed, 
                    decimal applicationFee, 
                    decimal processingFee, 
                    int paymentStatus, 
                    bool invoiceAttached, 
                    bool certificateOfOriginAttached, 
                    bool packingListAttached, 
                    bool analysisReportAttached, 
                    bool otherDocumentsAttached, 
                    string eCitizenReferenceNo, 
                    string serviceCode) {
            this.Invoke("UpdateGMOFreeApplication", new object[] {
                        applicationNo,
                        fullName,
                        iDNumber,
                        phoneNumber,
                        emailAddress,
                        postalAddress,
                        postalCode,
                        streetAddress,
                        typeOfApplication,
                        capacityOfApplicant,
                        companyRegistrationNumber,
                        companyName,
                        companyPostalAddress,
                        companyPostalCode,
                        kRAPIN,
                        yearOfRegistration,
                        nationalityCountryOfIncorporation,
                        locationOfRegisteredOffices,
                        companyMobileNumber,
                        companyEmailAddress,
                        nameOfExporterManufacturer,
                        addressOfExporterManufacturer,
                        nameOfImporterConsignee,
                        addressOfImporterConsignee,
                        notifyingParty,
                        nameOfProduct,
                        invoiceNo,
                        invoiceDate,
                        batchNoLotNo,
                        billOfLadingNo,
                        quantityKgs,
                        totalNumberOfLots,
                        productExpiry,
                        manufacturePackageDate,
                        typeOfPackaging,
                        numberOfContainers,
                        numberOfBagsGross,
                        shipmentPlaceVessel,
                        shipmentDate,
                        destinationCountry,
                        loadingPlace,
                        loadingDate,
                        fOBValue,
                        cIFValue,
                        anyOtherInformation,
                        informationConfidential,
                        confidentialityReason,
                        declarationConfirmed,
                        applicationFee,
                        processingFee,
                        paymentStatus,
                        invoiceAttached,
                        certificateOfOriginAttached,
                        packingListAttached,
                        analysisReportAttached,
                        otherDocumentsAttached,
                        eCitizenReferenceNo,
                        serviceCode});
        }
        
        /// <remarks/>
        public void UpdateGMOFreeApplicationAsync(
                    string applicationNo, 
                    string fullName, 
                    string iDNumber, 
                    string phoneNumber, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string streetAddress, 
                    int typeOfApplication, 
                    string capacityOfApplicant, 
                    string companyRegistrationNumber, 
                    string companyName, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string nationalityCountryOfIncorporation, 
                    string locationOfRegisteredOffices, 
                    string companyMobileNumber, 
                    string companyEmailAddress, 
                    string nameOfExporterManufacturer, 
                    string addressOfExporterManufacturer, 
                    string nameOfImporterConsignee, 
                    string addressOfImporterConsignee, 
                    string notifyingParty, 
                    string nameOfProduct, 
                    string invoiceNo, 
                    System.DateTime invoiceDate, 
                    string batchNoLotNo, 
                    string billOfLadingNo, 
                    decimal quantityKgs, 
                    int totalNumberOfLots, 
                    System.DateTime productExpiry, 
                    System.DateTime manufacturePackageDate, 
                    string typeOfPackaging, 
                    int numberOfContainers, 
                    int numberOfBagsGross, 
                    string shipmentPlaceVessel, 
                    System.DateTime shipmentDate, 
                    string destinationCountry, 
                    string loadingPlace, 
                    System.DateTime loadingDate, 
                    decimal fOBValue, 
                    decimal cIFValue, 
                    string anyOtherInformation, 
                    bool informationConfidential, 
                    string confidentialityReason, 
                    bool declarationConfirmed, 
                    decimal applicationFee, 
                    decimal processingFee, 
                    int paymentStatus, 
                    bool invoiceAttached, 
                    bool certificateOfOriginAttached, 
                    bool packingListAttached, 
                    bool analysisReportAttached, 
                    bool otherDocumentsAttached, 
                    string eCitizenReferenceNo, 
                    string serviceCode) {
            this.UpdateGMOFreeApplicationAsync(applicationNo, fullName, iDNumber, phoneNumber, emailAddress, postalAddress, postalCode, streetAddress, typeOfApplication, capacityOfApplicant, companyRegistrationNumber, companyName, companyPostalAddress, companyPostalCode, kRAPIN, yearOfRegistration, nationalityCountryOfIncorporation, locationOfRegisteredOffices, companyMobileNumber, companyEmailAddress, nameOfExporterManufacturer, addressOfExporterManufacturer, nameOfImporterConsignee, addressOfImporterConsignee, notifyingParty, nameOfProduct, invoiceNo, invoiceDate, batchNoLotNo, billOfLadingNo, quantityKgs, totalNumberOfLots, productExpiry, manufacturePackageDate, typeOfPackaging, numberOfContainers, numberOfBagsGross, shipmentPlaceVessel, shipmentDate, destinationCountry, loadingPlace, loadingDate, fOBValue, cIFValue, anyOtherInformation, informationConfidential, confidentialityReason, declarationConfirmed, applicationFee, processingFee, paymentStatus, invoiceAttached, certificateOfOriginAttached, packingListAttached, analysisReportAttached, otherDocumentsAttached, eCitizenReferenceNo, serviceCode, null);
        }
        
        /// <remarks/>
        public void UpdateGMOFreeApplicationAsync(
                    string applicationNo, 
                    string fullName, 
                    string iDNumber, 
                    string phoneNumber, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string streetAddress, 
                    int typeOfApplication, 
                    string capacityOfApplicant, 
                    string companyRegistrationNumber, 
                    string companyName, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string nationalityCountryOfIncorporation, 
                    string locationOfRegisteredOffices, 
                    string companyMobileNumber, 
                    string companyEmailAddress, 
                    string nameOfExporterManufacturer, 
                    string addressOfExporterManufacturer, 
                    string nameOfImporterConsignee, 
                    string addressOfImporterConsignee, 
                    string notifyingParty, 
                    string nameOfProduct, 
                    string invoiceNo, 
                    System.DateTime invoiceDate, 
                    string batchNoLotNo, 
                    string billOfLadingNo, 
                    decimal quantityKgs, 
                    int totalNumberOfLots, 
                    System.DateTime productExpiry, 
                    System.DateTime manufacturePackageDate, 
                    string typeOfPackaging, 
                    int numberOfContainers, 
                    int numberOfBagsGross, 
                    string shipmentPlaceVessel, 
                    System.DateTime shipmentDate, 
                    string destinationCountry, 
                    string loadingPlace, 
                    System.DateTime loadingDate, 
                    decimal fOBValue, 
                    decimal cIFValue, 
                    string anyOtherInformation, 
                    bool informationConfidential, 
                    string confidentialityReason, 
                    bool declarationConfirmed, 
                    decimal applicationFee, 
                    decimal processingFee, 
                    int paymentStatus, 
                    bool invoiceAttached, 
                    bool certificateOfOriginAttached, 
                    bool packingListAttached, 
                    bool analysisReportAttached, 
                    bool otherDocumentsAttached, 
                    string eCitizenReferenceNo, 
                    string serviceCode, 
                    object userState) {
            if ((this.UpdateGMOFreeApplicationOperationCompleted == null)) {
                this.UpdateGMOFreeApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGMOFreeApplicationOperationCompleted);
            }
            this.InvokeAsync("UpdateGMOFreeApplication", new object[] {
                        applicationNo,
                        fullName,
                        iDNumber,
                        phoneNumber,
                        emailAddress,
                        postalAddress,
                        postalCode,
                        streetAddress,
                        typeOfApplication,
                        capacityOfApplicant,
                        companyRegistrationNumber,
                        companyName,
                        companyPostalAddress,
                        companyPostalCode,
                        kRAPIN,
                        yearOfRegistration,
                        nationalityCountryOfIncorporation,
                        locationOfRegisteredOffices,
                        companyMobileNumber,
                        companyEmailAddress,
                        nameOfExporterManufacturer,
                        addressOfExporterManufacturer,
                        nameOfImporterConsignee,
                        addressOfImporterConsignee,
                        notifyingParty,
                        nameOfProduct,
                        invoiceNo,
                        invoiceDate,
                        batchNoLotNo,
                        billOfLadingNo,
                        quantityKgs,
                        totalNumberOfLots,
                        productExpiry,
                        manufacturePackageDate,
                        typeOfPackaging,
                        numberOfContainers,
                        numberOfBagsGross,
                        shipmentPlaceVessel,
                        shipmentDate,
                        destinationCountry,
                        loadingPlace,
                        loadingDate,
                        fOBValue,
                        cIFValue,
                        anyOtherInformation,
                        informationConfidential,
                        confidentialityReason,
                        declarationConfirmed,
                        applicationFee,
                        processingFee,
                        paymentStatus,
                        invoiceAttached,
                        certificateOfOriginAttached,
                        packingListAttached,
                        analysisReportAttached,
                        otherDocumentsAttached,
                        eCitizenReferenceNo,
                        serviceCode}, this.UpdateGMOFreeApplicationOperationCompleted, userState);
        }
        
        private void OnUpdateGMOFreeApplicationOperationCompleted(object arg) {
            if ((this.UpdateGMOFreeApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGMOFreeApplicationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateGenomeResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateGenomeResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateGenomeResearch(
                    string entryNo, 
                    string contactName, 
                    string phoneNumber, 
                    string email, 
                    string companyRegistrationNumber, 
                    string companyInstitutionName, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string locationOfRegisteredOffices, 
                    string telephoneNumberOfCompany, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string organizationLeadLocation, 
                    string projectTitle, 
                    string taxonomicDescription, 
                    string nameOfGenus, 
                    string nameOfSpecies, 
                    string breedOfOrganism, 
                    string strainOfOrganism, 
                    string varietyOfOrganism, 
                    string lineOfOrganism, 
                    string purposeOfGenomeEditing, 
                    string intendedUse, 
                    string molecularTechniquesSummary, 
                    string geneOrDNASequenceModified, 
                    string typeOfGenomeEditing, 
                    string targetOrganismDescriptionBefore, 
                    string targetOrganismDescriptionAfter, 
                    bool vectorsUsed, 
                    string vectorName, 
                    string vectorGeneticMappingDescription, 
                    bool vectorNaturallyPathogenic, 
                    bool vectorDisarmed, 
                    string vectorDisarmamentMethod, 
                    string vectorGeneticMapFile, 
                    string deliveryMethods, 
                    bool foreignDNASequencePresent, 
                    bool productExempted, 
                    string eCitizenReferenceNo, 
                    string portalUser, 
                    string forWhatPurpose, 
                    string techniqueToRemoveGeneticSeq, 
                    string detectionprotocols, 
                    string serviceCode) {
            object[] results = this.Invoke("UpdateGenomeResearch", new object[] {
                        entryNo,
                        contactName,
                        phoneNumber,
                        email,
                        companyRegistrationNumber,
                        companyInstitutionName,
                        kRAPIN,
                        yearOfRegistration,
                        locationOfRegisteredOffices,
                        telephoneNumberOfCompany,
                        emailAddress,
                        postalAddress,
                        postalCode,
                        organizationLeadLocation,
                        projectTitle,
                        taxonomicDescription,
                        nameOfGenus,
                        nameOfSpecies,
                        breedOfOrganism,
                        strainOfOrganism,
                        varietyOfOrganism,
                        lineOfOrganism,
                        purposeOfGenomeEditing,
                        intendedUse,
                        molecularTechniquesSummary,
                        geneOrDNASequenceModified,
                        typeOfGenomeEditing,
                        targetOrganismDescriptionBefore,
                        targetOrganismDescriptionAfter,
                        vectorsUsed,
                        vectorName,
                        vectorGeneticMappingDescription,
                        vectorNaturallyPathogenic,
                        vectorDisarmed,
                        vectorDisarmamentMethod,
                        vectorGeneticMapFile,
                        deliveryMethods,
                        foreignDNASequencePresent,
                        productExempted,
                        eCitizenReferenceNo,
                        portalUser,
                        forWhatPurpose,
                        techniqueToRemoveGeneticSeq,
                        detectionprotocols,
                        serviceCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGenomeResearchAsync(
                    string entryNo, 
                    string contactName, 
                    string phoneNumber, 
                    string email, 
                    string companyRegistrationNumber, 
                    string companyInstitutionName, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string locationOfRegisteredOffices, 
                    string telephoneNumberOfCompany, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string organizationLeadLocation, 
                    string projectTitle, 
                    string taxonomicDescription, 
                    string nameOfGenus, 
                    string nameOfSpecies, 
                    string breedOfOrganism, 
                    string strainOfOrganism, 
                    string varietyOfOrganism, 
                    string lineOfOrganism, 
                    string purposeOfGenomeEditing, 
                    string intendedUse, 
                    string molecularTechniquesSummary, 
                    string geneOrDNASequenceModified, 
                    string typeOfGenomeEditing, 
                    string targetOrganismDescriptionBefore, 
                    string targetOrganismDescriptionAfter, 
                    bool vectorsUsed, 
                    string vectorName, 
                    string vectorGeneticMappingDescription, 
                    bool vectorNaturallyPathogenic, 
                    bool vectorDisarmed, 
                    string vectorDisarmamentMethod, 
                    string vectorGeneticMapFile, 
                    string deliveryMethods, 
                    bool foreignDNASequencePresent, 
                    bool productExempted, 
                    string eCitizenReferenceNo, 
                    string portalUser, 
                    string forWhatPurpose, 
                    string techniqueToRemoveGeneticSeq, 
                    string detectionprotocols, 
                    string serviceCode) {
            this.UpdateGenomeResearchAsync(entryNo, contactName, phoneNumber, email, companyRegistrationNumber, companyInstitutionName, kRAPIN, yearOfRegistration, locationOfRegisteredOffices, telephoneNumberOfCompany, emailAddress, postalAddress, postalCode, organizationLeadLocation, projectTitle, taxonomicDescription, nameOfGenus, nameOfSpecies, breedOfOrganism, strainOfOrganism, varietyOfOrganism, lineOfOrganism, purposeOfGenomeEditing, intendedUse, molecularTechniquesSummary, geneOrDNASequenceModified, typeOfGenomeEditing, targetOrganismDescriptionBefore, targetOrganismDescriptionAfter, vectorsUsed, vectorName, vectorGeneticMappingDescription, vectorNaturallyPathogenic, vectorDisarmed, vectorDisarmamentMethod, vectorGeneticMapFile, deliveryMethods, foreignDNASequencePresent, productExempted, eCitizenReferenceNo, portalUser, forWhatPurpose, techniqueToRemoveGeneticSeq, detectionprotocols, serviceCode, null);
        }
        
        /// <remarks/>
        public void UpdateGenomeResearchAsync(
                    string entryNo, 
                    string contactName, 
                    string phoneNumber, 
                    string email, 
                    string companyRegistrationNumber, 
                    string companyInstitutionName, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string locationOfRegisteredOffices, 
                    string telephoneNumberOfCompany, 
                    string emailAddress, 
                    string postalAddress, 
                    string postalCode, 
                    string organizationLeadLocation, 
                    string projectTitle, 
                    string taxonomicDescription, 
                    string nameOfGenus, 
                    string nameOfSpecies, 
                    string breedOfOrganism, 
                    string strainOfOrganism, 
                    string varietyOfOrganism, 
                    string lineOfOrganism, 
                    string purposeOfGenomeEditing, 
                    string intendedUse, 
                    string molecularTechniquesSummary, 
                    string geneOrDNASequenceModified, 
                    string typeOfGenomeEditing, 
                    string targetOrganismDescriptionBefore, 
                    string targetOrganismDescriptionAfter, 
                    bool vectorsUsed, 
                    string vectorName, 
                    string vectorGeneticMappingDescription, 
                    bool vectorNaturallyPathogenic, 
                    bool vectorDisarmed, 
                    string vectorDisarmamentMethod, 
                    string vectorGeneticMapFile, 
                    string deliveryMethods, 
                    bool foreignDNASequencePresent, 
                    bool productExempted, 
                    string eCitizenReferenceNo, 
                    string portalUser, 
                    string forWhatPurpose, 
                    string techniqueToRemoveGeneticSeq, 
                    string detectionprotocols, 
                    string serviceCode, 
                    object userState) {
            if ((this.UpdateGenomeResearchOperationCompleted == null)) {
                this.UpdateGenomeResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGenomeResearchOperationCompleted);
            }
            this.InvokeAsync("UpdateGenomeResearch", new object[] {
                        entryNo,
                        contactName,
                        phoneNumber,
                        email,
                        companyRegistrationNumber,
                        companyInstitutionName,
                        kRAPIN,
                        yearOfRegistration,
                        locationOfRegisteredOffices,
                        telephoneNumberOfCompany,
                        emailAddress,
                        postalAddress,
                        postalCode,
                        organizationLeadLocation,
                        projectTitle,
                        taxonomicDescription,
                        nameOfGenus,
                        nameOfSpecies,
                        breedOfOrganism,
                        strainOfOrganism,
                        varietyOfOrganism,
                        lineOfOrganism,
                        purposeOfGenomeEditing,
                        intendedUse,
                        molecularTechniquesSummary,
                        geneOrDNASequenceModified,
                        typeOfGenomeEditing,
                        targetOrganismDescriptionBefore,
                        targetOrganismDescriptionAfter,
                        vectorsUsed,
                        vectorName,
                        vectorGeneticMappingDescription,
                        vectorNaturallyPathogenic,
                        vectorDisarmed,
                        vectorDisarmamentMethod,
                        vectorGeneticMapFile,
                        deliveryMethods,
                        foreignDNASequencePresent,
                        productExempted,
                        eCitizenReferenceNo,
                        portalUser,
                        forWhatPurpose,
                        techniqueToRemoveGeneticSeq,
                        detectionprotocols,
                        serviceCode}, this.UpdateGenomeResearchOperationCompleted, userState);
        }
        
        private void OnUpdateGenomeResearchOperationCompleted(object arg) {
            if ((this.UpdateGenomeResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGenomeResearchCompleted(this, new UpdateGenomeResearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateLeaveApprover", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateLeaveApprover_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateLeaveApprover(string supervisor, string leaveNo) {
            this.Invoke("UpdateLeaveApprover", new object[] {
                        supervisor,
                        leaveNo});
        }
        
        /// <remarks/>
        public void UpdateLeaveApproverAsync(string supervisor, string leaveNo) {
            this.UpdateLeaveApproverAsync(supervisor, leaveNo, null);
        }
        
        /// <remarks/>
        public void UpdateLeaveApproverAsync(string supervisor, string leaveNo, object userState) {
            if ((this.UpdateLeaveApproverOperationCompleted == null)) {
                this.UpdateLeaveApproverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLeaveApproverOperationCompleted);
            }
            this.InvokeAsync("UpdateLeaveApprover", new object[] {
                        supervisor,
                        leaveNo}, this.UpdateLeaveApproverOperationCompleted, userState);
        }
        
        private void OnUpdateLeaveApproverOperationCompleted(object arg) {
            if ((this.UpdateLeaveApproverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLeaveApproverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateLeaveRejection", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateLeaveRejection_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateLeaveRejection(string docNo, string rejectionComments) {
            this.Invoke("UpdateLeaveRejection", new object[] {
                        docNo,
                        rejectionComments});
        }
        
        /// <remarks/>
        public void UpdateLeaveRejectionAsync(string docNo, string rejectionComments) {
            this.UpdateLeaveRejectionAsync(docNo, rejectionComments, null);
        }
        
        /// <remarks/>
        public void UpdateLeaveRejectionAsync(string docNo, string rejectionComments, object userState) {
            if ((this.UpdateLeaveRejectionOperationCompleted == null)) {
                this.UpdateLeaveRejectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLeaveRejectionOperationCompleted);
            }
            this.InvokeAsync("UpdateLeaveRejection", new object[] {
                        docNo,
                        rejectionComments}, this.UpdateLeaveRejectionOperationCompleted, userState);
        }
        
        private void OnUpdateLeaveRejectionOperationCompleted(object arg) {
            if ((this.UpdateLeaveRejectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLeaveRejectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateLoanComments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateLoanComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateLoanComments(string loanNo, string hRComments, string directorsComments) {
            this.Invoke("UpdateLoanComments", new object[] {
                        loanNo,
                        hRComments,
                        directorsComments});
        }
        
        /// <remarks/>
        public void UpdateLoanCommentsAsync(string loanNo, string hRComments, string directorsComments) {
            this.UpdateLoanCommentsAsync(loanNo, hRComments, directorsComments, null);
        }
        
        /// <remarks/>
        public void UpdateLoanCommentsAsync(string loanNo, string hRComments, string directorsComments, object userState) {
            if ((this.UpdateLoanCommentsOperationCompleted == null)) {
                this.UpdateLoanCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLoanCommentsOperationCompleted);
            }
            this.InvokeAsync("UpdateLoanComments", new object[] {
                        loanNo,
                        hRComments,
                        directorsComments}, this.UpdateLoanCommentsOperationCompleted, userState);
        }
        
        private void OnUpdateLoanCommentsOperationCompleted(object arg) {
            if ((this.UpdateLoanCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLoanCommentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateMobilityRecommendations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateMobilityRecommendations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMobilityRecommendations(string docNo, string hOSRecommendation, string hOSRemarks, string mobilityRemarks, string hODRecommendation, string directorRecommendation) {
            this.Invoke("UpdateMobilityRecommendations", new object[] {
                        docNo,
                        hOSRecommendation,
                        hOSRemarks,
                        mobilityRemarks,
                        hODRecommendation,
                        directorRecommendation});
        }
        
        /// <remarks/>
        public void UpdateMobilityRecommendationsAsync(string docNo, string hOSRecommendation, string hOSRemarks, string mobilityRemarks, string hODRecommendation, string directorRecommendation) {
            this.UpdateMobilityRecommendationsAsync(docNo, hOSRecommendation, hOSRemarks, mobilityRemarks, hODRecommendation, directorRecommendation, null);
        }
        
        /// <remarks/>
        public void UpdateMobilityRecommendationsAsync(string docNo, string hOSRecommendation, string hOSRemarks, string mobilityRemarks, string hODRecommendation, string directorRecommendation, object userState) {
            if ((this.UpdateMobilityRecommendationsOperationCompleted == null)) {
                this.UpdateMobilityRecommendationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMobilityRecommendationsOperationCompleted);
            }
            this.InvokeAsync("UpdateMobilityRecommendations", new object[] {
                        docNo,
                        hOSRecommendation,
                        hOSRemarks,
                        mobilityRemarks,
                        hODRecommendation,
                        directorRecommendation}, this.UpdateMobilityRecommendationsOperationCompleted, userState);
        }
        
        private void OnUpdateMobilityRecommendationsOperationCompleted(object arg) {
            if ((this.UpdateMobilityRecommendationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMobilityRecommendationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateNoObjectionRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateNoObjectionRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateNoObjectionRequest(
                    string requestNo, 
                    string fullName, 
                    string iDNumber, 
                    string phoneNumber, 
                    string email, 
                    string postalAddress, 
                    string postalCode, 
                    string nationality, 
                    int typeOfApplication, 
                    string companyRegistrationNumber, 
                    string companyInstitutionName, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string nationalityCountryOfIncorporation, 
                    string locationOfRegisteredOffices, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    string taxComplianceCertificateNumber, 
                    string companyTelephoneNumber, 
                    string companyEmailAddress, 
                    int capacityOfApplicant, 
                    string nameOfProduct, 
                    string billOfLadingNumber, 
                    string nSAPermitReferenceNumber, 
                    string batchNoLotNo, 
                    decimal quantityKgs, 
                    int numberOfLots, 
                    string typeOfPackaging, 
                    string containerNo, 
                    string nameOfExporter, 
                    string addressOfExporter, 
                    string countryOfOrigin, 
                    string destinationCountry, 
                    string shipmentPlaceVessel, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime shipmentDate, 
                    string loadingPlace, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime loadingDate, 
                    string anyOtherInformation, 
                    string gMOAnalysisReportNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfGMOAnalysisReportIssue, 
                    bool informationConfidential, 
                    string confidentialityReason, 
                    bool gMOAnalysisReportAttached, 
                    bool certificateOfOriginAttached, 
                    string eCitizenReferenceNo, 
                    string serviceCode) {
            object[] results = this.Invoke("UpdateNoObjectionRequest", new object[] {
                        requestNo,
                        fullName,
                        iDNumber,
                        phoneNumber,
                        email,
                        postalAddress,
                        postalCode,
                        nationality,
                        typeOfApplication,
                        companyRegistrationNumber,
                        companyInstitutionName,
                        kRAPIN,
                        yearOfRegistration,
                        nationalityCountryOfIncorporation,
                        locationOfRegisteredOffices,
                        companyPostalAddress,
                        companyPostalCode,
                        taxComplianceCertificateNumber,
                        companyTelephoneNumber,
                        companyEmailAddress,
                        capacityOfApplicant,
                        nameOfProduct,
                        billOfLadingNumber,
                        nSAPermitReferenceNumber,
                        batchNoLotNo,
                        quantityKgs,
                        numberOfLots,
                        typeOfPackaging,
                        containerNo,
                        nameOfExporter,
                        addressOfExporter,
                        countryOfOrigin,
                        destinationCountry,
                        shipmentPlaceVessel,
                        shipmentDate,
                        loadingPlace,
                        loadingDate,
                        anyOtherInformation,
                        gMOAnalysisReportNo,
                        dateOfGMOAnalysisReportIssue,
                        informationConfidential,
                        confidentialityReason,
                        gMOAnalysisReportAttached,
                        certificateOfOriginAttached,
                        eCitizenReferenceNo,
                        serviceCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNoObjectionRequestAsync(
                    string requestNo, 
                    string fullName, 
                    string iDNumber, 
                    string phoneNumber, 
                    string email, 
                    string postalAddress, 
                    string postalCode, 
                    string nationality, 
                    int typeOfApplication, 
                    string companyRegistrationNumber, 
                    string companyInstitutionName, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string nationalityCountryOfIncorporation, 
                    string locationOfRegisteredOffices, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    string taxComplianceCertificateNumber, 
                    string companyTelephoneNumber, 
                    string companyEmailAddress, 
                    int capacityOfApplicant, 
                    string nameOfProduct, 
                    string billOfLadingNumber, 
                    string nSAPermitReferenceNumber, 
                    string batchNoLotNo, 
                    decimal quantityKgs, 
                    int numberOfLots, 
                    string typeOfPackaging, 
                    string containerNo, 
                    string nameOfExporter, 
                    string addressOfExporter, 
                    string countryOfOrigin, 
                    string destinationCountry, 
                    string shipmentPlaceVessel, 
                    System.DateTime shipmentDate, 
                    string loadingPlace, 
                    System.DateTime loadingDate, 
                    string anyOtherInformation, 
                    string gMOAnalysisReportNo, 
                    System.DateTime dateOfGMOAnalysisReportIssue, 
                    bool informationConfidential, 
                    string confidentialityReason, 
                    bool gMOAnalysisReportAttached, 
                    bool certificateOfOriginAttached, 
                    string eCitizenReferenceNo, 
                    string serviceCode) {
            this.UpdateNoObjectionRequestAsync(requestNo, fullName, iDNumber, phoneNumber, email, postalAddress, postalCode, nationality, typeOfApplication, companyRegistrationNumber, companyInstitutionName, kRAPIN, yearOfRegistration, nationalityCountryOfIncorporation, locationOfRegisteredOffices, companyPostalAddress, companyPostalCode, taxComplianceCertificateNumber, companyTelephoneNumber, companyEmailAddress, capacityOfApplicant, nameOfProduct, billOfLadingNumber, nSAPermitReferenceNumber, batchNoLotNo, quantityKgs, numberOfLots, typeOfPackaging, containerNo, nameOfExporter, addressOfExporter, countryOfOrigin, destinationCountry, shipmentPlaceVessel, shipmentDate, loadingPlace, loadingDate, anyOtherInformation, gMOAnalysisReportNo, dateOfGMOAnalysisReportIssue, informationConfidential, confidentialityReason, gMOAnalysisReportAttached, certificateOfOriginAttached, eCitizenReferenceNo, serviceCode, null);
        }
        
        /// <remarks/>
        public void UpdateNoObjectionRequestAsync(
                    string requestNo, 
                    string fullName, 
                    string iDNumber, 
                    string phoneNumber, 
                    string email, 
                    string postalAddress, 
                    string postalCode, 
                    string nationality, 
                    int typeOfApplication, 
                    string companyRegistrationNumber, 
                    string companyInstitutionName, 
                    string kRAPIN, 
                    int yearOfRegistration, 
                    string nationalityCountryOfIncorporation, 
                    string locationOfRegisteredOffices, 
                    string companyPostalAddress, 
                    string companyPostalCode, 
                    string taxComplianceCertificateNumber, 
                    string companyTelephoneNumber, 
                    string companyEmailAddress, 
                    int capacityOfApplicant, 
                    string nameOfProduct, 
                    string billOfLadingNumber, 
                    string nSAPermitReferenceNumber, 
                    string batchNoLotNo, 
                    decimal quantityKgs, 
                    int numberOfLots, 
                    string typeOfPackaging, 
                    string containerNo, 
                    string nameOfExporter, 
                    string addressOfExporter, 
                    string countryOfOrigin, 
                    string destinationCountry, 
                    string shipmentPlaceVessel, 
                    System.DateTime shipmentDate, 
                    string loadingPlace, 
                    System.DateTime loadingDate, 
                    string anyOtherInformation, 
                    string gMOAnalysisReportNo, 
                    System.DateTime dateOfGMOAnalysisReportIssue, 
                    bool informationConfidential, 
                    string confidentialityReason, 
                    bool gMOAnalysisReportAttached, 
                    bool certificateOfOriginAttached, 
                    string eCitizenReferenceNo, 
                    string serviceCode, 
                    object userState) {
            if ((this.UpdateNoObjectionRequestOperationCompleted == null)) {
                this.UpdateNoObjectionRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNoObjectionRequestOperationCompleted);
            }
            this.InvokeAsync("UpdateNoObjectionRequest", new object[] {
                        requestNo,
                        fullName,
                        iDNumber,
                        phoneNumber,
                        email,
                        postalAddress,
                        postalCode,
                        nationality,
                        typeOfApplication,
                        companyRegistrationNumber,
                        companyInstitutionName,
                        kRAPIN,
                        yearOfRegistration,
                        nationalityCountryOfIncorporation,
                        locationOfRegisteredOffices,
                        companyPostalAddress,
                        companyPostalCode,
                        taxComplianceCertificateNumber,
                        companyTelephoneNumber,
                        companyEmailAddress,
                        capacityOfApplicant,
                        nameOfProduct,
                        billOfLadingNumber,
                        nSAPermitReferenceNumber,
                        batchNoLotNo,
                        quantityKgs,
                        numberOfLots,
                        typeOfPackaging,
                        containerNo,
                        nameOfExporter,
                        addressOfExporter,
                        countryOfOrigin,
                        destinationCountry,
                        shipmentPlaceVessel,
                        shipmentDate,
                        loadingPlace,
                        loadingDate,
                        anyOtherInformation,
                        gMOAnalysisReportNo,
                        dateOfGMOAnalysisReportIssue,
                        informationConfidential,
                        confidentialityReason,
                        gMOAnalysisReportAttached,
                        certificateOfOriginAttached,
                        eCitizenReferenceNo,
                        serviceCode}, this.UpdateNoObjectionRequestOperationCompleted, userState);
        }
        
        private void OnUpdateNoObjectionRequestOperationCompleted(object arg) {
            if ((this.UpdateNoObjectionRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNoObjectionRequestCompleted(this, new UpdateNoObjectionRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdatePASValues", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdatePASValues_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePASValues(string docNo, string strategicPlanID, string coreValue, int lineNo, string appraiseeComments, string appraisersComments, string behavioralExpectation, decimal jointAssessment, decimal selfAssessment, decimal score, string description) {
            object[] results = this.Invoke("UpdatePASValues", new object[] {
                        docNo,
                        strategicPlanID,
                        coreValue,
                        lineNo,
                        appraiseeComments,
                        appraisersComments,
                        behavioralExpectation,
                        jointAssessment,
                        selfAssessment,
                        score,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePASValuesAsync(string docNo, string strategicPlanID, string coreValue, int lineNo, string appraiseeComments, string appraisersComments, string behavioralExpectation, decimal jointAssessment, decimal selfAssessment, decimal score, string description) {
            this.UpdatePASValuesAsync(docNo, strategicPlanID, coreValue, lineNo, appraiseeComments, appraisersComments, behavioralExpectation, jointAssessment, selfAssessment, score, description, null);
        }
        
        /// <remarks/>
        public void UpdatePASValuesAsync(string docNo, string strategicPlanID, string coreValue, int lineNo, string appraiseeComments, string appraisersComments, string behavioralExpectation, decimal jointAssessment, decimal selfAssessment, decimal score, string description, object userState) {
            if ((this.UpdatePASValuesOperationCompleted == null)) {
                this.UpdatePASValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePASValuesOperationCompleted);
            }
            this.InvokeAsync("UpdatePASValues", new object[] {
                        docNo,
                        strategicPlanID,
                        coreValue,
                        lineNo,
                        appraiseeComments,
                        appraisersComments,
                        behavioralExpectation,
                        jointAssessment,
                        selfAssessment,
                        score,
                        description}, this.UpdatePASValuesOperationCompleted, userState);
        }
        
        private void OnUpdatePASValuesOperationCompleted(object arg) {
            if ((this.UpdatePASValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePASValuesCompleted(this, new UpdatePASValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdatePMMUHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdatePMMUHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePMMUHeader(string docNo, string strategy, string desc, string pmmuH, string emploNumb, string targetCommitee, string evaluationCommitee) {
            object[] results = this.Invoke("UpdatePMMUHeader", new object[] {
                        docNo,
                        strategy,
                        desc,
                        pmmuH,
                        emploNumb,
                        targetCommitee,
                        evaluationCommitee});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePMMUHeaderAsync(string docNo, string strategy, string desc, string pmmuH, string emploNumb, string targetCommitee, string evaluationCommitee) {
            this.UpdatePMMUHeaderAsync(docNo, strategy, desc, pmmuH, emploNumb, targetCommitee, evaluationCommitee, null);
        }
        
        /// <remarks/>
        public void UpdatePMMUHeaderAsync(string docNo, string strategy, string desc, string pmmuH, string emploNumb, string targetCommitee, string evaluationCommitee, object userState) {
            if ((this.UpdatePMMUHeaderOperationCompleted == null)) {
                this.UpdatePMMUHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePMMUHeaderOperationCompleted);
            }
            this.InvokeAsync("UpdatePMMUHeader", new object[] {
                        docNo,
                        strategy,
                        desc,
                        pmmuH,
                        emploNumb,
                        targetCommitee,
                        evaluationCommitee}, this.UpdatePMMUHeaderOperationCompleted, userState);
        }
        
        private void OnUpdatePMMUHeaderOperationCompleted(object arg) {
            if ((this.UpdatePMMUHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePMMUHeaderCompleted(this, new UpdatePMMUHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdatePaymentStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdatePaymentStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdatePaymentStatus(string applicationNo, int newPaymentStatus) {
            object[] results = this.Invoke("UpdatePaymentStatus", new object[] {
                        applicationNo,
                        newPaymentStatus});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePaymentStatusAsync(string applicationNo, int newPaymentStatus) {
            this.UpdatePaymentStatusAsync(applicationNo, newPaymentStatus, null);
        }
        
        /// <remarks/>
        public void UpdatePaymentStatusAsync(string applicationNo, int newPaymentStatus, object userState) {
            if ((this.UpdatePaymentStatusOperationCompleted == null)) {
                this.UpdatePaymentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePaymentStatusOperationCompleted);
            }
            this.InvokeAsync("UpdatePaymentStatus", new object[] {
                        applicationNo,
                        newPaymentStatus}, this.UpdatePaymentStatusOperationCompleted, userState);
        }
        
        private void OnUpdatePaymentStatusOperationCompleted(object arg) {
            if ((this.UpdatePaymentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePaymentStatusCompleted(this, new UpdatePaymentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdatePerfomanceTargetsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdatePerfomanceTargetsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePerfomanceTargetsLines(string contractNo, int lineNo, string activity, string pasActivity, string individualTarget, decimal weight, decimal target, string indicator, string keyPerformanceIndicator, string unitofMeasure, decimal selfAssessmentTarget, decimal jointTarget, decimal weightedScore, string pMMUNumber) {
            object[] results = this.Invoke("UpdatePerfomanceTargetsLines", new object[] {
                        contractNo,
                        lineNo,
                        activity,
                        pasActivity,
                        individualTarget,
                        weight,
                        target,
                        indicator,
                        keyPerformanceIndicator,
                        unitofMeasure,
                        selfAssessmentTarget,
                        jointTarget,
                        weightedScore,
                        pMMUNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePerfomanceTargetsLinesAsync(string contractNo, int lineNo, string activity, string pasActivity, string individualTarget, decimal weight, decimal target, string indicator, string keyPerformanceIndicator, string unitofMeasure, decimal selfAssessmentTarget, decimal jointTarget, decimal weightedScore, string pMMUNumber) {
            this.UpdatePerfomanceTargetsLinesAsync(contractNo, lineNo, activity, pasActivity, individualTarget, weight, target, indicator, keyPerformanceIndicator, unitofMeasure, selfAssessmentTarget, jointTarget, weightedScore, pMMUNumber, null);
        }
        
        /// <remarks/>
        public void UpdatePerfomanceTargetsLinesAsync(string contractNo, int lineNo, string activity, string pasActivity, string individualTarget, decimal weight, decimal target, string indicator, string keyPerformanceIndicator, string unitofMeasure, decimal selfAssessmentTarget, decimal jointTarget, decimal weightedScore, string pMMUNumber, object userState) {
            if ((this.UpdatePerfomanceTargetsLinesOperationCompleted == null)) {
                this.UpdatePerfomanceTargetsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePerfomanceTargetsLinesOperationCompleted);
            }
            this.InvokeAsync("UpdatePerfomanceTargetsLines", new object[] {
                        contractNo,
                        lineNo,
                        activity,
                        pasActivity,
                        individualTarget,
                        weight,
                        target,
                        indicator,
                        keyPerformanceIndicator,
                        unitofMeasure,
                        selfAssessmentTarget,
                        jointTarget,
                        weightedScore,
                        pMMUNumber}, this.UpdatePerfomanceTargetsLinesOperationCompleted, userState);
        }
        
        private void OnUpdatePerfomanceTargetsLinesOperationCompleted(object arg) {
            if ((this.UpdatePerfomanceTargetsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePerfomanceTargetsLinesCompleted(this, new UpdatePerfomanceTargetsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdatePmmuLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdatePmmuLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePmmuLine(string docNumber, int lineNo, string sTajPlan, [System.Xml.Serialization.XmlElementAttribute("quantity")] decimal[] quantity, string outcome, string strategies, string strategyOutput, string unitofMeasure, string baselineTarget, string strategicOb, string perspective, string comments) {
            object[] results = this.Invoke("UpdatePmmuLine", new object[] {
                        docNumber,
                        lineNo,
                        sTajPlan,
                        quantity,
                        outcome,
                        strategies,
                        strategyOutput,
                        unitofMeasure,
                        baselineTarget,
                        strategicOb,
                        perspective,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePmmuLineAsync(string docNumber, int lineNo, string sTajPlan, decimal[] quantity, string outcome, string strategies, string strategyOutput, string unitofMeasure, string baselineTarget, string strategicOb, string perspective, string comments) {
            this.UpdatePmmuLineAsync(docNumber, lineNo, sTajPlan, quantity, outcome, strategies, strategyOutput, unitofMeasure, baselineTarget, strategicOb, perspective, comments, null);
        }
        
        /// <remarks/>
        public void UpdatePmmuLineAsync(string docNumber, int lineNo, string sTajPlan, decimal[] quantity, string outcome, string strategies, string strategyOutput, string unitofMeasure, string baselineTarget, string strategicOb, string perspective, string comments, object userState) {
            if ((this.UpdatePmmuLineOperationCompleted == null)) {
                this.UpdatePmmuLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePmmuLineOperationCompleted);
            }
            this.InvokeAsync("UpdatePmmuLine", new object[] {
                        docNumber,
                        lineNo,
                        sTajPlan,
                        quantity,
                        outcome,
                        strategies,
                        strategyOutput,
                        unitofMeasure,
                        baselineTarget,
                        strategicOb,
                        perspective,
                        comments}, this.UpdatePmmuLineOperationCompleted, userState);
        }
        
        private void OnUpdatePmmuLineOperationCompleted(object arg) {
            if ((this.UpdatePmmuLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePmmuLineCompleted(this, new UpdatePmmuLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UpdateRequestStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UpdateRequestStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateRequestStatus(string requestNo, int newStatus) {
            object[] results = this.Invoke("UpdateRequestStatus", new object[] {
                        requestNo,
                        newStatus});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRequestStatusAsync(string requestNo, int newStatus) {
            this.UpdateRequestStatusAsync(requestNo, newStatus, null);
        }
        
        /// <remarks/>
        public void UpdateRequestStatusAsync(string requestNo, int newStatus, object userState) {
            if ((this.UpdateRequestStatusOperationCompleted == null)) {
                this.UpdateRequestStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRequestStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateRequestStatus", new object[] {
                        requestNo,
                        newStatus}, this.UpdateRequestStatusOperationCompleted, userState);
        }
        
        private void OnUpdateRequestStatusOperationCompleted(object arg) {
            if ((this.UpdateRequestStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRequestStatusCompleted(this, new UpdateRequestStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UploadApprovalQRDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UploadApprovalQRDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadApprovalQRDocument(string approverId, string docNo, string fileName, string qRCodeBase64, int tableID) {
            this.Invoke("UploadApprovalQRDocument", new object[] {
                        approverId,
                        docNo,
                        fileName,
                        qRCodeBase64,
                        tableID});
        }
        
        /// <remarks/>
        public void UploadApprovalQRDocumentAsync(string approverId, string docNo, string fileName, string qRCodeBase64, int tableID) {
            this.UploadApprovalQRDocumentAsync(approverId, docNo, fileName, qRCodeBase64, tableID, null);
        }
        
        /// <remarks/>
        public void UploadApprovalQRDocumentAsync(string approverId, string docNo, string fileName, string qRCodeBase64, int tableID, object userState) {
            if ((this.UploadApprovalQRDocumentOperationCompleted == null)) {
                this.UploadApprovalQRDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadApprovalQRDocumentOperationCompleted);
            }
            this.InvokeAsync("UploadApprovalQRDocument", new object[] {
                        approverId,
                        docNo,
                        fileName,
                        qRCodeBase64,
                        tableID}, this.UploadApprovalQRDocumentOperationCompleted, userState);
        }
        
        private void OnUploadApprovalQRDocumentOperationCompleted(object arg) {
            if ((this.UploadApprovalQRDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadApprovalQRDocumentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:UploadAttachedDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="UploadAttachedDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadAttachedDocument(string docNo, string fileName, string attachment, int tableID) {
            this.Invoke("UploadAttachedDocument", new object[] {
                        docNo,
                        fileName,
                        attachment,
                        tableID});
        }
        
        /// <remarks/>
        public void UploadAttachedDocumentAsync(string docNo, string fileName, string attachment, int tableID) {
            this.UploadAttachedDocumentAsync(docNo, fileName, attachment, tableID, null);
        }
        
        /// <remarks/>
        public void UploadAttachedDocumentAsync(string docNo, string fileName, string attachment, int tableID, object userState) {
            if ((this.UploadAttachedDocumentOperationCompleted == null)) {
                this.UploadAttachedDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAttachedDocumentOperationCompleted);
            }
            this.InvokeAsync("UploadAttachedDocument", new object[] {
                        docNo,
                        fileName,
                        attachment,
                        tableID}, this.UploadAttachedDocumentOperationCompleted, userState);
        }
        
        private void OnUploadAttachedDocumentOperationCompleted(object arg) {
            if ((this.UploadAttachedDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAttachedDocumentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ValidateOTP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ValidateOTP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ValidateOTP(string userEnteredOTP, string userId) {
            object[] results = this.Invoke("ValidateOTP", new object[] {
                        userEnteredOTP,
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateOTPAsync(string userEnteredOTP, string userId) {
            this.ValidateOTPAsync(userEnteredOTP, userId, null);
        }
        
        /// <remarks/>
        public void ValidateOTPAsync(string userEnteredOTP, string userId, object userState) {
            if ((this.ValidateOTPOperationCompleted == null)) {
                this.ValidateOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateOTPOperationCompleted);
            }
            this.InvokeAsync("ValidateOTP", new object[] {
                        userEnteredOTP,
                        userId}, this.ValidateOTPOperationCompleted, userState);
        }
        
        private void OnValidateOTPOperationCompleted(object arg) {
            if ((this.ValidateOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateOTPCompleted(this, new ValidateOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ValidateRequiredDocuments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ValidateRequiredDocuments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ValidateRequiredDocuments(string applicationNo) {
            object[] results = this.Invoke("ValidateRequiredDocuments", new object[] {
                        applicationNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateRequiredDocumentsAsync(string applicationNo) {
            this.ValidateRequiredDocumentsAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void ValidateRequiredDocumentsAsync(string applicationNo, object userState) {
            if ((this.ValidateRequiredDocumentsOperationCompleted == null)) {
                this.ValidateRequiredDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateRequiredDocumentsOperationCompleted);
            }
            this.InvokeAsync("ValidateRequiredDocuments", new object[] {
                        applicationNo}, this.ValidateRequiredDocumentsOperationCompleted, userState);
        }
        
        private void OnValidateRequiredDocumentsOperationCompleted(object arg) {
            if ((this.ValidateRequiredDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateRequiredDocumentsCompleted(this, new ValidateRequiredDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ValidateRequiredFields_637680746" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ValidateRequiredFields_637680746_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ValidateRequiredFields_637680746(string vesselName, string iMONumber, string ownerCompanyName, string contactPerson) {
            object[] results = this.Invoke("ValidateRequiredFields_637680746", new object[] {
                        vesselName,
                        iMONumber,
                        ownerCompanyName,
                        contactPerson});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateRequiredFields_637680746Async(string vesselName, string iMONumber, string ownerCompanyName, string contactPerson) {
            this.ValidateRequiredFields_637680746Async(vesselName, iMONumber, ownerCompanyName, contactPerson, null);
        }
        
        /// <remarks/>
        public void ValidateRequiredFields_637680746Async(string vesselName, string iMONumber, string ownerCompanyName, string contactPerson, object userState) {
            if ((this.ValidateRequiredFields_637680746OperationCompleted == null)) {
                this.ValidateRequiredFields_637680746OperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateRequiredFields_637680746OperationCompleted);
            }
            this.InvokeAsync("ValidateRequiredFields_637680746", new object[] {
                        vesselName,
                        iMONumber,
                        ownerCompanyName,
                        contactPerson}, this.ValidateRequiredFields_637680746OperationCompleted, userState);
        }
        
        private void OnValidateRequiredFields_637680746OperationCompleted(object arg) {
            if ((this.ValidateRequiredFields_637680746Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateRequiredFields_637680746Completed(this, new ValidateRequiredFields_637680746CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ValidateRequiredFields_101967350" +
            "9", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ValidateRequiredFields_1019673509_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ValidateRequiredFields_1019673509(string contactName, string companyInstitutionName, string projectTitle) {
            object[] results = this.Invoke("ValidateRequiredFields_1019673509", new object[] {
                        contactName,
                        companyInstitutionName,
                        projectTitle});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateRequiredFields_1019673509Async(string contactName, string companyInstitutionName, string projectTitle) {
            this.ValidateRequiredFields_1019673509Async(contactName, companyInstitutionName, projectTitle, null);
        }
        
        /// <remarks/>
        public void ValidateRequiredFields_1019673509Async(string contactName, string companyInstitutionName, string projectTitle, object userState) {
            if ((this.ValidateRequiredFields_1019673509OperationCompleted == null)) {
                this.ValidateRequiredFields_1019673509OperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateRequiredFields_1019673509OperationCompleted);
            }
            this.InvokeAsync("ValidateRequiredFields_1019673509", new object[] {
                        contactName,
                        companyInstitutionName,
                        projectTitle}, this.ValidateRequiredFields_1019673509OperationCompleted, userState);
        }
        
        private void OnValidateRequiredFields_1019673509OperationCompleted(object arg) {
            if ((this.ValidateRequiredFields_1019673509Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateRequiredFields_1019673509Completed(this, new ValidateRequiredFields_1019673509CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:ValidateVesselData", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="ValidateVesselData_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ValidateVesselData(string iMONumber, string callSign, string mMSI) {
            object[] results = this.Invoke("ValidateVesselData", new object[] {
                        iMONumber,
                        callSign,
                        mMSI});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateVesselDataAsync(string iMONumber, string callSign, string mMSI) {
            this.ValidateVesselDataAsync(iMONumber, callSign, mMSI, null);
        }
        
        /// <remarks/>
        public void ValidateVesselDataAsync(string iMONumber, string callSign, string mMSI, object userState) {
            if ((this.ValidateVesselDataOperationCompleted == null)) {
                this.ValidateVesselDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateVesselDataOperationCompleted);
            }
            this.InvokeAsync("ValidateVesselData", new object[] {
                        iMONumber,
                        callSign,
                        mMSI}, this.ValidateVesselDataOperationCompleted, userState);
        }
        
        private void OnValidateVesselDataOperationCompleted(object arg) {
            if ((this.ValidateVesselDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateVesselDataCompleted(this, new ValidateVesselDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:VoidEft", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="VoidEft_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void VoidEft(int oPtion, string docNo, string voidReason) {
            this.Invoke("VoidEft", new object[] {
                        oPtion,
                        docNo,
                        voidReason});
        }
        
        /// <remarks/>
        public void VoidEftAsync(int oPtion, string docNo, string voidReason) {
            this.VoidEftAsync(oPtion, docNo, voidReason, null);
        }
        
        /// <remarks/>
        public void VoidEftAsync(int oPtion, string docNo, string voidReason, object userState) {
            if ((this.VoidEftOperationCompleted == null)) {
                this.VoidEftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoidEftOperationCompleted);
            }
            this.InvokeAsync("VoidEft", new object[] {
                        oPtion,
                        docNo,
                        voidReason}, this.VoidEftOperationCompleted, userState);
        }
        
        private void OnVoidEftOperationCompleted(object arg) {
            if ((this.VoidEftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoidEftCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:WorkshopAdvancePerMonth", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="WorkshopAdvancePerMonth_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal[] WorkshopAdvancePerMonth(string employeeNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate) {
            object[] results = this.Invoke("WorkshopAdvancePerMonth", new object[] {
                        employeeNo,
                        startDate});
            return ((decimal[])(results[0]));
        }
        
        /// <remarks/>
        public void WorkshopAdvancePerMonthAsync(string employeeNo, System.DateTime startDate) {
            this.WorkshopAdvancePerMonthAsync(employeeNo, startDate, null);
        }
        
        /// <remarks/>
        public void WorkshopAdvancePerMonthAsync(string employeeNo, System.DateTime startDate, object userState) {
            if ((this.WorkshopAdvancePerMonthOperationCompleted == null)) {
                this.WorkshopAdvancePerMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkshopAdvancePerMonthOperationCompleted);
            }
            this.InvokeAsync("WorkshopAdvancePerMonth", new object[] {
                        employeeNo,
                        startDate}, this.WorkshopAdvancePerMonthOperationCompleted, userState);
        }
        
        private void OnWorkshopAdvancePerMonthOperationCompleted(object arg) {
            if ((this.WorkshopAdvancePerMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkshopAdvancePerMonthCompleted(this, new WorkshopAdvancePerMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addAbilityDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addAbilityDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addAbilityDetails(string description, string appNo) {
            object[] results = this.Invoke("addAbilityDetails", new object[] {
                        description,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addAbilityDetailsAsync(string description, string appNo) {
            this.addAbilityDetailsAsync(description, appNo, null);
        }
        
        /// <remarks/>
        public void addAbilityDetailsAsync(string description, string appNo, object userState) {
            if ((this.addAbilityDetailsOperationCompleted == null)) {
                this.addAbilityDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAbilityDetailsOperationCompleted);
            }
            this.InvokeAsync("addAbilityDetails", new object[] {
                        description,
                        appNo}, this.addAbilityDetailsOperationCompleted, userState);
        }
        
        private void OnaddAbilityDetailsOperationCompleted(object arg) {
            if ((this.addAbilityDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAbilityDetailsCompleted(this, new addAbilityDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addAcademicQualificationsForExte" +
            "rnalApplcants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addAcademicQualificationsForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addAcademicQualificationsForExternalApplcants(string email, string institution, string awardAttainment, string specialization, string gradeAttained, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate) {
            object[] results = this.Invoke("addAcademicQualificationsForExternalApplcants", new object[] {
                        email,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addAcademicQualificationsForExternalApplcantsAsync(string email, string institution, string awardAttainment, string specialization, string gradeAttained, System.DateTime fromDate, System.DateTime toDate) {
            this.addAcademicQualificationsForExternalApplcantsAsync(email, institution, awardAttainment, specialization, gradeAttained, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void addAcademicQualificationsForExternalApplcantsAsync(string email, string institution, string awardAttainment, string specialization, string gradeAttained, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.addAcademicQualificationsForExternalApplcantsOperationCompleted == null)) {
                this.addAcademicQualificationsForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAcademicQualificationsForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("addAcademicQualificationsForExternalApplcants", new object[] {
                        email,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        fromDate,
                        toDate}, this.addAcademicQualificationsForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnaddAcademicQualificationsForExternalApplcantsOperationCompleted(object arg) {
            if ((this.addAcademicQualificationsForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAcademicQualificationsForExternalApplcantsCompleted(this, new addAcademicQualificationsForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addAcademicQualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addAcademicQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addAcademicQualifications(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate) {
            object[] results = this.Invoke("addAcademicQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addAcademicQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate) {
            this.addAcademicQualificationsAsync(appNo, institution, awardAttainment, specialization, gradeAttained, empNo, jobId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void addAcademicQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.addAcademicQualificationsOperationCompleted == null)) {
                this.addAcademicQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAcademicQualificationsOperationCompleted);
            }
            this.InvokeAsync("addAcademicQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate}, this.addAcademicQualificationsOperationCompleted, userState);
        }
        
        private void OnaddAcademicQualificationsOperationCompleted(object arg) {
            if ((this.addAcademicQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAcademicQualificationsCompleted(this, new addAcademicQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addApplicantAccomplishment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addApplicantAccomplishment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addApplicantAccomplishment(string appNo, string empNo, string description, int number, string jobId, string amt) {
            object[] results = this.Invoke("addApplicantAccomplishment", new object[] {
                        appNo,
                        empNo,
                        description,
                        number,
                        jobId,
                        amt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addApplicantAccomplishmentAsync(string appNo, string empNo, string description, int number, string jobId, string amt) {
            this.addApplicantAccomplishmentAsync(appNo, empNo, description, number, jobId, amt, null);
        }
        
        /// <remarks/>
        public void addApplicantAccomplishmentAsync(string appNo, string empNo, string description, int number, string jobId, string amt, object userState) {
            if ((this.addApplicantAccomplishmentOperationCompleted == null)) {
                this.addApplicantAccomplishmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddApplicantAccomplishmentOperationCompleted);
            }
            this.InvokeAsync("addApplicantAccomplishment", new object[] {
                        appNo,
                        empNo,
                        description,
                        number,
                        jobId,
                        amt}, this.addApplicantAccomplishmentOperationCompleted, userState);
        }
        
        private void OnaddApplicantAccomplishmentOperationCompleted(object arg) {
            if ((this.addApplicantAccomplishmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addApplicantAccomplishmentCompleted(this, new addApplicantAccomplishmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addCasuals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addCasuals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addCasuals(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, decimal casualRate, string employeeToSurrender, string job, string jobTaskNo) {
            object[] results = this.Invoke("addCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays,
                        casualRate,
                        employeeToSurrender,
                        job,
                        jobTaskNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, decimal casualRate, string employeeToSurrender, string job, string jobTaskNo) {
            this.addCasualsAsync(employeeNo, imprestNo, type, resource, workType, noRequired, noOfDays, casualRate, employeeToSurrender, job, jobTaskNo, null);
        }
        
        /// <remarks/>
        public void addCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, decimal casualRate, string employeeToSurrender, string job, string jobTaskNo, object userState) {
            if ((this.addCasualsOperationCompleted == null)) {
                this.addCasualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCasualsOperationCompleted);
            }
            this.InvokeAsync("addCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays,
                        casualRate,
                        employeeToSurrender,
                        job,
                        jobTaskNo}, this.addCasualsOperationCompleted, userState);
        }
        
        private void OnaddCasualsOperationCompleted(object arg) {
            if ((this.addCasualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCasualsCompleted(this, new addCasualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addCurrentDutiesSkills", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addCurrentDutiesSkills_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addCurrentDutiesSkills(string abilities, string currentDuties, string appNo) {
            object[] results = this.Invoke("addCurrentDutiesSkills", new object[] {
                        abilities,
                        currentDuties,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addCurrentDutiesSkillsAsync(string abilities, string currentDuties, string appNo) {
            this.addCurrentDutiesSkillsAsync(abilities, currentDuties, appNo, null);
        }
        
        /// <remarks/>
        public void addCurrentDutiesSkillsAsync(string abilities, string currentDuties, string appNo, object userState) {
            if ((this.addCurrentDutiesSkillsOperationCompleted == null)) {
                this.addCurrentDutiesSkillsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCurrentDutiesSkillsOperationCompleted);
            }
            this.InvokeAsync("addCurrentDutiesSkills", new object[] {
                        abilities,
                        currentDuties,
                        appNo}, this.addCurrentDutiesSkillsOperationCompleted, userState);
        }
        
        private void OnaddCurrentDutiesSkillsOperationCompleted(object arg) {
            if ((this.addCurrentDutiesSkillsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCurrentDutiesSkillsCompleted(this, new addCurrentDutiesSkillsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addDeclaration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addDeclaration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addDeclaration(bool declaration, string appNo) {
            object[] results = this.Invoke("addDeclaration", new object[] {
                        declaration,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addDeclarationAsync(bool declaration, string appNo) {
            this.addDeclarationAsync(declaration, appNo, null);
        }
        
        /// <remarks/>
        public void addDeclarationAsync(bool declaration, string appNo, object userState) {
            if ((this.addDeclarationOperationCompleted == null)) {
                this.addDeclarationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDeclarationOperationCompleted);
            }
            this.InvokeAsync("addDeclaration", new object[] {
                        declaration,
                        appNo}, this.addDeclarationOperationCompleted, userState);
        }
        
        private void OnaddDeclarationOperationCompleted(object arg) {
            if ((this.addDeclarationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDeclarationCompleted(this, new addDeclarationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addDutiesDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addDutiesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addDutiesDetails(string description, string appNo) {
            object[] results = this.Invoke("addDutiesDetails", new object[] {
                        description,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addDutiesDetailsAsync(string description, string appNo) {
            this.addDutiesDetailsAsync(description, appNo, null);
        }
        
        /// <remarks/>
        public void addDutiesDetailsAsync(string description, string appNo, object userState) {
            if ((this.addDutiesDetailsOperationCompleted == null)) {
                this.addDutiesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDutiesDetailsOperationCompleted);
            }
            this.InvokeAsync("addDutiesDetails", new object[] {
                        description,
                        appNo}, this.addDutiesDetailsOperationCompleted, userState);
        }
        
        private void OnaddDutiesDetailsOperationCompleted(object arg) {
            if ((this.addDutiesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDutiesDetailsCompleted(this, new addDutiesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addEmploymentHistoryForExternalA" +
            "pplcants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addEmploymentHistoryForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addEmploymentHistoryForExternalApplcants([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string company, string designation, string jobGrade, string email) {
            object[] results = this.Invoke("addEmploymentHistoryForExternalApplcants", new object[] {
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addEmploymentHistoryForExternalApplcantsAsync(System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string email) {
            this.addEmploymentHistoryForExternalApplcantsAsync(startDate, endDate, company, designation, jobGrade, email, null);
        }
        
        /// <remarks/>
        public void addEmploymentHistoryForExternalApplcantsAsync(System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string email, object userState) {
            if ((this.addEmploymentHistoryForExternalApplcantsOperationCompleted == null)) {
                this.addEmploymentHistoryForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddEmploymentHistoryForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("addEmploymentHistoryForExternalApplcants", new object[] {
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        email}, this.addEmploymentHistoryForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnaddEmploymentHistoryForExternalApplcantsOperationCompleted(object arg) {
            if ((this.addEmploymentHistoryForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addEmploymentHistoryForExternalApplcantsCompleted(this, new addEmploymentHistoryForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addEmploymentHistory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addEmploymentHistory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addEmploymentHistory(string idNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId) {
            object[] results = this.Invoke("addEmploymentHistory", new object[] {
                        idNumber,
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        appNo,
                        empNo,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addEmploymentHistoryAsync(string idNumber, System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId) {
            this.addEmploymentHistoryAsync(idNumber, startDate, endDate, company, designation, jobGrade, appNo, empNo, jobId, null);
        }
        
        /// <remarks/>
        public void addEmploymentHistoryAsync(string idNumber, System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId, object userState) {
            if ((this.addEmploymentHistoryOperationCompleted == null)) {
                this.addEmploymentHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddEmploymentHistoryOperationCompleted);
            }
            this.InvokeAsync("addEmploymentHistory", new object[] {
                        idNumber,
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        appNo,
                        empNo,
                        jobId}, this.addEmploymentHistoryOperationCompleted, userState);
        }
        
        private void OnaddEmploymentHistoryOperationCompleted(object arg) {
            if ((this.addEmploymentHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addEmploymentHistoryCompleted(this, new addEmploymentHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addFavouriteJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addFavouriteJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addFavouriteJobs(string email, string jobId, string jobDesc) {
            object[] results = this.Invoke("addFavouriteJobs", new object[] {
                        email,
                        jobId,
                        jobDesc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addFavouriteJobsAsync(string email, string jobId, string jobDesc) {
            this.addFavouriteJobsAsync(email, jobId, jobDesc, null);
        }
        
        /// <remarks/>
        public void addFavouriteJobsAsync(string email, string jobId, string jobDesc, object userState) {
            if ((this.addFavouriteJobsOperationCompleted == null)) {
                this.addFavouriteJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddFavouriteJobsOperationCompleted);
            }
            this.InvokeAsync("addFavouriteJobs", new object[] {
                        email,
                        jobId,
                        jobDesc}, this.addFavouriteJobsOperationCompleted, userState);
        }
        
        private void OnaddFavouriteJobsOperationCompleted(object arg) {
            if ((this.addFavouriteJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addFavouriteJobsCompleted(this, new addFavouriteJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addFileLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addFileLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addFileLinks(string recordType, string recordNo, string filename, string fileLink, string extensionType) {
            object[] results = this.Invoke("addFileLinks", new object[] {
                        recordType,
                        recordNo,
                        filename,
                        fileLink,
                        extensionType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addFileLinksAsync(string recordType, string recordNo, string filename, string fileLink, string extensionType) {
            this.addFileLinksAsync(recordType, recordNo, filename, fileLink, extensionType, null);
        }
        
        /// <remarks/>
        public void addFileLinksAsync(string recordType, string recordNo, string filename, string fileLink, string extensionType, object userState) {
            if ((this.addFileLinksOperationCompleted == null)) {
                this.addFileLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddFileLinksOperationCompleted);
            }
            this.InvokeAsync("addFileLinks", new object[] {
                        recordType,
                        recordNo,
                        filename,
                        fileLink,
                        extensionType}, this.addFileLinksOperationCompleted, userState);
        }
        
        private void OnaddFileLinksOperationCompleted(object arg) {
            if ((this.addFileLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addFileLinksCompleted(this, new addFileLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addFleetRequisitionNonStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addFleetRequisitionNonStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addFleetRequisitionNonStaff(string employeeNo, string requisitionNo, string idNumber, string phoneNumber, string organizationName, string name, string purposeoftrip, string designations) {
            object[] results = this.Invoke("addFleetRequisitionNonStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        idNumber,
                        phoneNumber,
                        organizationName,
                        name,
                        purposeoftrip,
                        designations});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addFleetRequisitionNonStaffAsync(string employeeNo, string requisitionNo, string idNumber, string phoneNumber, string organizationName, string name, string purposeoftrip, string designations) {
            this.addFleetRequisitionNonStaffAsync(employeeNo, requisitionNo, idNumber, phoneNumber, organizationName, name, purposeoftrip, designations, null);
        }
        
        /// <remarks/>
        public void addFleetRequisitionNonStaffAsync(string employeeNo, string requisitionNo, string idNumber, string phoneNumber, string organizationName, string name, string purposeoftrip, string designations, object userState) {
            if ((this.addFleetRequisitionNonStaffOperationCompleted == null)) {
                this.addFleetRequisitionNonStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddFleetRequisitionNonStaffOperationCompleted);
            }
            this.InvokeAsync("addFleetRequisitionNonStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        idNumber,
                        phoneNumber,
                        organizationName,
                        name,
                        purposeoftrip,
                        designations}, this.addFleetRequisitionNonStaffOperationCompleted, userState);
        }
        
        private void OnaddFleetRequisitionNonStaffOperationCompleted(object arg) {
            if ((this.addFleetRequisitionNonStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addFleetRequisitionNonStaffCompleted(this, new addFleetRequisitionNonStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addFleetRequisitionSharepointLin" +
            "ks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addFleetRequisitionSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addFleetRequisitionSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("addFleetRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addFleetRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.addFleetRequisitionSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void addFleetRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.addFleetRequisitionSharepointLinksOperationCompleted == null)) {
                this.addFleetRequisitionSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddFleetRequisitionSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("addFleetRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.addFleetRequisitionSharepointLinksOperationCompleted, userState);
        }
        
        private void OnaddFleetRequisitionSharepointLinksOperationCompleted(object arg) {
            if ((this.addFleetRequisitionSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addFleetRequisitionSharepointLinksCompleted(this, new addFleetRequisitionSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addFleetRequisitionStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addFleetRequisitionStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addFleetRequisitionStaff(string employeeNo, string requisitionNo, string staffNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofTrip, int days) {
            object[] results = this.Invoke("addFleetRequisitionStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        staffNo,
                        dateofTrip,
                        days});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addFleetRequisitionStaffAsync(string employeeNo, string requisitionNo, string staffNo, System.DateTime dateofTrip, int days) {
            this.addFleetRequisitionStaffAsync(employeeNo, requisitionNo, staffNo, dateofTrip, days, null);
        }
        
        /// <remarks/>
        public void addFleetRequisitionStaffAsync(string employeeNo, string requisitionNo, string staffNo, System.DateTime dateofTrip, int days, object userState) {
            if ((this.addFleetRequisitionStaffOperationCompleted == null)) {
                this.addFleetRequisitionStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddFleetRequisitionStaffOperationCompleted);
            }
            this.InvokeAsync("addFleetRequisitionStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        staffNo,
                        dateofTrip,
                        days}, this.addFleetRequisitionStaffOperationCompleted, userState);
        }
        
        private void OnaddFleetRequisitionStaffOperationCompleted(object arg) {
            if ((this.addFleetRequisitionStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addFleetRequisitionStaffCompleted(this, new addFleetRequisitionStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addFuel", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addFuel_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addFuel(string employeeNo, string imprestNo, string workType, string resource, decimal mileage) {
            object[] results = this.Invoke("addFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage) {
            this.addFuelAsync(employeeNo, imprestNo, workType, resource, mileage, null);
        }
        
        /// <remarks/>
        public void addFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, object userState) {
            if ((this.addFuelOperationCompleted == null)) {
                this.addFuelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddFuelOperationCompleted);
            }
            this.InvokeAsync("addFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage}, this.addFuelOperationCompleted, userState);
        }
        
        private void OnaddFuelOperationCompleted(object arg) {
            if ((this.addFuelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addFuelCompleted(this, new addFuelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addHobby", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addHobby_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addHobby(string idNumber, string hobby) {
            object[] results = this.Invoke("addHobby", new object[] {
                        idNumber,
                        hobby});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addHobbyAsync(string idNumber, string hobby) {
            this.addHobbyAsync(idNumber, hobby, null);
        }
        
        /// <remarks/>
        public void addHobbyAsync(string idNumber, string hobby, object userState) {
            if ((this.addHobbyOperationCompleted == null)) {
                this.addHobbyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddHobbyOperationCompleted);
            }
            this.InvokeAsync("addHobby", new object[] {
                        idNumber,
                        hobby}, this.addHobbyOperationCompleted, userState);
        }
        
        private void OnaddHobbyOperationCompleted(object arg) {
            if ((this.addHobbyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addHobbyCompleted(this, new addHobbyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addImprestSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addImprestSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addImprestSharepointLinks(string imprestno, string filename, string sharepointlink) {
            object[] results = this.Invoke("addImprestSharepointLinks", new object[] {
                        imprestno,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addImprestSharepointLinksAsync(string imprestno, string filename, string sharepointlink) {
            this.addImprestSharepointLinksAsync(imprestno, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void addImprestSharepointLinksAsync(string imprestno, string filename, string sharepointlink, object userState) {
            if ((this.addImprestSharepointLinksOperationCompleted == null)) {
                this.addImprestSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddImprestSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("addImprestSharepointLinks", new object[] {
                        imprestno,
                        filename,
                        sharepointlink}, this.addImprestSharepointLinksOperationCompleted, userState);
        }
        
        private void OnaddImprestSharepointLinksOperationCompleted(object arg) {
            if ((this.addImprestSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addImprestSharepointLinksCompleted(this, new addImprestSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addImprestSurrenderSharepointLin" +
            "ks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addImprestSurrenderSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addImprestSurrenderSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("addImprestSurrenderSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addImprestSurrenderSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.addImprestSurrenderSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void addImprestSurrenderSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.addImprestSurrenderSharepointLinksOperationCompleted == null)) {
                this.addImprestSurrenderSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddImprestSurrenderSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("addImprestSurrenderSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.addImprestSurrenderSharepointLinksOperationCompleted, userState);
        }
        
        private void OnaddImprestSurrenderSharepointLinksOperationCompleted(object arg) {
            if ((this.addImprestSurrenderSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addImprestSurrenderSharepointLinksCompleted(this, new addImprestSurrenderSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addLeaveSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addLeaveSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addLeaveSharepointLinks(string leaveno, string filename, string sharepointlink) {
            object[] results = this.Invoke("addLeaveSharepointLinks", new object[] {
                        leaveno,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addLeaveSharepointLinksAsync(string leaveno, string filename, string sharepointlink) {
            this.addLeaveSharepointLinksAsync(leaveno, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void addLeaveSharepointLinksAsync(string leaveno, string filename, string sharepointlink, object userState) {
            if ((this.addLeaveSharepointLinksOperationCompleted == null)) {
                this.addLeaveSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddLeaveSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("addLeaveSharepointLinks", new object[] {
                        leaveno,
                        filename,
                        sharepointlink}, this.addLeaveSharepointLinksOperationCompleted, userState);
        }
        
        private void OnaddLeaveSharepointLinksOperationCompleted(object arg) {
            if ((this.addLeaveSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addLeaveSharepointLinksCompleted(this, new addLeaveSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addOtherCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addOtherCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addOtherCosts(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal unitCost, string teamMember, decimal quantityRequired, decimal noOfDays, string job, string jobTask) {
            object[] results = this.Invoke("addOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        unitCost,
                        teamMember,
                        quantityRequired,
                        noOfDays,
                        job,
                        jobTask});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal unitCost, string teamMember, decimal quantityRequired, decimal noOfDays, string job, string jobTask) {
            this.addOtherCostsAsync(employeeNo, imprestNo, voteItem, requiredFor, unitCost, teamMember, quantityRequired, noOfDays, job, jobTask, null);
        }
        
        /// <remarks/>
        public void addOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal unitCost, string teamMember, decimal quantityRequired, decimal noOfDays, string job, string jobTask, object userState) {
            if ((this.addOtherCostsOperationCompleted == null)) {
                this.addOtherCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddOtherCostsOperationCompleted);
            }
            this.InvokeAsync("addOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        unitCost,
                        teamMember,
                        quantityRequired,
                        noOfDays,
                        job,
                        jobTask}, this.addOtherCostsOperationCompleted, userState);
        }
        
        private void OnaddOtherCostsOperationCompleted(object arg) {
            if ((this.addOtherCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addOtherCostsCompleted(this, new addOtherCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addOtherPersonalDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addOtherPersonalDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addOtherPersonalDetails(string appNo, bool convicted, string convictionDesc, bool dismissal, string dismissalDesc, string highestLevel) {
            object[] results = this.Invoke("addOtherPersonalDetails", new object[] {
                        appNo,
                        convicted,
                        convictionDesc,
                        dismissal,
                        dismissalDesc,
                        highestLevel});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addOtherPersonalDetailsAsync(string appNo, bool convicted, string convictionDesc, bool dismissal, string dismissalDesc, string highestLevel) {
            this.addOtherPersonalDetailsAsync(appNo, convicted, convictionDesc, dismissal, dismissalDesc, highestLevel, null);
        }
        
        /// <remarks/>
        public void addOtherPersonalDetailsAsync(string appNo, bool convicted, string convictionDesc, bool dismissal, string dismissalDesc, string highestLevel, object userState) {
            if ((this.addOtherPersonalDetailsOperationCompleted == null)) {
                this.addOtherPersonalDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddOtherPersonalDetailsOperationCompleted);
            }
            this.InvokeAsync("addOtherPersonalDetails", new object[] {
                        appNo,
                        convicted,
                        convictionDesc,
                        dismissal,
                        dismissalDesc,
                        highestLevel}, this.addOtherPersonalDetailsOperationCompleted, userState);
        }
        
        private void OnaddOtherPersonalDetailsOperationCompleted(object arg) {
            if ((this.addOtherPersonalDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addOtherPersonalDetailsCompleted(this, new addOtherPersonalDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addPettyCashRequisitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addPettyCashRequisitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addPettyCashRequisitionLines(string docNo, string expenditure, decimal amount) {
            object[] results = this.Invoke("addPettyCashRequisitionLines", new object[] {
                        docNo,
                        expenditure,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addPettyCashRequisitionLinesAsync(string docNo, string expenditure, decimal amount) {
            this.addPettyCashRequisitionLinesAsync(docNo, expenditure, amount, null);
        }
        
        /// <remarks/>
        public void addPettyCashRequisitionLinesAsync(string docNo, string expenditure, decimal amount, object userState) {
            if ((this.addPettyCashRequisitionLinesOperationCompleted == null)) {
                this.addPettyCashRequisitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPettyCashRequisitionLinesOperationCompleted);
            }
            this.InvokeAsync("addPettyCashRequisitionLines", new object[] {
                        docNo,
                        expenditure,
                        amount}, this.addPettyCashRequisitionLinesOperationCompleted, userState);
        }
        
        private void OnaddPettyCashRequisitionLinesOperationCompleted(object arg) {
            if ((this.addPettyCashRequisitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPettyCashRequisitionLinesCompleted(this, new addPettyCashRequisitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addPettyCashSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addPettyCashSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addPettyCashSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("addPettyCashSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addPettyCashSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.addPettyCashSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void addPettyCashSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.addPettyCashSharepointLinksOperationCompleted == null)) {
                this.addPettyCashSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPettyCashSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("addPettyCashSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.addPettyCashSharepointLinksOperationCompleted, userState);
        }
        
        private void OnaddPettyCashSharepointLinksOperationCompleted(object arg) {
            if ((this.addPettyCashSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPettyCashSharepointLinksCompleted(this, new addPettyCashSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addPettyCashSurrenderSharepointL" +
            "inks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addPettyCashSurrenderSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addPettyCashSurrenderSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("addPettyCashSurrenderSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addPettyCashSurrenderSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.addPettyCashSurrenderSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void addPettyCashSurrenderSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.addPettyCashSurrenderSharepointLinksOperationCompleted == null)) {
                this.addPettyCashSurrenderSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPettyCashSurrenderSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("addPettyCashSurrenderSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.addPettyCashSurrenderSharepointLinksOperationCompleted, userState);
        }
        
        private void OnaddPettyCashSurrenderSharepointLinksOperationCompleted(object arg) {
            if ((this.addPettyCashSurrenderSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPettyCashSurrenderSharepointLinksCompleted(this, new addPettyCashSurrenderSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addProfessionalBodyForExternalAp" +
            "plcants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addProfessionalBodyForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addProfessionalBodyForExternalApplcants(string email, string pBody, string mNo, string mType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime rDate) {
            object[] results = this.Invoke("addProfessionalBodyForExternalApplcants", new object[] {
                        email,
                        pBody,
                        mNo,
                        mType,
                        rDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addProfessionalBodyForExternalApplcantsAsync(string email, string pBody, string mNo, string mType, System.DateTime rDate) {
            this.addProfessionalBodyForExternalApplcantsAsync(email, pBody, mNo, mType, rDate, null);
        }
        
        /// <remarks/>
        public void addProfessionalBodyForExternalApplcantsAsync(string email, string pBody, string mNo, string mType, System.DateTime rDate, object userState) {
            if ((this.addProfessionalBodyForExternalApplcantsOperationCompleted == null)) {
                this.addProfessionalBodyForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProfessionalBodyForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("addProfessionalBodyForExternalApplcants", new object[] {
                        email,
                        pBody,
                        mNo,
                        mType,
                        rDate}, this.addProfessionalBodyForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnaddProfessionalBodyForExternalApplcantsOperationCompleted(object arg) {
            if ((this.addProfessionalBodyForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProfessionalBodyForExternalApplcantsCompleted(this, new addProfessionalBodyForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addProfessionalBody", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addProfessionalBody_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addProfessionalBody(string appNo, string jobId, string empNo, string pBody, string mNo, string mType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime rDate) {
            object[] results = this.Invoke("addProfessionalBody", new object[] {
                        appNo,
                        jobId,
                        empNo,
                        pBody,
                        mNo,
                        mType,
                        rDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addProfessionalBodyAsync(string appNo, string jobId, string empNo, string pBody, string mNo, string mType, System.DateTime rDate) {
            this.addProfessionalBodyAsync(appNo, jobId, empNo, pBody, mNo, mType, rDate, null);
        }
        
        /// <remarks/>
        public void addProfessionalBodyAsync(string appNo, string jobId, string empNo, string pBody, string mNo, string mType, System.DateTime rDate, object userState) {
            if ((this.addProfessionalBodyOperationCompleted == null)) {
                this.addProfessionalBodyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProfessionalBodyOperationCompleted);
            }
            this.InvokeAsync("addProfessionalBody", new object[] {
                        appNo,
                        jobId,
                        empNo,
                        pBody,
                        mNo,
                        mType,
                        rDate}, this.addProfessionalBodyOperationCompleted, userState);
        }
        
        private void OnaddProfessionalBodyOperationCompleted(object arg) {
            if ((this.addProfessionalBodyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProfessionalBodyCompleted(this, new addProfessionalBodyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addProffessionalQualificationsFo" +
            "rExternalApplcants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addProffessionalQualificationsForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addProffessionalQualificationsForExternalApplcants(string email, string institution, string awardAttainment, string specialization, string gradeAttained, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate) {
            object[] results = this.Invoke("addProffessionalQualificationsForExternalApplcants", new object[] {
                        email,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addProffessionalQualificationsForExternalApplcantsAsync(string email, string institution, string awardAttainment, string specialization, string gradeAttained, System.DateTime fromDate, System.DateTime toDate) {
            this.addProffessionalQualificationsForExternalApplcantsAsync(email, institution, awardAttainment, specialization, gradeAttained, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void addProffessionalQualificationsForExternalApplcantsAsync(string email, string institution, string awardAttainment, string specialization, string gradeAttained, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.addProffessionalQualificationsForExternalApplcantsOperationCompleted == null)) {
                this.addProffessionalQualificationsForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProffessionalQualificationsForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("addProffessionalQualificationsForExternalApplcants", new object[] {
                        email,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        fromDate,
                        toDate}, this.addProffessionalQualificationsForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnaddProffessionalQualificationsForExternalApplcantsOperationCompleted(object arg) {
            if ((this.addProffessionalQualificationsForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProffessionalQualificationsForExternalApplcantsCompleted(this, new addProffessionalQualificationsForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addProffessionalQualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addProffessionalQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addProffessionalQualifications(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate) {
            object[] results = this.Invoke("addProffessionalQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addProffessionalQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate) {
            this.addProffessionalQualificationsAsync(appNo, institution, awardAttainment, specialization, gradeAttained, empNo, jobId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void addProffessionalQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.addProffessionalQualificationsOperationCompleted == null)) {
                this.addProffessionalQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProffessionalQualificationsOperationCompleted);
            }
            this.InvokeAsync("addProffessionalQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate}, this.addProffessionalQualificationsOperationCompleted, userState);
        }
        
        private void OnaddProffessionalQualificationsOperationCompleted(object arg) {
            if ((this.addProffessionalQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProffessionalQualificationsCompleted(this, new addProffessionalQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addProjectDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addProjectDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addProjectDetails(string docNo, string projectTemplateId, string workTemplate, string roadCode, string linkName, string constituency, decimal workLength) {
            object[] results = this.Invoke("addProjectDetails", new object[] {
                        docNo,
                        projectTemplateId,
                        workTemplate,
                        roadCode,
                        linkName,
                        constituency,
                        workLength});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addProjectDetailsAsync(string docNo, string projectTemplateId, string workTemplate, string roadCode, string linkName, string constituency, decimal workLength) {
            this.addProjectDetailsAsync(docNo, projectTemplateId, workTemplate, roadCode, linkName, constituency, workLength, null);
        }
        
        /// <remarks/>
        public void addProjectDetailsAsync(string docNo, string projectTemplateId, string workTemplate, string roadCode, string linkName, string constituency, decimal workLength, object userState) {
            if ((this.addProjectDetailsOperationCompleted == null)) {
                this.addProjectDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProjectDetailsOperationCompleted);
            }
            this.InvokeAsync("addProjectDetails", new object[] {
                        docNo,
                        projectTemplateId,
                        workTemplate,
                        roadCode,
                        linkName,
                        constituency,
                        workLength}, this.addProjectDetailsOperationCompleted, userState);
        }
        
        private void OnaddProjectDetailsOperationCompleted(object arg) {
            if ((this.addProjectDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProjectDetailsCompleted(this, new addProjectDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addPurchaseRequisitionSharepoint" +
            "Links", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addPurchaseRequisitionSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addPurchaseRequisitionSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("addPurchaseRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addPurchaseRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.addPurchaseRequisitionSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void addPurchaseRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.addPurchaseRequisitionSharepointLinksOperationCompleted == null)) {
                this.addPurchaseRequisitionSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPurchaseRequisitionSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("addPurchaseRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.addPurchaseRequisitionSharepointLinksOperationCompleted, userState);
        }
        
        private void OnaddPurchaseRequisitionSharepointLinksOperationCompleted(object arg) {
            if ((this.addPurchaseRequisitionSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPurchaseRequisitionSharepointLinksCompleted(this, new addPurchaseRequisitionSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addQualification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addQualification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addQualification(string idNumber, string qualificationType, string qualificationCode, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime qualificationFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime qualificationTo, string institution) {
            object[] results = this.Invoke("addQualification", new object[] {
                        idNumber,
                        qualificationType,
                        qualificationCode,
                        qualificationFrom,
                        qualificationTo,
                        institution});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addQualificationAsync(string idNumber, string qualificationType, string qualificationCode, System.DateTime qualificationFrom, System.DateTime qualificationTo, string institution) {
            this.addQualificationAsync(idNumber, qualificationType, qualificationCode, qualificationFrom, qualificationTo, institution, null);
        }
        
        /// <remarks/>
        public void addQualificationAsync(string idNumber, string qualificationType, string qualificationCode, System.DateTime qualificationFrom, System.DateTime qualificationTo, string institution, object userState) {
            if ((this.addQualificationOperationCompleted == null)) {
                this.addQualificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddQualificationOperationCompleted);
            }
            this.InvokeAsync("addQualification", new object[] {
                        idNumber,
                        qualificationType,
                        qualificationCode,
                        qualificationFrom,
                        qualificationTo,
                        institution}, this.addQualificationOperationCompleted, userState);
        }
        
        private void OnaddQualificationOperationCompleted(object arg) {
            if ((this.addQualificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addQualificationCompleted(this, new addQualificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addReferee(string idNumber, string refName, string refDesignation, string refInstitution, string refAddress, string refTelephone, string refEmail) {
            object[] results = this.Invoke("addReferee", new object[] {
                        idNumber,
                        refName,
                        refDesignation,
                        refInstitution,
                        refAddress,
                        refTelephone,
                        refEmail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addRefereeAsync(string idNumber, string refName, string refDesignation, string refInstitution, string refAddress, string refTelephone, string refEmail) {
            this.addRefereeAsync(idNumber, refName, refDesignation, refInstitution, refAddress, refTelephone, refEmail, null);
        }
        
        /// <remarks/>
        public void addRefereeAsync(string idNumber, string refName, string refDesignation, string refInstitution, string refAddress, string refTelephone, string refEmail, object userState) {
            if ((this.addRefereeOperationCompleted == null)) {
                this.addRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddRefereeOperationCompleted);
            }
            this.InvokeAsync("addReferee", new object[] {
                        idNumber,
                        refName,
                        refDesignation,
                        refInstitution,
                        refAddress,
                        refTelephone,
                        refEmail}, this.addRefereeOperationCompleted, userState);
        }
        
        private void OnaddRefereeOperationCompleted(object arg) {
            if ((this.addRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addRefereeCompleted(this, new addRefereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addStaffClaimSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addStaffClaimSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addStaffClaimSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("addStaffClaimSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addStaffClaimSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.addStaffClaimSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void addStaffClaimSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.addStaffClaimSharepointLinksOperationCompleted == null)) {
                this.addStaffClaimSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddStaffClaimSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("addStaffClaimSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.addStaffClaimSharepointLinksOperationCompleted, userState);
        }
        
        private void OnaddStaffClaimSharepointLinksOperationCompleted(object arg) {
            if ((this.addStaffClaimSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addStaffClaimSharepointLinksCompleted(this, new addStaffClaimSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addStoreRequsitionSharepointLink" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addStoreRequsitionSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addStoreRequsitionSharepointLinks(string storerequsitionnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("addStoreRequsitionSharepointLinks", new object[] {
                        storerequsitionnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addStoreRequsitionSharepointLinksAsync(string storerequsitionnumber, string filename, string sharepointlink) {
            this.addStoreRequsitionSharepointLinksAsync(storerequsitionnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void addStoreRequsitionSharepointLinksAsync(string storerequsitionnumber, string filename, string sharepointlink, object userState) {
            if ((this.addStoreRequsitionSharepointLinksOperationCompleted == null)) {
                this.addStoreRequsitionSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddStoreRequsitionSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("addStoreRequsitionSharepointLinks", new object[] {
                        storerequsitionnumber,
                        filename,
                        sharepointlink}, this.addStoreRequsitionSharepointLinksOperationCompleted, userState);
        }
        
        private void OnaddStoreRequsitionSharepointLinksOperationCompleted(object arg) {
            if ((this.addStoreRequsitionSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addStoreRequsitionSharepointLinksCompleted(this, new addStoreRequsitionSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addTeamMember1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addTeamMember1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addTeamMember1(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string constituency, string job, string jobTaskNo, string region, bool lead, int modeoftransport, int noofdrivers, decimal mileage) {
            object[] results = this.Invoke("addTeamMember1", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        constituency,
                        job,
                        jobTaskNo,
                        region,
                        lead,
                        modeoftransport,
                        noofdrivers,
                        mileage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addTeamMember1Async(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string constituency, string job, string jobTaskNo, string region, bool lead, int modeoftransport, int noofdrivers, decimal mileage) {
            this.addTeamMember1Async(employeeNo, imprestNo, destinationTown, voteItem, teamMember, noOfDays, constituency, job, jobTaskNo, region, lead, modeoftransport, noofdrivers, mileage, null);
        }
        
        /// <remarks/>
        public void addTeamMember1Async(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string constituency, string job, string jobTaskNo, string region, bool lead, int modeoftransport, int noofdrivers, decimal mileage, object userState) {
            if ((this.addTeamMember1OperationCompleted == null)) {
                this.addTeamMember1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTeamMember1OperationCompleted);
            }
            this.InvokeAsync("addTeamMember1", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        constituency,
                        job,
                        jobTaskNo,
                        region,
                        lead,
                        modeoftransport,
                        noofdrivers,
                        mileage}, this.addTeamMember1OperationCompleted, userState);
        }
        
        private void OnaddTeamMember1OperationCompleted(object arg) {
            if ((this.addTeamMember1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTeamMember1Completed(this, new addTeamMember1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addTeamMember", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addTeamMember_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addTeamMember(string employeeNo, string imprestNo, string destinationTown, decimal transportCost, decimal mileage, decimal noofDays) {
            object[] results = this.Invoke("addTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        transportCost,
                        mileage,
                        noofDays});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, decimal transportCost, decimal mileage, decimal noofDays) {
            this.addTeamMemberAsync(employeeNo, imprestNo, destinationTown, transportCost, mileage, noofDays, null);
        }
        
        /// <remarks/>
        public void addTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, decimal transportCost, decimal mileage, decimal noofDays, object userState) {
            if ((this.addTeamMemberOperationCompleted == null)) {
                this.addTeamMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTeamMemberOperationCompleted);
            }
            this.InvokeAsync("addTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        transportCost,
                        mileage,
                        noofDays}, this.addTeamMemberOperationCompleted, userState);
        }
        
        private void OnaddTeamMemberOperationCompleted(object arg) {
            if ((this.addTeamMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTeamMemberCompleted(this, new addTeamMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addTrainingAttendedForExternalAp" +
            "plcants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addTrainingAttendedForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addTrainingAttendedForExternalApplcants([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate, string institution, string courseName, string email, string attained) {
            object[] results = this.Invoke("addTrainingAttendedForExternalApplcants", new object[] {
                        fromDate,
                        toDate,
                        institution,
                        courseName,
                        email,
                        attained});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addTrainingAttendedForExternalApplcantsAsync(System.DateTime fromDate, System.DateTime toDate, string institution, string courseName, string email, string attained) {
            this.addTrainingAttendedForExternalApplcantsAsync(fromDate, toDate, institution, courseName, email, attained, null);
        }
        
        /// <remarks/>
        public void addTrainingAttendedForExternalApplcantsAsync(System.DateTime fromDate, System.DateTime toDate, string institution, string courseName, string email, string attained, object userState) {
            if ((this.addTrainingAttendedForExternalApplcantsOperationCompleted == null)) {
                this.addTrainingAttendedForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrainingAttendedForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("addTrainingAttendedForExternalApplcants", new object[] {
                        fromDate,
                        toDate,
                        institution,
                        courseName,
                        email,
                        attained}, this.addTrainingAttendedForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnaddTrainingAttendedForExternalApplcantsOperationCompleted(object arg) {
            if ((this.addTrainingAttendedForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrainingAttendedForExternalApplcantsCompleted(this, new addTrainingAttendedForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addTrainingAttended", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addTrainingAttended_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addTrainingAttended([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate, string jobId, string employeeNo, string institution, string courseName, string appNo, string attained) {
            object[] results = this.Invoke("addTrainingAttended", new object[] {
                        fromDate,
                        toDate,
                        jobId,
                        employeeNo,
                        institution,
                        courseName,
                        appNo,
                        attained});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addTrainingAttendedAsync(System.DateTime fromDate, System.DateTime toDate, string jobId, string employeeNo, string institution, string courseName, string appNo, string attained) {
            this.addTrainingAttendedAsync(fromDate, toDate, jobId, employeeNo, institution, courseName, appNo, attained, null);
        }
        
        /// <remarks/>
        public void addTrainingAttendedAsync(System.DateTime fromDate, System.DateTime toDate, string jobId, string employeeNo, string institution, string courseName, string appNo, string attained, object userState) {
            if ((this.addTrainingAttendedOperationCompleted == null)) {
                this.addTrainingAttendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrainingAttendedOperationCompleted);
            }
            this.InvokeAsync("addTrainingAttended", new object[] {
                        fromDate,
                        toDate,
                        jobId,
                        employeeNo,
                        institution,
                        courseName,
                        appNo,
                        attained}, this.addTrainingAttendedOperationCompleted, userState);
        }
        
        private void OnaddTrainingAttendedOperationCompleted(object arg) {
            if ((this.addTrainingAttendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrainingAttendedCompleted(this, new addTrainingAttendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addTrainingCost2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addTrainingCost2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addTrainingCost2(string docNo, int costcategory, string costitem, string itemcategory, string item, decimal unitcost, int quantity) {
            object[] results = this.Invoke("addTrainingCost2", new object[] {
                        docNo,
                        costcategory,
                        costitem,
                        itemcategory,
                        item,
                        unitcost,
                        quantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addTrainingCost2Async(string docNo, int costcategory, string costitem, string itemcategory, string item, decimal unitcost, int quantity) {
            this.addTrainingCost2Async(docNo, costcategory, costitem, itemcategory, item, unitcost, quantity, null);
        }
        
        /// <remarks/>
        public void addTrainingCost2Async(string docNo, int costcategory, string costitem, string itemcategory, string item, decimal unitcost, int quantity, object userState) {
            if ((this.addTrainingCost2OperationCompleted == null)) {
                this.addTrainingCost2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrainingCost2OperationCompleted);
            }
            this.InvokeAsync("addTrainingCost2", new object[] {
                        docNo,
                        costcategory,
                        costitem,
                        itemcategory,
                        item,
                        unitcost,
                        quantity}, this.addTrainingCost2OperationCompleted, userState);
        }
        
        private void OnaddTrainingCost2OperationCompleted(object arg) {
            if ((this.addTrainingCost2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrainingCost2Completed(this, new addTrainingCost2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addTrainingCost", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addTrainingCost_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addTrainingCost(string docNo, int costcategory, string costItem, decimal unitcost, int quantity) {
            object[] results = this.Invoke("addTrainingCost", new object[] {
                        docNo,
                        costcategory,
                        costItem,
                        unitcost,
                        quantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addTrainingCostAsync(string docNo, int costcategory, string costItem, decimal unitcost, int quantity) {
            this.addTrainingCostAsync(docNo, costcategory, costItem, unitcost, quantity, null);
        }
        
        /// <remarks/>
        public void addTrainingCostAsync(string docNo, int costcategory, string costItem, decimal unitcost, int quantity, object userState) {
            if ((this.addTrainingCostOperationCompleted == null)) {
                this.addTrainingCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrainingCostOperationCompleted);
            }
            this.InvokeAsync("addTrainingCost", new object[] {
                        docNo,
                        costcategory,
                        costItem,
                        unitcost,
                        quantity}, this.addTrainingCostOperationCompleted, userState);
        }
        
        private void OnaddTrainingCostOperationCompleted(object arg) {
            if ((this.addTrainingCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrainingCostCompleted(this, new addTrainingCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addTrainingParticipants2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addTrainingParticipants2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addTrainingParticipants2(string type, string participantEmpno, decimal noOfDays, string reqNo) {
            object[] results = this.Invoke("addTrainingParticipants2", new object[] {
                        type,
                        participantEmpno,
                        noOfDays,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addTrainingParticipants2Async(string type, string participantEmpno, decimal noOfDays, string reqNo) {
            this.addTrainingParticipants2Async(type, participantEmpno, noOfDays, reqNo, null);
        }
        
        /// <remarks/>
        public void addTrainingParticipants2Async(string type, string participantEmpno, decimal noOfDays, string reqNo, object userState) {
            if ((this.addTrainingParticipants2OperationCompleted == null)) {
                this.addTrainingParticipants2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrainingParticipants2OperationCompleted);
            }
            this.InvokeAsync("addTrainingParticipants2", new object[] {
                        type,
                        participantEmpno,
                        noOfDays,
                        reqNo}, this.addTrainingParticipants2OperationCompleted, userState);
        }
        
        private void OnaddTrainingParticipants2OperationCompleted(object arg) {
            if ((this.addTrainingParticipants2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrainingParticipants2Completed(this, new addTrainingParticipants2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addTrainingParticipants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addTrainingParticipants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addTrainingParticipants(string type, string participantEmpno, string destination, decimal noOfDays, string reqNo) {
            object[] results = this.Invoke("addTrainingParticipants", new object[] {
                        type,
                        participantEmpno,
                        destination,
                        noOfDays,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addTrainingParticipantsAsync(string type, string participantEmpno, string destination, decimal noOfDays, string reqNo) {
            this.addTrainingParticipantsAsync(type, participantEmpno, destination, noOfDays, reqNo, null);
        }
        
        /// <remarks/>
        public void addTrainingParticipantsAsync(string type, string participantEmpno, string destination, decimal noOfDays, string reqNo, object userState) {
            if ((this.addTrainingParticipantsOperationCompleted == null)) {
                this.addTrainingParticipantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrainingParticipantsOperationCompleted);
            }
            this.InvokeAsync("addTrainingParticipants", new object[] {
                        type,
                        participantEmpno,
                        destination,
                        noOfDays,
                        reqNo}, this.addTrainingParticipantsOperationCompleted, userState);
        }
        
        private void OnaddTrainingParticipantsOperationCompleted(object arg) {
            if ((this.addTrainingParticipantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrainingParticipantsCompleted(this, new addTrainingParticipantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:addTrainingRequisitionSharepoint" +
            "Links", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="addTrainingRequisitionSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string addTrainingRequisitionSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("addTrainingRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addTrainingRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.addTrainingRequisitionSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void addTrainingRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.addTrainingRequisitionSharepointLinksOperationCompleted == null)) {
                this.addTrainingRequisitionSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTrainingRequisitionSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("addTrainingRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.addTrainingRequisitionSharepointLinksOperationCompleted, userState);
        }
        
        private void OnaddTrainingRequisitionSharepointLinksOperationCompleted(object arg) {
            if ((this.addTrainingRequisitionSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTrainingRequisitionSharepointLinksCompleted(this, new addTrainingRequisitionSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:applyOnline", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="applyOnline_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string applyOnline(string email, string jobId) {
            object[] results = this.Invoke("applyOnline", new object[] {
                        email,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void applyOnlineAsync(string email, string jobId) {
            this.applyOnlineAsync(email, jobId, null);
        }
        
        /// <remarks/>
        public void applyOnlineAsync(string email, string jobId, object userState) {
            if ((this.applyOnlineOperationCompleted == null)) {
                this.applyOnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapplyOnlineOperationCompleted);
            }
            this.InvokeAsync("applyOnline", new object[] {
                        email,
                        jobId}, this.applyOnlineOperationCompleted, userState);
        }
        
        private void OnapplyOnlineOperationCompleted(object arg) {
            if ((this.applyOnlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.applyOnlineCompleted(this, new applyOnlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:apply", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="apply_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string apply(string idNumber, string jobId) {
            object[] results = this.Invoke("apply", new object[] {
                        idNumber,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void applyAsync(string idNumber, string jobId) {
            this.applyAsync(idNumber, jobId, null);
        }
        
        /// <remarks/>
        public void applyAsync(string idNumber, string jobId, object userState) {
            if ((this.applyOperationCompleted == null)) {
                this.applyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapplyOperationCompleted);
            }
            this.InvokeAsync("apply", new object[] {
                        idNumber,
                        jobId}, this.applyOperationCompleted, userState);
        }
        
        private void OnapplyOperationCompleted(object arg) {
            if ((this.applyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.applyCompleted(this, new applyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:applyexternalHrJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="applyexternalHrJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string applyexternalHrJobs(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails) {
            object[] results = this.Invoke("applyexternalHrJobs", new object[] {
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        phoneNo,
                        email,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void applyexternalHrJobsAsync(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails) {
            this.applyexternalHrJobsAsync(jobId, surname, firstname, lastname, title, dOB, gender, disabled, disabilityDetails, county, nationality, maritalStatus, religion, idNumber, phoneNo, email, ethinc, postalAddress, postalAddressCode, city, expected_salary, registrationDetails, null);
        }
        
        /// <remarks/>
        public void applyexternalHrJobsAsync(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    object userState) {
            if ((this.applyexternalHrJobsOperationCompleted == null)) {
                this.applyexternalHrJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapplyexternalHrJobsOperationCompleted);
            }
            this.InvokeAsync("applyexternalHrJobs", new object[] {
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        phoneNo,
                        email,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails}, this.applyexternalHrJobsOperationCompleted, userState);
        }
        
        private void OnapplyexternalHrJobsOperationCompleted(object arg) {
            if ((this.applyexternalHrJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.applyexternalHrJobsCompleted(this, new applyexternalHrJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:applyexternalJob", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="applyexternalJob_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string applyexternalJob(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails) {
            object[] results = this.Invoke("applyexternalJob", new object[] {
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        phoneNo,
                        email,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void applyexternalJobAsync(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails) {
            this.applyexternalJobAsync(jobId, surname, firstname, lastname, title, dOB, gender, disabled, disabilityDetails, county, nationality, maritalStatus, religion, idNumber, phoneNo, email, ethinc, postalAddress, postalAddressCode, city, expected_salary, registrationDetails, null);
        }
        
        /// <remarks/>
        public void applyexternalJobAsync(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    object userState) {
            if ((this.applyexternalJobOperationCompleted == null)) {
                this.applyexternalJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapplyexternalJobOperationCompleted);
            }
            this.InvokeAsync("applyexternalJob", new object[] {
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        phoneNo,
                        email,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails}, this.applyexternalJobOperationCompleted, userState);
        }
        
        private void OnapplyexternalJobOperationCompleted(object arg) {
            if ((this.applyexternalJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.applyexternalJobCompleted(this, new applyexternalJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:applyinternalHrJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="applyinternalHrJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string applyinternalHrJobs(
                    string docNo, 
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string phoneNo, 
                    string altPhoneNo, 
                    string email, 
                    string altEmail, 
                    string empNo, 
                    string dpt, 
                    string currentPosition, 
                    string jobGroup, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfFirstAppointment, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime lastPromotionDate, 
                    string ethinc) {
            object[] results = this.Invoke("applyinternalHrJobs", new object[] {
                        docNo,
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        phoneNo,
                        altPhoneNo,
                        email,
                        altEmail,
                        empNo,
                        dpt,
                        currentPosition,
                        jobGroup,
                        dateOfFirstAppointment,
                        lastPromotionDate,
                        ethinc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void applyinternalHrJobsAsync(
                    string docNo, 
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string phoneNo, 
                    string altPhoneNo, 
                    string email, 
                    string altEmail, 
                    string empNo, 
                    string dpt, 
                    string currentPosition, 
                    string jobGroup, 
                    System.DateTime dateOfFirstAppointment, 
                    System.DateTime lastPromotionDate, 
                    string ethinc) {
            this.applyinternalHrJobsAsync(docNo, jobId, surname, firstname, lastname, title, dOB, gender, disabled, disabilityDetails, county, nationality, maritalStatus, religion, idNumber, nhifNo, nssfNo, pinNo, phoneNo, altPhoneNo, email, altEmail, empNo, dpt, currentPosition, jobGroup, dateOfFirstAppointment, lastPromotionDate, ethinc, null);
        }
        
        /// <remarks/>
        public void applyinternalHrJobsAsync(
                    string docNo, 
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string phoneNo, 
                    string altPhoneNo, 
                    string email, 
                    string altEmail, 
                    string empNo, 
                    string dpt, 
                    string currentPosition, 
                    string jobGroup, 
                    System.DateTime dateOfFirstAppointment, 
                    System.DateTime lastPromotionDate, 
                    string ethinc, 
                    object userState) {
            if ((this.applyinternalHrJobsOperationCompleted == null)) {
                this.applyinternalHrJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapplyinternalHrJobsOperationCompleted);
            }
            this.InvokeAsync("applyinternalHrJobs", new object[] {
                        docNo,
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        phoneNo,
                        altPhoneNo,
                        email,
                        altEmail,
                        empNo,
                        dpt,
                        currentPosition,
                        jobGroup,
                        dateOfFirstAppointment,
                        lastPromotionDate,
                        ethinc}, this.applyinternalHrJobsOperationCompleted, userState);
        }
        
        private void OnapplyinternalHrJobsOperationCompleted(object arg) {
            if ((this.applyinternalHrJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.applyinternalHrJobsCompleted(this, new applyinternalHrJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:cancelImprestApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="cancelImprestApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string cancelImprestApprovalRequest(string employeeNo, string imprestNo) {
            object[] results = this.Invoke("cancelImprestApprovalRequest", new object[] {
                        employeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelImprestApprovalRequestAsync(string employeeNo, string imprestNo) {
            this.cancelImprestApprovalRequestAsync(employeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void cancelImprestApprovalRequestAsync(string employeeNo, string imprestNo, object userState) {
            if ((this.cancelImprestApprovalRequestOperationCompleted == null)) {
                this.cancelImprestApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelImprestApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("cancelImprestApprovalRequest", new object[] {
                        employeeNo,
                        imprestNo}, this.cancelImprestApprovalRequestOperationCompleted, userState);
        }
        
        private void OncancelImprestApprovalRequestOperationCompleted(object arg) {
            if ((this.cancelImprestApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelImprestApprovalRequestCompleted(this, new cancelImprestApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:cancelPasApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="cancelPasApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void cancelPasApproval(string docNo) {
            this.Invoke("cancelPasApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void cancelPasApprovalAsync(string docNo) {
            this.cancelPasApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void cancelPasApprovalAsync(string docNo, object userState) {
            if ((this.cancelPasApprovalOperationCompleted == null)) {
                this.cancelPasApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelPasApprovalOperationCompleted);
            }
            this.InvokeAsync("cancelPasApproval", new object[] {
                        docNo}, this.cancelPasApprovalOperationCompleted, userState);
        }
        
        private void OncancelPasApprovalOperationCompleted(object arg) {
            if ((this.cancelPasApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelPasApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:cancelPettyCashSurrenderApproval" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="cancelPettyCashSurrenderApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string cancelPettyCashSurrenderApproval(string employeeNo, string recordNo) {
            object[] results = this.Invoke("cancelPettyCashSurrenderApproval", new object[] {
                        employeeNo,
                        recordNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelPettyCashSurrenderApprovalAsync(string employeeNo, string recordNo) {
            this.cancelPettyCashSurrenderApprovalAsync(employeeNo, recordNo, null);
        }
        
        /// <remarks/>
        public void cancelPettyCashSurrenderApprovalAsync(string employeeNo, string recordNo, object userState) {
            if ((this.cancelPettyCashSurrenderApprovalOperationCompleted == null)) {
                this.cancelPettyCashSurrenderApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelPettyCashSurrenderApprovalOperationCompleted);
            }
            this.InvokeAsync("cancelPettyCashSurrenderApproval", new object[] {
                        employeeNo,
                        recordNo}, this.cancelPettyCashSurrenderApprovalOperationCompleted, userState);
        }
        
        private void OncancelPettyCashSurrenderApprovalOperationCompleted(object arg) {
            if ((this.cancelPettyCashSurrenderApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelPettyCashSurrenderApprovalCompleted(this, new cancelPettyCashSurrenderApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:cancelRecordApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="cancelRecordApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string cancelRecordApproval(string employeeNo, string recordNo, string recordType) {
            object[] results = this.Invoke("cancelRecordApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelRecordApprovalAsync(string employeeNo, string recordNo, string recordType) {
            this.cancelRecordApprovalAsync(employeeNo, recordNo, recordType, null);
        }
        
        /// <remarks/>
        public void cancelRecordApprovalAsync(string employeeNo, string recordNo, string recordType, object userState) {
            if ((this.cancelRecordApprovalOperationCompleted == null)) {
                this.cancelRecordApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelRecordApprovalOperationCompleted);
            }
            this.InvokeAsync("cancelRecordApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType}, this.cancelRecordApprovalOperationCompleted, userState);
        }
        
        private void OncancelRecordApprovalOperationCompleted(object arg) {
            if ((this.cancelRecordApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelRecordApprovalCompleted(this, new cancelRecordApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:cancelTrainingRequestApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="cancelTrainingRequestApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string cancelTrainingRequestApproval(string employeeNo, string recordNo) {
            object[] results = this.Invoke("cancelTrainingRequestApproval", new object[] {
                        employeeNo,
                        recordNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelTrainingRequestApprovalAsync(string employeeNo, string recordNo) {
            this.cancelTrainingRequestApprovalAsync(employeeNo, recordNo, null);
        }
        
        /// <remarks/>
        public void cancelTrainingRequestApprovalAsync(string employeeNo, string recordNo, object userState) {
            if ((this.cancelTrainingRequestApprovalOperationCompleted == null)) {
                this.cancelTrainingRequestApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelTrainingRequestApprovalOperationCompleted);
            }
            this.InvokeAsync("cancelTrainingRequestApproval", new object[] {
                        employeeNo,
                        recordNo}, this.cancelTrainingRequestApprovalOperationCompleted, userState);
        }
        
        private void OncancelTrainingRequestApprovalOperationCompleted(object arg) {
            if ((this.cancelTrainingRequestApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelTrainingRequestApprovalCompleted(this, new cancelTrainingRequestApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:changePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="changePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string changePassword(string employeeNo, string currentPassword, string newPassword, string confirmPassword) {
            object[] results = this.Invoke("changePassword", new object[] {
                        employeeNo,
                        currentPassword,
                        newPassword,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void changePasswordAsync(string employeeNo, string currentPassword, string newPassword, string confirmPassword) {
            this.changePasswordAsync(employeeNo, currentPassword, newPassword, confirmPassword, null);
        }
        
        /// <remarks/>
        public void changePasswordAsync(string employeeNo, string currentPassword, string newPassword, string confirmPassword, object userState) {
            if ((this.changePasswordOperationCompleted == null)) {
                this.changePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePasswordOperationCompleted);
            }
            this.InvokeAsync("changePassword", new object[] {
                        employeeNo,
                        currentPassword,
                        newPassword,
                        confirmPassword}, this.changePasswordOperationCompleted, userState);
        }
        
        private void OnchangePasswordOperationCompleted(object arg) {
            if ((this.changePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePasswordCompleted(this, new changePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createDependantsChange", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createDependantsChange_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createDependantsChange([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime applicationDate, string empNo, string requestorID, string cardNo, string dependantNo, string strDescription, int doctype) {
            object[] results = this.Invoke("createDependantsChange", new object[] {
                        applicationDate,
                        empNo,
                        requestorID,
                        cardNo,
                        dependantNo,
                        strDescription,
                        doctype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createDependantsChangeAsync(System.DateTime applicationDate, string empNo, string requestorID, string cardNo, string dependantNo, string strDescription, int doctype) {
            this.createDependantsChangeAsync(applicationDate, empNo, requestorID, cardNo, dependantNo, strDescription, doctype, null);
        }
        
        /// <remarks/>
        public void createDependantsChangeAsync(System.DateTime applicationDate, string empNo, string requestorID, string cardNo, string dependantNo, string strDescription, int doctype, object userState) {
            if ((this.createDependantsChangeOperationCompleted == null)) {
                this.createDependantsChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDependantsChangeOperationCompleted);
            }
            this.InvokeAsync("createDependantsChange", new object[] {
                        applicationDate,
                        empNo,
                        requestorID,
                        cardNo,
                        dependantNo,
                        strDescription,
                        doctype}, this.createDependantsChangeOperationCompleted, userState);
        }
        
        private void OncreateDependantsChangeOperationCompleted(object arg) {
            if ((this.createDependantsChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDependantsChangeCompleted(this, new createDependantsChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createEmployeeExitVoucher", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createEmployeeExitVoucher_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createEmployeeExitVoucher(string empNo, string reasons, string description, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime lastWorkDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime noticeDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime empExitDate) {
            object[] results = this.Invoke("createEmployeeExitVoucher", new object[] {
                        empNo,
                        reasons,
                        description,
                        lastWorkDate,
                        noticeDate,
                        empExitDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createEmployeeExitVoucherAsync(string empNo, string reasons, string description, System.DateTime lastWorkDate, System.DateTime noticeDate, System.DateTime empExitDate) {
            this.createEmployeeExitVoucherAsync(empNo, reasons, description, lastWorkDate, noticeDate, empExitDate, null);
        }
        
        /// <remarks/>
        public void createEmployeeExitVoucherAsync(string empNo, string reasons, string description, System.DateTime lastWorkDate, System.DateTime noticeDate, System.DateTime empExitDate, object userState) {
            if ((this.createEmployeeExitVoucherOperationCompleted == null)) {
                this.createEmployeeExitVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateEmployeeExitVoucherOperationCompleted);
            }
            this.InvokeAsync("createEmployeeExitVoucher", new object[] {
                        empNo,
                        reasons,
                        description,
                        lastWorkDate,
                        noticeDate,
                        empExitDate}, this.createEmployeeExitVoucherOperationCompleted, userState);
        }
        
        private void OncreateEmployeeExitVoucherOperationCompleted(object arg) {
            if ((this.createEmployeeExitVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createEmployeeExitVoucherCompleted(this, new createEmployeeExitVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createFeedbackForm", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createFeedbackForm_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createFeedbackForm(string employee_No, string description, int type) {
            object[] results = this.Invoke("createFeedbackForm", new object[] {
                        employee_No,
                        description,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createFeedbackFormAsync(string employee_No, string description, int type) {
            this.createFeedbackFormAsync(employee_No, description, type, null);
        }
        
        /// <remarks/>
        public void createFeedbackFormAsync(string employee_No, string description, int type, object userState) {
            if ((this.createFeedbackFormOperationCompleted == null)) {
                this.createFeedbackFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateFeedbackFormOperationCompleted);
            }
            this.InvokeAsync("createFeedbackForm", new object[] {
                        employee_No,
                        description,
                        type}, this.createFeedbackFormOperationCompleted, userState);
        }
        
        private void OncreateFeedbackFormOperationCompleted(object arg) {
            if ((this.createFeedbackFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createFeedbackFormCompleted(this, new createFeedbackFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createFleetRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createFleetRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createFleetRequisition(string employeeNo, string requisitionNo, string from, string destination, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfTrip, System.DateTime timeOut, string journeyRoute, decimal noOfDaysRequested, string purposeOfTrip, string comments, string imprest, decimal hourstrip, int requisitiontype, string description, int capacity) {
            object[] results = this.Invoke("createFleetRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        from,
                        destination,
                        dateOfTrip,
                        timeOut,
                        journeyRoute,
                        noOfDaysRequested,
                        purposeOfTrip,
                        comments,
                        imprest,
                        hourstrip,
                        requisitiontype,
                        description,
                        capacity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createFleetRequisitionAsync(string employeeNo, string requisitionNo, string from, string destination, System.DateTime dateOfTrip, System.DateTime timeOut, string journeyRoute, decimal noOfDaysRequested, string purposeOfTrip, string comments, string imprest, decimal hourstrip, int requisitiontype, string description, int capacity) {
            this.createFleetRequisitionAsync(employeeNo, requisitionNo, from, destination, dateOfTrip, timeOut, journeyRoute, noOfDaysRequested, purposeOfTrip, comments, imprest, hourstrip, requisitiontype, description, capacity, null);
        }
        
        /// <remarks/>
        public void createFleetRequisitionAsync(
                    string employeeNo, 
                    string requisitionNo, 
                    string from, 
                    string destination, 
                    System.DateTime dateOfTrip, 
                    System.DateTime timeOut, 
                    string journeyRoute, 
                    decimal noOfDaysRequested, 
                    string purposeOfTrip, 
                    string comments, 
                    string imprest, 
                    decimal hourstrip, 
                    int requisitiontype, 
                    string description, 
                    int capacity, 
                    object userState) {
            if ((this.createFleetRequisitionOperationCompleted == null)) {
                this.createFleetRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateFleetRequisitionOperationCompleted);
            }
            this.InvokeAsync("createFleetRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        from,
                        destination,
                        dateOfTrip,
                        timeOut,
                        journeyRoute,
                        noOfDaysRequested,
                        purposeOfTrip,
                        comments,
                        imprest,
                        hourstrip,
                        requisitiontype,
                        description,
                        capacity}, this.createFleetRequisitionOperationCompleted, userState);
        }
        
        private void OncreateFleetRequisitionOperationCompleted(object arg) {
            if ((this.createFleetRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createFleetRequisitionCompleted(this, new createFleetRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createIctRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createIctRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createIctRequest(string empNo, string description, string region, string tdepatrment, string tcategory) {
            object[] results = this.Invoke("createIctRequest", new object[] {
                        empNo,
                        description,
                        region,
                        tdepatrment,
                        tcategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createIctRequestAsync(string empNo, string description, string region, string tdepatrment, string tcategory) {
            this.createIctRequestAsync(empNo, description, region, tdepatrment, tcategory, null);
        }
        
        /// <remarks/>
        public void createIctRequestAsync(string empNo, string description, string region, string tdepatrment, string tcategory, object userState) {
            if ((this.createIctRequestOperationCompleted == null)) {
                this.createIctRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateIctRequestOperationCompleted);
            }
            this.InvokeAsync("createIctRequest", new object[] {
                        empNo,
                        description,
                        region,
                        tdepatrment,
                        tcategory}, this.createIctRequestOperationCompleted, userState);
        }
        
        private void OncreateIctRequestOperationCompleted(object arg) {
            if ((this.createIctRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createIctRequestCompleted(this, new createIctRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createImprestSurrender1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createImprestSurrender1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createImprestSurrender1(string employeeNo) {
            object[] results = this.Invoke("createImprestSurrender1", new object[] {
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createImprestSurrender1Async(string employeeNo) {
            this.createImprestSurrender1Async(employeeNo, null);
        }
        
        /// <remarks/>
        public void createImprestSurrender1Async(string employeeNo, object userState) {
            if ((this.createImprestSurrender1OperationCompleted == null)) {
                this.createImprestSurrender1OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateImprestSurrender1OperationCompleted);
            }
            this.InvokeAsync("createImprestSurrender1", new object[] {
                        employeeNo}, this.createImprestSurrender1OperationCompleted, userState);
        }
        
        private void OncreateImprestSurrender1OperationCompleted(object arg) {
            if ((this.createImprestSurrender1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createImprestSurrender1Completed(this, new createImprestSurrender1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createImprestSurrender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createImprestSurrender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createImprestSurrender(string employeeNo, string imprestNo, string surrenderNo, string region, string username) {
            object[] results = this.Invoke("createImprestSurrender", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo,
                        region,
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createImprestSurrenderAsync(string employeeNo, string imprestNo, string surrenderNo, string region, string username) {
            this.createImprestSurrenderAsync(employeeNo, imprestNo, surrenderNo, region, username, null);
        }
        
        /// <remarks/>
        public void createImprestSurrenderAsync(string employeeNo, string imprestNo, string surrenderNo, string region, string username, object userState) {
            if ((this.createImprestSurrenderOperationCompleted == null)) {
                this.createImprestSurrenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateImprestSurrenderOperationCompleted);
            }
            this.InvokeAsync("createImprestSurrender", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo,
                        region,
                        username}, this.createImprestSurrenderOperationCompleted, userState);
        }
        
        private void OncreateImprestSurrenderOperationCompleted(object arg) {
            if ((this.createImprestSurrenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createImprestSurrenderCompleted(this, new createImprestSurrenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createLPODirectly", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createLPODirectly_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createLPODirectly(string documentNo, string loggedINuser) {
            object[] results = this.Invoke("createLPODirectly", new object[] {
                        documentNo,
                        loggedINuser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createLPODirectlyAsync(string documentNo, string loggedINuser) {
            this.createLPODirectlyAsync(documentNo, loggedINuser, null);
        }
        
        /// <remarks/>
        public void createLPODirectlyAsync(string documentNo, string loggedINuser, object userState) {
            if ((this.createLPODirectlyOperationCompleted == null)) {
                this.createLPODirectlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateLPODirectlyOperationCompleted);
            }
            this.InvokeAsync("createLPODirectly", new object[] {
                        documentNo,
                        loggedINuser}, this.createLPODirectlyOperationCompleted, userState);
        }
        
        private void OncreateLPODirectlyOperationCompleted(object arg) {
            if ((this.createLPODirectlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createLPODirectlyCompleted(this, new createLPODirectlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createLoansApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createLoansApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createLoansApplication([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime applicationDate, string empNo, string loanProductType, decimal amountRequested, string reason, int repaymentPeriod) {
            object[] results = this.Invoke("createLoansApplication", new object[] {
                        applicationDate,
                        empNo,
                        loanProductType,
                        amountRequested,
                        reason,
                        repaymentPeriod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createLoansApplicationAsync(System.DateTime applicationDate, string empNo, string loanProductType, decimal amountRequested, string reason, int repaymentPeriod) {
            this.createLoansApplicationAsync(applicationDate, empNo, loanProductType, amountRequested, reason, repaymentPeriod, null);
        }
        
        /// <remarks/>
        public void createLoansApplicationAsync(System.DateTime applicationDate, string empNo, string loanProductType, decimal amountRequested, string reason, int repaymentPeriod, object userState) {
            if ((this.createLoansApplicationOperationCompleted == null)) {
                this.createLoansApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateLoansApplicationOperationCompleted);
            }
            this.InvokeAsync("createLoansApplication", new object[] {
                        applicationDate,
                        empNo,
                        loanProductType,
                        amountRequested,
                        reason,
                        repaymentPeriod}, this.createLoansApplicationOperationCompleted, userState);
        }
        
        private void OncreateLoansApplicationOperationCompleted(object arg) {
            if ((this.createLoansApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createLoansApplicationCompleted(this, new createLoansApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createNewPaymentVoucher", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createNewPaymentVoucher_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createNewPaymentVoucher(string docNo, string empNo, string narration, string adminUnit) {
            object[] results = this.Invoke("createNewPaymentVoucher", new object[] {
                        docNo,
                        empNo,
                        narration,
                        adminUnit});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createNewPaymentVoucherAsync(string docNo, string empNo, string narration, string adminUnit) {
            this.createNewPaymentVoucherAsync(docNo, empNo, narration, adminUnit, null);
        }
        
        /// <remarks/>
        public void createNewPaymentVoucherAsync(string docNo, string empNo, string narration, string adminUnit, object userState) {
            if ((this.createNewPaymentVoucherOperationCompleted == null)) {
                this.createNewPaymentVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewPaymentVoucherOperationCompleted);
            }
            this.InvokeAsync("createNewPaymentVoucher", new object[] {
                        docNo,
                        empNo,
                        narration,
                        adminUnit}, this.createNewPaymentVoucherOperationCompleted, userState);
        }
        
        private void OncreateNewPaymentVoucherOperationCompleted(object arg) {
            if ((this.createNewPaymentVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewPaymentVoucherCompleted(this, new createNewPaymentVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createNewPettyCashRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createNewPettyCashRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createNewPettyCashRequisition(string docNo, string empNo, string pcashNo, string narration) {
            object[] results = this.Invoke("createNewPettyCashRequisition", new object[] {
                        docNo,
                        empNo,
                        pcashNo,
                        narration});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createNewPettyCashRequisitionAsync(string docNo, string empNo, string pcashNo, string narration) {
            this.createNewPettyCashRequisitionAsync(docNo, empNo, pcashNo, narration, null);
        }
        
        /// <remarks/>
        public void createNewPettyCashRequisitionAsync(string docNo, string empNo, string pcashNo, string narration, object userState) {
            if ((this.createNewPettyCashRequisitionOperationCompleted == null)) {
                this.createNewPettyCashRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewPettyCashRequisitionOperationCompleted);
            }
            this.InvokeAsync("createNewPettyCashRequisition", new object[] {
                        docNo,
                        empNo,
                        pcashNo,
                        narration}, this.createNewPettyCashRequisitionOperationCompleted, userState);
        }
        
        private void OncreateNewPettyCashRequisitionOperationCompleted(object arg) {
            if ((this.createNewPettyCashRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewPettyCashRequisitionCompleted(this, new createNewPettyCashRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createNewTrainingEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createNewTrainingEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createNewTrainingEvaluation(string employeeNo, string feedbackNo, string applicationCode) {
            object[] results = this.Invoke("createNewTrainingEvaluation", new object[] {
                        employeeNo,
                        feedbackNo,
                        applicationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createNewTrainingEvaluationAsync(string employeeNo, string feedbackNo, string applicationCode) {
            this.createNewTrainingEvaluationAsync(employeeNo, feedbackNo, applicationCode, null);
        }
        
        /// <remarks/>
        public void createNewTrainingEvaluationAsync(string employeeNo, string feedbackNo, string applicationCode, object userState) {
            if ((this.createNewTrainingEvaluationOperationCompleted == null)) {
                this.createNewTrainingEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewTrainingEvaluationOperationCompleted);
            }
            this.InvokeAsync("createNewTrainingEvaluation", new object[] {
                        employeeNo,
                        feedbackNo,
                        applicationCode}, this.createNewTrainingEvaluationOperationCompleted, userState);
        }
        
        private void OncreateNewTrainingEvaluationOperationCompleted(object arg) {
            if ((this.createNewTrainingEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewTrainingEvaluationCompleted(this, new createNewTrainingEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createNewTrainingFeedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createNewTrainingFeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createNewTrainingFeedback(string employeeNo, string feedbackNo, string applicationCode) {
            object[] results = this.Invoke("createNewTrainingFeedback", new object[] {
                        employeeNo,
                        feedbackNo,
                        applicationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createNewTrainingFeedbackAsync(string employeeNo, string feedbackNo, string applicationCode) {
            this.createNewTrainingFeedbackAsync(employeeNo, feedbackNo, applicationCode, null);
        }
        
        /// <remarks/>
        public void createNewTrainingFeedbackAsync(string employeeNo, string feedbackNo, string applicationCode, object userState) {
            if ((this.createNewTrainingFeedbackOperationCompleted == null)) {
                this.createNewTrainingFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewTrainingFeedbackOperationCompleted);
            }
            this.InvokeAsync("createNewTrainingFeedback", new object[] {
                        employeeNo,
                        feedbackNo,
                        applicationCode}, this.createNewTrainingFeedbackOperationCompleted, userState);
        }
        
        private void OncreateNewTrainingFeedbackOperationCompleted(object arg) {
            if ((this.createNewTrainingFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewTrainingFeedbackCompleted(this, new createNewTrainingFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createNewTrainingNeedsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createNewTrainingNeedsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createNewTrainingNeedsLines(string requestNo, string description, int source, string comments) {
            object[] results = this.Invoke("createNewTrainingNeedsLines", new object[] {
                        requestNo,
                        description,
                        source,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createNewTrainingNeedsLinesAsync(string requestNo, string description, int source, string comments) {
            this.createNewTrainingNeedsLinesAsync(requestNo, description, source, comments, null);
        }
        
        /// <remarks/>
        public void createNewTrainingNeedsLinesAsync(string requestNo, string description, int source, string comments, object userState) {
            if ((this.createNewTrainingNeedsLinesOperationCompleted == null)) {
                this.createNewTrainingNeedsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewTrainingNeedsLinesOperationCompleted);
            }
            this.InvokeAsync("createNewTrainingNeedsLines", new object[] {
                        requestNo,
                        description,
                        source,
                        comments}, this.createNewTrainingNeedsLinesOperationCompleted, userState);
        }
        
        private void OncreateNewTrainingNeedsLinesOperationCompleted(object arg) {
            if ((this.createNewTrainingNeedsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewTrainingNeedsLinesCompleted(this, new createNewTrainingNeedsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createNewTrainingRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createNewTrainingRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createNewTrainingRequest(string employeeNo) {
            object[] results = this.Invoke("createNewTrainingRequest", new object[] {
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createNewTrainingRequestAsync(string employeeNo) {
            this.createNewTrainingRequestAsync(employeeNo, null);
        }
        
        /// <remarks/>
        public void createNewTrainingRequestAsync(string employeeNo, object userState) {
            if ((this.createNewTrainingRequestOperationCompleted == null)) {
                this.createNewTrainingRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewTrainingRequestOperationCompleted);
            }
            this.InvokeAsync("createNewTrainingRequest", new object[] {
                        employeeNo}, this.createNewTrainingRequestOperationCompleted, userState);
        }
        
        private void OncreateNewTrainingRequestOperationCompleted(object arg) {
            if ((this.createNewTrainingRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewTrainingRequestCompleted(this, new createNewTrainingRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createPaymentVoucherLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createPaymentVoucherLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createPaymentVoucherLines(string docNo, string accountNo, int applieToDocNo, string type, decimal amount) {
            this.Invoke("createPaymentVoucherLines", new object[] {
                        docNo,
                        accountNo,
                        applieToDocNo,
                        type,
                        amount});
        }
        
        /// <remarks/>
        public void createPaymentVoucherLinesAsync(string docNo, string accountNo, int applieToDocNo, string type, decimal amount) {
            this.createPaymentVoucherLinesAsync(docNo, accountNo, applieToDocNo, type, amount, null);
        }
        
        /// <remarks/>
        public void createPaymentVoucherLinesAsync(string docNo, string accountNo, int applieToDocNo, string type, decimal amount, object userState) {
            if ((this.createPaymentVoucherLinesOperationCompleted == null)) {
                this.createPaymentVoucherLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePaymentVoucherLinesOperationCompleted);
            }
            this.InvokeAsync("createPaymentVoucherLines", new object[] {
                        docNo,
                        accountNo,
                        applieToDocNo,
                        type,
                        amount}, this.createPaymentVoucherLinesOperationCompleted, userState);
        }
        
        private void OncreatePaymentVoucherLinesOperationCompleted(object arg) {
            if ((this.createPaymentVoucherLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPaymentVoucherLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createPettyCashLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createPettyCashLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createPettyCashLines(string docNo, decimal amount, string accountNo) {
            object[] results = this.Invoke("createPettyCashLines", new object[] {
                        docNo,
                        amount,
                        accountNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createPettyCashLinesAsync(string docNo, decimal amount, string accountNo) {
            this.createPettyCashLinesAsync(docNo, amount, accountNo, null);
        }
        
        /// <remarks/>
        public void createPettyCashLinesAsync(string docNo, decimal amount, string accountNo, object userState) {
            if ((this.createPettyCashLinesOperationCompleted == null)) {
                this.createPettyCashLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePettyCashLinesOperationCompleted);
            }
            this.InvokeAsync("createPettyCashLines", new object[] {
                        docNo,
                        amount,
                        accountNo}, this.createPettyCashLinesOperationCompleted, userState);
        }
        
        private void OncreatePettyCashLinesOperationCompleted(object arg) {
            if ((this.createPettyCashLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPettyCashLinesCompleted(this, new createPettyCashLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createPettyCash", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createPettyCash_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createPettyCash(string docNo, string empNo, string pNarration) {
            object[] results = this.Invoke("createPettyCash", new object[] {
                        docNo,
                        empNo,
                        pNarration});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createPettyCashAsync(string docNo, string empNo, string pNarration) {
            this.createPettyCashAsync(docNo, empNo, pNarration, null);
        }
        
        /// <remarks/>
        public void createPettyCashAsync(string docNo, string empNo, string pNarration, object userState) {
            if ((this.createPettyCashOperationCompleted == null)) {
                this.createPettyCashOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePettyCashOperationCompleted);
            }
            this.InvokeAsync("createPettyCash", new object[] {
                        docNo,
                        empNo,
                        pNarration}, this.createPettyCashOperationCompleted, userState);
        }
        
        private void OncreatePettyCashOperationCompleted(object arg) {
            if ((this.createPettyCashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPettyCashCompleted(this, new createPettyCashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createProfileForExternalApplican" +
            "ts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createProfileForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createProfileForExternalApplicants(
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string email, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string altPhoneNo, 
                    string altEmail, 
                    string positionHeld, 
                    string currentEmployer, 
                    decimal grossSalary, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime effectiveDate) {
            object[] results = this.Invoke("createProfileForExternalApplicants", new object[] {
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        email,
                        religion,
                        idNumber,
                        phoneNo,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        altPhoneNo,
                        altEmail,
                        positionHeld,
                        currentEmployer,
                        grossSalary,
                        effectiveDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createProfileForExternalApplicantsAsync(
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string email, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string altPhoneNo, 
                    string altEmail, 
                    string positionHeld, 
                    string currentEmployer, 
                    decimal grossSalary, 
                    System.DateTime effectiveDate) {
            this.createProfileForExternalApplicantsAsync(surname, firstname, lastname, title, dOB, gender, disabled, disabilityDetails, county, nationality, maritalStatus, email, religion, idNumber, phoneNo, ethinc, postalAddress, postalAddressCode, city, expected_salary, registrationDetails, nhifNo, nssfNo, pinNo, altPhoneNo, altEmail, positionHeld, currentEmployer, grossSalary, effectiveDate, null);
        }
        
        /// <remarks/>
        public void createProfileForExternalApplicantsAsync(
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string email, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string altPhoneNo, 
                    string altEmail, 
                    string positionHeld, 
                    string currentEmployer, 
                    decimal grossSalary, 
                    System.DateTime effectiveDate, 
                    object userState) {
            if ((this.createProfileForExternalApplicantsOperationCompleted == null)) {
                this.createProfileForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateProfileForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("createProfileForExternalApplicants", new object[] {
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        email,
                        religion,
                        idNumber,
                        phoneNo,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        altPhoneNo,
                        altEmail,
                        positionHeld,
                        currentEmployer,
                        grossSalary,
                        effectiveDate}, this.createProfileForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OncreateProfileForExternalApplicantsOperationCompleted(object arg) {
            if ((this.createProfileForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createProfileForExternalApplicantsCompleted(this, new createProfileForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createPurchaseReqLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createPurchaseReqLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createPurchaseReqLine(string documentNo, string procurementPlanId, decimal quantity, int procurementItemNo) {
            object[] results = this.Invoke("createPurchaseReqLine", new object[] {
                        documentNo,
                        procurementPlanId,
                        quantity,
                        procurementItemNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createPurchaseReqLineAsync(string documentNo, string procurementPlanId, decimal quantity, int procurementItemNo) {
            this.createPurchaseReqLineAsync(documentNo, procurementPlanId, quantity, procurementItemNo, null);
        }
        
        /// <remarks/>
        public void createPurchaseReqLineAsync(string documentNo, string procurementPlanId, decimal quantity, int procurementItemNo, object userState) {
            if ((this.createPurchaseReqLineOperationCompleted == null)) {
                this.createPurchaseReqLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePurchaseReqLineOperationCompleted);
            }
            this.InvokeAsync("createPurchaseReqLine", new object[] {
                        documentNo,
                        procurementPlanId,
                        quantity,
                        procurementItemNo}, this.createPurchaseReqLineOperationCompleted, userState);
        }
        
        private void OncreatePurchaseReqLineOperationCompleted(object arg) {
            if ((this.createPurchaseReqLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPurchaseReqLineCompleted(this, new createPurchaseReqLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createPurchaseReq", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createPurchaseReq_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createPurchaseReq(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string templateId, string tfundingsource, string tconstituency) {
            object[] results = this.Invoke("createPurchaseReq", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        priorityLevel,
                        requisitionProductGroup,
                        constituency,
                        planId,
                        planEntryNo,
                        templateId,
                        tfundingsource,
                        tconstituency});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createPurchaseReqAsync(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string templateId, string tfundingsource, string tconstituency) {
            this.createPurchaseReqAsync(employeeNo, requisitionNo, location, description, priorityLevel, requisitionProductGroup, constituency, planId, planEntryNo, templateId, tfundingsource, tconstituency, null);
        }
        
        /// <remarks/>
        public void createPurchaseReqAsync(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string templateId, string tfundingsource, string tconstituency, object userState) {
            if ((this.createPurchaseReqOperationCompleted == null)) {
                this.createPurchaseReqOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePurchaseReqOperationCompleted);
            }
            this.InvokeAsync("createPurchaseReq", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        priorityLevel,
                        requisitionProductGroup,
                        constituency,
                        planId,
                        planEntryNo,
                        templateId,
                        tfundingsource,
                        tconstituency}, this.createPurchaseReqOperationCompleted, userState);
        }
        
        private void OncreatePurchaseReqOperationCompleted(object arg) {
            if ((this.createPurchaseReqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPurchaseReqCompleted(this, new createPurchaseReqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createPurchaseRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createPurchaseRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createPurchaseRequisition(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string templateId, string tfundingsource, string tconstituency) {
            object[] results = this.Invoke("createPurchaseRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        priorityLevel,
                        requisitionProductGroup,
                        constituency,
                        planId,
                        planEntryNo,
                        templateId,
                        tfundingsource,
                        tconstituency});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createPurchaseRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string templateId, string tfundingsource, string tconstituency) {
            this.createPurchaseRequisitionAsync(employeeNo, requisitionNo, location, description, priorityLevel, requisitionProductGroup, constituency, planId, planEntryNo, templateId, tfundingsource, tconstituency, null);
        }
        
        /// <remarks/>
        public void createPurchaseRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string templateId, string tfundingsource, string tconstituency, object userState) {
            if ((this.createPurchaseRequisitionOperationCompleted == null)) {
                this.createPurchaseRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePurchaseRequisitionOperationCompleted);
            }
            this.InvokeAsync("createPurchaseRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        priorityLevel,
                        requisitionProductGroup,
                        constituency,
                        planId,
                        planEntryNo,
                        templateId,
                        tfundingsource,
                        tconstituency}, this.createPurchaseRequisitionOperationCompleted, userState);
        }
        
        private void OncreatePurchaseRequisitionOperationCompleted(object arg) {
            if ((this.createPurchaseRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPurchaseRequisitionCompleted(this, new createPurchaseRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createPurchaseStoreRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createPurchaseStoreRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createPurchaseStoreRequisition(string employeeNo, string requisitionNo, string location, string description, int type, string fundCode, string jobNo, string jobTask) {
            object[] results = this.Invoke("createPurchaseStoreRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        type,
                        fundCode,
                        jobNo,
                        jobTask});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createPurchaseStoreRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int type, string fundCode, string jobNo, string jobTask) {
            this.createPurchaseStoreRequisitionAsync(employeeNo, requisitionNo, location, description, type, fundCode, jobNo, jobTask, null);
        }
        
        /// <remarks/>
        public void createPurchaseStoreRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int type, string fundCode, string jobNo, string jobTask, object userState) {
            if ((this.createPurchaseStoreRequisitionOperationCompleted == null)) {
                this.createPurchaseStoreRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePurchaseStoreRequisitionOperationCompleted);
            }
            this.InvokeAsync("createPurchaseStoreRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        type,
                        fundCode,
                        jobNo,
                        jobTask}, this.createPurchaseStoreRequisitionOperationCompleted, userState);
        }
        
        private void OncreatePurchaseStoreRequisitionOperationCompleted(object arg) {
            if ((this.createPurchaseStoreRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPurchaseStoreRequisitionCompleted(this, new createPurchaseStoreRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createRefereeForExternalApplcant" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createRefereeForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createRefereeForExternalApplcants(string email, string name, string occupation, string address, string postCode, string phone, string applicantEmail, string knownPeriod) {
            object[] results = this.Invoke("createRefereeForExternalApplcants", new object[] {
                        email,
                        name,
                        occupation,
                        address,
                        postCode,
                        phone,
                        applicantEmail,
                        knownPeriod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createRefereeForExternalApplcantsAsync(string email, string name, string occupation, string address, string postCode, string phone, string applicantEmail, string knownPeriod) {
            this.createRefereeForExternalApplcantsAsync(email, name, occupation, address, postCode, phone, applicantEmail, knownPeriod, null);
        }
        
        /// <remarks/>
        public void createRefereeForExternalApplcantsAsync(string email, string name, string occupation, string address, string postCode, string phone, string applicantEmail, string knownPeriod, object userState) {
            if ((this.createRefereeForExternalApplcantsOperationCompleted == null)) {
                this.createRefereeForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateRefereeForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("createRefereeForExternalApplcants", new object[] {
                        email,
                        name,
                        occupation,
                        address,
                        postCode,
                        phone,
                        applicantEmail,
                        knownPeriod}, this.createRefereeForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OncreateRefereeForExternalApplcantsOperationCompleted(object arg) {
            if ((this.createRefereeForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createRefereeForExternalApplcantsCompleted(this, new createRefereeForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createReferee(string appNo, string empNo, string name, string occupation, string address, string postCode, string phone, string email, string knownPeriod, string jobId) {
            object[] results = this.Invoke("createReferee", new object[] {
                        appNo,
                        empNo,
                        name,
                        occupation,
                        address,
                        postCode,
                        phone,
                        email,
                        knownPeriod,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createRefereeAsync(string appNo, string empNo, string name, string occupation, string address, string postCode, string phone, string email, string knownPeriod, string jobId) {
            this.createRefereeAsync(appNo, empNo, name, occupation, address, postCode, phone, email, knownPeriod, jobId, null);
        }
        
        /// <remarks/>
        public void createRefereeAsync(string appNo, string empNo, string name, string occupation, string address, string postCode, string phone, string email, string knownPeriod, string jobId, object userState) {
            if ((this.createRefereeOperationCompleted == null)) {
                this.createRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateRefereeOperationCompleted);
            }
            this.InvokeAsync("createReferee", new object[] {
                        appNo,
                        empNo,
                        name,
                        occupation,
                        address,
                        postCode,
                        phone,
                        email,
                        knownPeriod,
                        jobId}, this.createRefereeOperationCompleted, userState);
        }
        
        private void OncreateRefereeOperationCompleted(object arg) {
            if ((this.createRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createRefereeCompleted(this, new createRefereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createRequisitionLine1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createRequisitionLine1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createRequisitionLine1(string employeeNo, string requisitionNo, int procurementPlanEntryNo, decimal quantity, string technicalSpecifications, decimal cost) {
            object[] results = this.Invoke("createRequisitionLine1", new object[] {
                        employeeNo,
                        requisitionNo,
                        procurementPlanEntryNo,
                        quantity,
                        technicalSpecifications,
                        cost});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createRequisitionLine1Async(string employeeNo, string requisitionNo, int procurementPlanEntryNo, decimal quantity, string technicalSpecifications, decimal cost) {
            this.createRequisitionLine1Async(employeeNo, requisitionNo, procurementPlanEntryNo, quantity, technicalSpecifications, cost, null);
        }
        
        /// <remarks/>
        public void createRequisitionLine1Async(string employeeNo, string requisitionNo, int procurementPlanEntryNo, decimal quantity, string technicalSpecifications, decimal cost, object userState) {
            if ((this.createRequisitionLine1OperationCompleted == null)) {
                this.createRequisitionLine1OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateRequisitionLine1OperationCompleted);
            }
            this.InvokeAsync("createRequisitionLine1", new object[] {
                        employeeNo,
                        requisitionNo,
                        procurementPlanEntryNo,
                        quantity,
                        technicalSpecifications,
                        cost}, this.createRequisitionLine1OperationCompleted, userState);
        }
        
        private void OncreateRequisitionLine1OperationCompleted(object arg) {
            if ((this.createRequisitionLine1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createRequisitionLine1Completed(this, new createRequisitionLine1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createRequisitionLine(string employeeNo, string requisitionNo, string budget, string procurementPlan, string itemCategory, string item, decimal quantity, decimal directUnitCost, string uom, decimal totalAmount, int procurementEntryNo) {
            object[] results = this.Invoke("createRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        budget,
                        procurementPlan,
                        itemCategory,
                        item,
                        quantity,
                        directUnitCost,
                        uom,
                        totalAmount,
                        procurementEntryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createRequisitionLineAsync(string employeeNo, string requisitionNo, string budget, string procurementPlan, string itemCategory, string item, decimal quantity, decimal directUnitCost, string uom, decimal totalAmount, int procurementEntryNo) {
            this.createRequisitionLineAsync(employeeNo, requisitionNo, budget, procurementPlan, itemCategory, item, quantity, directUnitCost, uom, totalAmount, procurementEntryNo, null);
        }
        
        /// <remarks/>
        public void createRequisitionLineAsync(string employeeNo, string requisitionNo, string budget, string procurementPlan, string itemCategory, string item, decimal quantity, decimal directUnitCost, string uom, decimal totalAmount, int procurementEntryNo, object userState) {
            if ((this.createRequisitionLineOperationCompleted == null)) {
                this.createRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("createRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        budget,
                        procurementPlan,
                        itemCategory,
                        item,
                        quantity,
                        directUnitCost,
                        uom,
                        totalAmount,
                        procurementEntryNo}, this.createRequisitionLineOperationCompleted, userState);
        }
        
        private void OncreateRequisitionLineOperationCompleted(object arg) {
            if ((this.createRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createRequisitionLineCompleted(this, new createRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createStaffClaim1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createStaffClaim1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createStaffClaim1(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, string region) {
            object[] results = this.Invoke("createStaffClaim1", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask,
                        region});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createStaffClaim1Async(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, string region) {
            this.createStaffClaim1Async(employeeNo, claimNo, paymentNarration, fundCode, job, jobTask, region, null);
        }
        
        /// <remarks/>
        public void createStaffClaim1Async(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, string region, object userState) {
            if ((this.createStaffClaim1OperationCompleted == null)) {
                this.createStaffClaim1OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateStaffClaim1OperationCompleted);
            }
            this.InvokeAsync("createStaffClaim1", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask,
                        region}, this.createStaffClaim1OperationCompleted, userState);
        }
        
        private void OncreateStaffClaim1OperationCompleted(object arg) {
            if ((this.createStaffClaim1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createStaffClaim1Completed(this, new createStaffClaim1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createStaffClaimLine(string employeeNo, string claimNo, string claimtype, string voteItem, string description, decimal amount) {
            object[] results = this.Invoke("createStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        claimtype,
                        voteItem,
                        description,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createStaffClaimLineAsync(string employeeNo, string claimNo, string claimtype, string voteItem, string description, decimal amount) {
            this.createStaffClaimLineAsync(employeeNo, claimNo, claimtype, voteItem, description, amount, null);
        }
        
        /// <remarks/>
        public void createStaffClaimLineAsync(string employeeNo, string claimNo, string claimtype, string voteItem, string description, decimal amount, object userState) {
            if ((this.createStaffClaimLineOperationCompleted == null)) {
                this.createStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("createStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        claimtype,
                        voteItem,
                        description,
                        amount}, this.createStaffClaimLineOperationCompleted, userState);
        }
        
        private void OncreateStaffClaimLineOperationCompleted(object arg) {
            if ((this.createStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createStaffClaimLineCompleted(this, new createStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createStaffClaim", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createStaffClaim_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createStaffClaim(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask) {
            object[] results = this.Invoke("createStaffClaim", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createStaffClaimAsync(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask) {
            this.createStaffClaimAsync(employeeNo, claimNo, paymentNarration, fundCode, job, jobTask, null);
        }
        
        /// <remarks/>
        public void createStaffClaimAsync(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, object userState) {
            if ((this.createStaffClaimOperationCompleted == null)) {
                this.createStaffClaimOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateStaffClaimOperationCompleted);
            }
            this.InvokeAsync("createStaffClaim", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask}, this.createStaffClaimOperationCompleted, userState);
        }
        
        private void OncreateStaffClaimOperationCompleted(object arg) {
            if ((this.createStaffClaimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createStaffClaimCompleted(this, new createStaffClaimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createTrainingFeedbackLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createTrainingFeedbackLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createTrainingFeedbackLines(string feedbackNo, int lineno, string ratingcode, string comments, int categorycode, string categorydesc, string trainingcategory) {
            object[] results = this.Invoke("createTrainingFeedbackLines", new object[] {
                        feedbackNo,
                        lineno,
                        ratingcode,
                        comments,
                        categorycode,
                        categorydesc,
                        trainingcategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createTrainingFeedbackLinesAsync(string feedbackNo, int lineno, string ratingcode, string comments, int categorycode, string categorydesc, string trainingcategory) {
            this.createTrainingFeedbackLinesAsync(feedbackNo, lineno, ratingcode, comments, categorycode, categorydesc, trainingcategory, null);
        }
        
        /// <remarks/>
        public void createTrainingFeedbackLinesAsync(string feedbackNo, int lineno, string ratingcode, string comments, int categorycode, string categorydesc, string trainingcategory, object userState) {
            if ((this.createTrainingFeedbackLinesOperationCompleted == null)) {
                this.createTrainingFeedbackLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTrainingFeedbackLinesOperationCompleted);
            }
            this.InvokeAsync("createTrainingFeedbackLines", new object[] {
                        feedbackNo,
                        lineno,
                        ratingcode,
                        comments,
                        categorycode,
                        categorydesc,
                        trainingcategory}, this.createTrainingFeedbackLinesOperationCompleted, userState);
        }
        
        private void OncreateTrainingFeedbackLinesOperationCompleted(object arg) {
            if ((this.createTrainingFeedbackLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createTrainingFeedbackLinesCompleted(this, new createTrainingFeedbackLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createTrainingRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createTrainingRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createTrainingRequisition(string trainingplan, string courseTitle, string trainingVenue, string respCenter, string location, string provider, string empNo, string desc) {
            object[] results = this.Invoke("createTrainingRequisition", new object[] {
                        trainingplan,
                        courseTitle,
                        trainingVenue,
                        respCenter,
                        location,
                        provider,
                        empNo,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createTrainingRequisitionAsync(string trainingplan, string courseTitle, string trainingVenue, string respCenter, string location, string provider, string empNo, string desc) {
            this.createTrainingRequisitionAsync(trainingplan, courseTitle, trainingVenue, respCenter, location, provider, empNo, desc, null);
        }
        
        /// <remarks/>
        public void createTrainingRequisitionAsync(string trainingplan, string courseTitle, string trainingVenue, string respCenter, string location, string provider, string empNo, string desc, object userState) {
            if ((this.createTrainingRequisitionOperationCompleted == null)) {
                this.createTrainingRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTrainingRequisitionOperationCompleted);
            }
            this.InvokeAsync("createTrainingRequisition", new object[] {
                        trainingplan,
                        courseTitle,
                        trainingVenue,
                        respCenter,
                        location,
                        provider,
                        empNo,
                        desc}, this.createTrainingRequisitionOperationCompleted, userState);
        }
        
        private void OncreateTrainingRequisitionOperationCompleted(object arg) {
            if ((this.createTrainingRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createTrainingRequisitionCompleted(this, new createTrainingRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createVehicleIncidence", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createVehicleIncidence_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createVehicleIncidence([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime incidentDate, string vehicleId, string driverId, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime incidentTime, string responsibleEmployee, string personCulpable, string workTicketNo, string dutyStation) {
            object[] results = this.Invoke("createVehicleIncidence", new object[] {
                        incidentDate,
                        vehicleId,
                        driverId,
                        incidentTime,
                        responsibleEmployee,
                        personCulpable,
                        workTicketNo,
                        dutyStation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createVehicleIncidenceAsync(System.DateTime incidentDate, string vehicleId, string driverId, System.DateTime incidentTime, string responsibleEmployee, string personCulpable, string workTicketNo, string dutyStation) {
            this.createVehicleIncidenceAsync(incidentDate, vehicleId, driverId, incidentTime, responsibleEmployee, personCulpable, workTicketNo, dutyStation, null);
        }
        
        /// <remarks/>
        public void createVehicleIncidenceAsync(System.DateTime incidentDate, string vehicleId, string driverId, System.DateTime incidentTime, string responsibleEmployee, string personCulpable, string workTicketNo, string dutyStation, object userState) {
            if ((this.createVehicleIncidenceOperationCompleted == null)) {
                this.createVehicleIncidenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateVehicleIncidenceOperationCompleted);
            }
            this.InvokeAsync("createVehicleIncidence", new object[] {
                        incidentDate,
                        vehicleId,
                        driverId,
                        incidentTime,
                        responsibleEmployee,
                        personCulpable,
                        workTicketNo,
                        dutyStation}, this.createVehicleIncidenceOperationCompleted, userState);
        }
        
        private void OncreateVehicleIncidenceOperationCompleted(object arg) {
            if ((this.createVehicleIncidenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createVehicleIncidenceCompleted(this, new createVehicleIncidenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createWelfareIncidence", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createWelfareIncidence_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createWelfareIncidence(string incidenceNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime incidenceDate, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime incidenceTime, int incidenceStatus, int incidenceType, string affectedEmployee, string requestorID, string cardNo, string dependantNo, string incidenceDesc, int doctype) {
            object[] results = this.Invoke("createWelfareIncidence", new object[] {
                        incidenceNo,
                        incidenceDate,
                        incidenceTime,
                        incidenceStatus,
                        incidenceType,
                        affectedEmployee,
                        requestorID,
                        cardNo,
                        dependantNo,
                        incidenceDesc,
                        doctype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createWelfareIncidenceAsync(string incidenceNo, System.DateTime incidenceDate, System.DateTime incidenceTime, int incidenceStatus, int incidenceType, string affectedEmployee, string requestorID, string cardNo, string dependantNo, string incidenceDesc, int doctype) {
            this.createWelfareIncidenceAsync(incidenceNo, incidenceDate, incidenceTime, incidenceStatus, incidenceType, affectedEmployee, requestorID, cardNo, dependantNo, incidenceDesc, doctype, null);
        }
        
        /// <remarks/>
        public void createWelfareIncidenceAsync(string incidenceNo, System.DateTime incidenceDate, System.DateTime incidenceTime, int incidenceStatus, int incidenceType, string affectedEmployee, string requestorID, string cardNo, string dependantNo, string incidenceDesc, int doctype, object userState) {
            if ((this.createWelfareIncidenceOperationCompleted == null)) {
                this.createWelfareIncidenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateWelfareIncidenceOperationCompleted);
            }
            this.InvokeAsync("createWelfareIncidence", new object[] {
                        incidenceNo,
                        incidenceDate,
                        incidenceTime,
                        incidenceStatus,
                        incidenceType,
                        affectedEmployee,
                        requestorID,
                        cardNo,
                        dependantNo,
                        incidenceDesc,
                        doctype}, this.createWelfareIncidenceOperationCompleted, userState);
        }
        
        private void OncreateWelfareIncidenceOperationCompleted(object arg) {
            if ((this.createWelfareIncidenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createWelfareIncidenceCompleted(this, new createWelfareIncidenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createWelfareIncident", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createWelfareIncident_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createWelfareIncident(string employeeNo, string incidence, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime incidenceDate, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime incidenceTime, string actionTaken, string dutyStation) {
            object[] results = this.Invoke("createWelfareIncident", new object[] {
                        employeeNo,
                        incidence,
                        incidenceDate,
                        incidenceTime,
                        actionTaken,
                        dutyStation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createWelfareIncidentAsync(string employeeNo, string incidence, System.DateTime incidenceDate, System.DateTime incidenceTime, string actionTaken, string dutyStation) {
            this.createWelfareIncidentAsync(employeeNo, incidence, incidenceDate, incidenceTime, actionTaken, dutyStation, null);
        }
        
        /// <remarks/>
        public void createWelfareIncidentAsync(string employeeNo, string incidence, System.DateTime incidenceDate, System.DateTime incidenceTime, string actionTaken, string dutyStation, object userState) {
            if ((this.createWelfareIncidentOperationCompleted == null)) {
                this.createWelfareIncidentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateWelfareIncidentOperationCompleted);
            }
            this.InvokeAsync("createWelfareIncident", new object[] {
                        employeeNo,
                        incidence,
                        incidenceDate,
                        incidenceTime,
                        actionTaken,
                        dutyStation}, this.createWelfareIncidentOperationCompleted, userState);
        }
        
        private void OncreateWelfareIncidentOperationCompleted(object arg) {
            if ((this.createWelfareIncidentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createWelfareIncidentCompleted(this, new createWelfareIncidentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:createstandardpurchasereq", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="createstandardpurchasereq_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string createstandardpurchasereq(int pRNType, string locationCode, int prodReqGroup, string geographicalCode, string adminUnitCode, string planningCategory, string userId, string requestByNo) {
            object[] results = this.Invoke("createstandardpurchasereq", new object[] {
                        pRNType,
                        locationCode,
                        prodReqGroup,
                        geographicalCode,
                        adminUnitCode,
                        planningCategory,
                        userId,
                        requestByNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createstandardpurchasereqAsync(int pRNType, string locationCode, int prodReqGroup, string geographicalCode, string adminUnitCode, string planningCategory, string userId, string requestByNo) {
            this.createstandardpurchasereqAsync(pRNType, locationCode, prodReqGroup, geographicalCode, adminUnitCode, planningCategory, userId, requestByNo, null);
        }
        
        /// <remarks/>
        public void createstandardpurchasereqAsync(int pRNType, string locationCode, int prodReqGroup, string geographicalCode, string adminUnitCode, string planningCategory, string userId, string requestByNo, object userState) {
            if ((this.createstandardpurchasereqOperationCompleted == null)) {
                this.createstandardpurchasereqOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatestandardpurchasereqOperationCompleted);
            }
            this.InvokeAsync("createstandardpurchasereq", new object[] {
                        pRNType,
                        locationCode,
                        prodReqGroup,
                        geographicalCode,
                        adminUnitCode,
                        planningCategory,
                        userId,
                        requestByNo}, this.createstandardpurchasereqOperationCompleted, userState);
        }
        
        private void OncreatestandardpurchasereqOperationCompleted(object arg) {
            if ((this.createstandardpurchasereqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createstandardpurchasereqCompleted(this, new createstandardpurchasereqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteAcademicLineForExternalApp" +
            "licants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteAcademicLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteAcademicLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("deleteAcademicLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAcademicLineForExternalApplicantsAsync(int id, string email) {
            this.deleteAcademicLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void deleteAcademicLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.deleteAcademicLineForExternalApplicantsOperationCompleted == null)) {
                this.deleteAcademicLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAcademicLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("deleteAcademicLineForExternalApplicants", new object[] {
                        id,
                        email}, this.deleteAcademicLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OndeleteAcademicLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.deleteAcademicLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAcademicLineForExternalApplicantsCompleted(this, new deleteAcademicLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteAcademicLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteAcademicLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteAcademicLine(int id, string appNo) {
            object[] results = this.Invoke("deleteAcademicLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAcademicLineAsync(int id, string appNo) {
            this.deleteAcademicLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void deleteAcademicLineAsync(int id, string appNo, object userState) {
            if ((this.deleteAcademicLineOperationCompleted == null)) {
                this.deleteAcademicLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAcademicLineOperationCompleted);
            }
            this.InvokeAsync("deleteAcademicLine", new object[] {
                        id,
                        appNo}, this.deleteAcademicLineOperationCompleted, userState);
        }
        
        private void OndeleteAcademicLineOperationCompleted(object arg) {
            if ((this.deleteAcademicLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAcademicLineCompleted(this, new deleteAcademicLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteAttachDocs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteAttachDocs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool deleteAttachDocs(string docId, int lineNo) {
            object[] results = this.Invoke("deleteAttachDocs", new object[] {
                        docId,
                        lineNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAttachDocsAsync(string docId, int lineNo) {
            this.deleteAttachDocsAsync(docId, lineNo, null);
        }
        
        /// <remarks/>
        public void deleteAttachDocsAsync(string docId, int lineNo, object userState) {
            if ((this.deleteAttachDocsOperationCompleted == null)) {
                this.deleteAttachDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAttachDocsOperationCompleted);
            }
            this.InvokeAsync("deleteAttachDocs", new object[] {
                        docId,
                        lineNo}, this.deleteAttachDocsOperationCompleted, userState);
        }
        
        private void OndeleteAttachDocsOperationCompleted(object arg) {
            if ((this.deleteAttachDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAttachDocsCompleted(this, new deleteAttachDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteEmploymentHistoryLineForEx" +
            "ternalApplicants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteEmploymentHistoryLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteEmploymentHistoryLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("deleteEmploymentHistoryLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteEmploymentHistoryLineForExternalApplicantsAsync(int id, string email) {
            this.deleteEmploymentHistoryLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void deleteEmploymentHistoryLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.deleteEmploymentHistoryLineForExternalApplicantsOperationCompleted == null)) {
                this.deleteEmploymentHistoryLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteEmploymentHistoryLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("deleteEmploymentHistoryLineForExternalApplicants", new object[] {
                        id,
                        email}, this.deleteEmploymentHistoryLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OndeleteEmploymentHistoryLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.deleteEmploymentHistoryLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteEmploymentHistoryLineForExternalApplicantsCompleted(this, new deleteEmploymentHistoryLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteEmploymentHistoryLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteEmploymentHistoryLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteEmploymentHistoryLine(int id, string appNo) {
            object[] results = this.Invoke("deleteEmploymentHistoryLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteEmploymentHistoryLineAsync(int id, string appNo) {
            this.deleteEmploymentHistoryLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void deleteEmploymentHistoryLineAsync(int id, string appNo, object userState) {
            if ((this.deleteEmploymentHistoryLineOperationCompleted == null)) {
                this.deleteEmploymentHistoryLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteEmploymentHistoryLineOperationCompleted);
            }
            this.InvokeAsync("deleteEmploymentHistoryLine", new object[] {
                        id,
                        appNo}, this.deleteEmploymentHistoryLineOperationCompleted, userState);
        }
        
        private void OndeleteEmploymentHistoryLineOperationCompleted(object arg) {
            if ((this.deleteEmploymentHistoryLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteEmploymentHistoryLineCompleted(this, new deleteEmploymentHistoryLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteEquipmentSpecifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteEquipmentSpecifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteEquipmentSpecifications(int id, string docNo) {
            object[] results = this.Invoke("deleteEquipmentSpecifications", new object[] {
                        id,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteEquipmentSpecificationsAsync(int id, string docNo) {
            this.deleteEquipmentSpecificationsAsync(id, docNo, null);
        }
        
        /// <remarks/>
        public void deleteEquipmentSpecificationsAsync(int id, string docNo, object userState) {
            if ((this.deleteEquipmentSpecificationsOperationCompleted == null)) {
                this.deleteEquipmentSpecificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteEquipmentSpecificationsOperationCompleted);
            }
            this.InvokeAsync("deleteEquipmentSpecifications", new object[] {
                        id,
                        docNo}, this.deleteEquipmentSpecificationsOperationCompleted, userState);
        }
        
        private void OndeleteEquipmentSpecificationsOperationCompleted(object arg) {
            if ((this.deleteEquipmentSpecificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteEquipmentSpecificationsCompleted(this, new deleteEquipmentSpecificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteFavouriteJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteFavouriteJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteFavouriteJobs(int id, string jobId) {
            object[] results = this.Invoke("deleteFavouriteJobs", new object[] {
                        id,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteFavouriteJobsAsync(int id, string jobId) {
            this.deleteFavouriteJobsAsync(id, jobId, null);
        }
        
        /// <remarks/>
        public void deleteFavouriteJobsAsync(int id, string jobId, object userState) {
            if ((this.deleteFavouriteJobsOperationCompleted == null)) {
                this.deleteFavouriteJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFavouriteJobsOperationCompleted);
            }
            this.InvokeAsync("deleteFavouriteJobs", new object[] {
                        id,
                        jobId}, this.deleteFavouriteJobsOperationCompleted, userState);
        }
        
        private void OndeleteFavouriteJobsOperationCompleted(object arg) {
            if ((this.deleteFavouriteJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteFavouriteJobsCompleted(this, new deleteFavouriteJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deletePersonnelSpecifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deletePersonnelSpecifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deletePersonnelSpecifications(int id, string docNo, string desc) {
            object[] results = this.Invoke("deletePersonnelSpecifications", new object[] {
                        id,
                        docNo,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deletePersonnelSpecificationsAsync(int id, string docNo, string desc) {
            this.deletePersonnelSpecificationsAsync(id, docNo, desc, null);
        }
        
        /// <remarks/>
        public void deletePersonnelSpecificationsAsync(int id, string docNo, string desc, object userState) {
            if ((this.deletePersonnelSpecificationsOperationCompleted == null)) {
                this.deletePersonnelSpecificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePersonnelSpecificationsOperationCompleted);
            }
            this.InvokeAsync("deletePersonnelSpecifications", new object[] {
                        id,
                        docNo,
                        desc}, this.deletePersonnelSpecificationsOperationCompleted, userState);
        }
        
        private void OndeletePersonnelSpecificationsOperationCompleted(object arg) {
            if ((this.deletePersonnelSpecificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePersonnelSpecificationsCompleted(this, new deletePersonnelSpecificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deletePettyCashLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deletePettyCashLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deletePettyCashLines(int id, string reqNo) {
            object[] results = this.Invoke("deletePettyCashLines", new object[] {
                        id,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deletePettyCashLinesAsync(int id, string reqNo) {
            this.deletePettyCashLinesAsync(id, reqNo, null);
        }
        
        /// <remarks/>
        public void deletePettyCashLinesAsync(int id, string reqNo, object userState) {
            if ((this.deletePettyCashLinesOperationCompleted == null)) {
                this.deletePettyCashLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePettyCashLinesOperationCompleted);
            }
            this.InvokeAsync("deletePettyCashLines", new object[] {
                        id,
                        reqNo}, this.deletePettyCashLinesOperationCompleted, userState);
        }
        
        private void OndeletePettyCashLinesOperationCompleted(object arg) {
            if ((this.deletePettyCashLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePettyCashLinesCompleted(this, new deletePettyCashLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deletePettyCashRequisitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deletePettyCashRequisitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deletePettyCashRequisitionLines(string docNo, int id) {
            object[] results = this.Invoke("deletePettyCashRequisitionLines", new object[] {
                        docNo,
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deletePettyCashRequisitionLinesAsync(string docNo, int id) {
            this.deletePettyCashRequisitionLinesAsync(docNo, id, null);
        }
        
        /// <remarks/>
        public void deletePettyCashRequisitionLinesAsync(string docNo, int id, object userState) {
            if ((this.deletePettyCashRequisitionLinesOperationCompleted == null)) {
                this.deletePettyCashRequisitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePettyCashRequisitionLinesOperationCompleted);
            }
            this.InvokeAsync("deletePettyCashRequisitionLines", new object[] {
                        docNo,
                        id}, this.deletePettyCashRequisitionLinesOperationCompleted, userState);
        }
        
        private void OndeletePettyCashRequisitionLinesOperationCompleted(object arg) {
            if ((this.deletePettyCashRequisitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePettyCashRequisitionLinesCompleted(this, new deletePettyCashRequisitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteProfessionalLineForExterna" +
            "lApplicants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteProfessionalLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteProfessionalLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("deleteProfessionalLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteProfessionalLineForExternalApplicantsAsync(int id, string email) {
            this.deleteProfessionalLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void deleteProfessionalLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.deleteProfessionalLineForExternalApplicantsOperationCompleted == null)) {
                this.deleteProfessionalLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProfessionalLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("deleteProfessionalLineForExternalApplicants", new object[] {
                        id,
                        email}, this.deleteProfessionalLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OndeleteProfessionalLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.deleteProfessionalLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProfessionalLineForExternalApplicantsCompleted(this, new deleteProfessionalLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteProfessionalLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteProfessionalLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteProfessionalLine(int id, string appNo) {
            object[] results = this.Invoke("deleteProfessionalLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteProfessionalLineAsync(int id, string appNo) {
            this.deleteProfessionalLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void deleteProfessionalLineAsync(int id, string appNo, object userState) {
            if ((this.deleteProfessionalLineOperationCompleted == null)) {
                this.deleteProfessionalLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProfessionalLineOperationCompleted);
            }
            this.InvokeAsync("deleteProfessionalLine", new object[] {
                        id,
                        appNo}, this.deleteProfessionalLineOperationCompleted, userState);
        }
        
        private void OndeleteProfessionalLineOperationCompleted(object arg) {
            if ((this.deleteProfessionalLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProfessionalLineCompleted(this, new deleteProfessionalLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteProffessionalBodyLineForEx" +
            "ternalApplicants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteProffessionalBodyLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteProffessionalBodyLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("deleteProffessionalBodyLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteProffessionalBodyLineForExternalApplicantsAsync(int id, string email) {
            this.deleteProffessionalBodyLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void deleteProffessionalBodyLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.deleteProffessionalBodyLineForExternalApplicantsOperationCompleted == null)) {
                this.deleteProffessionalBodyLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProffessionalBodyLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("deleteProffessionalBodyLineForExternalApplicants", new object[] {
                        id,
                        email}, this.deleteProffessionalBodyLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OndeleteProffessionalBodyLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.deleteProffessionalBodyLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProffessionalBodyLineForExternalApplicantsCompleted(this, new deleteProffessionalBodyLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteProffessionalBodyLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteProffessionalBodyLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteProffessionalBodyLine(int id, string appNo) {
            object[] results = this.Invoke("deleteProffessionalBodyLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteProffessionalBodyLineAsync(int id, string appNo) {
            this.deleteProffessionalBodyLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void deleteProffessionalBodyLineAsync(int id, string appNo, object userState) {
            if ((this.deleteProffessionalBodyLineOperationCompleted == null)) {
                this.deleteProffessionalBodyLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProffessionalBodyLineOperationCompleted);
            }
            this.InvokeAsync("deleteProffessionalBodyLine", new object[] {
                        id,
                        appNo}, this.deleteProffessionalBodyLineOperationCompleted, userState);
        }
        
        private void OndeleteProffessionalBodyLineOperationCompleted(object arg) {
            if ((this.deleteProffessionalBodyLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProffessionalBodyLineCompleted(this, new deleteProffessionalBodyLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deletePurchaseRequisitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deletePurchaseRequisitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deletePurchaseRequisitionLines(int id, string reqNo) {
            object[] results = this.Invoke("deletePurchaseRequisitionLines", new object[] {
                        id,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deletePurchaseRequisitionLinesAsync(int id, string reqNo) {
            this.deletePurchaseRequisitionLinesAsync(id, reqNo, null);
        }
        
        /// <remarks/>
        public void deletePurchaseRequisitionLinesAsync(int id, string reqNo, object userState) {
            if ((this.deletePurchaseRequisitionLinesOperationCompleted == null)) {
                this.deletePurchaseRequisitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePurchaseRequisitionLinesOperationCompleted);
            }
            this.InvokeAsync("deletePurchaseRequisitionLines", new object[] {
                        id,
                        reqNo}, this.deletePurchaseRequisitionLinesOperationCompleted, userState);
        }
        
        private void OndeletePurchaseRequisitionLinesOperationCompleted(object arg) {
            if ((this.deletePurchaseRequisitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePurchaseRequisitionLinesCompleted(this, new deletePurchaseRequisitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteRefereeLineForExternalAppl" +
            "icants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteRefereeLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteRefereeLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("deleteRefereeLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteRefereeLineForExternalApplicantsAsync(int id, string email) {
            this.deleteRefereeLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void deleteRefereeLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.deleteRefereeLineForExternalApplicantsOperationCompleted == null)) {
                this.deleteRefereeLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteRefereeLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("deleteRefereeLineForExternalApplicants", new object[] {
                        id,
                        email}, this.deleteRefereeLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OndeleteRefereeLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.deleteRefereeLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteRefereeLineForExternalApplicantsCompleted(this, new deleteRefereeLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteRefereeLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteRefereeLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteRefereeLine(int id, string appNo) {
            object[] results = this.Invoke("deleteRefereeLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteRefereeLineAsync(int id, string appNo) {
            this.deleteRefereeLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void deleteRefereeLineAsync(int id, string appNo, object userState) {
            if ((this.deleteRefereeLineOperationCompleted == null)) {
                this.deleteRefereeLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteRefereeLineOperationCompleted);
            }
            this.InvokeAsync("deleteRefereeLine", new object[] {
                        id,
                        appNo}, this.deleteRefereeLineOperationCompleted, userState);
        }
        
        private void OndeleteRefereeLineOperationCompleted(object arg) {
            if ((this.deleteRefereeLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteRefereeLineCompleted(this, new deleteRefereeLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteRequisitionLine(string employeeNo, string requisitionNo, int lineNo, int documentType) {
            object[] results = this.Invoke("deleteRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        lineNo,
                        documentType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteRequisitionLineAsync(string employeeNo, string requisitionNo, int lineNo, int documentType) {
            this.deleteRequisitionLineAsync(employeeNo, requisitionNo, lineNo, documentType, null);
        }
        
        /// <remarks/>
        public void deleteRequisitionLineAsync(string employeeNo, string requisitionNo, int lineNo, int documentType, object userState) {
            if ((this.deleteRequisitionLineOperationCompleted == null)) {
                this.deleteRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("deleteRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        lineNo,
                        documentType}, this.deleteRequisitionLineOperationCompleted, userState);
        }
        
        private void OndeleteRequisitionLineOperationCompleted(object arg) {
            if ((this.deleteRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteRequisitionLineCompleted(this, new deleteRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteStaffClaimLine(string employeeNo, string claimNo, int lineNo) {
            object[] results = this.Invoke("deleteStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteStaffClaimLineAsync(string employeeNo, string claimNo, int lineNo) {
            this.deleteStaffClaimLineAsync(employeeNo, claimNo, lineNo, null);
        }
        
        /// <remarks/>
        public void deleteStaffClaimLineAsync(string employeeNo, string claimNo, int lineNo, object userState) {
            if ((this.deleteStaffClaimLineOperationCompleted == null)) {
                this.deleteStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("deleteStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        lineNo}, this.deleteStaffClaimLineOperationCompleted, userState);
        }
        
        private void OndeleteStaffClaimLineOperationCompleted(object arg) {
            if ((this.deleteStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteStaffClaimLineCompleted(this, new deleteStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteTrainingLineForExternalApp" +
            "licants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteTrainingLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteTrainingLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("deleteTrainingLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrainingLineForExternalApplicantsAsync(int id, string email) {
            this.deleteTrainingLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void deleteTrainingLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.deleteTrainingLineForExternalApplicantsOperationCompleted == null)) {
                this.deleteTrainingLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrainingLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("deleteTrainingLineForExternalApplicants", new object[] {
                        id,
                        email}, this.deleteTrainingLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OndeleteTrainingLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.deleteTrainingLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrainingLineForExternalApplicantsCompleted(this, new deleteTrainingLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteTrainingLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteTrainingLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteTrainingLine(int id, string appNo) {
            object[] results = this.Invoke("deleteTrainingLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrainingLineAsync(int id, string appNo) {
            this.deleteTrainingLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void deleteTrainingLineAsync(int id, string appNo, object userState) {
            if ((this.deleteTrainingLineOperationCompleted == null)) {
                this.deleteTrainingLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrainingLineOperationCompleted);
            }
            this.InvokeAsync("deleteTrainingLine", new object[] {
                        id,
                        appNo}, this.deleteTrainingLineOperationCompleted, userState);
        }
        
        private void OndeleteTrainingLineOperationCompleted(object arg) {
            if ((this.deleteTrainingLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrainingLineCompleted(this, new deleteTrainingLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteTrainingParticipants2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteTrainingParticipants2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteTrainingParticipants2(int id, string reqNo) {
            object[] results = this.Invoke("deleteTrainingParticipants2", new object[] {
                        id,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrainingParticipants2Async(int id, string reqNo) {
            this.deleteTrainingParticipants2Async(id, reqNo, null);
        }
        
        /// <remarks/>
        public void deleteTrainingParticipants2Async(int id, string reqNo, object userState) {
            if ((this.deleteTrainingParticipants2OperationCompleted == null)) {
                this.deleteTrainingParticipants2OperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrainingParticipants2OperationCompleted);
            }
            this.InvokeAsync("deleteTrainingParticipants2", new object[] {
                        id,
                        reqNo}, this.deleteTrainingParticipants2OperationCompleted, userState);
        }
        
        private void OndeleteTrainingParticipants2OperationCompleted(object arg) {
            if ((this.deleteTrainingParticipants2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrainingParticipants2Completed(this, new deleteTrainingParticipants2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteTrainingParticipants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteTrainingParticipants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteTrainingParticipants(int id, string reqNo) {
            object[] results = this.Invoke("deleteTrainingParticipants", new object[] {
                        id,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrainingParticipantsAsync(int id, string reqNo) {
            this.deleteTrainingParticipantsAsync(id, reqNo, null);
        }
        
        /// <remarks/>
        public void deleteTrainingParticipantsAsync(int id, string reqNo, object userState) {
            if ((this.deleteTrainingParticipantsOperationCompleted == null)) {
                this.deleteTrainingParticipantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrainingParticipantsOperationCompleted);
            }
            this.InvokeAsync("deleteTrainingParticipants", new object[] {
                        id,
                        reqNo}, this.deleteTrainingParticipantsOperationCompleted, userState);
        }
        
        private void OndeleteTrainingParticipantsOperationCompleted(object arg) {
            if ((this.deleteTrainingParticipantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrainingParticipantsCompleted(this, new deleteTrainingParticipantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteTrainingcost2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteTrainingcost2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteTrainingcost2(int id, string reqNo) {
            object[] results = this.Invoke("deleteTrainingcost2", new object[] {
                        id,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrainingcost2Async(int id, string reqNo) {
            this.deleteTrainingcost2Async(id, reqNo, null);
        }
        
        /// <remarks/>
        public void deleteTrainingcost2Async(int id, string reqNo, object userState) {
            if ((this.deleteTrainingcost2OperationCompleted == null)) {
                this.deleteTrainingcost2OperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrainingcost2OperationCompleted);
            }
            this.InvokeAsync("deleteTrainingcost2", new object[] {
                        id,
                        reqNo}, this.deleteTrainingcost2OperationCompleted, userState);
        }
        
        private void OndeleteTrainingcost2OperationCompleted(object arg) {
            if ((this.deleteTrainingcost2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrainingcost2Completed(this, new deleteTrainingcost2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:deleteTrainingcosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="deleteTrainingcosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string deleteTrainingcosts(int id, string reqNo) {
            object[] results = this.Invoke("deleteTrainingcosts", new object[] {
                        id,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteTrainingcostsAsync(int id, string reqNo) {
            this.deleteTrainingcostsAsync(id, reqNo, null);
        }
        
        /// <remarks/>
        public void deleteTrainingcostsAsync(int id, string reqNo, object userState) {
            if ((this.deleteTrainingcostsOperationCompleted == null)) {
                this.deleteTrainingcostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTrainingcostsOperationCompleted);
            }
            this.InvokeAsync("deleteTrainingcosts", new object[] {
                        id,
                        reqNo}, this.deleteTrainingcostsOperationCompleted, userState);
        }
        
        private void OndeleteTrainingcostsOperationCompleted(object arg) {
            if ((this.deleteTrainingcostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTrainingcostsCompleted(this, new deleteTrainingcostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:editCasuals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="editCasuals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string editCasuals(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string originalResourceType, string originalResourceNo, string employeeToSurrender) {
            object[] results = this.Invoke("editCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays,
                        originalResourceType,
                        originalResourceNo,
                        employeeToSurrender});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string originalResourceType, string originalResourceNo, string employeeToSurrender) {
            this.editCasualsAsync(employeeNo, imprestNo, type, resource, workType, noRequired, noOfDays, originalResourceType, originalResourceNo, employeeToSurrender, null);
        }
        
        /// <remarks/>
        public void editCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string originalResourceType, string originalResourceNo, string employeeToSurrender, object userState) {
            if ((this.editCasualsOperationCompleted == null)) {
                this.editCasualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditCasualsOperationCompleted);
            }
            this.InvokeAsync("editCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays,
                        originalResourceType,
                        originalResourceNo,
                        employeeToSurrender}, this.editCasualsOperationCompleted, userState);
        }
        
        private void OneditCasualsOperationCompleted(object arg) {
            if ((this.editCasualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editCasualsCompleted(this, new editCasualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:editFuel", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="editFuel_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string editFuel(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, string originalNo, string originalWorkType) {
            object[] results = this.Invoke("editFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage,
                        originalNo,
                        originalWorkType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, string originalNo, string originalWorkType) {
            this.editFuelAsync(employeeNo, imprestNo, workType, resource, mileage, originalNo, originalWorkType, null);
        }
        
        /// <remarks/>
        public void editFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, string originalNo, string originalWorkType, object userState) {
            if ((this.editFuelOperationCompleted == null)) {
                this.editFuelOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditFuelOperationCompleted);
            }
            this.InvokeAsync("editFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage,
                        originalNo,
                        originalWorkType}, this.editFuelOperationCompleted, userState);
        }
        
        private void OneditFuelOperationCompleted(object arg) {
            if ((this.editFuelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editFuelCompleted(this, new editFuelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:editHelpDeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="editHelpDeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string editHelpDeskRequest(string jobno, string empNo, string category, string description) {
            object[] results = this.Invoke("editHelpDeskRequest", new object[] {
                        jobno,
                        empNo,
                        category,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editHelpDeskRequestAsync(string jobno, string empNo, string category, string description) {
            this.editHelpDeskRequestAsync(jobno, empNo, category, description, null);
        }
        
        /// <remarks/>
        public void editHelpDeskRequestAsync(string jobno, string empNo, string category, string description, object userState) {
            if ((this.editHelpDeskRequestOperationCompleted == null)) {
                this.editHelpDeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditHelpDeskRequestOperationCompleted);
            }
            this.InvokeAsync("editHelpDeskRequest", new object[] {
                        jobno,
                        empNo,
                        category,
                        description}, this.editHelpDeskRequestOperationCompleted, userState);
        }
        
        private void OneditHelpDeskRequestOperationCompleted(object arg) {
            if ((this.editHelpDeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editHelpDeskRequestCompleted(this, new editHelpDeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:editOtherCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="editOtherCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string editOtherCosts(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, int originalLineNo, string employeeToSurrender) {
            object[] results = this.Invoke("editOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost,
                        originalLineNo,
                        employeeToSurrender});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, int originalLineNo, string employeeToSurrender) {
            this.editOtherCostsAsync(employeeNo, imprestNo, voteItem, requiredFor, quantityRequired, noOfDays, unitCost, originalLineNo, employeeToSurrender, null);
        }
        
        /// <remarks/>
        public void editOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, int originalLineNo, string employeeToSurrender, object userState) {
            if ((this.editOtherCostsOperationCompleted == null)) {
                this.editOtherCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditOtherCostsOperationCompleted);
            }
            this.InvokeAsync("editOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost,
                        originalLineNo,
                        employeeToSurrender}, this.editOtherCostsOperationCompleted, userState);
        }
        
        private void OneditOtherCostsOperationCompleted(object arg) {
            if ((this.editOtherCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editOtherCostsCompleted(this, new editOtherCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:editPaymentVoucherLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="editPaymentVoucherLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void editPaymentVoucherLines(string docNo, int id, string expenditure, int accountType, string accountNo, string applieToDocNo) {
            this.Invoke("editPaymentVoucherLines", new object[] {
                        docNo,
                        id,
                        expenditure,
                        accountType,
                        accountNo,
                        applieToDocNo});
        }
        
        /// <remarks/>
        public void editPaymentVoucherLinesAsync(string docNo, int id, string expenditure, int accountType, string accountNo, string applieToDocNo) {
            this.editPaymentVoucherLinesAsync(docNo, id, expenditure, accountType, accountNo, applieToDocNo, null);
        }
        
        /// <remarks/>
        public void editPaymentVoucherLinesAsync(string docNo, int id, string expenditure, int accountType, string accountNo, string applieToDocNo, object userState) {
            if ((this.editPaymentVoucherLinesOperationCompleted == null)) {
                this.editPaymentVoucherLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditPaymentVoucherLinesOperationCompleted);
            }
            this.InvokeAsync("editPaymentVoucherLines", new object[] {
                        docNo,
                        id,
                        expenditure,
                        accountType,
                        accountNo,
                        applieToDocNo}, this.editPaymentVoucherLinesOperationCompleted, userState);
        }
        
        private void OneditPaymentVoucherLinesOperationCompleted(object arg) {
            if ((this.editPaymentVoucherLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editPaymentVoucherLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:editPettyCashLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="editPettyCashLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string editPettyCashLines(decimal amount, string reqNo, int id) {
            object[] results = this.Invoke("editPettyCashLines", new object[] {
                        amount,
                        reqNo,
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editPettyCashLinesAsync(decimal amount, string reqNo, int id) {
            this.editPettyCashLinesAsync(amount, reqNo, id, null);
        }
        
        /// <remarks/>
        public void editPettyCashLinesAsync(decimal amount, string reqNo, int id, object userState) {
            if ((this.editPettyCashLinesOperationCompleted == null)) {
                this.editPettyCashLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditPettyCashLinesOperationCompleted);
            }
            this.InvokeAsync("editPettyCashLines", new object[] {
                        amount,
                        reqNo,
                        id}, this.editPettyCashLinesOperationCompleted, userState);
        }
        
        private void OneditPettyCashLinesOperationCompleted(object arg) {
            if ((this.editPettyCashLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editPettyCashLinesCompleted(this, new editPettyCashLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:editPettyCashRequisitionLines2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="editPettyCashRequisitionLines2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string editPettyCashRequisitionLines2(string docNo, int id, string description, decimal amount) {
            object[] results = this.Invoke("editPettyCashRequisitionLines2", new object[] {
                        docNo,
                        id,
                        description,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editPettyCashRequisitionLines2Async(string docNo, int id, string description, decimal amount) {
            this.editPettyCashRequisitionLines2Async(docNo, id, description, amount, null);
        }
        
        /// <remarks/>
        public void editPettyCashRequisitionLines2Async(string docNo, int id, string description, decimal amount, object userState) {
            if ((this.editPettyCashRequisitionLines2OperationCompleted == null)) {
                this.editPettyCashRequisitionLines2OperationCompleted = new System.Threading.SendOrPostCallback(this.OneditPettyCashRequisitionLines2OperationCompleted);
            }
            this.InvokeAsync("editPettyCashRequisitionLines2", new object[] {
                        docNo,
                        id,
                        description,
                        amount}, this.editPettyCashRequisitionLines2OperationCompleted, userState);
        }
        
        private void OneditPettyCashRequisitionLines2OperationCompleted(object arg) {
            if ((this.editPettyCashRequisitionLines2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editPettyCashRequisitionLines2Completed(this, new editPettyCashRequisitionLines2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:editPettyCashSurrenderLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="editPettyCashSurrenderLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string editPettyCashSurrenderLines(string reqNo, int lineNo, decimal actualSpent, string receiptNo) {
            object[] results = this.Invoke("editPettyCashSurrenderLines", new object[] {
                        reqNo,
                        lineNo,
                        actualSpent,
                        receiptNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editPettyCashSurrenderLinesAsync(string reqNo, int lineNo, decimal actualSpent, string receiptNo) {
            this.editPettyCashSurrenderLinesAsync(reqNo, lineNo, actualSpent, receiptNo, null);
        }
        
        /// <remarks/>
        public void editPettyCashSurrenderLinesAsync(string reqNo, int lineNo, decimal actualSpent, string receiptNo, object userState) {
            if ((this.editPettyCashSurrenderLinesOperationCompleted == null)) {
                this.editPettyCashSurrenderLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditPettyCashSurrenderLinesOperationCompleted);
            }
            this.InvokeAsync("editPettyCashSurrenderLines", new object[] {
                        reqNo,
                        lineNo,
                        actualSpent,
                        receiptNo}, this.editPettyCashSurrenderLinesOperationCompleted, userState);
        }
        
        private void OneditPettyCashSurrenderLinesOperationCompleted(object arg) {
            if ((this.editPettyCashSurrenderLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editPettyCashSurrenderLinesCompleted(this, new editPettyCashSurrenderLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:editStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="editStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string editStaffClaimLine(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            object[] results = this.Invoke("editStaffClaimLine", new object[] {
                        lineNo,
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editStaffClaimLineAsync(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            this.editStaffClaimLineAsync(lineNo, employeeNo, claimNo, voteItem, description, amount, null);
        }
        
        /// <remarks/>
        public void editStaffClaimLineAsync(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount, object userState) {
            if ((this.editStaffClaimLineOperationCompleted == null)) {
                this.editStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("editStaffClaimLine", new object[] {
                        lineNo,
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount}, this.editStaffClaimLineOperationCompleted, userState);
        }
        
        private void OneditStaffClaimLineOperationCompleted(object arg) {
            if ((this.editStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editStaffClaimLineCompleted(this, new editStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:editTeamMember", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="editTeamMember_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string editTeamMember(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string originalNumber, string originalWorkType, string constituency, bool projectLead) {
            object[] results = this.Invoke("editTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        originalNumber,
                        originalWorkType,
                        constituency,
                        projectLead});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string originalNumber, string originalWorkType, string constituency, bool projectLead) {
            this.editTeamMemberAsync(employeeNo, imprestNo, destinationTown, voteItem, teamMember, noOfDays, originalNumber, originalWorkType, constituency, projectLead, null);
        }
        
        /// <remarks/>
        public void editTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string originalNumber, string originalWorkType, string constituency, bool projectLead, object userState) {
            if ((this.editTeamMemberOperationCompleted == null)) {
                this.editTeamMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditTeamMemberOperationCompleted);
            }
            this.InvokeAsync("editTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        originalNumber,
                        originalWorkType,
                        constituency,
                        projectLead}, this.editTeamMemberOperationCompleted, userState);
        }
        
        private void OneditTeamMemberOperationCompleted(object arg) {
            if ((this.editTeamMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editTeamMemberCompleted(this, new editTeamMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:editTrainingParticipants2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="editTrainingParticipants2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string editTrainingParticipants2(string docNo, int lineno, string type, string empNo, int noOfDays) {
            object[] results = this.Invoke("editTrainingParticipants2", new object[] {
                        docNo,
                        lineno,
                        type,
                        empNo,
                        noOfDays});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editTrainingParticipants2Async(string docNo, int lineno, string type, string empNo, int noOfDays) {
            this.editTrainingParticipants2Async(docNo, lineno, type, empNo, noOfDays, null);
        }
        
        /// <remarks/>
        public void editTrainingParticipants2Async(string docNo, int lineno, string type, string empNo, int noOfDays, object userState) {
            if ((this.editTrainingParticipants2OperationCompleted == null)) {
                this.editTrainingParticipants2OperationCompleted = new System.Threading.SendOrPostCallback(this.OneditTrainingParticipants2OperationCompleted);
            }
            this.InvokeAsync("editTrainingParticipants2", new object[] {
                        docNo,
                        lineno,
                        type,
                        empNo,
                        noOfDays}, this.editTrainingParticipants2OperationCompleted, userState);
        }
        
        private void OneditTrainingParticipants2OperationCompleted(object arg) {
            if ((this.editTrainingParticipants2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editTrainingParticipants2Completed(this, new editTrainingParticipants2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:editTrainingParticipants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="editTrainingParticipants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string editTrainingParticipants(int lineno, string type, string teammember, int noOfDays, string docNo) {
            object[] results = this.Invoke("editTrainingParticipants", new object[] {
                        lineno,
                        type,
                        teammember,
                        noOfDays,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editTrainingParticipantsAsync(int lineno, string type, string teammember, int noOfDays, string docNo) {
            this.editTrainingParticipantsAsync(lineno, type, teammember, noOfDays, docNo, null);
        }
        
        /// <remarks/>
        public void editTrainingParticipantsAsync(int lineno, string type, string teammember, int noOfDays, string docNo, object userState) {
            if ((this.editTrainingParticipantsOperationCompleted == null)) {
                this.editTrainingParticipantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditTrainingParticipantsOperationCompleted);
            }
            this.InvokeAsync("editTrainingParticipants", new object[] {
                        lineno,
                        type,
                        teammember,
                        noOfDays,
                        docNo}, this.editTrainingParticipantsOperationCompleted, userState);
        }
        
        private void OneditTrainingParticipantsOperationCompleted(object arg) {
            if ((this.editTrainingParticipantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editTrainingParticipantsCompleted(this, new editTrainingParticipantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:exportWorkplan", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="exportWorkplan_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string exportWorkplan(string planCode) {
            object[] results = this.Invoke("exportWorkplan", new object[] {
                        planCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void exportWorkplanAsync(string planCode) {
            this.exportWorkplanAsync(planCode, null);
        }
        
        /// <remarks/>
        public void exportWorkplanAsync(string planCode, object userState) {
            if ((this.exportWorkplanOperationCompleted == null)) {
                this.exportWorkplanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexportWorkplanOperationCompleted);
            }
            this.InvokeAsync("exportWorkplan", new object[] {
                        planCode}, this.exportWorkplanOperationCompleted, userState);
        }
        
        private void OnexportWorkplanOperationCompleted(object arg) {
            if ((this.exportWorkplanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exportWorkplanCompleted(this, new exportWorkplanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnApproveRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnApproveRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnApproveRequest(string docNo, string username, string commentLineText, int table_ID, int seqenceNo) {
            object[] results = this.Invoke("fnApproveRequest", new object[] {
                        docNo,
                        username,
                        commentLineText,
                        table_ID,
                        seqenceNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnApproveRequestAsync(string docNo, string username, string commentLineText, int table_ID, int seqenceNo) {
            this.fnApproveRequestAsync(docNo, username, commentLineText, table_ID, seqenceNo, null);
        }
        
        /// <remarks/>
        public void fnApproveRequestAsync(string docNo, string username, string commentLineText, int table_ID, int seqenceNo, object userState) {
            if ((this.fnApproveRequestOperationCompleted == null)) {
                this.fnApproveRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnApproveRequestOperationCompleted);
            }
            this.InvokeAsync("fnApproveRequest", new object[] {
                        docNo,
                        username,
                        commentLineText,
                        table_ID,
                        seqenceNo}, this.fnApproveRequestOperationCompleted, userState);
        }
        
        private void OnfnApproveRequestOperationCompleted(object arg) {
            if ((this.fnApproveRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnApproveRequestCompleted(this, new fnApproveRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCancelFuelRequistionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCancelFuelRequistionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnCancelFuelRequistionApproval(string docNo) {
            object[] results = this.Invoke("fnCancelFuelRequistionApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnCancelFuelRequistionApprovalAsync(string docNo) {
            this.fnCancelFuelRequistionApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnCancelFuelRequistionApprovalAsync(string docNo, object userState) {
            if ((this.fnCancelFuelRequistionApprovalOperationCompleted == null)) {
                this.fnCancelFuelRequistionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCancelFuelRequistionApprovalOperationCompleted);
            }
            this.InvokeAsync("fnCancelFuelRequistionApproval", new object[] {
                        docNo}, this.fnCancelFuelRequistionApprovalOperationCompleted, userState);
        }
        
        private void OnfnCancelFuelRequistionApprovalOperationCompleted(object arg) {
            if ((this.fnCancelFuelRequistionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCancelFuelRequistionApprovalCompleted(this, new fnCancelFuelRequistionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCancelImprestMemoApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCancelImprestMemoApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnCancelImprestMemoApproval(string employeeNo, string imprestNumber) {
            object[] results = this.Invoke("fnCancelImprestMemoApproval", new object[] {
                        employeeNo,
                        imprestNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnCancelImprestMemoApprovalAsync(string employeeNo, string imprestNumber) {
            this.fnCancelImprestMemoApprovalAsync(employeeNo, imprestNumber, null);
        }
        
        /// <remarks/>
        public void fnCancelImprestMemoApprovalAsync(string employeeNo, string imprestNumber, object userState) {
            if ((this.fnCancelImprestMemoApprovalOperationCompleted == null)) {
                this.fnCancelImprestMemoApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCancelImprestMemoApprovalOperationCompleted);
            }
            this.InvokeAsync("fnCancelImprestMemoApproval", new object[] {
                        employeeNo,
                        imprestNumber}, this.fnCancelImprestMemoApprovalOperationCompleted, userState);
        }
        
        private void OnfnCancelImprestMemoApprovalOperationCompleted(object arg) {
            if ((this.fnCancelImprestMemoApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCancelImprestMemoApprovalCompleted(this, new fnCancelImprestMemoApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCancelImprestSurrenderApproval" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCancelImprestSurrenderApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnCancelImprestSurrenderApproval(string employeeNo, string imprestNumber) {
            object[] results = this.Invoke("fnCancelImprestSurrenderApproval", new object[] {
                        employeeNo,
                        imprestNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnCancelImprestSurrenderApprovalAsync(string employeeNo, string imprestNumber) {
            this.fnCancelImprestSurrenderApprovalAsync(employeeNo, imprestNumber, null);
        }
        
        /// <remarks/>
        public void fnCancelImprestSurrenderApprovalAsync(string employeeNo, string imprestNumber, object userState) {
            if ((this.fnCancelImprestSurrenderApprovalOperationCompleted == null)) {
                this.fnCancelImprestSurrenderApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCancelImprestSurrenderApprovalOperationCompleted);
            }
            this.InvokeAsync("fnCancelImprestSurrenderApproval", new object[] {
                        employeeNo,
                        imprestNumber}, this.fnCancelImprestSurrenderApprovalOperationCompleted, userState);
        }
        
        private void OnfnCancelImprestSurrenderApprovalOperationCompleted(object arg) {
            if ((this.fnCancelImprestSurrenderApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCancelImprestSurrenderApprovalCompleted(this, new fnCancelImprestSurrenderApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCancelLPOApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCancelLPOApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnCancelLPOApproval(string docNo) {
            object[] results = this.Invoke("fnCancelLPOApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnCancelLPOApprovalAsync(string docNo) {
            this.fnCancelLPOApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnCancelLPOApprovalAsync(string docNo, object userState) {
            if ((this.fnCancelLPOApprovalOperationCompleted == null)) {
                this.fnCancelLPOApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCancelLPOApprovalOperationCompleted);
            }
            this.InvokeAsync("fnCancelLPOApproval", new object[] {
                        docNo}, this.fnCancelLPOApprovalOperationCompleted, userState);
        }
        
        private void OnfnCancelLPOApprovalOperationCompleted(object arg) {
            if ((this.fnCancelLPOApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCancelLPOApprovalCompleted(this, new fnCancelLPOApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCancelMaintenanceRequistionApp" +
            "roval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCancelMaintenanceRequistionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnCancelMaintenanceRequistionApproval(string docNo) {
            object[] results = this.Invoke("fnCancelMaintenanceRequistionApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnCancelMaintenanceRequistionApprovalAsync(string docNo) {
            this.fnCancelMaintenanceRequistionApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnCancelMaintenanceRequistionApprovalAsync(string docNo, object userState) {
            if ((this.fnCancelMaintenanceRequistionApprovalOperationCompleted == null)) {
                this.fnCancelMaintenanceRequistionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCancelMaintenanceRequistionApprovalOperationCompleted);
            }
            this.InvokeAsync("fnCancelMaintenanceRequistionApproval", new object[] {
                        docNo}, this.fnCancelMaintenanceRequistionApprovalOperationCompleted, userState);
        }
        
        private void OnfnCancelMaintenanceRequistionApprovalOperationCompleted(object arg) {
            if ((this.fnCancelMaintenanceRequistionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCancelMaintenanceRequistionApprovalCompleted(this, new fnCancelMaintenanceRequistionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCancelPaymentVoucherApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCancelPaymentVoucherApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnCancelPaymentVoucherApproval(string employeeNo, string docNumber) {
            object[] results = this.Invoke("fnCancelPaymentVoucherApproval", new object[] {
                        employeeNo,
                        docNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnCancelPaymentVoucherApprovalAsync(string employeeNo, string docNumber) {
            this.fnCancelPaymentVoucherApprovalAsync(employeeNo, docNumber, null);
        }
        
        /// <remarks/>
        public void fnCancelPaymentVoucherApprovalAsync(string employeeNo, string docNumber, object userState) {
            if ((this.fnCancelPaymentVoucherApprovalOperationCompleted == null)) {
                this.fnCancelPaymentVoucherApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCancelPaymentVoucherApprovalOperationCompleted);
            }
            this.InvokeAsync("fnCancelPaymentVoucherApproval", new object[] {
                        employeeNo,
                        docNumber}, this.fnCancelPaymentVoucherApprovalOperationCompleted, userState);
        }
        
        private void OnfnCancelPaymentVoucherApprovalOperationCompleted(object arg) {
            if ((this.fnCancelPaymentVoucherApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCancelPaymentVoucherApprovalCompleted(this, new fnCancelPaymentVoucherApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCancelPlogApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCancelPlogApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnCancelPlogApproval(string contractNo) {
            object[] results = this.Invoke("fnCancelPlogApproval", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnCancelPlogApprovalAsync(string contractNo) {
            this.fnCancelPlogApprovalAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void fnCancelPlogApprovalAsync(string contractNo, object userState) {
            if ((this.fnCancelPlogApprovalOperationCompleted == null)) {
                this.fnCancelPlogApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCancelPlogApprovalOperationCompleted);
            }
            this.InvokeAsync("fnCancelPlogApproval", new object[] {
                        contractNo}, this.fnCancelPlogApprovalOperationCompleted, userState);
        }
        
        private void OnfnCancelPlogApprovalOperationCompleted(object arg) {
            if ((this.fnCancelPlogApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCancelPlogApprovalCompleted(this, new fnCancelPlogApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCancelPurchaseRequisitionAppro" +
            "val", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCancelPurchaseRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnCancelPurchaseRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("fnCancelPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnCancelPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.fnCancelPurchaseRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void fnCancelPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.fnCancelPurchaseRequisitionApprovalOperationCompleted == null)) {
                this.fnCancelPurchaseRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCancelPurchaseRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("fnCancelPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.fnCancelPurchaseRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnfnCancelPurchaseRequisitionApprovalOperationCompleted(object arg) {
            if ((this.fnCancelPurchaseRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCancelPurchaseRequisitionApprovalCompleted(this, new fnCancelPurchaseRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCancelStaffPerformanceContract" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCancelStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnCancelStaffPerformanceContract(string contractNo) {
            object[] results = this.Invoke("fnCancelStaffPerformanceContract", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnCancelStaffPerformanceContractAsync(string contractNo) {
            this.fnCancelStaffPerformanceContractAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void fnCancelStaffPerformanceContractAsync(string contractNo, object userState) {
            if ((this.fnCancelStaffPerformanceContractOperationCompleted == null)) {
                this.fnCancelStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCancelStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("fnCancelStaffPerformanceContract", new object[] {
                        contractNo}, this.fnCancelStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnfnCancelStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.fnCancelStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCancelStaffPerformanceContractCompleted(this, new fnCancelStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCancelStoreReqApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCancelStoreReqApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnCancelStoreReqApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("fnCancelStoreReqApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnCancelStoreReqApprovalAsync(string employeeNo, string requisitionNo) {
            this.fnCancelStoreReqApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void fnCancelStoreReqApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.fnCancelStoreReqApprovalOperationCompleted == null)) {
                this.fnCancelStoreReqApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCancelStoreReqApprovalOperationCompleted);
            }
            this.InvokeAsync("fnCancelStoreReqApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.fnCancelStoreReqApprovalOperationCompleted, userState);
        }
        
        private void OnfnCancelStoreReqApprovalOperationCompleted(object arg) {
            if ((this.fnCancelStoreReqApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCancelStoreReqApprovalCompleted(this, new fnCancelStoreReqApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCancelSubmitofStandardAppraisa" +
            "l", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCancelSubmitofStandardAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnCancelSubmitofStandardAppraisal(string docNo) {
            object[] results = this.Invoke("fnCancelSubmitofStandardAppraisal", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnCancelSubmitofStandardAppraisalAsync(string docNo) {
            this.fnCancelSubmitofStandardAppraisalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnCancelSubmitofStandardAppraisalAsync(string docNo, object userState) {
            if ((this.fnCancelSubmitofStandardAppraisalOperationCompleted == null)) {
                this.fnCancelSubmitofStandardAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCancelSubmitofStandardAppraisalOperationCompleted);
            }
            this.InvokeAsync("fnCancelSubmitofStandardAppraisal", new object[] {
                        docNo}, this.fnCancelSubmitofStandardAppraisalOperationCompleted, userState);
        }
        
        private void OnfnCancelSubmitofStandardAppraisalOperationCompleted(object arg) {
            if ((this.fnCancelSubmitofStandardAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCancelSubmitofStandardAppraisalCompleted(this, new fnCancelSubmitofStandardAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnChangePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnChangePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool fnChangePassword(string userID, string currPassword, string newPassword) {
            object[] results = this.Invoke("fnChangePassword", new object[] {
                        userID,
                        currPassword,
                        newPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void fnChangePasswordAsync(string userID, string currPassword, string newPassword) {
            this.fnChangePasswordAsync(userID, currPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void fnChangePasswordAsync(string userID, string currPassword, string newPassword, object userState) {
            if ((this.fnChangePasswordOperationCompleted == null)) {
                this.fnChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("fnChangePassword", new object[] {
                        userID,
                        currPassword,
                        newPassword}, this.fnChangePasswordOperationCompleted, userState);
        }
        
        private void OnfnChangePasswordOperationCompleted(object arg) {
            if ((this.fnChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnChangePasswordCompleted(this, new fnChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnConvertFile", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnConvertFile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnConvertFile(string fileLink, string extensionType, int tableId, string fileName, string recordNo, int documentType) {
            object[] results = this.Invoke("fnConvertFile", new object[] {
                        fileLink,
                        extensionType,
                        tableId,
                        fileName,
                        recordNo,
                        documentType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnConvertFileAsync(string fileLink, string extensionType, int tableId, string fileName, string recordNo, int documentType) {
            this.fnConvertFileAsync(fileLink, extensionType, tableId, fileName, recordNo, documentType, null);
        }
        
        /// <remarks/>
        public void fnConvertFileAsync(string fileLink, string extensionType, int tableId, string fileName, string recordNo, int documentType, object userState) {
            if ((this.fnConvertFileOperationCompleted == null)) {
                this.fnConvertFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnConvertFileOperationCompleted);
            }
            this.InvokeAsync("fnConvertFile", new object[] {
                        fileLink,
                        extensionType,
                        tableId,
                        fileName,
                        recordNo,
                        documentType}, this.fnConvertFileOperationCompleted, userState);
        }
        
        private void OnfnConvertFileOperationCompleted(object arg) {
            if ((this.fnConvertFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnConvertFileCompleted(this, new fnConvertFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCreateFolder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCreateFolder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnCreateFolder(string tenderNo) {
            object[] results = this.Invoke("fnCreateFolder", new object[] {
                        tenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnCreateFolderAsync(string tenderNo) {
            this.fnCreateFolderAsync(tenderNo, null);
        }
        
        /// <remarks/>
        public void fnCreateFolderAsync(string tenderNo, object userState) {
            if ((this.fnCreateFolderOperationCompleted == null)) {
                this.fnCreateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCreateFolderOperationCompleted);
            }
            this.InvokeAsync("fnCreateFolder", new object[] {
                        tenderNo}, this.fnCreateFolderOperationCompleted, userState);
        }
        
        private void OnfnCreateFolderOperationCompleted(object arg) {
            if ((this.fnCreateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCreateFolderCompleted(this, new fnCreateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCreateFuelRequistion", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCreateFuelRequistion_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnCreateFuelRequistion(
                    decimal pBatteryWater, 
                    decimal pCarWash, 
                    string pClosedBy, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime pDateClosed, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime pDateTakenforFueling, 
                    string pDriverName, 
                    string pFixedAssetNo, 
                    decimal pOdometerReading, 
                    decimal pOilLitres, 
                    decimal pOilType, 
                    string pPostedInvoiceNo, 
                    string pPreparedBy, 
                    decimal pPriceLitre, 
                    decimal pQuantityofFuelLitres, 
                    string pQuoteNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime pRequestDate, 
                    string pRequisitionNo, 
                    string pResponsibilityCenter, 
                    int pTypeofFuel, 
                    string pVehicleRegNo, 
                    string pVendorInvoiceNo, 
                    string pVendorName, 
                    string pVendorDealer, 
                    decimal pWheelAlignment, 
                    decimal pWheelBalancing, 
                    decimal pCoolant, 
                    string pDepartment, 
                    string pDescription, 
                    string pDriver, 
                    decimal pOil) {
            object[] results = this.Invoke("fnCreateFuelRequistion", new object[] {
                        pBatteryWater,
                        pCarWash,
                        pClosedBy,
                        pDateClosed,
                        pDateTakenforFueling,
                        pDriverName,
                        pFixedAssetNo,
                        pOdometerReading,
                        pOilLitres,
                        pOilType,
                        pPostedInvoiceNo,
                        pPreparedBy,
                        pPriceLitre,
                        pQuantityofFuelLitres,
                        pQuoteNo,
                        pRequestDate,
                        pRequisitionNo,
                        pResponsibilityCenter,
                        pTypeofFuel,
                        pVehicleRegNo,
                        pVendorInvoiceNo,
                        pVendorName,
                        pVendorDealer,
                        pWheelAlignment,
                        pWheelBalancing,
                        pCoolant,
                        pDepartment,
                        pDescription,
                        pDriver,
                        pOil});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnCreateFuelRequistionAsync(
                    decimal pBatteryWater, 
                    decimal pCarWash, 
                    string pClosedBy, 
                    System.DateTime pDateClosed, 
                    System.DateTime pDateTakenforFueling, 
                    string pDriverName, 
                    string pFixedAssetNo, 
                    decimal pOdometerReading, 
                    decimal pOilLitres, 
                    decimal pOilType, 
                    string pPostedInvoiceNo, 
                    string pPreparedBy, 
                    decimal pPriceLitre, 
                    decimal pQuantityofFuelLitres, 
                    string pQuoteNo, 
                    System.DateTime pRequestDate, 
                    string pRequisitionNo, 
                    string pResponsibilityCenter, 
                    int pTypeofFuel, 
                    string pVehicleRegNo, 
                    string pVendorInvoiceNo, 
                    string pVendorName, 
                    string pVendorDealer, 
                    decimal pWheelAlignment, 
                    decimal pWheelBalancing, 
                    decimal pCoolant, 
                    string pDepartment, 
                    string pDescription, 
                    string pDriver, 
                    decimal pOil) {
            this.fnCreateFuelRequistionAsync(pBatteryWater, pCarWash, pClosedBy, pDateClosed, pDateTakenforFueling, pDriverName, pFixedAssetNo, pOdometerReading, pOilLitres, pOilType, pPostedInvoiceNo, pPreparedBy, pPriceLitre, pQuantityofFuelLitres, pQuoteNo, pRequestDate, pRequisitionNo, pResponsibilityCenter, pTypeofFuel, pVehicleRegNo, pVendorInvoiceNo, pVendorName, pVendorDealer, pWheelAlignment, pWheelBalancing, pCoolant, pDepartment, pDescription, pDriver, pOil, null);
        }
        
        /// <remarks/>
        public void fnCreateFuelRequistionAsync(
                    decimal pBatteryWater, 
                    decimal pCarWash, 
                    string pClosedBy, 
                    System.DateTime pDateClosed, 
                    System.DateTime pDateTakenforFueling, 
                    string pDriverName, 
                    string pFixedAssetNo, 
                    decimal pOdometerReading, 
                    decimal pOilLitres, 
                    decimal pOilType, 
                    string pPostedInvoiceNo, 
                    string pPreparedBy, 
                    decimal pPriceLitre, 
                    decimal pQuantityofFuelLitres, 
                    string pQuoteNo, 
                    System.DateTime pRequestDate, 
                    string pRequisitionNo, 
                    string pResponsibilityCenter, 
                    int pTypeofFuel, 
                    string pVehicleRegNo, 
                    string pVendorInvoiceNo, 
                    string pVendorName, 
                    string pVendorDealer, 
                    decimal pWheelAlignment, 
                    decimal pWheelBalancing, 
                    decimal pCoolant, 
                    string pDepartment, 
                    string pDescription, 
                    string pDriver, 
                    decimal pOil, 
                    object userState) {
            if ((this.fnCreateFuelRequistionOperationCompleted == null)) {
                this.fnCreateFuelRequistionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCreateFuelRequistionOperationCompleted);
            }
            this.InvokeAsync("fnCreateFuelRequistion", new object[] {
                        pBatteryWater,
                        pCarWash,
                        pClosedBy,
                        pDateClosed,
                        pDateTakenforFueling,
                        pDriverName,
                        pFixedAssetNo,
                        pOdometerReading,
                        pOilLitres,
                        pOilType,
                        pPostedInvoiceNo,
                        pPreparedBy,
                        pPriceLitre,
                        pQuantityofFuelLitres,
                        pQuoteNo,
                        pRequestDate,
                        pRequisitionNo,
                        pResponsibilityCenter,
                        pTypeofFuel,
                        pVehicleRegNo,
                        pVendorInvoiceNo,
                        pVendorName,
                        pVendorDealer,
                        pWheelAlignment,
                        pWheelBalancing,
                        pCoolant,
                        pDepartment,
                        pDescription,
                        pDriver,
                        pOil}, this.fnCreateFuelRequistionOperationCompleted, userState);
        }
        
        private void OnfnCreateFuelRequistionOperationCompleted(object arg) {
            if ((this.fnCreateFuelRequistionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCreateFuelRequistionCompleted(this, new fnCreateFuelRequistionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCreateMaintenanceRequistion", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCreateMaintenanceRequistion_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnCreateMaintenanceRequistion(
                    string pVehicle_Reg_No, 
                    string pCost_Center_Name, 
                    string pVehicle_Location, 
                    decimal pOdometer_Reading, 
                    string pRequested_By, 
                    string pDepartment_Name, 
                    string pUnit_a160Name, 
                    string pVendora40Dealera41, 
                    string pVendor_Name, 
                    string pResponsible_Employee, 
                    string pResponsible_Employee_Name, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime pRequest_Date, 
                    string pDescription, 
                    string pService_Code, 
                    string pService_Name, 
                    string pMake, 
                    string pModel, 
                    string pDriver, 
                    string pDriver_Name, 
                    string pPrepared_By, 
                    string pClosed_By, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime pDate_Closed, 
                    string pVendor_Invoice_No) {
            object[] results = this.Invoke("fnCreateMaintenanceRequistion", new object[] {
                        pVehicle_Reg_No,
                        pCost_Center_Name,
                        pVehicle_Location,
                        pOdometer_Reading,
                        pRequested_By,
                        pDepartment_Name,
                        pUnit_a160Name,
                        pVendora40Dealera41,
                        pVendor_Name,
                        pResponsible_Employee,
                        pResponsible_Employee_Name,
                        pRequest_Date,
                        pDescription,
                        pService_Code,
                        pService_Name,
                        pMake,
                        pModel,
                        pDriver,
                        pDriver_Name,
                        pPrepared_By,
                        pClosed_By,
                        pDate_Closed,
                        pVendor_Invoice_No});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnCreateMaintenanceRequistionAsync(
                    string pVehicle_Reg_No, 
                    string pCost_Center_Name, 
                    string pVehicle_Location, 
                    decimal pOdometer_Reading, 
                    string pRequested_By, 
                    string pDepartment_Name, 
                    string pUnit_a160Name, 
                    string pVendora40Dealera41, 
                    string pVendor_Name, 
                    string pResponsible_Employee, 
                    string pResponsible_Employee_Name, 
                    System.DateTime pRequest_Date, 
                    string pDescription, 
                    string pService_Code, 
                    string pService_Name, 
                    string pMake, 
                    string pModel, 
                    string pDriver, 
                    string pDriver_Name, 
                    string pPrepared_By, 
                    string pClosed_By, 
                    System.DateTime pDate_Closed, 
                    string pVendor_Invoice_No) {
            this.fnCreateMaintenanceRequistionAsync(pVehicle_Reg_No, pCost_Center_Name, pVehicle_Location, pOdometer_Reading, pRequested_By, pDepartment_Name, pUnit_a160Name, pVendora40Dealera41, pVendor_Name, pResponsible_Employee, pResponsible_Employee_Name, pRequest_Date, pDescription, pService_Code, pService_Name, pMake, pModel, pDriver, pDriver_Name, pPrepared_By, pClosed_By, pDate_Closed, pVendor_Invoice_No, null);
        }
        
        /// <remarks/>
        public void fnCreateMaintenanceRequistionAsync(
                    string pVehicle_Reg_No, 
                    string pCost_Center_Name, 
                    string pVehicle_Location, 
                    decimal pOdometer_Reading, 
                    string pRequested_By, 
                    string pDepartment_Name, 
                    string pUnit_a160Name, 
                    string pVendora40Dealera41, 
                    string pVendor_Name, 
                    string pResponsible_Employee, 
                    string pResponsible_Employee_Name, 
                    System.DateTime pRequest_Date, 
                    string pDescription, 
                    string pService_Code, 
                    string pService_Name, 
                    string pMake, 
                    string pModel, 
                    string pDriver, 
                    string pDriver_Name, 
                    string pPrepared_By, 
                    string pClosed_By, 
                    System.DateTime pDate_Closed, 
                    string pVendor_Invoice_No, 
                    object userState) {
            if ((this.fnCreateMaintenanceRequistionOperationCompleted == null)) {
                this.fnCreateMaintenanceRequistionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCreateMaintenanceRequistionOperationCompleted);
            }
            this.InvokeAsync("fnCreateMaintenanceRequistion", new object[] {
                        pVehicle_Reg_No,
                        pCost_Center_Name,
                        pVehicle_Location,
                        pOdometer_Reading,
                        pRequested_By,
                        pDepartment_Name,
                        pUnit_a160Name,
                        pVendora40Dealera41,
                        pVendor_Name,
                        pResponsible_Employee,
                        pResponsible_Employee_Name,
                        pRequest_Date,
                        pDescription,
                        pService_Code,
                        pService_Name,
                        pMake,
                        pModel,
                        pDriver,
                        pDriver_Name,
                        pPrepared_By,
                        pClosed_By,
                        pDate_Closed,
                        pVendor_Invoice_No}, this.fnCreateMaintenanceRequistionOperationCompleted, userState);
        }
        
        private void OnfnCreateMaintenanceRequistionOperationCompleted(object arg) {
            if ((this.fnCreateMaintenanceRequistionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCreateMaintenanceRequistionCompleted(this, new fnCreateMaintenanceRequistionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCreateStoreReqLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCreateStoreReqLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool fnCreateStoreReqLine(string docNo, string itemCategory, string itemNo, decimal quantity) {
            object[] results = this.Invoke("fnCreateStoreReqLine", new object[] {
                        docNo,
                        itemCategory,
                        itemNo,
                        quantity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void fnCreateStoreReqLineAsync(string docNo, string itemCategory, string itemNo, decimal quantity) {
            this.fnCreateStoreReqLineAsync(docNo, itemCategory, itemNo, quantity, null);
        }
        
        /// <remarks/>
        public void fnCreateStoreReqLineAsync(string docNo, string itemCategory, string itemNo, decimal quantity, object userState) {
            if ((this.fnCreateStoreReqLineOperationCompleted == null)) {
                this.fnCreateStoreReqLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCreateStoreReqLineOperationCompleted);
            }
            this.InvokeAsync("fnCreateStoreReqLine", new object[] {
                        docNo,
                        itemCategory,
                        itemNo,
                        quantity}, this.fnCreateStoreReqLineOperationCompleted, userState);
        }
        
        private void OnfnCreateStoreReqLineOperationCompleted(object arg) {
            if ((this.fnCreateStoreReqLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCreateStoreReqLineCompleted(this, new fnCreateStoreReqLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnCreateStoreRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnCreateStoreRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnCreateStoreRequisition(string empNo, string requisitionNo, string location, string description) {
            object[] results = this.Invoke("fnCreateStoreRequisition", new object[] {
                        empNo,
                        requisitionNo,
                        location,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnCreateStoreRequisitionAsync(string empNo, string requisitionNo, string location, string description) {
            this.fnCreateStoreRequisitionAsync(empNo, requisitionNo, location, description, null);
        }
        
        /// <remarks/>
        public void fnCreateStoreRequisitionAsync(string empNo, string requisitionNo, string location, string description, object userState) {
            if ((this.fnCreateStoreRequisitionOperationCompleted == null)) {
                this.fnCreateStoreRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCreateStoreRequisitionOperationCompleted);
            }
            this.InvokeAsync("fnCreateStoreRequisition", new object[] {
                        empNo,
                        requisitionNo,
                        location,
                        description}, this.fnCreateStoreRequisitionOperationCompleted, userState);
        }
        
        private void OnfnCreateStoreRequisitionOperationCompleted(object arg) {
            if ((this.fnCreateStoreRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCreateStoreRequisitionCompleted(this, new fnCreateStoreRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnDeleteStaffClaimsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnDeleteStaffClaimsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnDeleteStaffClaimsLines(string docNo, int lineNo) {
            object[] results = this.Invoke("fnDeleteStaffClaimsLines", new object[] {
                        docNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnDeleteStaffClaimsLinesAsync(string docNo, int lineNo) {
            this.fnDeleteStaffClaimsLinesAsync(docNo, lineNo, null);
        }
        
        /// <remarks/>
        public void fnDeleteStaffClaimsLinesAsync(string docNo, int lineNo, object userState) {
            if ((this.fnDeleteStaffClaimsLinesOperationCompleted == null)) {
                this.fnDeleteStaffClaimsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnDeleteStaffClaimsLinesOperationCompleted);
            }
            this.InvokeAsync("fnDeleteStaffClaimsLines", new object[] {
                        docNo,
                        lineNo}, this.fnDeleteStaffClaimsLinesOperationCompleted, userState);
        }
        
        private void OnfnDeleteStaffClaimsLinesOperationCompleted(object arg) {
            if ((this.fnDeleteStaffClaimsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnDeleteStaffClaimsLinesCompleted(this, new fnDeleteStaffClaimsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnDeleteStaffClaims", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnDeleteStaffClaims_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void fnDeleteStaffClaims(string docNo) {
            this.Invoke("fnDeleteStaffClaims", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void fnDeleteStaffClaimsAsync(string docNo) {
            this.fnDeleteStaffClaimsAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnDeleteStaffClaimsAsync(string docNo, object userState) {
            if ((this.fnDeleteStaffClaimsOperationCompleted == null)) {
                this.fnDeleteStaffClaimsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnDeleteStaffClaimsOperationCompleted);
            }
            this.InvokeAsync("fnDeleteStaffClaims", new object[] {
                        docNo}, this.fnDeleteStaffClaimsOperationCompleted, userState);
        }
        
        private void OnfnDeleteStaffClaimsOperationCompleted(object arg) {
            if ((this.fnDeleteStaffClaimsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnDeleteStaffClaimsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnDeleteStoreReqLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnDeleteStoreReqLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnDeleteStoreReqLine(string docNo, int lineNo) {
            object[] results = this.Invoke("fnDeleteStoreReqLine", new object[] {
                        docNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnDeleteStoreReqLineAsync(string docNo, int lineNo) {
            this.fnDeleteStoreReqLineAsync(docNo, lineNo, null);
        }
        
        /// <remarks/>
        public void fnDeleteStoreReqLineAsync(string docNo, int lineNo, object userState) {
            if ((this.fnDeleteStoreReqLineOperationCompleted == null)) {
                this.fnDeleteStoreReqLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnDeleteStoreReqLineOperationCompleted);
            }
            this.InvokeAsync("fnDeleteStoreReqLine", new object[] {
                        docNo,
                        lineNo}, this.fnDeleteStoreReqLineOperationCompleted, userState);
        }
        
        private void OnfnDeleteStoreReqLineOperationCompleted(object arg) {
            if ((this.fnDeleteStoreReqLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnDeleteStoreReqLineCompleted(this, new fnDeleteStoreReqLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnDeleteTrainingFeedbackLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnDeleteTrainingFeedbackLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnDeleteTrainingFeedbackLines(int lineno, string feedbackno) {
            object[] results = this.Invoke("fnDeleteTrainingFeedbackLines", new object[] {
                        lineno,
                        feedbackno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnDeleteTrainingFeedbackLinesAsync(int lineno, string feedbackno) {
            this.fnDeleteTrainingFeedbackLinesAsync(lineno, feedbackno, null);
        }
        
        /// <remarks/>
        public void fnDeleteTrainingFeedbackLinesAsync(int lineno, string feedbackno, object userState) {
            if ((this.fnDeleteTrainingFeedbackLinesOperationCompleted == null)) {
                this.fnDeleteTrainingFeedbackLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnDeleteTrainingFeedbackLinesOperationCompleted);
            }
            this.InvokeAsync("fnDeleteTrainingFeedbackLines", new object[] {
                        lineno,
                        feedbackno}, this.fnDeleteTrainingFeedbackLinesOperationCompleted, userState);
        }
        
        private void OnfnDeleteTrainingFeedbackLinesOperationCompleted(object arg) {
            if ((this.fnDeleteTrainingFeedbackLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnDeleteTrainingFeedbackLinesCompleted(this, new fnDeleteTrainingFeedbackLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnDeleteTrainingNeedsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnDeleteTrainingNeedsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnDeleteTrainingNeedsLines(string needsno, int lineno) {
            object[] results = this.Invoke("fnDeleteTrainingNeedsLines", new object[] {
                        needsno,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnDeleteTrainingNeedsLinesAsync(string needsno, int lineno) {
            this.fnDeleteTrainingNeedsLinesAsync(needsno, lineno, null);
        }
        
        /// <remarks/>
        public void fnDeleteTrainingNeedsLinesAsync(string needsno, int lineno, object userState) {
            if ((this.fnDeleteTrainingNeedsLinesOperationCompleted == null)) {
                this.fnDeleteTrainingNeedsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnDeleteTrainingNeedsLinesOperationCompleted);
            }
            this.InvokeAsync("fnDeleteTrainingNeedsLines", new object[] {
                        needsno,
                        lineno}, this.fnDeleteTrainingNeedsLinesOperationCompleted, userState);
        }
        
        private void OnfnDeleteTrainingNeedsLinesOperationCompleted(object arg) {
            if ((this.fnDeleteTrainingNeedsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnDeleteTrainingNeedsLinesCompleted(this, new fnDeleteTrainingNeedsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnEditStandardAppraisalPIP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnEditStandardAppraisalPIP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnEditStandardAppraisalPIP(string docNo, int lineno, string pipcategory, string desc) {
            object[] results = this.Invoke("fnEditStandardAppraisalPIP", new object[] {
                        docNo,
                        lineno,
                        pipcategory,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnEditStandardAppraisalPIPAsync(string docNo, int lineno, string pipcategory, string desc) {
            this.fnEditStandardAppraisalPIPAsync(docNo, lineno, pipcategory, desc, null);
        }
        
        /// <remarks/>
        public void fnEditStandardAppraisalPIPAsync(string docNo, int lineno, string pipcategory, string desc, object userState) {
            if ((this.fnEditStandardAppraisalPIPOperationCompleted == null)) {
                this.fnEditStandardAppraisalPIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnEditStandardAppraisalPIPOperationCompleted);
            }
            this.InvokeAsync("fnEditStandardAppraisalPIP", new object[] {
                        docNo,
                        lineno,
                        pipcategory,
                        desc}, this.fnEditStandardAppraisalPIPOperationCompleted, userState);
        }
        
        private void OnfnEditStandardAppraisalPIPOperationCompleted(object arg) {
            if ((this.fnEditStandardAppraisalPIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnEditStandardAppraisalPIPCompleted(this, new fnEditStandardAppraisalPIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnEditStandardAppraisalTrainigNe" +
            "eds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnEditStandardAppraisalTrainigNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnEditStandardAppraisalTrainigNeeds(string docNo, int lineno, string category, string desc) {
            object[] results = this.Invoke("fnEditStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        lineno,
                        category,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnEditStandardAppraisalTrainigNeedsAsync(string docNo, int lineno, string category, string desc) {
            this.fnEditStandardAppraisalTrainigNeedsAsync(docNo, lineno, category, desc, null);
        }
        
        /// <remarks/>
        public void fnEditStandardAppraisalTrainigNeedsAsync(string docNo, int lineno, string category, string desc, object userState) {
            if ((this.fnEditStandardAppraisalTrainigNeedsOperationCompleted == null)) {
                this.fnEditStandardAppraisalTrainigNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnEditStandardAppraisalTrainigNeedsOperationCompleted);
            }
            this.InvokeAsync("fnEditStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        lineno,
                        category,
                        desc}, this.fnEditStandardAppraisalTrainigNeedsOperationCompleted, userState);
        }
        
        private void OnfnEditStandardAppraisalTrainigNeedsOperationCompleted(object arg) {
            if ((this.fnEditStandardAppraisalTrainigNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnEditStandardAppraisalTrainigNeedsCompleted(this, new fnEditStandardAppraisalTrainigNeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnEditTrainingFeedbackLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnEditTrainingFeedbackLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnEditTrainingFeedbackLines(int lineno, string feedbackno, string rating, string category, string comments) {
            object[] results = this.Invoke("fnEditTrainingFeedbackLines", new object[] {
                        lineno,
                        feedbackno,
                        rating,
                        category,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnEditTrainingFeedbackLinesAsync(int lineno, string feedbackno, string rating, string category, string comments) {
            this.fnEditTrainingFeedbackLinesAsync(lineno, feedbackno, rating, category, comments, null);
        }
        
        /// <remarks/>
        public void fnEditTrainingFeedbackLinesAsync(int lineno, string feedbackno, string rating, string category, string comments, object userState) {
            if ((this.fnEditTrainingFeedbackLinesOperationCompleted == null)) {
                this.fnEditTrainingFeedbackLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnEditTrainingFeedbackLinesOperationCompleted);
            }
            this.InvokeAsync("fnEditTrainingFeedbackLines", new object[] {
                        lineno,
                        feedbackno,
                        rating,
                        category,
                        comments}, this.fnEditTrainingFeedbackLinesOperationCompleted, userState);
        }
        
        private void OnfnEditTrainingFeedbackLinesOperationCompleted(object arg) {
            if ((this.fnEditTrainingFeedbackLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnEditTrainingFeedbackLinesCompleted(this, new fnEditTrainingFeedbackLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnEditTrainingNeedsRequestLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnEditTrainingNeedsRequestLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnEditTrainingNeedsRequestLines(string needsno, int lineno, string description, int source, string comments) {
            object[] results = this.Invoke("fnEditTrainingNeedsRequestLines", new object[] {
                        needsno,
                        lineno,
                        description,
                        source,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnEditTrainingNeedsRequestLinesAsync(string needsno, int lineno, string description, int source, string comments) {
            this.fnEditTrainingNeedsRequestLinesAsync(needsno, lineno, description, source, comments, null);
        }
        
        /// <remarks/>
        public void fnEditTrainingNeedsRequestLinesAsync(string needsno, int lineno, string description, int source, string comments, object userState) {
            if ((this.fnEditTrainingNeedsRequestLinesOperationCompleted == null)) {
                this.fnEditTrainingNeedsRequestLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnEditTrainingNeedsRequestLinesOperationCompleted);
            }
            this.InvokeAsync("fnEditTrainingNeedsRequestLines", new object[] {
                        needsno,
                        lineno,
                        description,
                        source,
                        comments}, this.fnEditTrainingNeedsRequestLinesOperationCompleted, userState);
        }
        
        private void OnfnEditTrainingNeedsRequestLinesOperationCompleted(object arg) {
            if ((this.fnEditTrainingNeedsRequestLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnEditTrainingNeedsRequestLinesCompleted(this, new fnEditTrainingNeedsRequestLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGenerateAWPReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGenerateAWPReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGenerateAWPReport(string docNo) {
            object[] results = this.Invoke("fnGenerateAWPReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGenerateAWPReportAsync(string docNo) {
            this.fnGenerateAWPReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnGenerateAWPReportAsync(string docNo, object userState) {
            if ((this.fnGenerateAWPReportOperationCompleted == null)) {
                this.fnGenerateAWPReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGenerateAWPReportOperationCompleted);
            }
            this.InvokeAsync("fnGenerateAWPReport", new object[] {
                        docNo}, this.fnGenerateAWPReportOperationCompleted, userState);
        }
        
        private void OnfnGenerateAWPReportOperationCompleted(object arg) {
            if ((this.fnGenerateAWPReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGenerateAWPReportCompleted(this, new fnGenerateAWPReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGenerateBoardPCReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGenerateBoardPCReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGenerateBoardPCReport(string docNo) {
            object[] results = this.Invoke("fnGenerateBoardPCReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGenerateBoardPCReportAsync(string docNo) {
            this.fnGenerateBoardPCReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnGenerateBoardPCReportAsync(string docNo, object userState) {
            if ((this.fnGenerateBoardPCReportOperationCompleted == null)) {
                this.fnGenerateBoardPCReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGenerateBoardPCReportOperationCompleted);
            }
            this.InvokeAsync("fnGenerateBoardPCReport", new object[] {
                        docNo}, this.fnGenerateBoardPCReportOperationCompleted, userState);
        }
        
        private void OnfnGenerateBoardPCReportOperationCompleted(object arg) {
            if ((this.fnGenerateBoardPCReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGenerateBoardPCReportCompleted(this, new fnGenerateBoardPCReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGenerateCSPReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGenerateCSPReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGenerateCSPReport(string docNo) {
            object[] results = this.Invoke("fnGenerateCSPReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGenerateCSPReportAsync(string docNo) {
            this.fnGenerateCSPReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnGenerateCSPReportAsync(string docNo, object userState) {
            if ((this.fnGenerateCSPReportOperationCompleted == null)) {
                this.fnGenerateCSPReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGenerateCSPReportOperationCompleted);
            }
            this.InvokeAsync("fnGenerateCSPReport", new object[] {
                        docNo}, this.fnGenerateCSPReportOperationCompleted, userState);
        }
        
        private void OnfnGenerateCSPReportOperationCompleted(object arg) {
            if ((this.fnGenerateCSPReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGenerateCSPReportCompleted(this, new fnGenerateCSPReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGenerateIndividualPcReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGenerateIndividualPcReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGenerateIndividualPcReport(string docNo) {
            object[] results = this.Invoke("fnGenerateIndividualPcReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGenerateIndividualPcReportAsync(string docNo) {
            this.fnGenerateIndividualPcReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnGenerateIndividualPcReportAsync(string docNo, object userState) {
            if ((this.fnGenerateIndividualPcReportOperationCompleted == null)) {
                this.fnGenerateIndividualPcReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGenerateIndividualPcReportOperationCompleted);
            }
            this.InvokeAsync("fnGenerateIndividualPcReport", new object[] {
                        docNo}, this.fnGenerateIndividualPcReportOperationCompleted, userState);
        }
        
        private void OnfnGenerateIndividualPcReportOperationCompleted(object arg) {
            if ((this.fnGenerateIndividualPcReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGenerateIndividualPcReportCompleted(this, new fnGenerateIndividualPcReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGenerateIndividualPcSubIndicat" +
            "orReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGenerateIndividualPcSubIndicatorReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGenerateIndividualPcSubIndicatorReport(string docNo) {
            object[] results = this.Invoke("fnGenerateIndividualPcSubIndicatorReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGenerateIndividualPcSubIndicatorReportAsync(string docNo) {
            this.fnGenerateIndividualPcSubIndicatorReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnGenerateIndividualPcSubIndicatorReportAsync(string docNo, object userState) {
            if ((this.fnGenerateIndividualPcSubIndicatorReportOperationCompleted == null)) {
                this.fnGenerateIndividualPcSubIndicatorReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGenerateIndividualPcSubIndicatorReportOperationCompleted);
            }
            this.InvokeAsync("fnGenerateIndividualPcSubIndicatorReport", new object[] {
                        docNo}, this.fnGenerateIndividualPcSubIndicatorReportOperationCompleted, userState);
        }
        
        private void OnfnGenerateIndividualPcSubIndicatorReportOperationCompleted(object arg) {
            if ((this.fnGenerateIndividualPcSubIndicatorReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGenerateIndividualPcSubIndicatorReportCompleted(this, new fnGenerateIndividualPcSubIndicatorReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGenerateOTP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGenerateOTP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGenerateOTP() {
            object[] results = this.Invoke("fnGenerateOTP", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGenerateOTPAsync() {
            this.fnGenerateOTPAsync(null);
        }
        
        /// <remarks/>
        public void fnGenerateOTPAsync(object userState) {
            if ((this.fnGenerateOTPOperationCompleted == null)) {
                this.fnGenerateOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGenerateOTPOperationCompleted);
            }
            this.InvokeAsync("fnGenerateOTP", new object[0], this.fnGenerateOTPOperationCompleted, userState);
        }
        
        private void OnfnGenerateOTPOperationCompleted(object arg) {
            if ((this.fnGenerateOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGenerateOTPCompleted(this, new fnGenerateOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGeneratePlogReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGeneratePlogReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGeneratePlogReport(string docNo) {
            object[] results = this.Invoke("fnGeneratePlogReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGeneratePlogReportAsync(string docNo) {
            this.fnGeneratePlogReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnGeneratePlogReportAsync(string docNo, object userState) {
            if ((this.fnGeneratePlogReportOperationCompleted == null)) {
                this.fnGeneratePlogReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGeneratePlogReportOperationCompleted);
            }
            this.InvokeAsync("fnGeneratePlogReport", new object[] {
                        docNo}, this.fnGeneratePlogReportOperationCompleted, userState);
        }
        
        private void OnfnGeneratePlogReportOperationCompleted(object arg) {
            if ((this.fnGeneratePlogReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGeneratePlogReportCompleted(this, new fnGeneratePlogReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGenerateStandardAppraisalRepor" +
            "t", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGenerateStandardAppraisalReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGenerateStandardAppraisalReport(string docNo) {
            object[] results = this.Invoke("fnGenerateStandardAppraisalReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGenerateStandardAppraisalReportAsync(string docNo) {
            this.fnGenerateStandardAppraisalReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnGenerateStandardAppraisalReportAsync(string docNo, object userState) {
            if ((this.fnGenerateStandardAppraisalReportOperationCompleted == null)) {
                this.fnGenerateStandardAppraisalReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGenerateStandardAppraisalReportOperationCompleted);
            }
            this.InvokeAsync("fnGenerateStandardAppraisalReport", new object[] {
                        docNo}, this.fnGenerateStandardAppraisalReportOperationCompleted, userState);
        }
        
        private void OnfnGenerateStandardAppraisalReportOperationCompleted(object arg) {
            if ((this.fnGenerateStandardAppraisalReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGenerateStandardAppraisalReportCompleted(this, new fnGenerateStandardAppraisalReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGenerateTrainingApplicationRep" +
            "ort", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGenerateTrainingApplicationReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGenerateTrainingApplicationReport(string docNo) {
            object[] results = this.Invoke("fnGenerateTrainingApplicationReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGenerateTrainingApplicationReportAsync(string docNo) {
            this.fnGenerateTrainingApplicationReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnGenerateTrainingApplicationReportAsync(string docNo, object userState) {
            if ((this.fnGenerateTrainingApplicationReportOperationCompleted == null)) {
                this.fnGenerateTrainingApplicationReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGenerateTrainingApplicationReportOperationCompleted);
            }
            this.InvokeAsync("fnGenerateTrainingApplicationReport", new object[] {
                        docNo}, this.fnGenerateTrainingApplicationReportOperationCompleted, userState);
        }
        
        private void OnfnGenerateTrainingApplicationReportOperationCompleted(object arg) {
            if ((this.fnGenerateTrainingApplicationReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGenerateTrainingApplicationReportCompleted(this, new fnGenerateTrainingApplicationReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGenerateTrainingEvaluationRepo" +
            "rt1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGenerateTrainingEvaluationReport1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGenerateTrainingEvaluationReport1(string docNo) {
            object[] results = this.Invoke("fnGenerateTrainingEvaluationReport1", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGenerateTrainingEvaluationReport1Async(string docNo) {
            this.fnGenerateTrainingEvaluationReport1Async(docNo, null);
        }
        
        /// <remarks/>
        public void fnGenerateTrainingEvaluationReport1Async(string docNo, object userState) {
            if ((this.fnGenerateTrainingEvaluationReport1OperationCompleted == null)) {
                this.fnGenerateTrainingEvaluationReport1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGenerateTrainingEvaluationReport1OperationCompleted);
            }
            this.InvokeAsync("fnGenerateTrainingEvaluationReport1", new object[] {
                        docNo}, this.fnGenerateTrainingEvaluationReport1OperationCompleted, userState);
        }
        
        private void OnfnGenerateTrainingEvaluationReport1OperationCompleted(object arg) {
            if ((this.fnGenerateTrainingEvaluationReport1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGenerateTrainingEvaluationReport1Completed(this, new fnGenerateTrainingEvaluationReport1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGenerateTrainingFeedbackReport" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGenerateTrainingFeedbackReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGenerateTrainingFeedbackReport(string docNo) {
            object[] results = this.Invoke("fnGenerateTrainingFeedbackReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGenerateTrainingFeedbackReportAsync(string docNo) {
            this.fnGenerateTrainingFeedbackReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnGenerateTrainingFeedbackReportAsync(string docNo, object userState) {
            if ((this.fnGenerateTrainingFeedbackReportOperationCompleted == null)) {
                this.fnGenerateTrainingFeedbackReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGenerateTrainingFeedbackReportOperationCompleted);
            }
            this.InvokeAsync("fnGenerateTrainingFeedbackReport", new object[] {
                        docNo}, this.fnGenerateTrainingFeedbackReportOperationCompleted, userState);
        }
        
        private void OnfnGenerateTrainingFeedbackReportOperationCompleted(object arg) {
            if ((this.fnGenerateTrainingFeedbackReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGenerateTrainingFeedbackReportCompleted(this, new fnGenerateTrainingFeedbackReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGenerateTrainingPlanReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGenerateTrainingPlanReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGenerateTrainingPlanReport(string docNo) {
            object[] results = this.Invoke("fnGenerateTrainingPlanReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGenerateTrainingPlanReportAsync(string docNo) {
            this.fnGenerateTrainingPlanReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnGenerateTrainingPlanReportAsync(string docNo, object userState) {
            if ((this.fnGenerateTrainingPlanReportOperationCompleted == null)) {
                this.fnGenerateTrainingPlanReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGenerateTrainingPlanReportOperationCompleted);
            }
            this.InvokeAsync("fnGenerateTrainingPlanReport", new object[] {
                        docNo}, this.fnGenerateTrainingPlanReportOperationCompleted, userState);
        }
        
        private void OnfnGenerateTrainingPlanReportOperationCompleted(object arg) {
            if ((this.fnGenerateTrainingPlanReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGenerateTrainingPlanReportCompleted(this, new fnGenerateTrainingPlanReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGetAnnualWorkplanLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGetAnnualWorkplanLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGetAnnualWorkplanLines(string csp, string annualcode) {
            object[] results = this.Invoke("fnGetAnnualWorkplanLines", new object[] {
                        csp,
                        annualcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGetAnnualWorkplanLinesAsync(string csp, string annualcode) {
            this.fnGetAnnualWorkplanLinesAsync(csp, annualcode, null);
        }
        
        /// <remarks/>
        public void fnGetAnnualWorkplanLinesAsync(string csp, string annualcode, object userState) {
            if ((this.fnGetAnnualWorkplanLinesOperationCompleted == null)) {
                this.fnGetAnnualWorkplanLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGetAnnualWorkplanLinesOperationCompleted);
            }
            this.InvokeAsync("fnGetAnnualWorkplanLines", new object[] {
                        csp,
                        annualcode}, this.fnGetAnnualWorkplanLinesOperationCompleted, userState);
        }
        
        private void OnfnGetAnnualWorkplanLinesOperationCompleted(object arg) {
            if ((this.fnGetAnnualWorkplanLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGetAnnualWorkplanLinesCompleted(this, new fnGetAnnualWorkplanLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGetPlogLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGetPlogLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGetPlogLines(string docNo, string empNo) {
            object[] results = this.Invoke("fnGetPlogLines", new object[] {
                        docNo,
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGetPlogLinesAsync(string docNo, string empNo) {
            this.fnGetPlogLinesAsync(docNo, empNo, null);
        }
        
        /// <remarks/>
        public void fnGetPlogLinesAsync(string docNo, string empNo, object userState) {
            if ((this.fnGetPlogLinesOperationCompleted == null)) {
                this.fnGetPlogLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGetPlogLinesOperationCompleted);
            }
            this.InvokeAsync("fnGetPlogLines", new object[] {
                        docNo,
                        empNo}, this.fnGetPlogLinesOperationCompleted, userState);
        }
        
        private void OnfnGetPlogLinesOperationCompleted(object arg) {
            if ((this.fnGetPlogLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGetPlogLinesCompleted(this, new fnGetPlogLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGetSubPlogLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGetSubPlogLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGetSubPlogLines(string plogNo, string initiativeNo, string pcNo) {
            object[] results = this.Invoke("fnGetSubPlogLines", new object[] {
                        plogNo,
                        initiativeNo,
                        pcNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGetSubPlogLinesAsync(string plogNo, string initiativeNo, string pcNo) {
            this.fnGetSubPlogLinesAsync(plogNo, initiativeNo, pcNo, null);
        }
        
        /// <remarks/>
        public void fnGetSubPlogLinesAsync(string plogNo, string initiativeNo, string pcNo, object userState) {
            if ((this.fnGetSubPlogLinesOperationCompleted == null)) {
                this.fnGetSubPlogLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGetSubPlogLinesOperationCompleted);
            }
            this.InvokeAsync("fnGetSubPlogLines", new object[] {
                        plogNo,
                        initiativeNo,
                        pcNo}, this.fnGetSubPlogLinesOperationCompleted, userState);
        }
        
        private void OnfnGetSubPlogLinesOperationCompleted(object arg) {
            if ((this.fnGetSubPlogLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGetSubPlogLinesCompleted(this, new fnGetSubPlogLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnGetUserID", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnGetUserID_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnGetUserID(string email) {
            object[] results = this.Invoke("fnGetUserID", new object[] {
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGetUserIDAsync(string email) {
            this.fnGetUserIDAsync(email, null);
        }
        
        /// <remarks/>
        public void fnGetUserIDAsync(string email, object userState) {
            if ((this.fnGetUserIDOperationCompleted == null)) {
                this.fnGetUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGetUserIDOperationCompleted);
            }
            this.InvokeAsync("fnGetUserID", new object[] {
                        email}, this.fnGetUserIDOperationCompleted, userState);
        }
        
        private void OnfnGetUserIDOperationCompleted(object arg) {
            if ((this.fnGetUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGetUserIDCompleted(this, new fnGetUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnInsertAgencies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnInsertAgencies_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnInsertAgencies(string userId, string agencyName, string firmNo, string designation, string agencyRegNo, string firmLicenceNo, string firmAnnualLicNo) {
            object[] results = this.Invoke("fnInsertAgencies", new object[] {
                        userId,
                        agencyName,
                        firmNo,
                        designation,
                        agencyRegNo,
                        firmLicenceNo,
                        firmAnnualLicNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnInsertAgenciesAsync(string userId, string agencyName, string firmNo, string designation, string agencyRegNo, string firmLicenceNo, string firmAnnualLicNo) {
            this.fnInsertAgenciesAsync(userId, agencyName, firmNo, designation, agencyRegNo, firmLicenceNo, firmAnnualLicNo, null);
        }
        
        /// <remarks/>
        public void fnInsertAgenciesAsync(string userId, string agencyName, string firmNo, string designation, string agencyRegNo, string firmLicenceNo, string firmAnnualLicNo, object userState) {
            if ((this.fnInsertAgenciesOperationCompleted == null)) {
                this.fnInsertAgenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnInsertAgenciesOperationCompleted);
            }
            this.InvokeAsync("fnInsertAgencies", new object[] {
                        userId,
                        agencyName,
                        firmNo,
                        designation,
                        agencyRegNo,
                        firmLicenceNo,
                        firmAnnualLicNo}, this.fnInsertAgenciesOperationCompleted, userState);
        }
        
        private void OnfnInsertAgenciesOperationCompleted(object arg) {
            if ((this.fnInsertAgenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnInsertAgenciesCompleted(this, new fnInsertAgenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnInsertEducationInfo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnInsertEducationInfo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnInsertEducationInfo(string userId, int educationLevel, int qualification, string institution, string course, string otherEducation, string otherQualification) {
            object[] results = this.Invoke("fnInsertEducationInfo", new object[] {
                        userId,
                        educationLevel,
                        qualification,
                        institution,
                        course,
                        otherEducation,
                        otherQualification});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnInsertEducationInfoAsync(string userId, int educationLevel, int qualification, string institution, string course, string otherEducation, string otherQualification) {
            this.fnInsertEducationInfoAsync(userId, educationLevel, qualification, institution, course, otherEducation, otherQualification, null);
        }
        
        /// <remarks/>
        public void fnInsertEducationInfoAsync(string userId, int educationLevel, int qualification, string institution, string course, string otherEducation, string otherQualification, object userState) {
            if ((this.fnInsertEducationInfoOperationCompleted == null)) {
                this.fnInsertEducationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnInsertEducationInfoOperationCompleted);
            }
            this.InvokeAsync("fnInsertEducationInfo", new object[] {
                        userId,
                        educationLevel,
                        qualification,
                        institution,
                        course,
                        otherEducation,
                        otherQualification}, this.fnInsertEducationInfoOperationCompleted, userState);
        }
        
        private void OnfnInsertEducationInfoOperationCompleted(object arg) {
            if ((this.fnInsertEducationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnInsertEducationInfoCompleted(this, new fnInsertEducationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnInsertEmploymentHist", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnInsertEmploymentHist_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnInsertEmploymentHist(string userId, string employer, string designation, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, bool currently, int empType) {
            object[] results = this.Invoke("fnInsertEmploymentHist", new object[] {
                        userId,
                        employer,
                        designation,
                        startDate,
                        endDate,
                        currently,
                        empType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnInsertEmploymentHistAsync(string userId, string employer, string designation, System.DateTime startDate, System.DateTime endDate, bool currently, int empType) {
            this.fnInsertEmploymentHistAsync(userId, employer, designation, startDate, endDate, currently, empType, null);
        }
        
        /// <remarks/>
        public void fnInsertEmploymentHistAsync(string userId, string employer, string designation, System.DateTime startDate, System.DateTime endDate, bool currently, int empType, object userState) {
            if ((this.fnInsertEmploymentHistOperationCompleted == null)) {
                this.fnInsertEmploymentHistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnInsertEmploymentHistOperationCompleted);
            }
            this.InvokeAsync("fnInsertEmploymentHist", new object[] {
                        userId,
                        employer,
                        designation,
                        startDate,
                        endDate,
                        currently,
                        empType}, this.fnInsertEmploymentHistOperationCompleted, userState);
        }
        
        private void OnfnInsertEmploymentHistOperationCompleted(object arg) {
            if ((this.fnInsertEmploymentHistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnInsertEmploymentHistCompleted(this, new fnInsertEmploymentHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnInsertEvaluationLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnInsertEvaluationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnInsertEvaluationLines(string docNo, int lineNo, string rating, string comment) {
            object[] results = this.Invoke("fnInsertEvaluationLines", new object[] {
                        docNo,
                        lineNo,
                        rating,
                        comment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnInsertEvaluationLinesAsync(string docNo, int lineNo, string rating, string comment) {
            this.fnInsertEvaluationLinesAsync(docNo, lineNo, rating, comment, null);
        }
        
        /// <remarks/>
        public void fnInsertEvaluationLinesAsync(string docNo, int lineNo, string rating, string comment, object userState) {
            if ((this.fnInsertEvaluationLinesOperationCompleted == null)) {
                this.fnInsertEvaluationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnInsertEvaluationLinesOperationCompleted);
            }
            this.InvokeAsync("fnInsertEvaluationLines", new object[] {
                        docNo,
                        lineNo,
                        rating,
                        comment}, this.fnInsertEvaluationLinesOperationCompleted, userState);
        }
        
        private void OnfnInsertEvaluationLinesOperationCompleted(object arg) {
            if ((this.fnInsertEvaluationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnInsertEvaluationLinesCompleted(this, new fnInsertEvaluationLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnInsertHelpDeskIssue", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnInsertHelpDeskIssue_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnInsertHelpDeskIssue(string empID, string empNo, string helpCategory, string helpSubCategory, string assetNo, string issueDescription) {
            object[] results = this.Invoke("fnInsertHelpDeskIssue", new object[] {
                        empID,
                        empNo,
                        helpCategory,
                        helpSubCategory,
                        assetNo,
                        issueDescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnInsertHelpDeskIssueAsync(string empID, string empNo, string helpCategory, string helpSubCategory, string assetNo, string issueDescription) {
            this.fnInsertHelpDeskIssueAsync(empID, empNo, helpCategory, helpSubCategory, assetNo, issueDescription, null);
        }
        
        /// <remarks/>
        public void fnInsertHelpDeskIssueAsync(string empID, string empNo, string helpCategory, string helpSubCategory, string assetNo, string issueDescription, object userState) {
            if ((this.fnInsertHelpDeskIssueOperationCompleted == null)) {
                this.fnInsertHelpDeskIssueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnInsertHelpDeskIssueOperationCompleted);
            }
            this.InvokeAsync("fnInsertHelpDeskIssue", new object[] {
                        empID,
                        empNo,
                        helpCategory,
                        helpSubCategory,
                        assetNo,
                        issueDescription}, this.fnInsertHelpDeskIssueOperationCompleted, userState);
        }
        
        private void OnfnInsertHelpDeskIssueOperationCompleted(object arg) {
            if ((this.fnInsertHelpDeskIssueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnInsertHelpDeskIssueCompleted(this, new fnInsertHelpDeskIssueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnInsertJDTargets", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnInsertJDTargets_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnInsertJDTargets(string lineno, string workplanno, int annualtarget, int assignedtarget) {
            object[] results = this.Invoke("fnInsertJDTargets", new object[] {
                        lineno,
                        workplanno,
                        annualtarget,
                        assignedtarget});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnInsertJDTargetsAsync(string lineno, string workplanno, int annualtarget, int assignedtarget) {
            this.fnInsertJDTargetsAsync(lineno, workplanno, annualtarget, assignedtarget, null);
        }
        
        /// <remarks/>
        public void fnInsertJDTargetsAsync(string lineno, string workplanno, int annualtarget, int assignedtarget, object userState) {
            if ((this.fnInsertJDTargetsOperationCompleted == null)) {
                this.fnInsertJDTargetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnInsertJDTargetsOperationCompleted);
            }
            this.InvokeAsync("fnInsertJDTargets", new object[] {
                        lineno,
                        workplanno,
                        annualtarget,
                        assignedtarget}, this.fnInsertJDTargetsOperationCompleted, userState);
        }
        
        private void OnfnInsertJDTargetsOperationCompleted(object arg) {
            if ((this.fnInsertJDTargetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnInsertJDTargetsCompleted(this, new fnInsertJDTargetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnInsertMembershipSummary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnInsertMembershipSummary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnInsertMembershipSummary(string userId, string memberName, string memberNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime regDate, string licenceNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime annualLicenceDate) {
            object[] results = this.Invoke("fnInsertMembershipSummary", new object[] {
                        userId,
                        memberName,
                        memberNo,
                        regDate,
                        licenceNo,
                        annualLicenceDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnInsertMembershipSummaryAsync(string userId, string memberName, string memberNo, System.DateTime regDate, string licenceNo, System.DateTime annualLicenceDate) {
            this.fnInsertMembershipSummaryAsync(userId, memberName, memberNo, regDate, licenceNo, annualLicenceDate, null);
        }
        
        /// <remarks/>
        public void fnInsertMembershipSummaryAsync(string userId, string memberName, string memberNo, System.DateTime regDate, string licenceNo, System.DateTime annualLicenceDate, object userState) {
            if ((this.fnInsertMembershipSummaryOperationCompleted == null)) {
                this.fnInsertMembershipSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnInsertMembershipSummaryOperationCompleted);
            }
            this.InvokeAsync("fnInsertMembershipSummary", new object[] {
                        userId,
                        memberName,
                        memberNo,
                        regDate,
                        licenceNo,
                        annualLicenceDate}, this.fnInsertMembershipSummaryOperationCompleted, userState);
        }
        
        private void OnfnInsertMembershipSummaryOperationCompleted(object arg) {
            if ((this.fnInsertMembershipSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnInsertMembershipSummaryCompleted(this, new fnInsertMembershipSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnInsertPlogSubActivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnInsertPlogSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnInsertPlogSubActivities(int entryNo, string plogno, string initiativeno, string pcid, decimal achievedtarget, string comments) {
            object[] results = this.Invoke("fnInsertPlogSubActivities", new object[] {
                        entryNo,
                        plogno,
                        initiativeno,
                        pcid,
                        achievedtarget,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnInsertPlogSubActivitiesAsync(int entryNo, string plogno, string initiativeno, string pcid, decimal achievedtarget, string comments) {
            this.fnInsertPlogSubActivitiesAsync(entryNo, plogno, initiativeno, pcid, achievedtarget, comments, null);
        }
        
        /// <remarks/>
        public void fnInsertPlogSubActivitiesAsync(int entryNo, string plogno, string initiativeno, string pcid, decimal achievedtarget, string comments, object userState) {
            if ((this.fnInsertPlogSubActivitiesOperationCompleted == null)) {
                this.fnInsertPlogSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnInsertPlogSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("fnInsertPlogSubActivities", new object[] {
                        entryNo,
                        plogno,
                        initiativeno,
                        pcid,
                        achievedtarget,
                        comments}, this.fnInsertPlogSubActivitiesOperationCompleted, userState);
        }
        
        private void OnfnInsertPlogSubActivitiesOperationCompleted(object arg) {
            if ((this.fnInsertPlogSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnInsertPlogSubActivitiesCompleted(this, new fnInsertPlogSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnInsertProcurementProfessionals" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnInsertProcurementProfessionals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnInsertProcurementProfessionals(string userId, string name, string address, string phone, string profession, string email) {
            object[] results = this.Invoke("fnInsertProcurementProfessionals", new object[] {
                        userId,
                        name,
                        address,
                        phone,
                        profession,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnInsertProcurementProfessionalsAsync(string userId, string name, string address, string phone, string profession, string email) {
            this.fnInsertProcurementProfessionalsAsync(userId, name, address, phone, profession, email, null);
        }
        
        /// <remarks/>
        public void fnInsertProcurementProfessionalsAsync(string userId, string name, string address, string phone, string profession, string email, object userState) {
            if ((this.fnInsertProcurementProfessionalsOperationCompleted == null)) {
                this.fnInsertProcurementProfessionalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnInsertProcurementProfessionalsOperationCompleted);
            }
            this.InvokeAsync("fnInsertProcurementProfessionals", new object[] {
                        userId,
                        name,
                        address,
                        phone,
                        profession,
                        email}, this.fnInsertProcurementProfessionalsOperationCompleted, userState);
        }
        
        private void OnfnInsertProcurementProfessionalsOperationCompleted(object arg) {
            if ((this.fnInsertProcurementProfessionalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnInsertProcurementProfessionalsCompleted(this, new fnInsertProcurementProfessionalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnInsertSelectedAdditionalActivi" +
            "ties", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnInsertSelectedAdditionalActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnInsertSelectedAdditionalActivities(string csp, string annualcode, string personalPc, string activityID) {
            object[] results = this.Invoke("fnInsertSelectedAdditionalActivities", new object[] {
                        csp,
                        annualcode,
                        personalPc,
                        activityID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnInsertSelectedAdditionalActivitiesAsync(string csp, string annualcode, string personalPc, string activityID) {
            this.fnInsertSelectedAdditionalActivitiesAsync(csp, annualcode, personalPc, activityID, null);
        }
        
        /// <remarks/>
        public void fnInsertSelectedAdditionalActivitiesAsync(string csp, string annualcode, string personalPc, string activityID, object userState) {
            if ((this.fnInsertSelectedAdditionalActivitiesOperationCompleted == null)) {
                this.fnInsertSelectedAdditionalActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnInsertSelectedAdditionalActivitiesOperationCompleted);
            }
            this.InvokeAsync("fnInsertSelectedAdditionalActivities", new object[] {
                        csp,
                        annualcode,
                        personalPc,
                        activityID}, this.fnInsertSelectedAdditionalActivitiesOperationCompleted, userState);
        }
        
        private void OnfnInsertSelectedAdditionalActivitiesOperationCompleted(object arg) {
            if ((this.fnInsertSelectedAdditionalActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnInsertSelectedAdditionalActivitiesCompleted(this, new fnInsertSelectedAdditionalActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnInsertStaffClaimsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnInsertStaffClaimsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnInsertStaffClaimsLines(string docNo, string claimType, string description, decimal amount) {
            object[] results = this.Invoke("fnInsertStaffClaimsLines", new object[] {
                        docNo,
                        claimType,
                        description,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnInsertStaffClaimsLinesAsync(string docNo, string claimType, string description, decimal amount) {
            this.fnInsertStaffClaimsLinesAsync(docNo, claimType, description, amount, null);
        }
        
        /// <remarks/>
        public void fnInsertStaffClaimsLinesAsync(string docNo, string claimType, string description, decimal amount, object userState) {
            if ((this.fnInsertStaffClaimsLinesOperationCompleted == null)) {
                this.fnInsertStaffClaimsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnInsertStaffClaimsLinesOperationCompleted);
            }
            this.InvokeAsync("fnInsertStaffClaimsLines", new object[] {
                        docNo,
                        claimType,
                        description,
                        amount}, this.fnInsertStaffClaimsLinesOperationCompleted, userState);
        }
        
        private void OnfnInsertStaffClaimsLinesOperationCompleted(object arg) {
            if ((this.fnInsertStaffClaimsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnInsertStaffClaimsLinesCompleted(this, new fnInsertStaffClaimsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnInsertStaffClaims", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnInsertStaffClaims_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnInsertStaffClaims(string staffNo) {
            object[] results = this.Invoke("fnInsertStaffClaims", new object[] {
                        staffNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnInsertStaffClaimsAsync(string staffNo) {
            this.fnInsertStaffClaimsAsync(staffNo, null);
        }
        
        /// <remarks/>
        public void fnInsertStaffClaimsAsync(string staffNo, object userState) {
            if ((this.fnInsertStaffClaimsOperationCompleted == null)) {
                this.fnInsertStaffClaimsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnInsertStaffClaimsOperationCompleted);
            }
            this.InvokeAsync("fnInsertStaffClaims", new object[] {
                        staffNo}, this.fnInsertStaffClaimsOperationCompleted, userState);
        }
        
        private void OnfnInsertStaffClaimsOperationCompleted(object arg) {
            if ((this.fnInsertStaffClaimsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnInsertStaffClaimsCompleted(this, new fnInsertStaffClaimsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnInsertStandardAppraisalPIP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnInsertStandardAppraisalPIP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnInsertStandardAppraisalPIP(string docNo, string pipcategory, string desc) {
            object[] results = this.Invoke("fnInsertStandardAppraisalPIP", new object[] {
                        docNo,
                        pipcategory,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnInsertStandardAppraisalPIPAsync(string docNo, string pipcategory, string desc) {
            this.fnInsertStandardAppraisalPIPAsync(docNo, pipcategory, desc, null);
        }
        
        /// <remarks/>
        public void fnInsertStandardAppraisalPIPAsync(string docNo, string pipcategory, string desc, object userState) {
            if ((this.fnInsertStandardAppraisalPIPOperationCompleted == null)) {
                this.fnInsertStandardAppraisalPIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnInsertStandardAppraisalPIPOperationCompleted);
            }
            this.InvokeAsync("fnInsertStandardAppraisalPIP", new object[] {
                        docNo,
                        pipcategory,
                        desc}, this.fnInsertStandardAppraisalPIPOperationCompleted, userState);
        }
        
        private void OnfnInsertStandardAppraisalPIPOperationCompleted(object arg) {
            if ((this.fnInsertStandardAppraisalPIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnInsertStandardAppraisalPIPCompleted(this, new fnInsertStandardAppraisalPIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnInsertStandardAppraisalTrainig" +
            "Needs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnInsertStandardAppraisalTrainigNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnInsertStandardAppraisalTrainigNeeds(string docNo, string category, string desc) {
            object[] results = this.Invoke("fnInsertStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        category,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnInsertStandardAppraisalTrainigNeedsAsync(string docNo, string category, string desc) {
            this.fnInsertStandardAppraisalTrainigNeedsAsync(docNo, category, desc, null);
        }
        
        /// <remarks/>
        public void fnInsertStandardAppraisalTrainigNeedsAsync(string docNo, string category, string desc, object userState) {
            if ((this.fnInsertStandardAppraisalTrainigNeedsOperationCompleted == null)) {
                this.fnInsertStandardAppraisalTrainigNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnInsertStandardAppraisalTrainigNeedsOperationCompleted);
            }
            this.InvokeAsync("fnInsertStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        category,
                        desc}, this.fnInsertStandardAppraisalTrainigNeedsOperationCompleted, userState);
        }
        
        private void OnfnInsertStandardAppraisalTrainigNeedsOperationCompleted(object arg) {
            if ((this.fnInsertStandardAppraisalTrainigNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnInsertStandardAppraisalTrainigNeedsCompleted(this, new fnInsertStandardAppraisalTrainigNeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnLockStaffPerformanceContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnLockStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnLockStaffPerformanceContract(string contractNo) {
            object[] results = this.Invoke("fnLockStaffPerformanceContract", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnLockStaffPerformanceContractAsync(string contractNo) {
            this.fnLockStaffPerformanceContractAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void fnLockStaffPerformanceContractAsync(string contractNo, object userState) {
            if ((this.fnLockStaffPerformanceContractOperationCompleted == null)) {
                this.fnLockStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnLockStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("fnLockStaffPerformanceContract", new object[] {
                        contractNo}, this.fnLockStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnfnLockStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.fnLockStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnLockStaffPerformanceContractCompleted(this, new fnLockStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnLogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool fnLogin(string email, string passKey) {
            object[] results = this.Invoke("fnLogin", new object[] {
                        email,
                        passKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void fnLoginAsync(string email, string passKey) {
            this.fnLoginAsync(email, passKey, null);
        }
        
        /// <remarks/>
        public void fnLoginAsync(string email, string passKey, object userState) {
            if ((this.fnLoginOperationCompleted == null)) {
                this.fnLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnLoginOperationCompleted);
            }
            this.InvokeAsync("fnLogin", new object[] {
                        email,
                        passKey}, this.fnLoginOperationCompleted, userState);
        }
        
        private void OnfnLoginOperationCompleted(object arg) {
            if ((this.fnLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnLoginCompleted(this, new fnLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnMergePdfs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnMergePdfs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnMergePdfs(string tenderNo, string finalDocument) {
            object[] results = this.Invoke("fnMergePdfs", new object[] {
                        tenderNo,
                        finalDocument});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnMergePdfsAsync(string tenderNo, string finalDocument) {
            this.fnMergePdfsAsync(tenderNo, finalDocument, null);
        }
        
        /// <remarks/>
        public void fnMergePdfsAsync(string tenderNo, string finalDocument, object userState) {
            if ((this.fnMergePdfsOperationCompleted == null)) {
                this.fnMergePdfsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnMergePdfsOperationCompleted);
            }
            this.InvokeAsync("fnMergePdfs", new object[] {
                        tenderNo,
                        finalDocument}, this.fnMergePdfsOperationCompleted, userState);
        }
        
        private void OnfnMergePdfsOperationCompleted(object arg) {
            if ((this.fnMergePdfsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnMergePdfsCompleted(this, new fnMergePdfsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnModifyStaffClaimsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnModifyStaffClaimsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnModifyStaffClaimsLines(string docNo, int lineNo, string claimType, string description, decimal amount) {
            object[] results = this.Invoke("fnModifyStaffClaimsLines", new object[] {
                        docNo,
                        lineNo,
                        claimType,
                        description,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnModifyStaffClaimsLinesAsync(string docNo, int lineNo, string claimType, string description, decimal amount) {
            this.fnModifyStaffClaimsLinesAsync(docNo, lineNo, claimType, description, amount, null);
        }
        
        /// <remarks/>
        public void fnModifyStaffClaimsLinesAsync(string docNo, int lineNo, string claimType, string description, decimal amount, object userState) {
            if ((this.fnModifyStaffClaimsLinesOperationCompleted == null)) {
                this.fnModifyStaffClaimsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnModifyStaffClaimsLinesOperationCompleted);
            }
            this.InvokeAsync("fnModifyStaffClaimsLines", new object[] {
                        docNo,
                        lineNo,
                        claimType,
                        description,
                        amount}, this.fnModifyStaffClaimsLinesOperationCompleted, userState);
        }
        
        private void OnfnModifyStaffClaimsLinesOperationCompleted(object arg) {
            if ((this.fnModifyStaffClaimsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnModifyStaffClaimsLinesCompleted(this, new fnModifyStaffClaimsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnModifyStaffClaims", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnModifyStaffClaims_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnModifyStaffClaims(string staffNo, string docNo) {
            object[] results = this.Invoke("fnModifyStaffClaims", new object[] {
                        staffNo,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnModifyStaffClaimsAsync(string staffNo, string docNo) {
            this.fnModifyStaffClaimsAsync(staffNo, docNo, null);
        }
        
        /// <remarks/>
        public void fnModifyStaffClaimsAsync(string staffNo, string docNo, object userState) {
            if ((this.fnModifyStaffClaimsOperationCompleted == null)) {
                this.fnModifyStaffClaimsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnModifyStaffClaimsOperationCompleted);
            }
            this.InvokeAsync("fnModifyStaffClaims", new object[] {
                        staffNo,
                        docNo}, this.fnModifyStaffClaimsOperationCompleted, userState);
        }
        
        private void OnfnModifyStaffClaimsOperationCompleted(object arg) {
            if ((this.fnModifyStaffClaimsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnModifyStaffClaimsCompleted(this, new fnModifyStaffClaimsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnNewStaffPerformanceContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnNewStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnNewStaffPerformanceContract(string contractNo, string employeeNo, string description, string seniorOfficerPC) {
            object[] results = this.Invoke("fnNewStaffPerformanceContract", new object[] {
                        contractNo,
                        employeeNo,
                        description,
                        seniorOfficerPC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnNewStaffPerformanceContractAsync(string contractNo, string employeeNo, string description, string seniorOfficerPC) {
            this.fnNewStaffPerformanceContractAsync(contractNo, employeeNo, description, seniorOfficerPC, null);
        }
        
        /// <remarks/>
        public void fnNewStaffPerformanceContractAsync(string contractNo, string employeeNo, string description, string seniorOfficerPC, object userState) {
            if ((this.fnNewStaffPerformanceContractOperationCompleted == null)) {
                this.fnNewStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnNewStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("fnNewStaffPerformanceContract", new object[] {
                        contractNo,
                        employeeNo,
                        description,
                        seniorOfficerPC}, this.fnNewStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnfnNewStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.fnNewStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnNewStaffPerformanceContractCompleted(this, new fnNewStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnPasswordReset", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnPasswordReset_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool fnPasswordReset(string email) {
            object[] results = this.Invoke("fnPasswordReset", new object[] {
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void fnPasswordResetAsync(string email) {
            this.fnPasswordResetAsync(email, null);
        }
        
        /// <remarks/>
        public void fnPasswordResetAsync(string email, object userState) {
            if ((this.fnPasswordResetOperationCompleted == null)) {
                this.fnPasswordResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnPasswordResetOperationCompleted);
            }
            this.InvokeAsync("fnPasswordReset", new object[] {
                        email}, this.fnPasswordResetOperationCompleted, userState);
        }
        
        private void OnfnPasswordResetOperationCompleted(object arg) {
            if ((this.fnPasswordResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnPasswordResetCompleted(this, new fnPasswordResetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnProcPlanReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnProcPlanReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnProcPlanReport(string documentNumber) {
            object[] results = this.Invoke("fnProcPlanReport", new object[] {
                        documentNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnProcPlanReportAsync(string documentNumber) {
            this.fnProcPlanReportAsync(documentNumber, null);
        }
        
        /// <remarks/>
        public void fnProcPlanReportAsync(string documentNumber, object userState) {
            if ((this.fnProcPlanReportOperationCompleted == null)) {
                this.fnProcPlanReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnProcPlanReportOperationCompleted);
            }
            this.InvokeAsync("fnProcPlanReport", new object[] {
                        documentNumber}, this.fnProcPlanReportOperationCompleted, userState);
        }
        
        private void OnfnProcPlanReportOperationCompleted(object arg) {
            if ((this.fnProcPlanReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnProcPlanReportCompleted(this, new fnProcPlanReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnRegistration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnRegistration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnRegistration(string fName, string lName, string idNo, string email, string phone, string password) {
            object[] results = this.Invoke("fnRegistration", new object[] {
                        fName,
                        lName,
                        idNo,
                        email,
                        phone,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnRegistrationAsync(string fName, string lName, string idNo, string email, string phone, string password) {
            this.fnRegistrationAsync(fName, lName, idNo, email, phone, password, null);
        }
        
        /// <remarks/>
        public void fnRegistrationAsync(string fName, string lName, string idNo, string email, string phone, string password, object userState) {
            if ((this.fnRegistrationOperationCompleted == null)) {
                this.fnRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnRegistrationOperationCompleted);
            }
            this.InvokeAsync("fnRegistration", new object[] {
                        fName,
                        lName,
                        idNo,
                        email,
                        phone,
                        password}, this.fnRegistrationOperationCompleted, userState);
        }
        
        private void OnfnRegistrationOperationCompleted(object arg) {
            if ((this.fnRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnRegistrationCompleted(this, new fnRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnRemoveAditionalInitiative", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnRemoveAditionalInitiative_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnRemoveAditionalInitiative(string docNo, int entryno) {
            object[] results = this.Invoke("fnRemoveAditionalInitiative", new object[] {
                        docNo,
                        entryno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnRemoveAditionalInitiativeAsync(string docNo, int entryno) {
            this.fnRemoveAditionalInitiativeAsync(docNo, entryno, null);
        }
        
        /// <remarks/>
        public void fnRemoveAditionalInitiativeAsync(string docNo, int entryno, object userState) {
            if ((this.fnRemoveAditionalInitiativeOperationCompleted == null)) {
                this.fnRemoveAditionalInitiativeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnRemoveAditionalInitiativeOperationCompleted);
            }
            this.InvokeAsync("fnRemoveAditionalInitiative", new object[] {
                        docNo,
                        entryno}, this.fnRemoveAditionalInitiativeOperationCompleted, userState);
        }
        
        private void OnfnRemoveAditionalInitiativeOperationCompleted(object arg) {
            if ((this.fnRemoveAditionalInitiativeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnRemoveAditionalInitiativeCompleted(this, new fnRemoveAditionalInitiativeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnRemoveAgencies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnRemoveAgencies_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnRemoveAgencies(string userId, int lineNo) {
            object[] results = this.Invoke("fnRemoveAgencies", new object[] {
                        userId,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnRemoveAgenciesAsync(string userId, int lineNo) {
            this.fnRemoveAgenciesAsync(userId, lineNo, null);
        }
        
        /// <remarks/>
        public void fnRemoveAgenciesAsync(string userId, int lineNo, object userState) {
            if ((this.fnRemoveAgenciesOperationCompleted == null)) {
                this.fnRemoveAgenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnRemoveAgenciesOperationCompleted);
            }
            this.InvokeAsync("fnRemoveAgencies", new object[] {
                        userId,
                        lineNo}, this.fnRemoveAgenciesOperationCompleted, userState);
        }
        
        private void OnfnRemoveAgenciesOperationCompleted(object arg) {
            if ((this.fnRemoveAgenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnRemoveAgenciesCompleted(this, new fnRemoveAgenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnRemoveEducationInfo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnRemoveEducationInfo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnRemoveEducationInfo(string userId, int lineNo) {
            object[] results = this.Invoke("fnRemoveEducationInfo", new object[] {
                        userId,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnRemoveEducationInfoAsync(string userId, int lineNo) {
            this.fnRemoveEducationInfoAsync(userId, lineNo, null);
        }
        
        /// <remarks/>
        public void fnRemoveEducationInfoAsync(string userId, int lineNo, object userState) {
            if ((this.fnRemoveEducationInfoOperationCompleted == null)) {
                this.fnRemoveEducationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnRemoveEducationInfoOperationCompleted);
            }
            this.InvokeAsync("fnRemoveEducationInfo", new object[] {
                        userId,
                        lineNo}, this.fnRemoveEducationInfoOperationCompleted, userState);
        }
        
        private void OnfnRemoveEducationInfoOperationCompleted(object arg) {
            if ((this.fnRemoveEducationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnRemoveEducationInfoCompleted(this, new fnRemoveEducationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnRemoveEmploymentHist", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnRemoveEmploymentHist_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnRemoveEmploymentHist(string userId, int lineNo) {
            object[] results = this.Invoke("fnRemoveEmploymentHist", new object[] {
                        userId,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnRemoveEmploymentHistAsync(string userId, int lineNo) {
            this.fnRemoveEmploymentHistAsync(userId, lineNo, null);
        }
        
        /// <remarks/>
        public void fnRemoveEmploymentHistAsync(string userId, int lineNo, object userState) {
            if ((this.fnRemoveEmploymentHistOperationCompleted == null)) {
                this.fnRemoveEmploymentHistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnRemoveEmploymentHistOperationCompleted);
            }
            this.InvokeAsync("fnRemoveEmploymentHist", new object[] {
                        userId,
                        lineNo}, this.fnRemoveEmploymentHistOperationCompleted, userState);
        }
        
        private void OnfnRemoveEmploymentHistOperationCompleted(object arg) {
            if ((this.fnRemoveEmploymentHistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnRemoveEmploymentHistCompleted(this, new fnRemoveEmploymentHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnRemoveMembershipSummary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnRemoveMembershipSummary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnRemoveMembershipSummary(string userId, int lineNo) {
            object[] results = this.Invoke("fnRemoveMembershipSummary", new object[] {
                        userId,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnRemoveMembershipSummaryAsync(string userId, int lineNo) {
            this.fnRemoveMembershipSummaryAsync(userId, lineNo, null);
        }
        
        /// <remarks/>
        public void fnRemoveMembershipSummaryAsync(string userId, int lineNo, object userState) {
            if ((this.fnRemoveMembershipSummaryOperationCompleted == null)) {
                this.fnRemoveMembershipSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnRemoveMembershipSummaryOperationCompleted);
            }
            this.InvokeAsync("fnRemoveMembershipSummary", new object[] {
                        userId,
                        lineNo}, this.fnRemoveMembershipSummaryOperationCompleted, userState);
        }
        
        private void OnfnRemoveMembershipSummaryOperationCompleted(object arg) {
            if ((this.fnRemoveMembershipSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnRemoveMembershipSummaryCompleted(this, new fnRemoveMembershipSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnRemoveProcurementProfessionals" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnRemoveProcurementProfessionals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnRemoveProcurementProfessionals(string userId, int lineNo) {
            object[] results = this.Invoke("fnRemoveProcurementProfessionals", new object[] {
                        userId,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnRemoveProcurementProfessionalsAsync(string userId, int lineNo) {
            this.fnRemoveProcurementProfessionalsAsync(userId, lineNo, null);
        }
        
        /// <remarks/>
        public void fnRemoveProcurementProfessionalsAsync(string userId, int lineNo, object userState) {
            if ((this.fnRemoveProcurementProfessionalsOperationCompleted == null)) {
                this.fnRemoveProcurementProfessionalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnRemoveProcurementProfessionalsOperationCompleted);
            }
            this.InvokeAsync("fnRemoveProcurementProfessionals", new object[] {
                        userId,
                        lineNo}, this.fnRemoveProcurementProfessionalsOperationCompleted, userState);
        }
        
        private void OnfnRemoveProcurementProfessionalsOperationCompleted(object arg) {
            if ((this.fnRemoveProcurementProfessionalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnRemoveProcurementProfessionalsCompleted(this, new fnRemoveProcurementProfessionalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnRemoveStandardAppraisalPIP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnRemoveStandardAppraisalPIP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnRemoveStandardAppraisalPIP(string docNo, int lineno) {
            object[] results = this.Invoke("fnRemoveStandardAppraisalPIP", new object[] {
                        docNo,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnRemoveStandardAppraisalPIPAsync(string docNo, int lineno) {
            this.fnRemoveStandardAppraisalPIPAsync(docNo, lineno, null);
        }
        
        /// <remarks/>
        public void fnRemoveStandardAppraisalPIPAsync(string docNo, int lineno, object userState) {
            if ((this.fnRemoveStandardAppraisalPIPOperationCompleted == null)) {
                this.fnRemoveStandardAppraisalPIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnRemoveStandardAppraisalPIPOperationCompleted);
            }
            this.InvokeAsync("fnRemoveStandardAppraisalPIP", new object[] {
                        docNo,
                        lineno}, this.fnRemoveStandardAppraisalPIPOperationCompleted, userState);
        }
        
        private void OnfnRemoveStandardAppraisalPIPOperationCompleted(object arg) {
            if ((this.fnRemoveStandardAppraisalPIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnRemoveStandardAppraisalPIPCompleted(this, new fnRemoveStandardAppraisalPIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnRemoveStandardAppraisalTrainig" +
            "Needs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnRemoveStandardAppraisalTrainigNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnRemoveStandardAppraisalTrainigNeeds(string docNo, int lineno) {
            object[] results = this.Invoke("fnRemoveStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnRemoveStandardAppraisalTrainigNeedsAsync(string docNo, int lineno) {
            this.fnRemoveStandardAppraisalTrainigNeedsAsync(docNo, lineno, null);
        }
        
        /// <remarks/>
        public void fnRemoveStandardAppraisalTrainigNeedsAsync(string docNo, int lineno, object userState) {
            if ((this.fnRemoveStandardAppraisalTrainigNeedsOperationCompleted == null)) {
                this.fnRemoveStandardAppraisalTrainigNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnRemoveStandardAppraisalTrainigNeedsOperationCompleted);
            }
            this.InvokeAsync("fnRemoveStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        lineno}, this.fnRemoveStandardAppraisalTrainigNeedsOperationCompleted, userState);
        }
        
        private void OnfnRemoveStandardAppraisalTrainigNeedsOperationCompleted(object arg) {
            if ((this.fnRemoveStandardAppraisalTrainigNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnRemoveStandardAppraisalTrainigNeedsCompleted(this, new fnRemoveStandardAppraisalTrainigNeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnRequestEmailVerificationOTP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnRequestEmailVerificationOTP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnRequestEmailVerificationOTP(string userID) {
            object[] results = this.Invoke("fnRequestEmailVerificationOTP", new object[] {
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnRequestEmailVerificationOTPAsync(string userID) {
            this.fnRequestEmailVerificationOTPAsync(userID, null);
        }
        
        /// <remarks/>
        public void fnRequestEmailVerificationOTPAsync(string userID, object userState) {
            if ((this.fnRequestEmailVerificationOTPOperationCompleted == null)) {
                this.fnRequestEmailVerificationOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnRequestEmailVerificationOTPOperationCompleted);
            }
            this.InvokeAsync("fnRequestEmailVerificationOTP", new object[] {
                        userID}, this.fnRequestEmailVerificationOTPOperationCompleted, userState);
        }
        
        private void OnfnRequestEmailVerificationOTPOperationCompleted(object arg) {
            if ((this.fnRequestEmailVerificationOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnRequestEmailVerificationOTPCompleted(this, new fnRequestEmailVerificationOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnRequestLoginOTP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnRequestLoginOTP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool fnRequestLoginOTP(string email) {
            object[] results = this.Invoke("fnRequestLoginOTP", new object[] {
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void fnRequestLoginOTPAsync(string email) {
            this.fnRequestLoginOTPAsync(email, null);
        }
        
        /// <remarks/>
        public void fnRequestLoginOTPAsync(string email, object userState) {
            if ((this.fnRequestLoginOTPOperationCompleted == null)) {
                this.fnRequestLoginOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnRequestLoginOTPOperationCompleted);
            }
            this.InvokeAsync("fnRequestLoginOTP", new object[] {
                        email}, this.fnRequestLoginOTPOperationCompleted, userState);
        }
        
        private void OnfnRequestLoginOTPOperationCompleted(object arg) {
            if ((this.fnRequestLoginOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnRequestLoginOTPCompleted(this, new fnRequestLoginOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnSaveAditionalInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnSaveAditionalInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnSaveAditionalInitiatives(int entryno, decimal agreedtarget, decimal annualtarget, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, string comments) {
            object[] results = this.Invoke("fnSaveAditionalInitiatives", new object[] {
                        entryno,
                        agreedtarget,
                        annualtarget,
                        startdate,
                        enddate,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnSaveAditionalInitiativesAsync(int entryno, decimal agreedtarget, decimal annualtarget, System.DateTime startdate, System.DateTime enddate, string comments) {
            this.fnSaveAditionalInitiativesAsync(entryno, agreedtarget, annualtarget, startdate, enddate, comments, null);
        }
        
        /// <remarks/>
        public void fnSaveAditionalInitiativesAsync(int entryno, decimal agreedtarget, decimal annualtarget, System.DateTime startdate, System.DateTime enddate, string comments, object userState) {
            if ((this.fnSaveAditionalInitiativesOperationCompleted == null)) {
                this.fnSaveAditionalInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSaveAditionalInitiativesOperationCompleted);
            }
            this.InvokeAsync("fnSaveAditionalInitiatives", new object[] {
                        entryno,
                        agreedtarget,
                        annualtarget,
                        startdate,
                        enddate,
                        comments}, this.fnSaveAditionalInitiativesOperationCompleted, userState);
        }
        
        private void OnfnSaveAditionalInitiativesOperationCompleted(object arg) {
            if ((this.fnSaveAditionalInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSaveAditionalInitiativesCompleted(this, new fnSaveAditionalInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnSelectPracticeCatgeories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnSelectPracticeCatgeories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnSelectPracticeCatgeories(string userId, string categoryCode, bool selected) {
            object[] results = this.Invoke("fnSelectPracticeCatgeories", new object[] {
                        userId,
                        categoryCode,
                        selected});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnSelectPracticeCatgeoriesAsync(string userId, string categoryCode, bool selected) {
            this.fnSelectPracticeCatgeoriesAsync(userId, categoryCode, selected, null);
        }
        
        /// <remarks/>
        public void fnSelectPracticeCatgeoriesAsync(string userId, string categoryCode, bool selected, object userState) {
            if ((this.fnSelectPracticeCatgeoriesOperationCompleted == null)) {
                this.fnSelectPracticeCatgeoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSelectPracticeCatgeoriesOperationCompleted);
            }
            this.InvokeAsync("fnSelectPracticeCatgeories", new object[] {
                        userId,
                        categoryCode,
                        selected}, this.fnSelectPracticeCatgeoriesOperationCompleted, userState);
        }
        
        private void OnfnSelectPracticeCatgeoriesOperationCompleted(object arg) {
            if ((this.fnSelectPracticeCatgeoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSelectPracticeCatgeoriesCompleted(this, new fnSelectPracticeCatgeoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnSendAppraisalEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnSendAppraisalEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnSendAppraisalEmail(string docNo) {
            object[] results = this.Invoke("fnSendAppraisalEmail", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnSendAppraisalEmailAsync(string docNo) {
            this.fnSendAppraisalEmailAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnSendAppraisalEmailAsync(string docNo, object userState) {
            if ((this.fnSendAppraisalEmailOperationCompleted == null)) {
                this.fnSendAppraisalEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSendAppraisalEmailOperationCompleted);
            }
            this.InvokeAsync("fnSendAppraisalEmail", new object[] {
                        docNo}, this.fnSendAppraisalEmailOperationCompleted, userState);
        }
        
        private void OnfnSendAppraisalEmailOperationCompleted(object arg) {
            if ((this.fnSendAppraisalEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSendAppraisalEmailCompleted(this, new fnSendAppraisalEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnSendHelpDeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnSendHelpDeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool fnSendHelpDeskRequest(string docNo) {
            object[] results = this.Invoke("fnSendHelpDeskRequest", new object[] {
                        docNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void fnSendHelpDeskRequestAsync(string docNo) {
            this.fnSendHelpDeskRequestAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnSendHelpDeskRequestAsync(string docNo, object userState) {
            if ((this.fnSendHelpDeskRequestOperationCompleted == null)) {
                this.fnSendHelpDeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSendHelpDeskRequestOperationCompleted);
            }
            this.InvokeAsync("fnSendHelpDeskRequest", new object[] {
                        docNo}, this.fnSendHelpDeskRequestOperationCompleted, userState);
        }
        
        private void OnfnSendHelpDeskRequestOperationCompleted(object arg) {
            if ((this.fnSendHelpDeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSendHelpDeskRequestCompleted(this, new fnSendHelpDeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnSendImprestSurrenderApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnSendImprestSurrenderApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnSendImprestSurrenderApproval(string employeeNo, string imprestNo) {
            object[] results = this.Invoke("fnSendImprestSurrenderApproval", new object[] {
                        employeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnSendImprestSurrenderApprovalAsync(string employeeNo, string imprestNo) {
            this.fnSendImprestSurrenderApprovalAsync(employeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void fnSendImprestSurrenderApprovalAsync(string employeeNo, string imprestNo, object userState) {
            if ((this.fnSendImprestSurrenderApprovalOperationCompleted == null)) {
                this.fnSendImprestSurrenderApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSendImprestSurrenderApprovalOperationCompleted);
            }
            this.InvokeAsync("fnSendImprestSurrenderApproval", new object[] {
                        employeeNo,
                        imprestNo}, this.fnSendImprestSurrenderApprovalOperationCompleted, userState);
        }
        
        private void OnfnSendImprestSurrenderApprovalOperationCompleted(object arg) {
            if ((this.fnSendImprestSurrenderApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSendImprestSurrenderApprovalCompleted(this, new fnSendImprestSurrenderApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnSendPaymentVoucherApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnSendPaymentVoucherApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void fnSendPaymentVoucherApproval(string employeeNo, string docNumber) {
            this.Invoke("fnSendPaymentVoucherApproval", new object[] {
                        employeeNo,
                        docNumber});
        }
        
        /// <remarks/>
        public void fnSendPaymentVoucherApprovalAsync(string employeeNo, string docNumber) {
            this.fnSendPaymentVoucherApprovalAsync(employeeNo, docNumber, null);
        }
        
        /// <remarks/>
        public void fnSendPaymentVoucherApprovalAsync(string employeeNo, string docNumber, object userState) {
            if ((this.fnSendPaymentVoucherApprovalOperationCompleted == null)) {
                this.fnSendPaymentVoucherApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSendPaymentVoucherApprovalOperationCompleted);
            }
            this.InvokeAsync("fnSendPaymentVoucherApproval", new object[] {
                        employeeNo,
                        docNumber}, this.fnSendPaymentVoucherApprovalOperationCompleted, userState);
        }
        
        private void OnfnSendPaymentVoucherApprovalOperationCompleted(object arg) {
            if ((this.fnSendPaymentVoucherApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSendPaymentVoucherApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnSendPlogApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnSendPlogApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnSendPlogApproval(string contractNo) {
            object[] results = this.Invoke("fnSendPlogApproval", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnSendPlogApprovalAsync(string contractNo) {
            this.fnSendPlogApprovalAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void fnSendPlogApprovalAsync(string contractNo, object userState) {
            if ((this.fnSendPlogApprovalOperationCompleted == null)) {
                this.fnSendPlogApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSendPlogApprovalOperationCompleted);
            }
            this.InvokeAsync("fnSendPlogApproval", new object[] {
                        contractNo}, this.fnSendPlogApprovalOperationCompleted, userState);
        }
        
        private void OnfnSendPlogApprovalOperationCompleted(object arg) {
            if ((this.fnSendPlogApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSendPlogApprovalCompleted(this, new fnSendPlogApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnSendStaffPerformanceContractAp" +
            "proval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnSendStaffPerformanceContractApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnSendStaffPerformanceContractApproval(string contractNo) {
            object[] results = this.Invoke("fnSendStaffPerformanceContractApproval", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnSendStaffPerformanceContractApprovalAsync(string contractNo) {
            this.fnSendStaffPerformanceContractApprovalAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void fnSendStaffPerformanceContractApprovalAsync(string contractNo, object userState) {
            if ((this.fnSendStaffPerformanceContractApprovalOperationCompleted == null)) {
                this.fnSendStaffPerformanceContractApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSendStaffPerformanceContractApprovalOperationCompleted);
            }
            this.InvokeAsync("fnSendStaffPerformanceContractApproval", new object[] {
                        contractNo}, this.fnSendStaffPerformanceContractApprovalOperationCompleted, userState);
        }
        
        private void OnfnSendStaffPerformanceContractApprovalOperationCompleted(object arg) {
            if ((this.fnSendStaffPerformanceContractApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSendStaffPerformanceContractApprovalCompleted(this, new fnSendStaffPerformanceContractApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnSendStoreReqApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnSendStoreReqApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool fnSendStoreReqApproval(string docNo) {
            object[] results = this.Invoke("fnSendStoreReqApproval", new object[] {
                        docNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void fnSendStoreReqApprovalAsync(string docNo) {
            this.fnSendStoreReqApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnSendStoreReqApprovalAsync(string docNo, object userState) {
            if ((this.fnSendStoreReqApprovalOperationCompleted == null)) {
                this.fnSendStoreReqApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSendStoreReqApprovalOperationCompleted);
            }
            this.InvokeAsync("fnSendStoreReqApproval", new object[] {
                        docNo}, this.fnSendStoreReqApprovalOperationCompleted, userState);
        }
        
        private void OnfnSendStoreReqApprovalOperationCompleted(object arg) {
            if ((this.fnSendStoreReqApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSendStoreReqApprovalCompleted(this, new fnSendStoreReqApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnSignStaffPerformanceContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnSignStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnSignStaffPerformanceContract(string contractNo) {
            object[] results = this.Invoke("fnSignStaffPerformanceContract", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnSignStaffPerformanceContractAsync(string contractNo) {
            this.fnSignStaffPerformanceContractAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void fnSignStaffPerformanceContractAsync(string contractNo, object userState) {
            if ((this.fnSignStaffPerformanceContractOperationCompleted == null)) {
                this.fnSignStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSignStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("fnSignStaffPerformanceContract", new object[] {
                        contractNo}, this.fnSignStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnfnSignStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.fnSignStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSignStaffPerformanceContractCompleted(this, new fnSignStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnStoreOTP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnStoreOTP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool fnStoreOTP(string userID, string email, string phone, string documentNo, string otpCode, int otpType, int tableID) {
            object[] results = this.Invoke("fnStoreOTP", new object[] {
                        userID,
                        email,
                        phone,
                        documentNo,
                        otpCode,
                        otpType,
                        tableID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void fnStoreOTPAsync(string userID, string email, string phone, string documentNo, string otpCode, int otpType, int tableID) {
            this.fnStoreOTPAsync(userID, email, phone, documentNo, otpCode, otpType, tableID, null);
        }
        
        /// <remarks/>
        public void fnStoreOTPAsync(string userID, string email, string phone, string documentNo, string otpCode, int otpType, int tableID, object userState) {
            if ((this.fnStoreOTPOperationCompleted == null)) {
                this.fnStoreOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnStoreOTPOperationCompleted);
            }
            this.InvokeAsync("fnStoreOTP", new object[] {
                        userID,
                        email,
                        phone,
                        documentNo,
                        otpCode,
                        otpType,
                        tableID}, this.fnStoreOTPOperationCompleted, userState);
        }
        
        private void OnfnStoreOTPOperationCompleted(object arg) {
            if ((this.fnStoreOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnStoreOTPCompleted(this, new fnStoreOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnSubmitStandardAppraisalConfirm" +
            "ation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnSubmitStandardAppraisalConfirmation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnSubmitStandardAppraisalConfirmation(string docNo) {
            object[] results = this.Invoke("fnSubmitStandardAppraisalConfirmation", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnSubmitStandardAppraisalConfirmationAsync(string docNo) {
            this.fnSubmitStandardAppraisalConfirmationAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnSubmitStandardAppraisalConfirmationAsync(string docNo, object userState) {
            if ((this.fnSubmitStandardAppraisalConfirmationOperationCompleted == null)) {
                this.fnSubmitStandardAppraisalConfirmationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSubmitStandardAppraisalConfirmationOperationCompleted);
            }
            this.InvokeAsync("fnSubmitStandardAppraisalConfirmation", new object[] {
                        docNo}, this.fnSubmitStandardAppraisalConfirmationOperationCompleted, userState);
        }
        
        private void OnfnSubmitStandardAppraisalConfirmationOperationCompleted(object arg) {
            if ((this.fnSubmitStandardAppraisalConfirmationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSubmitStandardAppraisalConfirmationCompleted(this, new fnSubmitStandardAppraisalConfirmationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnSubmitStandardAppraisalObj", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnSubmitStandardAppraisalObj_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnSubmitStandardAppraisalObj(string docNo, int lineno, decimal appraiserQty, string comments) {
            object[] results = this.Invoke("fnSubmitStandardAppraisalObj", new object[] {
                        docNo,
                        lineno,
                        appraiserQty,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnSubmitStandardAppraisalObjAsync(string docNo, int lineno, decimal appraiserQty, string comments) {
            this.fnSubmitStandardAppraisalObjAsync(docNo, lineno, appraiserQty, comments, null);
        }
        
        /// <remarks/>
        public void fnSubmitStandardAppraisalObjAsync(string docNo, int lineno, decimal appraiserQty, string comments, object userState) {
            if ((this.fnSubmitStandardAppraisalObjOperationCompleted == null)) {
                this.fnSubmitStandardAppraisalObjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSubmitStandardAppraisalObjOperationCompleted);
            }
            this.InvokeAsync("fnSubmitStandardAppraisalObj", new object[] {
                        docNo,
                        lineno,
                        appraiserQty,
                        comments}, this.fnSubmitStandardAppraisalObjOperationCompleted, userState);
        }
        
        private void OnfnSubmitStandardAppraisalObjOperationCompleted(object arg) {
            if ((this.fnSubmitStandardAppraisalObjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSubmitStandardAppraisalObjCompleted(this, new fnSubmitStandardAppraisalObjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnSubmitStandardAppraisalPE", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnSubmitStandardAppraisalPE_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnSubmitStandardAppraisalPE(string docNo, int lineno, decimal appraiserQty, string comments) {
            object[] results = this.Invoke("fnSubmitStandardAppraisalPE", new object[] {
                        docNo,
                        lineno,
                        appraiserQty,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnSubmitStandardAppraisalPEAsync(string docNo, int lineno, decimal appraiserQty, string comments) {
            this.fnSubmitStandardAppraisalPEAsync(docNo, lineno, appraiserQty, comments, null);
        }
        
        /// <remarks/>
        public void fnSubmitStandardAppraisalPEAsync(string docNo, int lineno, decimal appraiserQty, string comments, object userState) {
            if ((this.fnSubmitStandardAppraisalPEOperationCompleted == null)) {
                this.fnSubmitStandardAppraisalPEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSubmitStandardAppraisalPEOperationCompleted);
            }
            this.InvokeAsync("fnSubmitStandardAppraisalPE", new object[] {
                        docNo,
                        lineno,
                        appraiserQty,
                        comments}, this.fnSubmitStandardAppraisalPEOperationCompleted, userState);
        }
        
        private void OnfnSubmitStandardAppraisalPEOperationCompleted(object arg) {
            if ((this.fnSubmitStandardAppraisalPECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSubmitStandardAppraisalPECompleted(this, new fnSubmitStandardAppraisalPECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnSubmitStandardAppraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnSubmitStandardAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnSubmitStandardAppraisal(string docNo) {
            object[] results = this.Invoke("fnSubmitStandardAppraisal", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnSubmitStandardAppraisalAsync(string docNo) {
            this.fnSubmitStandardAppraisalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnSubmitStandardAppraisalAsync(string docNo, object userState) {
            if ((this.fnSubmitStandardAppraisalOperationCompleted == null)) {
                this.fnSubmitStandardAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSubmitStandardAppraisalOperationCompleted);
            }
            this.InvokeAsync("fnSubmitStandardAppraisal", new object[] {
                        docNo}, this.fnSubmitStandardAppraisalOperationCompleted, userState);
        }
        
        private void OnfnSubmitStandardAppraisalOperationCompleted(object arg) {
            if ((this.fnSubmitStandardAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSubmitStandardAppraisalCompleted(this, new fnSubmitStandardAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnSuggestPlogandSubPlogData", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnSuggestPlogandSubPlogData_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void fnSuggestPlogandSubPlogData(string docNo) {
            this.Invoke("fnSuggestPlogandSubPlogData", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void fnSuggestPlogandSubPlogDataAsync(string docNo) {
            this.fnSuggestPlogandSubPlogDataAsync(docNo, null);
        }
        
        /// <remarks/>
        public void fnSuggestPlogandSubPlogDataAsync(string docNo, object userState) {
            if ((this.fnSuggestPlogandSubPlogDataOperationCompleted == null)) {
                this.fnSuggestPlogandSubPlogDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSuggestPlogandSubPlogDataOperationCompleted);
            }
            this.InvokeAsync("fnSuggestPlogandSubPlogData", new object[] {
                        docNo}, this.fnSuggestPlogandSubPlogDataOperationCompleted, userState);
        }
        
        private void OnfnSuggestPlogandSubPlogDataOperationCompleted(object arg) {
            if ((this.fnSuggestPlogandSubPlogDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSuggestPlogandSubPlogDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnUpdateAgencies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnUpdateAgencies_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnUpdateAgencies(string userId, int lineNo, string agencyName, string firmNo, string designation, string agencyRegNo, string firmLicenceNo, string firmAnnualLicNo) {
            object[] results = this.Invoke("fnUpdateAgencies", new object[] {
                        userId,
                        lineNo,
                        agencyName,
                        firmNo,
                        designation,
                        agencyRegNo,
                        firmLicenceNo,
                        firmAnnualLicNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnUpdateAgenciesAsync(string userId, int lineNo, string agencyName, string firmNo, string designation, string agencyRegNo, string firmLicenceNo, string firmAnnualLicNo) {
            this.fnUpdateAgenciesAsync(userId, lineNo, agencyName, firmNo, designation, agencyRegNo, firmLicenceNo, firmAnnualLicNo, null);
        }
        
        /// <remarks/>
        public void fnUpdateAgenciesAsync(string userId, int lineNo, string agencyName, string firmNo, string designation, string agencyRegNo, string firmLicenceNo, string firmAnnualLicNo, object userState) {
            if ((this.fnUpdateAgenciesOperationCompleted == null)) {
                this.fnUpdateAgenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnUpdateAgenciesOperationCompleted);
            }
            this.InvokeAsync("fnUpdateAgencies", new object[] {
                        userId,
                        lineNo,
                        agencyName,
                        firmNo,
                        designation,
                        agencyRegNo,
                        firmLicenceNo,
                        firmAnnualLicNo}, this.fnUpdateAgenciesOperationCompleted, userState);
        }
        
        private void OnfnUpdateAgenciesOperationCompleted(object arg) {
            if ((this.fnUpdateAgenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnUpdateAgenciesCompleted(this, new fnUpdateAgenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnUpdateEducationInfo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnUpdateEducationInfo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnUpdateEducationInfo(string userId, int lineNo, int educationLevel, int qualification, string institution, string course, string otherEducation, string otherQualification) {
            object[] results = this.Invoke("fnUpdateEducationInfo", new object[] {
                        userId,
                        lineNo,
                        educationLevel,
                        qualification,
                        institution,
                        course,
                        otherEducation,
                        otherQualification});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnUpdateEducationInfoAsync(string userId, int lineNo, int educationLevel, int qualification, string institution, string course, string otherEducation, string otherQualification) {
            this.fnUpdateEducationInfoAsync(userId, lineNo, educationLevel, qualification, institution, course, otherEducation, otherQualification, null);
        }
        
        /// <remarks/>
        public void fnUpdateEducationInfoAsync(string userId, int lineNo, int educationLevel, int qualification, string institution, string course, string otherEducation, string otherQualification, object userState) {
            if ((this.fnUpdateEducationInfoOperationCompleted == null)) {
                this.fnUpdateEducationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnUpdateEducationInfoOperationCompleted);
            }
            this.InvokeAsync("fnUpdateEducationInfo", new object[] {
                        userId,
                        lineNo,
                        educationLevel,
                        qualification,
                        institution,
                        course,
                        otherEducation,
                        otherQualification}, this.fnUpdateEducationInfoOperationCompleted, userState);
        }
        
        private void OnfnUpdateEducationInfoOperationCompleted(object arg) {
            if ((this.fnUpdateEducationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnUpdateEducationInfoCompleted(this, new fnUpdateEducationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnUpdateEmploymentHist", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnUpdateEmploymentHist_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnUpdateEmploymentHist(string userId, int lineNo, string employer, string designation, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, bool currently, int empType) {
            object[] results = this.Invoke("fnUpdateEmploymentHist", new object[] {
                        userId,
                        lineNo,
                        employer,
                        designation,
                        startDate,
                        endDate,
                        currently,
                        empType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnUpdateEmploymentHistAsync(string userId, int lineNo, string employer, string designation, System.DateTime startDate, System.DateTime endDate, bool currently, int empType) {
            this.fnUpdateEmploymentHistAsync(userId, lineNo, employer, designation, startDate, endDate, currently, empType, null);
        }
        
        /// <remarks/>
        public void fnUpdateEmploymentHistAsync(string userId, int lineNo, string employer, string designation, System.DateTime startDate, System.DateTime endDate, bool currently, int empType, object userState) {
            if ((this.fnUpdateEmploymentHistOperationCompleted == null)) {
                this.fnUpdateEmploymentHistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnUpdateEmploymentHistOperationCompleted);
            }
            this.InvokeAsync("fnUpdateEmploymentHist", new object[] {
                        userId,
                        lineNo,
                        employer,
                        designation,
                        startDate,
                        endDate,
                        currently,
                        empType}, this.fnUpdateEmploymentHistOperationCompleted, userState);
        }
        
        private void OnfnUpdateEmploymentHistOperationCompleted(object arg) {
            if ((this.fnUpdateEmploymentHistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnUpdateEmploymentHistCompleted(this, new fnUpdateEmploymentHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnUpdateHelpDeskIssue", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnUpdateHelpDeskIssue_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool fnUpdateHelpDeskIssue(string docNo, string helpCategory, string helpSubCategory, string issueDescription) {
            object[] results = this.Invoke("fnUpdateHelpDeskIssue", new object[] {
                        docNo,
                        helpCategory,
                        helpSubCategory,
                        issueDescription});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void fnUpdateHelpDeskIssueAsync(string docNo, string helpCategory, string helpSubCategory, string issueDescription) {
            this.fnUpdateHelpDeskIssueAsync(docNo, helpCategory, helpSubCategory, issueDescription, null);
        }
        
        /// <remarks/>
        public void fnUpdateHelpDeskIssueAsync(string docNo, string helpCategory, string helpSubCategory, string issueDescription, object userState) {
            if ((this.fnUpdateHelpDeskIssueOperationCompleted == null)) {
                this.fnUpdateHelpDeskIssueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnUpdateHelpDeskIssueOperationCompleted);
            }
            this.InvokeAsync("fnUpdateHelpDeskIssue", new object[] {
                        docNo,
                        helpCategory,
                        helpSubCategory,
                        issueDescription}, this.fnUpdateHelpDeskIssueOperationCompleted, userState);
        }
        
        private void OnfnUpdateHelpDeskIssueOperationCompleted(object arg) {
            if ((this.fnUpdateHelpDeskIssueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnUpdateHelpDeskIssueCompleted(this, new fnUpdateHelpDeskIssueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnUpdateMembershipSummary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnUpdateMembershipSummary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnUpdateMembershipSummary(string userId, int lineNo, string memberName, string memberNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime regDate, string licenceNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime annualLicenceDate) {
            object[] results = this.Invoke("fnUpdateMembershipSummary", new object[] {
                        userId,
                        lineNo,
                        memberName,
                        memberNo,
                        regDate,
                        licenceNo,
                        annualLicenceDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnUpdateMembershipSummaryAsync(string userId, int lineNo, string memberName, string memberNo, System.DateTime regDate, string licenceNo, System.DateTime annualLicenceDate) {
            this.fnUpdateMembershipSummaryAsync(userId, lineNo, memberName, memberNo, regDate, licenceNo, annualLicenceDate, null);
        }
        
        /// <remarks/>
        public void fnUpdateMembershipSummaryAsync(string userId, int lineNo, string memberName, string memberNo, System.DateTime regDate, string licenceNo, System.DateTime annualLicenceDate, object userState) {
            if ((this.fnUpdateMembershipSummaryOperationCompleted == null)) {
                this.fnUpdateMembershipSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnUpdateMembershipSummaryOperationCompleted);
            }
            this.InvokeAsync("fnUpdateMembershipSummary", new object[] {
                        userId,
                        lineNo,
                        memberName,
                        memberNo,
                        regDate,
                        licenceNo,
                        annualLicenceDate}, this.fnUpdateMembershipSummaryOperationCompleted, userState);
        }
        
        private void OnfnUpdateMembershipSummaryOperationCompleted(object arg) {
            if ((this.fnUpdateMembershipSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnUpdateMembershipSummaryCompleted(this, new fnUpdateMembershipSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnUpdateProcurementProfessionals" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnUpdateProcurementProfessionals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnUpdateProcurementProfessionals(string userId, int lineNo, string name, string address, string phone, string profession, string email) {
            object[] results = this.Invoke("fnUpdateProcurementProfessionals", new object[] {
                        userId,
                        lineNo,
                        name,
                        address,
                        phone,
                        profession,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnUpdateProcurementProfessionalsAsync(string userId, int lineNo, string name, string address, string phone, string profession, string email) {
            this.fnUpdateProcurementProfessionalsAsync(userId, lineNo, name, address, phone, profession, email, null);
        }
        
        /// <remarks/>
        public void fnUpdateProcurementProfessionalsAsync(string userId, int lineNo, string name, string address, string phone, string profession, string email, object userState) {
            if ((this.fnUpdateProcurementProfessionalsOperationCompleted == null)) {
                this.fnUpdateProcurementProfessionalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnUpdateProcurementProfessionalsOperationCompleted);
            }
            this.InvokeAsync("fnUpdateProcurementProfessionals", new object[] {
                        userId,
                        lineNo,
                        name,
                        address,
                        phone,
                        profession,
                        email}, this.fnUpdateProcurementProfessionalsOperationCompleted, userState);
        }
        
        private void OnfnUpdateProcurementProfessionalsOperationCompleted(object arg) {
            if ((this.fnUpdateProcurementProfessionalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnUpdateProcurementProfessionalsCompleted(this, new fnUpdateProcurementProfessionalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnUpdateStoreReqLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnUpdateStoreReqLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnUpdateStoreReqLine(string docNo, int lineNo, string itemCategory, string itemNo, decimal quantity) {
            object[] results = this.Invoke("fnUpdateStoreReqLine", new object[] {
                        docNo,
                        lineNo,
                        itemCategory,
                        itemNo,
                        quantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnUpdateStoreReqLineAsync(string docNo, int lineNo, string itemCategory, string itemNo, decimal quantity) {
            this.fnUpdateStoreReqLineAsync(docNo, lineNo, itemCategory, itemNo, quantity, null);
        }
        
        /// <remarks/>
        public void fnUpdateStoreReqLineAsync(string docNo, int lineNo, string itemCategory, string itemNo, decimal quantity, object userState) {
            if ((this.fnUpdateStoreReqLineOperationCompleted == null)) {
                this.fnUpdateStoreReqLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnUpdateStoreReqLineOperationCompleted);
            }
            this.InvokeAsync("fnUpdateStoreReqLine", new object[] {
                        docNo,
                        lineNo,
                        itemCategory,
                        itemNo,
                        quantity}, this.fnUpdateStoreReqLineOperationCompleted, userState);
        }
        
        private void OnfnUpdateStoreReqLineOperationCompleted(object arg) {
            if ((this.fnUpdateStoreReqLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnUpdateStoreReqLineCompleted(this, new fnUpdateStoreReqLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnUpdateUserAgreement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnUpdateUserAgreement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnUpdateUserAgreement(string userId, bool competent, bool notCorrupt, bool noInducements, bool noCorrosivePrac, bool allAbove, bool understand, bool abide, bool nonGovernment) {
            object[] results = this.Invoke("fnUpdateUserAgreement", new object[] {
                        userId,
                        competent,
                        notCorrupt,
                        noInducements,
                        noCorrosivePrac,
                        allAbove,
                        understand,
                        abide,
                        nonGovernment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnUpdateUserAgreementAsync(string userId, bool competent, bool notCorrupt, bool noInducements, bool noCorrosivePrac, bool allAbove, bool understand, bool abide, bool nonGovernment) {
            this.fnUpdateUserAgreementAsync(userId, competent, notCorrupt, noInducements, noCorrosivePrac, allAbove, understand, abide, nonGovernment, null);
        }
        
        /// <remarks/>
        public void fnUpdateUserAgreementAsync(string userId, bool competent, bool notCorrupt, bool noInducements, bool noCorrosivePrac, bool allAbove, bool understand, bool abide, bool nonGovernment, object userState) {
            if ((this.fnUpdateUserAgreementOperationCompleted == null)) {
                this.fnUpdateUserAgreementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnUpdateUserAgreementOperationCompleted);
            }
            this.InvokeAsync("fnUpdateUserAgreement", new object[] {
                        userId,
                        competent,
                        notCorrupt,
                        noInducements,
                        noCorrosivePrac,
                        allAbove,
                        understand,
                        abide,
                        nonGovernment}, this.fnUpdateUserAgreementOperationCompleted, userState);
        }
        
        private void OnfnUpdateUserAgreementOperationCompleted(object arg) {
            if ((this.fnUpdateUserAgreementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnUpdateUserAgreementCompleted(this, new fnUpdateUserAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnUpdateUserBankruptcyOrConvicti" +
            "on", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnUpdateUserBankruptcyOrConviction_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnUpdateUserBankruptcyOrConviction(string userId, bool bankrupt, string bankruptReason) {
            object[] results = this.Invoke("fnUpdateUserBankruptcyOrConviction", new object[] {
                        userId,
                        bankrupt,
                        bankruptReason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnUpdateUserBankruptcyOrConvictionAsync(string userId, bool bankrupt, string bankruptReason) {
            this.fnUpdateUserBankruptcyOrConvictionAsync(userId, bankrupt, bankruptReason, null);
        }
        
        /// <remarks/>
        public void fnUpdateUserBankruptcyOrConvictionAsync(string userId, bool bankrupt, string bankruptReason, object userState) {
            if ((this.fnUpdateUserBankruptcyOrConvictionOperationCompleted == null)) {
                this.fnUpdateUserBankruptcyOrConvictionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnUpdateUserBankruptcyOrConvictionOperationCompleted);
            }
            this.InvokeAsync("fnUpdateUserBankruptcyOrConviction", new object[] {
                        userId,
                        bankrupt,
                        bankruptReason}, this.fnUpdateUserBankruptcyOrConvictionOperationCompleted, userState);
        }
        
        private void OnfnUpdateUserBankruptcyOrConvictionOperationCompleted(object arg) {
            if ((this.fnUpdateUserBankruptcyOrConvictionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnUpdateUserBankruptcyOrConvictionCompleted(this, new fnUpdateUserBankruptcyOrConvictionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnUpdateUserEmploymentHist", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnUpdateUserEmploymentHist_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnUpdateUserEmploymentHist(string userId, bool workExperience) {
            object[] results = this.Invoke("fnUpdateUserEmploymentHist", new object[] {
                        userId,
                        workExperience});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnUpdateUserEmploymentHistAsync(string userId, bool workExperience) {
            this.fnUpdateUserEmploymentHistAsync(userId, workExperience, null);
        }
        
        /// <remarks/>
        public void fnUpdateUserEmploymentHistAsync(string userId, bool workExperience, object userState) {
            if ((this.fnUpdateUserEmploymentHistOperationCompleted == null)) {
                this.fnUpdateUserEmploymentHistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnUpdateUserEmploymentHistOperationCompleted);
            }
            this.InvokeAsync("fnUpdateUserEmploymentHist", new object[] {
                        userId,
                        workExperience}, this.fnUpdateUserEmploymentHistOperationCompleted, userState);
        }
        
        private void OnfnUpdateUserEmploymentHistOperationCompleted(object arg) {
            if ((this.fnUpdateUserEmploymentHistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnUpdateUserEmploymentHistCompleted(this, new fnUpdateUserEmploymentHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnUpdateUserMembership", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnUpdateUserMembership_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnUpdateUserMembership(string userId, bool instMember) {
            object[] results = this.Invoke("fnUpdateUserMembership", new object[] {
                        userId,
                        instMember});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnUpdateUserMembershipAsync(string userId, bool instMember) {
            this.fnUpdateUserMembershipAsync(userId, instMember, null);
        }
        
        /// <remarks/>
        public void fnUpdateUserMembershipAsync(string userId, bool instMember, object userState) {
            if ((this.fnUpdateUserMembershipOperationCompleted == null)) {
                this.fnUpdateUserMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnUpdateUserMembershipOperationCompleted);
            }
            this.InvokeAsync("fnUpdateUserMembership", new object[] {
                        userId,
                        instMember}, this.fnUpdateUserMembershipOperationCompleted, userState);
        }
        
        private void OnfnUpdateUserMembershipOperationCompleted(object arg) {
            if ((this.fnUpdateUserMembershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnUpdateUserMembershipCompleted(this, new fnUpdateUserMembershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnUpdateUserOtherPractices", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnUpdateUserOtherPractices_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnUpdateUserOtherPractices(string userId, bool otherPractices) {
            object[] results = this.Invoke("fnUpdateUserOtherPractices", new object[] {
                        userId,
                        otherPractices});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnUpdateUserOtherPracticesAsync(string userId, bool otherPractices) {
            this.fnUpdateUserOtherPracticesAsync(userId, otherPractices, null);
        }
        
        /// <remarks/>
        public void fnUpdateUserOtherPracticesAsync(string userId, bool otherPractices, object userState) {
            if ((this.fnUpdateUserOtherPracticesOperationCompleted == null)) {
                this.fnUpdateUserOtherPracticesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnUpdateUserOtherPracticesOperationCompleted);
            }
            this.InvokeAsync("fnUpdateUserOtherPractices", new object[] {
                        userId,
                        otherPractices}, this.fnUpdateUserOtherPracticesOperationCompleted, userState);
        }
        
        private void OnfnUpdateUserOtherPracticesOperationCompleted(object arg) {
            if ((this.fnUpdateUserOtherPracticesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnUpdateUserOtherPracticesCompleted(this, new fnUpdateUserOtherPracticesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnUpdateUserProfile", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnUpdateUserProfile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnUpdateUserProfile(string userId, string fName, string lName, string nationality, string town, string street, string building, string postalAddress, string postalCode) {
            object[] results = this.Invoke("fnUpdateUserProfile", new object[] {
                        userId,
                        fName,
                        lName,
                        nationality,
                        town,
                        street,
                        building,
                        postalAddress,
                        postalCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnUpdateUserProfileAsync(string userId, string fName, string lName, string nationality, string town, string street, string building, string postalAddress, string postalCode) {
            this.fnUpdateUserProfileAsync(userId, fName, lName, nationality, town, street, building, postalAddress, postalCode, null);
        }
        
        /// <remarks/>
        public void fnUpdateUserProfileAsync(string userId, string fName, string lName, string nationality, string town, string street, string building, string postalAddress, string postalCode, object userState) {
            if ((this.fnUpdateUserProfileOperationCompleted == null)) {
                this.fnUpdateUserProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnUpdateUserProfileOperationCompleted);
            }
            this.InvokeAsync("fnUpdateUserProfile", new object[] {
                        userId,
                        fName,
                        lName,
                        nationality,
                        town,
                        street,
                        building,
                        postalAddress,
                        postalCode}, this.fnUpdateUserProfileOperationCompleted, userState);
        }
        
        private void OnfnUpdateUserProfileOperationCompleted(object arg) {
            if ((this.fnUpdateUserProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnUpdateUserProfileCompleted(this, new fnUpdateUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnUpdateUserSelfEmployed", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnUpdateUserSelfEmployed_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnUpdateUserSelfEmployed(string userId, bool selfEmployed) {
            object[] results = this.Invoke("fnUpdateUserSelfEmployed", new object[] {
                        userId,
                        selfEmployed});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnUpdateUserSelfEmployedAsync(string userId, bool selfEmployed) {
            this.fnUpdateUserSelfEmployedAsync(userId, selfEmployed, null);
        }
        
        /// <remarks/>
        public void fnUpdateUserSelfEmployedAsync(string userId, bool selfEmployed, object userState) {
            if ((this.fnUpdateUserSelfEmployedOperationCompleted == null)) {
                this.fnUpdateUserSelfEmployedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnUpdateUserSelfEmployedOperationCompleted);
            }
            this.InvokeAsync("fnUpdateUserSelfEmployed", new object[] {
                        userId,
                        selfEmployed}, this.fnUpdateUserSelfEmployedOperationCompleted, userState);
        }
        
        private void OnfnUpdateUserSelfEmployedOperationCompleted(object arg) {
            if ((this.fnUpdateUserSelfEmployedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnUpdateUserSelfEmployedCompleted(this, new fnUpdateUserSelfEmployedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnUploadLicenceRegistrationDocs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnUploadLicenceRegistrationDocs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void fnUploadLicenceRegistrationDocs(string docNo, int docType, string fileName, string attachment, int tableID) {
            this.Invoke("fnUploadLicenceRegistrationDocs", new object[] {
                        docNo,
                        docType,
                        fileName,
                        attachment,
                        tableID});
        }
        
        /// <remarks/>
        public void fnUploadLicenceRegistrationDocsAsync(string docNo, int docType, string fileName, string attachment, int tableID) {
            this.fnUploadLicenceRegistrationDocsAsync(docNo, docType, fileName, attachment, tableID, null);
        }
        
        /// <remarks/>
        public void fnUploadLicenceRegistrationDocsAsync(string docNo, int docType, string fileName, string attachment, int tableID, object userState) {
            if ((this.fnUploadLicenceRegistrationDocsOperationCompleted == null)) {
                this.fnUploadLicenceRegistrationDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnUploadLicenceRegistrationDocsOperationCompleted);
            }
            this.InvokeAsync("fnUploadLicenceRegistrationDocs", new object[] {
                        docNo,
                        docType,
                        fileName,
                        attachment,
                        tableID}, this.fnUploadLicenceRegistrationDocsOperationCompleted, userState);
        }
        
        private void OnfnUploadLicenceRegistrationDocsOperationCompleted(object arg) {
            if ((this.fnUploadLicenceRegistrationDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnUploadLicenceRegistrationDocsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnVerifyEmailAddress", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnVerifyEmailAddress_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnVerifyEmailAddress(string userID, string email, string otpCode) {
            object[] results = this.Invoke("fnVerifyEmailAddress", new object[] {
                        userID,
                        email,
                        otpCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnVerifyEmailAddressAsync(string userID, string email, string otpCode) {
            this.fnVerifyEmailAddressAsync(userID, email, otpCode, null);
        }
        
        /// <remarks/>
        public void fnVerifyEmailAddressAsync(string userID, string email, string otpCode, object userState) {
            if ((this.fnVerifyEmailAddressOperationCompleted == null)) {
                this.fnVerifyEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnVerifyEmailAddressOperationCompleted);
            }
            this.InvokeAsync("fnVerifyEmailAddress", new object[] {
                        userID,
                        email,
                        otpCode}, this.fnVerifyEmailAddressOperationCompleted, userState);
        }
        
        private void OnfnVerifyEmailAddressOperationCompleted(object arg) {
            if ((this.fnVerifyEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnVerifyEmailAddressCompleted(this, new fnVerifyEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnVerifyLoginOTP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnVerifyLoginOTP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool fnVerifyLoginOTP(string email, string otpCode) {
            object[] results = this.Invoke("fnVerifyLoginOTP", new object[] {
                        email,
                        otpCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void fnVerifyLoginOTPAsync(string email, string otpCode) {
            this.fnVerifyLoginOTPAsync(email, otpCode, null);
        }
        
        /// <remarks/>
        public void fnVerifyLoginOTPAsync(string email, string otpCode, object userState) {
            if ((this.fnVerifyLoginOTPOperationCompleted == null)) {
                this.fnVerifyLoginOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnVerifyLoginOTPOperationCompleted);
            }
            this.InvokeAsync("fnVerifyLoginOTP", new object[] {
                        email,
                        otpCode}, this.fnVerifyLoginOTPOperationCompleted, userState);
        }
        
        private void OnfnVerifyLoginOTPOperationCompleted(object arg) {
            if ((this.fnVerifyLoginOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnVerifyLoginOTPCompleted(this, new fnVerifyLoginOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fncreatePurchaseRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fncreatePurchaseRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fncreatePurchaseRequisition(string employeeNo, string requisitionNo, int priorityLevel, string itemcategory, string txtdirectorate, string txtdepartment, string job, string jobtask, string location, string reqDescription, string username) {
            object[] results = this.Invoke("fncreatePurchaseRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        priorityLevel,
                        itemcategory,
                        txtdirectorate,
                        txtdepartment,
                        job,
                        jobtask,
                        location,
                        reqDescription,
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fncreatePurchaseRequisitionAsync(string employeeNo, string requisitionNo, int priorityLevel, string itemcategory, string txtdirectorate, string txtdepartment, string job, string jobtask, string location, string reqDescription, string username) {
            this.fncreatePurchaseRequisitionAsync(employeeNo, requisitionNo, priorityLevel, itemcategory, txtdirectorate, txtdepartment, job, jobtask, location, reqDescription, username, null);
        }
        
        /// <remarks/>
        public void fncreatePurchaseRequisitionAsync(string employeeNo, string requisitionNo, int priorityLevel, string itemcategory, string txtdirectorate, string txtdepartment, string job, string jobtask, string location, string reqDescription, string username, object userState) {
            if ((this.fncreatePurchaseRequisitionOperationCompleted == null)) {
                this.fncreatePurchaseRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfncreatePurchaseRequisitionOperationCompleted);
            }
            this.InvokeAsync("fncreatePurchaseRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        priorityLevel,
                        itemcategory,
                        txtdirectorate,
                        txtdepartment,
                        job,
                        jobtask,
                        location,
                        reqDescription,
                        username}, this.fncreatePurchaseRequisitionOperationCompleted, userState);
        }
        
        private void OnfncreatePurchaseRequisitionOperationCompleted(object arg) {
            if ((this.fncreatePurchaseRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fncreatePurchaseRequisitionCompleted(this, new fncreatePurchaseRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnsendFuelRequistionForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnsendFuelRequistionForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnsendFuelRequistionForApproval(string recordNo) {
            object[] results = this.Invoke("fnsendFuelRequistionForApproval", new object[] {
                        recordNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnsendFuelRequistionForApprovalAsync(string recordNo) {
            this.fnsendFuelRequistionForApprovalAsync(recordNo, null);
        }
        
        /// <remarks/>
        public void fnsendFuelRequistionForApprovalAsync(string recordNo, object userState) {
            if ((this.fnsendFuelRequistionForApprovalOperationCompleted == null)) {
                this.fnsendFuelRequistionForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnsendFuelRequistionForApprovalOperationCompleted);
            }
            this.InvokeAsync("fnsendFuelRequistionForApproval", new object[] {
                        recordNo}, this.fnsendFuelRequistionForApprovalOperationCompleted, userState);
        }
        
        private void OnfnsendFuelRequistionForApprovalOperationCompleted(object arg) {
            if ((this.fnsendFuelRequistionForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnsendFuelRequistionForApprovalCompleted(this, new fnsendFuelRequistionForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:fnsendMaintenanceRequistionForAp" +
            "proval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="fnsendMaintenanceRequistionForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string fnsendMaintenanceRequistionForApproval(string recordNo) {
            object[] results = this.Invoke("fnsendMaintenanceRequistionForApproval", new object[] {
                        recordNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnsendMaintenanceRequistionForApprovalAsync(string recordNo) {
            this.fnsendMaintenanceRequistionForApprovalAsync(recordNo, null);
        }
        
        /// <remarks/>
        public void fnsendMaintenanceRequistionForApprovalAsync(string recordNo, object userState) {
            if ((this.fnsendMaintenanceRequistionForApprovalOperationCompleted == null)) {
                this.fnsendMaintenanceRequistionForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnsendMaintenanceRequistionForApprovalOperationCompleted);
            }
            this.InvokeAsync("fnsendMaintenanceRequistionForApproval", new object[] {
                        recordNo}, this.fnsendMaintenanceRequistionForApprovalOperationCompleted, userState);
        }
        
        private void OnfnsendMaintenanceRequistionForApprovalOperationCompleted(object arg) {
            if ((this.fnsendMaintenanceRequistionForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnsendMaintenanceRequistionForApprovalCompleted(this, new fnsendMaintenanceRequistionForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:forgotPasswordtForExtenalApplica" +
            "nts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="forgotPasswordtForExtenalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string forgotPasswordtForExtenalApplicants(string email, string password, string salt) {
            object[] results = this.Invoke("forgotPasswordtForExtenalApplicants", new object[] {
                        email,
                        password,
                        salt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void forgotPasswordtForExtenalApplicantsAsync(string email, string password, string salt) {
            this.forgotPasswordtForExtenalApplicantsAsync(email, password, salt, null);
        }
        
        /// <remarks/>
        public void forgotPasswordtForExtenalApplicantsAsync(string email, string password, string salt, object userState) {
            if ((this.forgotPasswordtForExtenalApplicantsOperationCompleted == null)) {
                this.forgotPasswordtForExtenalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforgotPasswordtForExtenalApplicantsOperationCompleted);
            }
            this.InvokeAsync("forgotPasswordtForExtenalApplicants", new object[] {
                        email,
                        password,
                        salt}, this.forgotPasswordtForExtenalApplicantsOperationCompleted, userState);
        }
        
        private void OnforgotPasswordtForExtenalApplicantsOperationCompleted(object arg) {
            if ((this.forgotPasswordtForExtenalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forgotPasswordtForExtenalApplicantsCompleted(this, new forgotPasswordtForExtenalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:generateCommitmentReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="generateCommitmentReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string generateCommitmentReport(int reportType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            object[] results = this.Invoke("generateCommitmentReport", new object[] {
                        reportType,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateCommitmentReportAsync(int reportType, System.DateTime startDate, System.DateTime endDate) {
            this.generateCommitmentReportAsync(reportType, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void generateCommitmentReportAsync(int reportType, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.generateCommitmentReportOperationCompleted == null)) {
                this.generateCommitmentReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateCommitmentReportOperationCompleted);
            }
            this.InvokeAsync("generateCommitmentReport", new object[] {
                        reportType,
                        startDate,
                        endDate}, this.generateCommitmentReportOperationCompleted, userState);
        }
        
        private void OngenerateCommitmentReportOperationCompleted(object arg) {
            if ((this.generateCommitmentReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateCommitmentReportCompleted(this, new generateCommitmentReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:generateEmployeeStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="generateEmployeeStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string generateEmployeeStatement(string employeeNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            object[] results = this.Invoke("generateEmployeeStatement", new object[] {
                        employeeNumber,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateEmployeeStatementAsync(string employeeNumber, System.DateTime startDate, System.DateTime endDate) {
            this.generateEmployeeStatementAsync(employeeNumber, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void generateEmployeeStatementAsync(string employeeNumber, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.generateEmployeeStatementOperationCompleted == null)) {
                this.generateEmployeeStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateEmployeeStatementOperationCompleted);
            }
            this.InvokeAsync("generateEmployeeStatement", new object[] {
                        employeeNumber,
                        startDate,
                        endDate}, this.generateEmployeeStatementOperationCompleted, userState);
        }
        
        private void OngenerateEmployeeStatementOperationCompleted(object arg) {
            if ((this.generateEmployeeStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateEmployeeStatementCompleted(this, new generateEmployeeStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:generateFleetRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="generateFleetRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string generateFleetRequisition(string transportRequisitionNo) {
            object[] results = this.Invoke("generateFleetRequisition", new object[] {
                        transportRequisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateFleetRequisitionAsync(string transportRequisitionNo) {
            this.generateFleetRequisitionAsync(transportRequisitionNo, null);
        }
        
        /// <remarks/>
        public void generateFleetRequisitionAsync(string transportRequisitionNo, object userState) {
            if ((this.generateFleetRequisitionOperationCompleted == null)) {
                this.generateFleetRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateFleetRequisitionOperationCompleted);
            }
            this.InvokeAsync("generateFleetRequisition", new object[] {
                        transportRequisitionNo}, this.generateFleetRequisitionOperationCompleted, userState);
        }
        
        private void OngenerateFleetRequisitionOperationCompleted(object arg) {
            if ((this.generateFleetRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateFleetRequisitionCompleted(this, new generateFleetRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:generateImprestMemo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="generateImprestMemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string generateImprestMemo(string employeeNumber, string docNo) {
            object[] results = this.Invoke("generateImprestMemo", new object[] {
                        employeeNumber,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateImprestMemoAsync(string employeeNumber, string docNo) {
            this.generateImprestMemoAsync(employeeNumber, docNo, null);
        }
        
        /// <remarks/>
        public void generateImprestMemoAsync(string employeeNumber, string docNo, object userState) {
            if ((this.generateImprestMemoOperationCompleted == null)) {
                this.generateImprestMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateImprestMemoOperationCompleted);
            }
            this.InvokeAsync("generateImprestMemo", new object[] {
                        employeeNumber,
                        docNo}, this.generateImprestMemoOperationCompleted, userState);
        }
        
        private void OngenerateImprestMemoOperationCompleted(object arg) {
            if ((this.generateImprestMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateImprestMemoCompleted(this, new generateImprestMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:generateIssueVoucher", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="generateIssueVoucher_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string generateIssueVoucher(string employeeNumber, string docNo) {
            object[] results = this.Invoke("generateIssueVoucher", new object[] {
                        employeeNumber,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateIssueVoucherAsync(string employeeNumber, string docNo) {
            this.generateIssueVoucherAsync(employeeNumber, docNo, null);
        }
        
        /// <remarks/>
        public void generateIssueVoucherAsync(string employeeNumber, string docNo, object userState) {
            if ((this.generateIssueVoucherOperationCompleted == null)) {
                this.generateIssueVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateIssueVoucherOperationCompleted);
            }
            this.InvokeAsync("generateIssueVoucher", new object[] {
                        employeeNumber,
                        docNo}, this.generateIssueVoucherOperationCompleted, userState);
        }
        
        private void OngenerateIssueVoucherOperationCompleted(object arg) {
            if ((this.generateIssueVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateIssueVoucherCompleted(this, new generateIssueVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:generateLeaveForm", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="generateLeaveForm_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string generateLeaveForm(string employeeNo, string leaveNo) {
            object[] results = this.Invoke("generateLeaveForm", new object[] {
                        employeeNo,
                        leaveNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateLeaveFormAsync(string employeeNo, string leaveNo) {
            this.generateLeaveFormAsync(employeeNo, leaveNo, null);
        }
        
        /// <remarks/>
        public void generateLeaveFormAsync(string employeeNo, string leaveNo, object userState) {
            if ((this.generateLeaveFormOperationCompleted == null)) {
                this.generateLeaveFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateLeaveFormOperationCompleted);
            }
            this.InvokeAsync("generateLeaveForm", new object[] {
                        employeeNo,
                        leaveNo}, this.generateLeaveFormOperationCompleted, userState);
        }
        
        private void OngenerateLeaveFormOperationCompleted(object arg) {
            if ((this.generateLeaveFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateLeaveFormCompleted(this, new generateLeaveFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:generateP9", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="generateP9_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string generateP9(string employeeNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            object[] results = this.Invoke("generateP9", new object[] {
                        employeeNumber,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateP9Async(string employeeNumber, System.DateTime startDate, System.DateTime endDate) {
            this.generateP9Async(employeeNumber, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void generateP9Async(string employeeNumber, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.generateP9OperationCompleted == null)) {
                this.generateP9OperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateP9OperationCompleted);
            }
            this.InvokeAsync("generateP9", new object[] {
                        employeeNumber,
                        startDate,
                        endDate}, this.generateP9OperationCompleted, userState);
        }
        
        private void OngenerateP9OperationCompleted(object arg) {
            if ((this.generateP9Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateP9Completed(this, new generateP9CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:generatePayslip", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="generatePayslip_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string generatePayslip(string employeeNumber, System.DateTime payPeriod) {
            object[] results = this.Invoke("generatePayslip", new object[] {
                        employeeNumber,
                        payPeriod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generatePayslipAsync(string employeeNumber, System.DateTime payPeriod) {
            this.generatePayslipAsync(employeeNumber, payPeriod, null);
        }
        
        /// <remarks/>
        public void generatePayslipAsync(string employeeNumber, System.DateTime payPeriod, object userState) {
            if ((this.generatePayslipOperationCompleted == null)) {
                this.generatePayslipOperationCompleted = new System.Threading.SendOrPostCallback(this.OngeneratePayslipOperationCompleted);
            }
            this.InvokeAsync("generatePayslip", new object[] {
                        employeeNumber,
                        payPeriod}, this.generatePayslipOperationCompleted, userState);
        }
        
        private void OngeneratePayslipOperationCompleted(object arg) {
            if ((this.generatePayslipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generatePayslipCompleted(this, new generatePayslipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:generatePettyCashVoucher", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="generatePettyCashVoucher_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string generatePettyCashVoucher(string employeeNumber, string docNo) {
            object[] results = this.Invoke("generatePettyCashVoucher", new object[] {
                        employeeNumber,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generatePettyCashVoucherAsync(string employeeNumber, string docNo) {
            this.generatePettyCashVoucherAsync(employeeNumber, docNo, null);
        }
        
        /// <remarks/>
        public void generatePettyCashVoucherAsync(string employeeNumber, string docNo, object userState) {
            if ((this.generatePettyCashVoucherOperationCompleted == null)) {
                this.generatePettyCashVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OngeneratePettyCashVoucherOperationCompleted);
            }
            this.InvokeAsync("generatePettyCashVoucher", new object[] {
                        employeeNumber,
                        docNo}, this.generatePettyCashVoucherOperationCompleted, userState);
        }
        
        private void OngeneratePettyCashVoucherOperationCompleted(object arg) {
            if ((this.generatePettyCashVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generatePettyCashVoucherCompleted(this, new generatePettyCashVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:generatePurchaseReq", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="generatePurchaseReq_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string generatePurchaseReq(string docNo) {
            object[] results = this.Invoke("generatePurchaseReq", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generatePurchaseReqAsync(string docNo) {
            this.generatePurchaseReqAsync(docNo, null);
        }
        
        /// <remarks/>
        public void generatePurchaseReqAsync(string docNo, object userState) {
            if ((this.generatePurchaseReqOperationCompleted == null)) {
                this.generatePurchaseReqOperationCompleted = new System.Threading.SendOrPostCallback(this.OngeneratePurchaseReqOperationCompleted);
            }
            this.InvokeAsync("generatePurchaseReq", new object[] {
                        docNo}, this.generatePurchaseReqOperationCompleted, userState);
        }
        
        private void OngeneratePurchaseReqOperationCompleted(object arg) {
            if ((this.generatePurchaseReqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generatePurchaseReqCompleted(this, new generatePurchaseReqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:generatePurchaseRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="generatePurchaseRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string generatePurchaseRequisition(string employeeNumber, string docNo) {
            object[] results = this.Invoke("generatePurchaseRequisition", new object[] {
                        employeeNumber,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generatePurchaseRequisitionAsync(string employeeNumber, string docNo) {
            this.generatePurchaseRequisitionAsync(employeeNumber, docNo, null);
        }
        
        /// <remarks/>
        public void generatePurchaseRequisitionAsync(string employeeNumber, string docNo, object userState) {
            if ((this.generatePurchaseRequisitionOperationCompleted == null)) {
                this.generatePurchaseRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngeneratePurchaseRequisitionOperationCompleted);
            }
            this.InvokeAsync("generatePurchaseRequisition", new object[] {
                        employeeNumber,
                        docNo}, this.generatePurchaseRequisitionOperationCompleted, userState);
        }
        
        private void OngeneratePurchaseRequisitionOperationCompleted(object arg) {
            if ((this.generatePurchaseRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generatePurchaseRequisitionCompleted(this, new generatePurchaseRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:generateStaffClaim", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="generateStaffClaim_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string generateStaffClaim(string employeeNumber, string docNo) {
            object[] results = this.Invoke("generateStaffClaim", new object[] {
                        employeeNumber,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateStaffClaimAsync(string employeeNumber, string docNo) {
            this.generateStaffClaimAsync(employeeNumber, docNo, null);
        }
        
        /// <remarks/>
        public void generateStaffClaimAsync(string employeeNumber, string docNo, object userState) {
            if ((this.generateStaffClaimOperationCompleted == null)) {
                this.generateStaffClaimOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateStaffClaimOperationCompleted);
            }
            this.InvokeAsync("generateStaffClaim", new object[] {
                        employeeNumber,
                        docNo}, this.generateStaffClaimOperationCompleted, userState);
        }
        
        private void OngenerateStaffClaimOperationCompleted(object arg) {
            if ((this.generateStaffClaimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateStaffClaimCompleted(this, new generateStaffClaimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:generateStoreReqReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="generateStoreReqReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string generateStoreReqReport(string docNo) {
            object[] results = this.Invoke("generateStoreReqReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateStoreReqReportAsync(string docNo) {
            this.generateStoreReqReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void generateStoreReqReportAsync(string docNo, object userState) {
            if ((this.generateStoreReqReportOperationCompleted == null)) {
                this.generateStoreReqReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateStoreReqReportOperationCompleted);
            }
            this.InvokeAsync("generateStoreReqReport", new object[] {
                        docNo}, this.generateStoreReqReportOperationCompleted, userState);
        }
        
        private void OngenerateStoreReqReportOperationCompleted(object arg) {
            if ((this.generateStoreReqReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateStoreReqReportCompleted(this, new generateStoreReqReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:generateStoreRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="generateStoreRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string generateStoreRequisition(string employeeNumber, string docNo) {
            object[] results = this.Invoke("generateStoreRequisition", new object[] {
                        employeeNumber,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateStoreRequisitionAsync(string employeeNumber, string docNo) {
            this.generateStoreRequisitionAsync(employeeNumber, docNo, null);
        }
        
        /// <remarks/>
        public void generateStoreRequisitionAsync(string employeeNumber, string docNo, object userState) {
            if ((this.generateStoreRequisitionOperationCompleted == null)) {
                this.generateStoreRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateStoreRequisitionOperationCompleted);
            }
            this.InvokeAsync("generateStoreRequisition", new object[] {
                        employeeNumber,
                        docNo}, this.generateStoreRequisitionOperationCompleted, userState);
        }
        
        private void OngenerateStoreRequisitionOperationCompleted(object arg) {
            if ((this.generateStoreRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateStoreRequisitionCompleted(this, new generateStoreRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:getAdminUnitCode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="getAdminUnitCode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string getAdminUnitCode(string adminUnit) {
            object[] results = this.Invoke("getAdminUnitCode", new object[] {
                        adminUnit});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAdminUnitCodeAsync(string adminUnit) {
            this.getAdminUnitCodeAsync(adminUnit, null);
        }
        
        /// <remarks/>
        public void getAdminUnitCodeAsync(string adminUnit, object userState) {
            if ((this.getAdminUnitCodeOperationCompleted == null)) {
                this.getAdminUnitCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAdminUnitCodeOperationCompleted);
            }
            this.InvokeAsync("getAdminUnitCode", new object[] {
                        adminUnit}, this.getAdminUnitCodeOperationCompleted, userState);
        }
        
        private void OngetAdminUnitCodeOperationCompleted(object arg) {
            if ((this.getAdminUnitCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAdminUnitCodeCompleted(this, new getAdminUnitCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:getCtsOrder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="getCtsOrder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string getCtsOrder(int docId) {
            object[] results = this.Invoke("getCtsOrder", new object[] {
                        docId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCtsOrderAsync(int docId) {
            this.getCtsOrderAsync(docId, null);
        }
        
        /// <remarks/>
        public void getCtsOrderAsync(int docId, object userState) {
            if ((this.getCtsOrderOperationCompleted == null)) {
                this.getCtsOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCtsOrderOperationCompleted);
            }
            this.InvokeAsync("getCtsOrder", new object[] {
                        docId}, this.getCtsOrderOperationCompleted, userState);
        }
        
        private void OngetCtsOrderOperationCompleted(object arg) {
            if ((this.getCtsOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCtsOrderCompleted(this, new getCtsOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:getImprestObjective", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="getImprestObjective_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string getImprestObjective(string imprestNo, string employeeNo) {
            object[] results = this.Invoke("getImprestObjective", new object[] {
                        imprestNo,
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getImprestObjectiveAsync(string imprestNo, string employeeNo) {
            this.getImprestObjectiveAsync(imprestNo, employeeNo, null);
        }
        
        /// <remarks/>
        public void getImprestObjectiveAsync(string imprestNo, string employeeNo, object userState) {
            if ((this.getImprestObjectiveOperationCompleted == null)) {
                this.getImprestObjectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImprestObjectiveOperationCompleted);
            }
            this.InvokeAsync("getImprestObjective", new object[] {
                        imprestNo,
                        employeeNo}, this.getImprestObjectiveOperationCompleted, userState);
        }
        
        private void OngetImprestObjectiveOperationCompleted(object arg) {
            if ((this.getImprestObjectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImprestObjectiveCompleted(this, new getImprestObjectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:getItemDescByLocation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="getItemDescByLocation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string getItemDescByLocation(string location, string category) {
            object[] results = this.Invoke("getItemDescByLocation", new object[] {
                        location,
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getItemDescByLocationAsync(string location, string category) {
            this.getItemDescByLocationAsync(location, category, null);
        }
        
        /// <remarks/>
        public void getItemDescByLocationAsync(string location, string category, object userState) {
            if ((this.getItemDescByLocationOperationCompleted == null)) {
                this.getItemDescByLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetItemDescByLocationOperationCompleted);
            }
            this.InvokeAsync("getItemDescByLocation", new object[] {
                        location,
                        category}, this.getItemDescByLocationOperationCompleted, userState);
        }
        
        private void OngetItemDescByLocationOperationCompleted(object arg) {
            if ((this.getItemDescByLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getItemDescByLocationCompleted(this, new getItemDescByLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:getItemsByLocation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="getItemsByLocation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string getItemsByLocation(string location, string category) {
            object[] results = this.Invoke("getItemsByLocation", new object[] {
                        location,
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getItemsByLocationAsync(string location, string category) {
            this.getItemsByLocationAsync(location, category, null);
        }
        
        /// <remarks/>
        public void getItemsByLocationAsync(string location, string category, object userState) {
            if ((this.getItemsByLocationOperationCompleted == null)) {
                this.getItemsByLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetItemsByLocationOperationCompleted);
            }
            this.InvokeAsync("getItemsByLocation", new object[] {
                        location,
                        category}, this.getItemsByLocationOperationCompleted, userState);
        }
        
        private void OngetItemsByLocationOperationCompleted(object arg) {
            if ((this.getItemsByLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getItemsByLocationCompleted(this, new getItemsByLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:getUrls", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="getUrls_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getUrls() {
            this.Invoke("getUrls", new object[0]);
        }
        
        /// <remarks/>
        public void getUrlsAsync() {
            this.getUrlsAsync(null);
        }
        
        /// <remarks/>
        public void getUrlsAsync(object userState) {
            if ((this.getUrlsOperationCompleted == null)) {
                this.getUrlsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUrlsOperationCompleted);
            }
            this.InvokeAsync("getUrls", new object[0], this.getUrlsOperationCompleted, userState);
        }
        
        private void OngetUrlsOperationCompleted(object arg) {
            if ((this.getUrlsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUrlsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:importWorkplan", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="importWorkplan_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void importWorkplan(string base64excel, string planCode) {
            this.Invoke("importWorkplan", new object[] {
                        base64excel,
                        planCode});
        }
        
        /// <remarks/>
        public void importWorkplanAsync(string base64excel, string planCode) {
            this.importWorkplanAsync(base64excel, planCode, null);
        }
        
        /// <remarks/>
        public void importWorkplanAsync(string base64excel, string planCode, object userState) {
            if ((this.importWorkplanOperationCompleted == null)) {
                this.importWorkplanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportWorkplanOperationCompleted);
            }
            this.InvokeAsync("importWorkplan", new object[] {
                        base64excel,
                        planCode}, this.importWorkplanOperationCompleted, userState);
        }
        
        private void OnimportWorkplanOperationCompleted(object arg) {
            if ((this.importWorkplanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importWorkplanCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:imprestGeneralDetails1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="imprestGeneralDetails1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string imprestGeneralDetails1(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode, string referenceNo) {
            object[] results = this.Invoke("imprestGeneralDetails1", new object[] {
                        employeeNo,
                        imprestNo,
                        subject,
                        objective,
                        destinationNarration,
                        travelDate,
                        numberOfDays,
                        job,
                        jobTaskNo,
                        fundCode,
                        referenceNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void imprestGeneralDetails1Async(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode, string referenceNo) {
            this.imprestGeneralDetails1Async(employeeNo, imprestNo, subject, objective, destinationNarration, travelDate, numberOfDays, job, jobTaskNo, fundCode, referenceNo, null);
        }
        
        /// <remarks/>
        public void imprestGeneralDetails1Async(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode, string referenceNo, object userState) {
            if ((this.imprestGeneralDetails1OperationCompleted == null)) {
                this.imprestGeneralDetails1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnimprestGeneralDetails1OperationCompleted);
            }
            this.InvokeAsync("imprestGeneralDetails1", new object[] {
                        employeeNo,
                        imprestNo,
                        subject,
                        objective,
                        destinationNarration,
                        travelDate,
                        numberOfDays,
                        job,
                        jobTaskNo,
                        fundCode,
                        referenceNo}, this.imprestGeneralDetails1OperationCompleted, userState);
        }
        
        private void OnimprestGeneralDetails1OperationCompleted(object arg) {
            if ((this.imprestGeneralDetails1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.imprestGeneralDetails1Completed(this, new imprestGeneralDetails1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:imprestGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="imprestGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string imprestGeneralDetails(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode, string username) {
            object[] results = this.Invoke("imprestGeneralDetails", new object[] {
                        employeeNo,
                        imprestNo,
                        subject,
                        objective,
                        destinationNarration,
                        travelDate,
                        numberOfDays,
                        job,
                        jobTaskNo,
                        fundCode,
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void imprestGeneralDetailsAsync(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode, string username) {
            this.imprestGeneralDetailsAsync(employeeNo, imprestNo, subject, objective, destinationNarration, travelDate, numberOfDays, job, jobTaskNo, fundCode, username, null);
        }
        
        /// <remarks/>
        public void imprestGeneralDetailsAsync(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode, string username, object userState) {
            if ((this.imprestGeneralDetailsOperationCompleted == null)) {
                this.imprestGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimprestGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("imprestGeneralDetails", new object[] {
                        employeeNo,
                        imprestNo,
                        subject,
                        objective,
                        destinationNarration,
                        travelDate,
                        numberOfDays,
                        job,
                        jobTaskNo,
                        fundCode,
                        username}, this.imprestGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnimprestGeneralDetailsOperationCompleted(object arg) {
            if ((this.imprestGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.imprestGeneralDetailsCompleted(this, new imprestGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:insertAppointmentComittee2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="insertAppointmentComittee2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string insertAppointmentComittee2(int docType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime docDate, string desc, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime appEffectiveDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string venue, string brief) {
            object[] results = this.Invoke("insertAppointmentComittee2", new object[] {
                        docType,
                        docDate,
                        desc,
                        appEffectiveDate,
                        endDate,
                        venue,
                        brief});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void insertAppointmentComittee2Async(int docType, System.DateTime docDate, string desc, System.DateTime appEffectiveDate, System.DateTime endDate, string venue, string brief) {
            this.insertAppointmentComittee2Async(docType, docDate, desc, appEffectiveDate, endDate, venue, brief, null);
        }
        
        /// <remarks/>
        public void insertAppointmentComittee2Async(int docType, System.DateTime docDate, string desc, System.DateTime appEffectiveDate, System.DateTime endDate, string venue, string brief, object userState) {
            if ((this.insertAppointmentComittee2OperationCompleted == null)) {
                this.insertAppointmentComittee2OperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertAppointmentComittee2OperationCompleted);
            }
            this.InvokeAsync("insertAppointmentComittee2", new object[] {
                        docType,
                        docDate,
                        desc,
                        appEffectiveDate,
                        endDate,
                        venue,
                        brief}, this.insertAppointmentComittee2OperationCompleted, userState);
        }
        
        private void OninsertAppointmentComittee2OperationCompleted(object arg) {
            if ((this.insertAppointmentComittee2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertAppointmentComittee2Completed(this, new insertAppointmentComittee2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:insertAppointmentComittee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="insertAppointmentComittee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string insertAppointmentComittee(int docType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime docDate, string desc, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime appEffectiveDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string venue, string brief) {
            object[] results = this.Invoke("insertAppointmentComittee", new object[] {
                        docType,
                        docDate,
                        desc,
                        appEffectiveDate,
                        endDate,
                        venue,
                        brief});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void insertAppointmentComitteeAsync(int docType, System.DateTime docDate, string desc, System.DateTime appEffectiveDate, System.DateTime endDate, string venue, string brief) {
            this.insertAppointmentComitteeAsync(docType, docDate, desc, appEffectiveDate, endDate, venue, brief, null);
        }
        
        /// <remarks/>
        public void insertAppointmentComitteeAsync(int docType, System.DateTime docDate, string desc, System.DateTime appEffectiveDate, System.DateTime endDate, string venue, string brief, object userState) {
            if ((this.insertAppointmentComitteeOperationCompleted == null)) {
                this.insertAppointmentComitteeOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertAppointmentComitteeOperationCompleted);
            }
            this.InvokeAsync("insertAppointmentComittee", new object[] {
                        docType,
                        docDate,
                        desc,
                        appEffectiveDate,
                        endDate,
                        venue,
                        brief}, this.insertAppointmentComitteeOperationCompleted, userState);
        }
        
        private void OninsertAppointmentComitteeOperationCompleted(object arg) {
            if ((this.insertAppointmentComitteeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertAppointmentComitteeCompleted(this, new insertAppointmentComitteeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:insertBudgetAmounts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="insertBudgetAmounts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool insertBudgetAmounts(string wrkCode, string kRAID, string coreStrategyID, string strategyID, string activityId, int inputLineNo, string budgetItem, [System.Xml.Serialization.XmlElementAttribute("dimensionCodes")] string[] dimensionCodes) {
            object[] results = this.Invoke("insertBudgetAmounts", new object[] {
                        wrkCode,
                        kRAID,
                        coreStrategyID,
                        strategyID,
                        activityId,
                        inputLineNo,
                        budgetItem,
                        dimensionCodes});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertBudgetAmountsAsync(string wrkCode, string kRAID, string coreStrategyID, string strategyID, string activityId, int inputLineNo, string budgetItem, string[] dimensionCodes) {
            this.insertBudgetAmountsAsync(wrkCode, kRAID, coreStrategyID, strategyID, activityId, inputLineNo, budgetItem, dimensionCodes, null);
        }
        
        /// <remarks/>
        public void insertBudgetAmountsAsync(string wrkCode, string kRAID, string coreStrategyID, string strategyID, string activityId, int inputLineNo, string budgetItem, string[] dimensionCodes, object userState) {
            if ((this.insertBudgetAmountsOperationCompleted == null)) {
                this.insertBudgetAmountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertBudgetAmountsOperationCompleted);
            }
            this.InvokeAsync("insertBudgetAmounts", new object[] {
                        wrkCode,
                        kRAID,
                        coreStrategyID,
                        strategyID,
                        activityId,
                        inputLineNo,
                        budgetItem,
                        dimensionCodes}, this.insertBudgetAmountsOperationCompleted, userState);
        }
        
        private void OninsertBudgetAmountsOperationCompleted(object arg) {
            if ((this.insertBudgetAmountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertBudgetAmountsCompleted(this, new insertBudgetAmountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:insertInputs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="insertInputs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool insertInputs(string wrkCode, string kRAID, string coreStrategyID, string strategyID, string activityId, string input, int entryNo) {
            object[] results = this.Invoke("insertInputs", new object[] {
                        wrkCode,
                        kRAID,
                        coreStrategyID,
                        strategyID,
                        activityId,
                        input,
                        entryNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertInputsAsync(string wrkCode, string kRAID, string coreStrategyID, string strategyID, string activityId, string input, int entryNo) {
            this.insertInputsAsync(wrkCode, kRAID, coreStrategyID, strategyID, activityId, input, entryNo, null);
        }
        
        /// <remarks/>
        public void insertInputsAsync(string wrkCode, string kRAID, string coreStrategyID, string strategyID, string activityId, string input, int entryNo, object userState) {
            if ((this.insertInputsOperationCompleted == null)) {
                this.insertInputsOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertInputsOperationCompleted);
            }
            this.InvokeAsync("insertInputs", new object[] {
                        wrkCode,
                        kRAID,
                        coreStrategyID,
                        strategyID,
                        activityId,
                        input,
                        entryNo}, this.insertInputsOperationCompleted, userState);
        }
        
        private void OninsertInputsOperationCompleted(object arg) {
            if ((this.insertInputsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertInputsCompleted(this, new insertInputsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:insertPASTrainingNeeds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="insertPASTrainingNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string insertPASTrainingNeeds(string pasNo, string trainingNeed, string remarks) {
            object[] results = this.Invoke("insertPASTrainingNeeds", new object[] {
                        pasNo,
                        trainingNeed,
                        remarks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void insertPASTrainingNeedsAsync(string pasNo, string trainingNeed, string remarks) {
            this.insertPASTrainingNeedsAsync(pasNo, trainingNeed, remarks, null);
        }
        
        /// <remarks/>
        public void insertPASTrainingNeedsAsync(string pasNo, string trainingNeed, string remarks, object userState) {
            if ((this.insertPASTrainingNeedsOperationCompleted == null)) {
                this.insertPASTrainingNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertPASTrainingNeedsOperationCompleted);
            }
            this.InvokeAsync("insertPASTrainingNeeds", new object[] {
                        pasNo,
                        trainingNeed,
                        remarks}, this.insertPASTrainingNeedsOperationCompleted, userState);
        }
        
        private void OninsertPASTrainingNeedsOperationCompleted(object arg) {
            if ((this.insertPASTrainingNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertPASTrainingNeedsCompleted(this, new insertPASTrainingNeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:insertPMMULinesActivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="insertPMMULinesActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void insertPMMULinesActivities(string activities, string strategyOutput, string contractNo, int lineNumber, string strategyPlanId, decimal weight, decimal achievedTarget) {
            this.Invoke("insertPMMULinesActivities", new object[] {
                        activities,
                        strategyOutput,
                        contractNo,
                        lineNumber,
                        strategyPlanId,
                        weight,
                        achievedTarget});
        }
        
        /// <remarks/>
        public void insertPMMULinesActivitiesAsync(string activities, string strategyOutput, string contractNo, int lineNumber, string strategyPlanId, decimal weight, decimal achievedTarget) {
            this.insertPMMULinesActivitiesAsync(activities, strategyOutput, contractNo, lineNumber, strategyPlanId, weight, achievedTarget, null);
        }
        
        /// <remarks/>
        public void insertPMMULinesActivitiesAsync(string activities, string strategyOutput, string contractNo, int lineNumber, string strategyPlanId, decimal weight, decimal achievedTarget, object userState) {
            if ((this.insertPMMULinesActivitiesOperationCompleted == null)) {
                this.insertPMMULinesActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertPMMULinesActivitiesOperationCompleted);
            }
            this.InvokeAsync("insertPMMULinesActivities", new object[] {
                        activities,
                        strategyOutput,
                        contractNo,
                        lineNumber,
                        strategyPlanId,
                        weight,
                        achievedTarget}, this.insertPMMULinesActivitiesOperationCompleted, userState);
        }
        
        private void OninsertPMMULinesActivitiesOperationCompleted(object arg) {
            if ((this.insertPMMULinesActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertPMMULinesActivitiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:insertPlanEntries", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="insertPlanEntries_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool insertPlanEntries(string itemNum, int pItemType, [System.Xml.Serialization.XmlElementAttribute("aGbo_a37")] decimal[] aGbo_a37, int procMethods, [System.Xml.Serialization.XmlElementAttribute("quantity")] decimal[] quantity, [System.Xml.Serialization.XmlElementAttribute("dimesion")] string[] dimesion, [System.Xml.Serialization.XmlElementAttribute("unitAmount")] decimal[] unitAmount, decimal unitCost) {
            object[] results = this.Invoke("insertPlanEntries", new object[] {
                        itemNum,
                        pItemType,
                        aGbo_a37,
                        procMethods,
                        quantity,
                        dimesion,
                        unitAmount,
                        unitCost});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertPlanEntriesAsync(string itemNum, int pItemType, decimal[] aGbo_a37, int procMethods, decimal[] quantity, string[] dimesion, decimal[] unitAmount, decimal unitCost) {
            this.insertPlanEntriesAsync(itemNum, pItemType, aGbo_a37, procMethods, quantity, dimesion, unitAmount, unitCost, null);
        }
        
        /// <remarks/>
        public void insertPlanEntriesAsync(string itemNum, int pItemType, decimal[] aGbo_a37, int procMethods, decimal[] quantity, string[] dimesion, decimal[] unitAmount, decimal unitCost, object userState) {
            if ((this.insertPlanEntriesOperationCompleted == null)) {
                this.insertPlanEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertPlanEntriesOperationCompleted);
            }
            this.InvokeAsync("insertPlanEntries", new object[] {
                        itemNum,
                        pItemType,
                        aGbo_a37,
                        procMethods,
                        quantity,
                        dimesion,
                        unitAmount,
                        unitCost}, this.insertPlanEntriesOperationCompleted, userState);
        }
        
        private void OninsertPlanEntriesOperationCompleted(object arg) {
            if ((this.insertPlanEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertPlanEntriesCompleted(this, new insertPlanEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:insertWorkings", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="insertWorkings_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool insertWorkings(string wrkCode, string kRAID, string coreStrategyID, string strategyID, string activityId, int inputLineNo, string budgetItem, [System.Xml.Serialization.XmlElementAttribute("quantity")] decimal[] quantity, [System.Xml.Serialization.XmlElementAttribute("unitAmount")] decimal[] unitAmount, int type, int itemType, string itemNo, decimal unitCost, int entryNo) {
            object[] results = this.Invoke("insertWorkings", new object[] {
                        wrkCode,
                        kRAID,
                        coreStrategyID,
                        strategyID,
                        activityId,
                        inputLineNo,
                        budgetItem,
                        quantity,
                        unitAmount,
                        type,
                        itemType,
                        itemNo,
                        unitCost,
                        entryNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertWorkingsAsync(string wrkCode, string kRAID, string coreStrategyID, string strategyID, string activityId, int inputLineNo, string budgetItem, decimal[] quantity, decimal[] unitAmount, int type, int itemType, string itemNo, decimal unitCost, int entryNo) {
            this.insertWorkingsAsync(wrkCode, kRAID, coreStrategyID, strategyID, activityId, inputLineNo, budgetItem, quantity, unitAmount, type, itemType, itemNo, unitCost, entryNo, null);
        }
        
        /// <remarks/>
        public void insertWorkingsAsync(string wrkCode, string kRAID, string coreStrategyID, string strategyID, string activityId, int inputLineNo, string budgetItem, decimal[] quantity, decimal[] unitAmount, int type, int itemType, string itemNo, decimal unitCost, int entryNo, object userState) {
            if ((this.insertWorkingsOperationCompleted == null)) {
                this.insertWorkingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertWorkingsOperationCompleted);
            }
            this.InvokeAsync("insertWorkings", new object[] {
                        wrkCode,
                        kRAID,
                        coreStrategyID,
                        strategyID,
                        activityId,
                        inputLineNo,
                        budgetItem,
                        quantity,
                        unitAmount,
                        type,
                        itemType,
                        itemNo,
                        unitCost,
                        entryNo}, this.insertWorkingsOperationCompleted, userState);
        }
        
        private void OninsertWorkingsOperationCompleted(object arg) {
            if ((this.insertWorkingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertWorkingsCompleted(this, new insertWorkingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:leaveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="leaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string leaveApplication(string leaveNo, string employeeNumber, string leaveType, int annualLeaveType, int daysApplied, System.DateTime lStartDate, string phoneNumber, string emailAddress, string examdetails, System.DateTime dateOfExam, int previousAttempts, string reliever) {
            object[] results = this.Invoke("leaveApplication", new object[] {
                        leaveNo,
                        employeeNumber,
                        leaveType,
                        annualLeaveType,
                        daysApplied,
                        lStartDate,
                        phoneNumber,
                        emailAddress,
                        examdetails,
                        dateOfExam,
                        previousAttempts,
                        reliever});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void leaveApplicationAsync(string leaveNo, string employeeNumber, string leaveType, int annualLeaveType, int daysApplied, System.DateTime lStartDate, string phoneNumber, string emailAddress, string examdetails, System.DateTime dateOfExam, int previousAttempts, string reliever) {
            this.leaveApplicationAsync(leaveNo, employeeNumber, leaveType, annualLeaveType, daysApplied, lStartDate, phoneNumber, emailAddress, examdetails, dateOfExam, previousAttempts, reliever, null);
        }
        
        /// <remarks/>
        public void leaveApplicationAsync(string leaveNo, string employeeNumber, string leaveType, int annualLeaveType, int daysApplied, System.DateTime lStartDate, string phoneNumber, string emailAddress, string examdetails, System.DateTime dateOfExam, int previousAttempts, string reliever, object userState) {
            if ((this.leaveApplicationOperationCompleted == null)) {
                this.leaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnleaveApplicationOperationCompleted);
            }
            this.InvokeAsync("leaveApplication", new object[] {
                        leaveNo,
                        employeeNumber,
                        leaveType,
                        annualLeaveType,
                        daysApplied,
                        lStartDate,
                        phoneNumber,
                        emailAddress,
                        examdetails,
                        dateOfExam,
                        previousAttempts,
                        reliever}, this.leaveApplicationOperationCompleted, userState);
        }
        
        private void OnleaveApplicationOperationCompleted(object arg) {
            if ((this.leaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.leaveApplicationCompleted(this, new leaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:reassignDriver", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="reassignDriver_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string reassignDriver(string transportNo, string driverCode, string newTrip, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date) {
            object[] results = this.Invoke("reassignDriver", new object[] {
                        transportNo,
                        driverCode,
                        newTrip,
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void reassignDriverAsync(string transportNo, string driverCode, string newTrip, System.DateTime date) {
            this.reassignDriverAsync(transportNo, driverCode, newTrip, date, null);
        }
        
        /// <remarks/>
        public void reassignDriverAsync(string transportNo, string driverCode, string newTrip, System.DateTime date, object userState) {
            if ((this.reassignDriverOperationCompleted == null)) {
                this.reassignDriverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreassignDriverOperationCompleted);
            }
            this.InvokeAsync("reassignDriver", new object[] {
                        transportNo,
                        driverCode,
                        newTrip,
                        date}, this.reassignDriverOperationCompleted, userState);
        }
        
        private void OnreassignDriverOperationCompleted(object arg) {
            if ((this.reassignDriverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reassignDriverCompleted(this, new reassignDriverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:register", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="register_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string register(string first_Name, string middle_Name, string last_name, string email_Address, string phone_Number, string idNumbera47Passport, string citizenship, string gender) {
            object[] results = this.Invoke("register", new object[] {
                        first_Name,
                        middle_Name,
                        last_name,
                        email_Address,
                        phone_Number,
                        idNumbera47Passport,
                        citizenship,
                        gender});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void registerAsync(string first_Name, string middle_Name, string last_name, string email_Address, string phone_Number, string idNumbera47Passport, string citizenship, string gender) {
            this.registerAsync(first_Name, middle_Name, last_name, email_Address, phone_Number, idNumbera47Passport, citizenship, gender, null);
        }
        
        /// <remarks/>
        public void registerAsync(string first_Name, string middle_Name, string last_name, string email_Address, string phone_Number, string idNumbera47Passport, string citizenship, string gender, object userState) {
            if ((this.registerOperationCompleted == null)) {
                this.registerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterOperationCompleted);
            }
            this.InvokeAsync("register", new object[] {
                        first_Name,
                        middle_Name,
                        last_name,
                        email_Address,
                        phone_Number,
                        idNumbera47Passport,
                        citizenship,
                        gender}, this.registerOperationCompleted, userState);
        }
        
        private void OnregisterOperationCompleted(object arg) {
            if ((this.registerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerCompleted(this, new registerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:removeCasuals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="removeCasuals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string removeCasuals(string employeeNo, string imprestNo, string resourceType, string resourceNo) {
            object[] results = this.Invoke("removeCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        resourceType,
                        resourceNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeCasualsAsync(string employeeNo, string imprestNo, string resourceType, string resourceNo) {
            this.removeCasualsAsync(employeeNo, imprestNo, resourceType, resourceNo, null);
        }
        
        /// <remarks/>
        public void removeCasualsAsync(string employeeNo, string imprestNo, string resourceType, string resourceNo, object userState) {
            if ((this.removeCasualsOperationCompleted == null)) {
                this.removeCasualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveCasualsOperationCompleted);
            }
            this.InvokeAsync("removeCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        resourceType,
                        resourceNo}, this.removeCasualsOperationCompleted, userState);
        }
        
        private void OnremoveCasualsOperationCompleted(object arg) {
            if ((this.removeCasualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeCasualsCompleted(this, new removeCasualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:removeFuelFromImprestMemo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="removeFuelFromImprestMemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string removeFuelFromImprestMemo(string number, string workType, string mEmployeeNo, string imprestNo) {
            object[] results = this.Invoke("removeFuelFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeFuelFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo) {
            this.removeFuelFromImprestMemoAsync(number, workType, mEmployeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void removeFuelFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo, object userState) {
            if ((this.removeFuelFromImprestMemoOperationCompleted == null)) {
                this.removeFuelFromImprestMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveFuelFromImprestMemoOperationCompleted);
            }
            this.InvokeAsync("removeFuelFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo}, this.removeFuelFromImprestMemoOperationCompleted, userState);
        }
        
        private void OnremoveFuelFromImprestMemoOperationCompleted(object arg) {
            if ((this.removeFuelFromImprestMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeFuelFromImprestMemoCompleted(this, new removeFuelFromImprestMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:removeImprestMemoLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="removeImprestMemoLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool removeImprestMemoLines(int linenumber, string imprestNo) {
            object[] results = this.Invoke("removeImprestMemoLines", new object[] {
                        linenumber,
                        imprestNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeImprestMemoLinesAsync(int linenumber, string imprestNo) {
            this.removeImprestMemoLinesAsync(linenumber, imprestNo, null);
        }
        
        /// <remarks/>
        public void removeImprestMemoLinesAsync(int linenumber, string imprestNo, object userState) {
            if ((this.removeImprestMemoLinesOperationCompleted == null)) {
                this.removeImprestMemoLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveImprestMemoLinesOperationCompleted);
            }
            this.InvokeAsync("removeImprestMemoLines", new object[] {
                        linenumber,
                        imprestNo}, this.removeImprestMemoLinesOperationCompleted, userState);
        }
        
        private void OnremoveImprestMemoLinesOperationCompleted(object arg) {
            if ((this.removeImprestMemoLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeImprestMemoLinesCompleted(this, new removeImprestMemoLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:removeMemberFromImprestMemo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="removeMemberFromImprestMemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string removeMemberFromImprestMemo(string number, string workType, string mEmployeeNo, string imprestNo) {
            object[] results = this.Invoke("removeMemberFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeMemberFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo) {
            this.removeMemberFromImprestMemoAsync(number, workType, mEmployeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void removeMemberFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo, object userState) {
            if ((this.removeMemberFromImprestMemoOperationCompleted == null)) {
                this.removeMemberFromImprestMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveMemberFromImprestMemoOperationCompleted);
            }
            this.InvokeAsync("removeMemberFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo}, this.removeMemberFromImprestMemoOperationCompleted, userState);
        }
        
        private void OnremoveMemberFromImprestMemoOperationCompleted(object arg) {
            if ((this.removeMemberFromImprestMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeMemberFromImprestMemoCompleted(this, new removeMemberFromImprestMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:removeNonStaffFromTravelRequisit" +
            "ion", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="removeNonStaffFromTravelRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string removeNonStaffFromTravelRequisition(string employeeNo, string requisitionNo, int entryNo) {
            object[] results = this.Invoke("removeNonStaffFromTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeNonStaffFromTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo) {
            this.removeNonStaffFromTravelRequisitionAsync(employeeNo, requisitionNo, entryNo, null);
        }
        
        /// <remarks/>
        public void removeNonStaffFromTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo, object userState) {
            if ((this.removeNonStaffFromTravelRequisitionOperationCompleted == null)) {
                this.removeNonStaffFromTravelRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveNonStaffFromTravelRequisitionOperationCompleted);
            }
            this.InvokeAsync("removeNonStaffFromTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo}, this.removeNonStaffFromTravelRequisitionOperationCompleted, userState);
        }
        
        private void OnremoveNonStaffFromTravelRequisitionOperationCompleted(object arg) {
            if ((this.removeNonStaffFromTravelRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeNonStaffFromTravelRequisitionCompleted(this, new removeNonStaffFromTravelRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:removeOtherCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="removeOtherCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string removeOtherCosts(string imprestNo, string employeeNo, int lineNo) {
            object[] results = this.Invoke("removeOtherCosts", new object[] {
                        imprestNo,
                        employeeNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeOtherCostsAsync(string imprestNo, string employeeNo, int lineNo) {
            this.removeOtherCostsAsync(imprestNo, employeeNo, lineNo, null);
        }
        
        /// <remarks/>
        public void removeOtherCostsAsync(string imprestNo, string employeeNo, int lineNo, object userState) {
            if ((this.removeOtherCostsOperationCompleted == null)) {
                this.removeOtherCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveOtherCostsOperationCompleted);
            }
            this.InvokeAsync("removeOtherCosts", new object[] {
                        imprestNo,
                        employeeNo,
                        lineNo}, this.removeOtherCostsOperationCompleted, userState);
        }
        
        private void OnremoveOtherCostsOperationCompleted(object arg) {
            if ((this.removeOtherCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeOtherCostsCompleted(this, new removeOtherCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:removeStaffFromTravelRequisition" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="removeStaffFromTravelRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string removeStaffFromTravelRequisition(string employeeNo, string requisitionNo, int entryNo) {
            object[] results = this.Invoke("removeStaffFromTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeStaffFromTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo) {
            this.removeStaffFromTravelRequisitionAsync(employeeNo, requisitionNo, entryNo, null);
        }
        
        /// <remarks/>
        public void removeStaffFromTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo, object userState) {
            if ((this.removeStaffFromTravelRequisitionOperationCompleted == null)) {
                this.removeStaffFromTravelRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveStaffFromTravelRequisitionOperationCompleted);
            }
            this.InvokeAsync("removeStaffFromTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo}, this.removeStaffFromTravelRequisitionOperationCompleted, userState);
        }
        
        private void OnremoveStaffFromTravelRequisitionOperationCompleted(object arg) {
            if ((this.removeStaffFromTravelRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeStaffFromTravelRequisitionCompleted(this, new removeStaffFromTravelRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:resetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="resetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string resetPassword(string employeeNumbera45idNumber) {
            object[] results = this.Invoke("resetPassword", new object[] {
                        employeeNumbera45idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void resetPasswordAsync(string employeeNumbera45idNumber) {
            this.resetPasswordAsync(employeeNumbera45idNumber, null);
        }
        
        /// <remarks/>
        public void resetPasswordAsync(string employeeNumbera45idNumber, object userState) {
            if ((this.resetPasswordOperationCompleted == null)) {
                this.resetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresetPasswordOperationCompleted);
            }
            this.InvokeAsync("resetPassword", new object[] {
                        employeeNumbera45idNumber}, this.resetPasswordOperationCompleted, userState);
        }
        
        private void OnresetPasswordOperationCompleted(object arg) {
            if ((this.resetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resetPasswordCompleted(this, new resetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendBudgetRelocationForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendBudgetRelocationForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendBudgetRelocationForApproval(string docNo) {
            this.Invoke("sendBudgetRelocationForApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void sendBudgetRelocationForApprovalAsync(string docNo) {
            this.sendBudgetRelocationForApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void sendBudgetRelocationForApprovalAsync(string docNo, object userState) {
            if ((this.sendBudgetRelocationForApprovalOperationCompleted == null)) {
                this.sendBudgetRelocationForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendBudgetRelocationForApprovalOperationCompleted);
            }
            this.InvokeAsync("sendBudgetRelocationForApproval", new object[] {
                        docNo}, this.sendBudgetRelocationForApprovalOperationCompleted, userState);
        }
        
        private void OnsendBudgetRelocationForApprovalOperationCompleted(object arg) {
            if ((this.sendBudgetRelocationForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendBudgetRelocationForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendFleetRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendFleetRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string sendFleetRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("sendFleetRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendFleetRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.sendFleetRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void sendFleetRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.sendFleetRequisitionApprovalOperationCompleted == null)) {
                this.sendFleetRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendFleetRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("sendFleetRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.sendFleetRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnsendFleetRequisitionApprovalOperationCompleted(object arg) {
            if ((this.sendFleetRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendFleetRequisitionApprovalCompleted(this, new sendFleetRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendImprestApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendImprestApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string sendImprestApprovalRequest(string employeeNo, string imprestNo) {
            object[] results = this.Invoke("sendImprestApprovalRequest", new object[] {
                        employeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendImprestApprovalRequestAsync(string employeeNo, string imprestNo) {
            this.sendImprestApprovalRequestAsync(employeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void sendImprestApprovalRequestAsync(string employeeNo, string imprestNo, object userState) {
            if ((this.sendImprestApprovalRequestOperationCompleted == null)) {
                this.sendImprestApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendImprestApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("sendImprestApprovalRequest", new object[] {
                        employeeNo,
                        imprestNo}, this.sendImprestApprovalRequestOperationCompleted, userState);
        }
        
        private void OnsendImprestApprovalRequestOperationCompleted(object arg) {
            if ((this.sendImprestApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendImprestApprovalRequestCompleted(this, new sendImprestApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendImprestMemoApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendImprestMemoApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string sendImprestMemoApproval(string employeeNo, string imprestNo) {
            object[] results = this.Invoke("sendImprestMemoApproval", new object[] {
                        employeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendImprestMemoApprovalAsync(string employeeNo, string imprestNo) {
            this.sendImprestMemoApprovalAsync(employeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void sendImprestMemoApprovalAsync(string employeeNo, string imprestNo, object userState) {
            if ((this.sendImprestMemoApprovalOperationCompleted == null)) {
                this.sendImprestMemoApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendImprestMemoApprovalOperationCompleted);
            }
            this.InvokeAsync("sendImprestMemoApproval", new object[] {
                        employeeNo,
                        imprestNo}, this.sendImprestMemoApprovalOperationCompleted, userState);
        }
        
        private void OnsendImprestMemoApprovalOperationCompleted(object arg) {
            if ((this.sendImprestMemoApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendImprestMemoApprovalCompleted(this, new sendImprestMemoApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendImprestRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendImprestRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string sendImprestRequisitionApproval(string employeeNo, string imprestNo) {
            object[] results = this.Invoke("sendImprestRequisitionApproval", new object[] {
                        employeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendImprestRequisitionApprovalAsync(string employeeNo, string imprestNo) {
            this.sendImprestRequisitionApprovalAsync(employeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void sendImprestRequisitionApprovalAsync(string employeeNo, string imprestNo, object userState) {
            if ((this.sendImprestRequisitionApprovalOperationCompleted == null)) {
                this.sendImprestRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendImprestRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("sendImprestRequisitionApproval", new object[] {
                        employeeNo,
                        imprestNo}, this.sendImprestRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnsendImprestRequisitionApprovalOperationCompleted(object arg) {
            if ((this.sendImprestRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendImprestRequisitionApprovalCompleted(this, new sendImprestRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendImprestSurrenderApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendImprestSurrenderApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string sendImprestSurrenderApproval(string employeeNo, string imprestSurrenderNo) {
            object[] results = this.Invoke("sendImprestSurrenderApproval", new object[] {
                        employeeNo,
                        imprestSurrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendImprestSurrenderApprovalAsync(string employeeNo, string imprestSurrenderNo) {
            this.sendImprestSurrenderApprovalAsync(employeeNo, imprestSurrenderNo, null);
        }
        
        /// <remarks/>
        public void sendImprestSurrenderApprovalAsync(string employeeNo, string imprestSurrenderNo, object userState) {
            if ((this.sendImprestSurrenderApprovalOperationCompleted == null)) {
                this.sendImprestSurrenderApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendImprestSurrenderApprovalOperationCompleted);
            }
            this.InvokeAsync("sendImprestSurrenderApproval", new object[] {
                        employeeNo,
                        imprestSurrenderNo}, this.sendImprestSurrenderApprovalOperationCompleted, userState);
        }
        
        private void OnsendImprestSurrenderApprovalOperationCompleted(object arg) {
            if ((this.sendImprestSurrenderApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendImprestSurrenderApprovalCompleted(this, new sendImprestSurrenderApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendLPOApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendLPOApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string sendLPOApproval(string docNo) {
            object[] results = this.Invoke("sendLPOApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendLPOApprovalAsync(string docNo) {
            this.sendLPOApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void sendLPOApprovalAsync(string docNo, object userState) {
            if ((this.sendLPOApprovalOperationCompleted == null)) {
                this.sendLPOApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendLPOApprovalOperationCompleted);
            }
            this.InvokeAsync("sendLPOApproval", new object[] {
                        docNo}, this.sendLPOApprovalOperationCompleted, userState);
        }
        
        private void OnsendLPOApprovalOperationCompleted(object arg) {
            if ((this.sendLPOApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendLPOApprovalCompleted(this, new sendLPOApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendLeaveForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendLeaveForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string sendLeaveForApproval(string employeeNo, string recordNo) {
            object[] results = this.Invoke("sendLeaveForApproval", new object[] {
                        employeeNo,
                        recordNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendLeaveForApprovalAsync(string employeeNo, string recordNo) {
            this.sendLeaveForApprovalAsync(employeeNo, recordNo, null);
        }
        
        /// <remarks/>
        public void sendLeaveForApprovalAsync(string employeeNo, string recordNo, object userState) {
            if ((this.sendLeaveForApprovalOperationCompleted == null)) {
                this.sendLeaveForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendLeaveForApprovalOperationCompleted);
            }
            this.InvokeAsync("sendLeaveForApproval", new object[] {
                        employeeNo,
                        recordNo}, this.sendLeaveForApprovalOperationCompleted, userState);
        }
        
        private void OnsendLeaveForApprovalOperationCompleted(object arg) {
            if ((this.sendLeaveForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendLeaveForApprovalCompleted(this, new sendLeaveForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendPasforApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendPasforApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendPasforApproval(string docNo) {
            this.Invoke("sendPasforApproval", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void sendPasforApprovalAsync(string docNo) {
            this.sendPasforApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void sendPasforApprovalAsync(string docNo, object userState) {
            if ((this.sendPasforApprovalOperationCompleted == null)) {
                this.sendPasforApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendPasforApprovalOperationCompleted);
            }
            this.InvokeAsync("sendPasforApproval", new object[] {
                        docNo}, this.sendPasforApprovalOperationCompleted, userState);
        }
        
        private void OnsendPasforApprovalOperationCompleted(object arg) {
            if ((this.sendPasforApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendPasforApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendPayChangeAdviceForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendPayChangeAdviceForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string sendPayChangeAdviceForApproval(string changeNo) {
            object[] results = this.Invoke("sendPayChangeAdviceForApproval", new object[] {
                        changeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendPayChangeAdviceForApprovalAsync(string changeNo) {
            this.sendPayChangeAdviceForApprovalAsync(changeNo, null);
        }
        
        /// <remarks/>
        public void sendPayChangeAdviceForApprovalAsync(string changeNo, object userState) {
            if ((this.sendPayChangeAdviceForApprovalOperationCompleted == null)) {
                this.sendPayChangeAdviceForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendPayChangeAdviceForApprovalOperationCompleted);
            }
            this.InvokeAsync("sendPayChangeAdviceForApproval", new object[] {
                        changeNo}, this.sendPayChangeAdviceForApprovalOperationCompleted, userState);
        }
        
        private void OnsendPayChangeAdviceForApprovalOperationCompleted(object arg) {
            if ((this.sendPayChangeAdviceForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendPayChangeAdviceForApprovalCompleted(this, new sendPayChangeAdviceForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendPettyCashSurrenderApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendPettyCashSurrenderApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string sendPettyCashSurrenderApproval(string employeeNo, string imprestSurrenderNo) {
            object[] results = this.Invoke("sendPettyCashSurrenderApproval", new object[] {
                        employeeNo,
                        imprestSurrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendPettyCashSurrenderApprovalAsync(string employeeNo, string imprestSurrenderNo) {
            this.sendPettyCashSurrenderApprovalAsync(employeeNo, imprestSurrenderNo, null);
        }
        
        /// <remarks/>
        public void sendPettyCashSurrenderApprovalAsync(string employeeNo, string imprestSurrenderNo, object userState) {
            if ((this.sendPettyCashSurrenderApprovalOperationCompleted == null)) {
                this.sendPettyCashSurrenderApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendPettyCashSurrenderApprovalOperationCompleted);
            }
            this.InvokeAsync("sendPettyCashSurrenderApproval", new object[] {
                        employeeNo,
                        imprestSurrenderNo}, this.sendPettyCashSurrenderApprovalOperationCompleted, userState);
        }
        
        private void OnsendPettyCashSurrenderApprovalOperationCompleted(object arg) {
            if ((this.sendPettyCashSurrenderApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendPettyCashSurrenderApprovalCompleted(this, new sendPettyCashSurrenderApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendPurchaseRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendPurchaseRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string sendPurchaseRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("sendPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.sendPurchaseRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void sendPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.sendPurchaseRequisitionApprovalOperationCompleted == null)) {
                this.sendPurchaseRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendPurchaseRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("sendPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.sendPurchaseRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnsendPurchaseRequisitionApprovalOperationCompleted(object arg) {
            if ((this.sendPurchaseRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendPurchaseRequisitionApprovalCompleted(this, new sendPurchaseRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendRecordForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendRecordForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string sendRecordForApproval(string employeeNo, string recordNo, string recordType) {
            object[] results = this.Invoke("sendRecordForApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendRecordForApprovalAsync(string employeeNo, string recordNo, string recordType) {
            this.sendRecordForApprovalAsync(employeeNo, recordNo, recordType, null);
        }
        
        /// <remarks/>
        public void sendRecordForApprovalAsync(string employeeNo, string recordNo, string recordType, object userState) {
            if ((this.sendRecordForApprovalOperationCompleted == null)) {
                this.sendRecordForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendRecordForApprovalOperationCompleted);
            }
            this.InvokeAsync("sendRecordForApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType}, this.sendRecordForApprovalOperationCompleted, userState);
        }
        
        private void OnsendRecordForApprovalOperationCompleted(object arg) {
            if ((this.sendRecordForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendRecordForApprovalCompleted(this, new sendRecordForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendStaffClaimApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendStaffClaimApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string sendStaffClaimApproval(string employeeNo, string staffClaim) {
            object[] results = this.Invoke("sendStaffClaimApproval", new object[] {
                        employeeNo,
                        staffClaim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendStaffClaimApprovalAsync(string employeeNo, string staffClaim) {
            this.sendStaffClaimApprovalAsync(employeeNo, staffClaim, null);
        }
        
        /// <remarks/>
        public void sendStaffClaimApprovalAsync(string employeeNo, string staffClaim, object userState) {
            if ((this.sendStaffClaimApprovalOperationCompleted == null)) {
                this.sendStaffClaimApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendStaffClaimApprovalOperationCompleted);
            }
            this.InvokeAsync("sendStaffClaimApproval", new object[] {
                        employeeNo,
                        staffClaim}, this.sendStaffClaimApprovalOperationCompleted, userState);
        }
        
        private void OnsendStaffClaimApprovalOperationCompleted(object arg) {
            if ((this.sendStaffClaimApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendStaffClaimApprovalCompleted(this, new sendStaffClaimApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendStoreRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendStoreRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string sendStoreRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("sendStoreRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendStoreRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.sendStoreRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void sendStoreRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.sendStoreRequisitionApprovalOperationCompleted == null)) {
                this.sendStoreRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendStoreRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("sendStoreRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.sendStoreRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnsendStoreRequisitionApprovalOperationCompleted(object arg) {
            if ((this.sendStoreRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendStoreRequisitionApprovalCompleted(this, new sendStoreRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:sendTrainingRequestApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="sendTrainingRequestApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string sendTrainingRequestApproval(string employeeNo, string reqNo) {
            object[] results = this.Invoke("sendTrainingRequestApproval", new object[] {
                        employeeNo,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendTrainingRequestApprovalAsync(string employeeNo, string reqNo) {
            this.sendTrainingRequestApprovalAsync(employeeNo, reqNo, null);
        }
        
        /// <remarks/>
        public void sendTrainingRequestApprovalAsync(string employeeNo, string reqNo, object userState) {
            if ((this.sendTrainingRequestApprovalOperationCompleted == null)) {
                this.sendTrainingRequestApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendTrainingRequestApprovalOperationCompleted);
            }
            this.InvokeAsync("sendTrainingRequestApproval", new object[] {
                        employeeNo,
                        reqNo}, this.sendTrainingRequestApprovalOperationCompleted, userState);
        }
        
        private void OnsendTrainingRequestApprovalOperationCompleted(object arg) {
            if ((this.sendTrainingRequestApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendTrainingRequestApprovalCompleted(this, new sendTrainingRequestApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:suggestLinesFromRequisitionTempl" +
            "ate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="suggestLinesFromRequisitionTemplate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string suggestLinesFromRequisitionTemplate(string docNo, string templateId) {
            object[] results = this.Invoke("suggestLinesFromRequisitionTemplate", new object[] {
                        docNo,
                        templateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void suggestLinesFromRequisitionTemplateAsync(string docNo, string templateId) {
            this.suggestLinesFromRequisitionTemplateAsync(docNo, templateId, null);
        }
        
        /// <remarks/>
        public void suggestLinesFromRequisitionTemplateAsync(string docNo, string templateId, object userState) {
            if ((this.suggestLinesFromRequisitionTemplateOperationCompleted == null)) {
                this.suggestLinesFromRequisitionTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsuggestLinesFromRequisitionTemplateOperationCompleted);
            }
            this.InvokeAsync("suggestLinesFromRequisitionTemplate", new object[] {
                        docNo,
                        templateId}, this.suggestLinesFromRequisitionTemplateOperationCompleted, userState);
        }
        
        private void OnsuggestLinesFromRequisitionTemplateOperationCompleted(object arg) {
            if ((this.suggestLinesFromRequisitionTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.suggestLinesFromRequisitionTemplateCompleted(this, new suggestLinesFromRequisitionTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updateClaimsBank", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updateClaimsBank_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateClaimsBank(string docNo) {
            this.Invoke("updateClaimsBank", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void updateClaimsBankAsync(string docNo) {
            this.updateClaimsBankAsync(docNo, null);
        }
        
        /// <remarks/>
        public void updateClaimsBankAsync(string docNo, object userState) {
            if ((this.updateClaimsBankOperationCompleted == null)) {
                this.updateClaimsBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateClaimsBankOperationCompleted);
            }
            this.InvokeAsync("updateClaimsBank", new object[] {
                        docNo}, this.updateClaimsBankOperationCompleted, userState);
        }
        
        private void OnupdateClaimsBankOperationCompleted(object arg) {
            if ((this.updateClaimsBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateClaimsBankCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updateCommunicationDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updateCommunicationDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string updateCommunicationDetails(string idNumber, string homePhoneNumber, string postalAddress, string postalAddress2, string postalAddress3, string residentialAddress, string residentialAddress2, string residentialAddress3, string cellPhoneNumber, string workPhoneNumber, string extension, string fax, string postCode, string postCode2) {
            object[] results = this.Invoke("updateCommunicationDetails", new object[] {
                        idNumber,
                        homePhoneNumber,
                        postalAddress,
                        postalAddress2,
                        postalAddress3,
                        residentialAddress,
                        residentialAddress2,
                        residentialAddress3,
                        cellPhoneNumber,
                        workPhoneNumber,
                        extension,
                        fax,
                        postCode,
                        postCode2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateCommunicationDetailsAsync(string idNumber, string homePhoneNumber, string postalAddress, string postalAddress2, string postalAddress3, string residentialAddress, string residentialAddress2, string residentialAddress3, string cellPhoneNumber, string workPhoneNumber, string extension, string fax, string postCode, string postCode2) {
            this.updateCommunicationDetailsAsync(idNumber, homePhoneNumber, postalAddress, postalAddress2, postalAddress3, residentialAddress, residentialAddress2, residentialAddress3, cellPhoneNumber, workPhoneNumber, extension, fax, postCode, postCode2, null);
        }
        
        /// <remarks/>
        public void updateCommunicationDetailsAsync(string idNumber, string homePhoneNumber, string postalAddress, string postalAddress2, string postalAddress3, string residentialAddress, string residentialAddress2, string residentialAddress3, string cellPhoneNumber, string workPhoneNumber, string extension, string fax, string postCode, string postCode2, object userState) {
            if ((this.updateCommunicationDetailsOperationCompleted == null)) {
                this.updateCommunicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCommunicationDetailsOperationCompleted);
            }
            this.InvokeAsync("updateCommunicationDetails", new object[] {
                        idNumber,
                        homePhoneNumber,
                        postalAddress,
                        postalAddress2,
                        postalAddress3,
                        residentialAddress,
                        residentialAddress2,
                        residentialAddress3,
                        cellPhoneNumber,
                        workPhoneNumber,
                        extension,
                        fax,
                        postCode,
                        postCode2}, this.updateCommunicationDetailsOperationCompleted, userState);
        }
        
        private void OnupdateCommunicationDetailsOperationCompleted(object arg) {
            if ((this.updateCommunicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCommunicationDetailsCompleted(this, new updateCommunicationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updateEmpBankDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updateEmpBankDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateEmpBankDetails(string docNo) {
            this.Invoke("updateEmpBankDetails", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void updateEmpBankDetailsAsync(string docNo) {
            this.updateEmpBankDetailsAsync(docNo, null);
        }
        
        /// <remarks/>
        public void updateEmpBankDetailsAsync(string docNo, object userState) {
            if ((this.updateEmpBankDetailsOperationCompleted == null)) {
                this.updateEmpBankDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateEmpBankDetailsOperationCompleted);
            }
            this.InvokeAsync("updateEmpBankDetails", new object[] {
                        docNo}, this.updateEmpBankDetailsOperationCompleted, userState);
        }
        
        private void OnupdateEmpBankDetailsOperationCompleted(object arg) {
            if ((this.updateEmpBankDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateEmpBankDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updateEmploymentHistory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updateEmploymentHistory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string updateEmploymentHistory(int id, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId) {
            object[] results = this.Invoke("updateEmploymentHistory", new object[] {
                        id,
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        appNo,
                        empNo,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateEmploymentHistoryAsync(int id, System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId) {
            this.updateEmploymentHistoryAsync(id, startDate, endDate, company, designation, jobGrade, appNo, empNo, jobId, null);
        }
        
        /// <remarks/>
        public void updateEmploymentHistoryAsync(int id, System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId, object userState) {
            if ((this.updateEmploymentHistoryOperationCompleted == null)) {
                this.updateEmploymentHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateEmploymentHistoryOperationCompleted);
            }
            this.InvokeAsync("updateEmploymentHistory", new object[] {
                        id,
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        appNo,
                        empNo,
                        jobId}, this.updateEmploymentHistoryOperationCompleted, userState);
        }
        
        private void OnupdateEmploymentHistoryOperationCompleted(object arg) {
            if ((this.updateEmploymentHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateEmploymentHistoryCompleted(this, new updateEmploymentHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updateEquipmentSpecifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updateEquipmentSpecifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string updateEquipmentSpecifications(int id, string docNo, decimal qty) {
            object[] results = this.Invoke("updateEquipmentSpecifications", new object[] {
                        id,
                        docNo,
                        qty});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateEquipmentSpecificationsAsync(int id, string docNo, decimal qty) {
            this.updateEquipmentSpecificationsAsync(id, docNo, qty, null);
        }
        
        /// <remarks/>
        public void updateEquipmentSpecificationsAsync(int id, string docNo, decimal qty, object userState) {
            if ((this.updateEquipmentSpecificationsOperationCompleted == null)) {
                this.updateEquipmentSpecificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateEquipmentSpecificationsOperationCompleted);
            }
            this.InvokeAsync("updateEquipmentSpecifications", new object[] {
                        id,
                        docNo,
                        qty}, this.updateEquipmentSpecificationsOperationCompleted, userState);
        }
        
        private void OnupdateEquipmentSpecificationsOperationCompleted(object arg) {
            if ((this.updateEquipmentSpecificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateEquipmentSpecificationsCompleted(this, new updateEquipmentSpecificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updateGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updateGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string updateGeneralDetails(
                    string idNumber, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string initials, 
                    string firstLanguage, 
                    bool firstLanguageRead, 
                    bool firstLanguageWrite, 
                    bool firstLanguageSpeak, 
                    string secondLanguage, 
                    bool secondLanguageRead, 
                    bool secondLanguageWrite, 
                    bool secondLanguageSpeak, 
                    string additionalLanguage, 
                    string gender, 
                    string citizenship) {
            object[] results = this.Invoke("updateGeneralDetails", new object[] {
                        idNumber,
                        firstName,
                        middleName,
                        lastName,
                        initials,
                        firstLanguage,
                        firstLanguageRead,
                        firstLanguageWrite,
                        firstLanguageSpeak,
                        secondLanguage,
                        secondLanguageRead,
                        secondLanguageWrite,
                        secondLanguageSpeak,
                        additionalLanguage,
                        gender,
                        citizenship});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateGeneralDetailsAsync(
                    string idNumber, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string initials, 
                    string firstLanguage, 
                    bool firstLanguageRead, 
                    bool firstLanguageWrite, 
                    bool firstLanguageSpeak, 
                    string secondLanguage, 
                    bool secondLanguageRead, 
                    bool secondLanguageWrite, 
                    bool secondLanguageSpeak, 
                    string additionalLanguage, 
                    string gender, 
                    string citizenship) {
            this.updateGeneralDetailsAsync(idNumber, firstName, middleName, lastName, initials, firstLanguage, firstLanguageRead, firstLanguageWrite, firstLanguageSpeak, secondLanguage, secondLanguageRead, secondLanguageWrite, secondLanguageSpeak, additionalLanguage, gender, citizenship, null);
        }
        
        /// <remarks/>
        public void updateGeneralDetailsAsync(
                    string idNumber, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string initials, 
                    string firstLanguage, 
                    bool firstLanguageRead, 
                    bool firstLanguageWrite, 
                    bool firstLanguageSpeak, 
                    string secondLanguage, 
                    bool secondLanguageRead, 
                    bool secondLanguageWrite, 
                    bool secondLanguageSpeak, 
                    string additionalLanguage, 
                    string gender, 
                    string citizenship, 
                    object userState) {
            if ((this.updateGeneralDetailsOperationCompleted == null)) {
                this.updateGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("updateGeneralDetails", new object[] {
                        idNumber,
                        firstName,
                        middleName,
                        lastName,
                        initials,
                        firstLanguage,
                        firstLanguageRead,
                        firstLanguageWrite,
                        firstLanguageSpeak,
                        secondLanguage,
                        secondLanguageRead,
                        secondLanguageWrite,
                        secondLanguageSpeak,
                        additionalLanguage,
                        gender,
                        citizenship}, this.updateGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnupdateGeneralDetailsOperationCompleted(object arg) {
            if ((this.updateGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateGeneralDetailsCompleted(this, new updateGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updateHrBankDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updateHrBankDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateHrBankDetails(string pJNumber, string bankCode, string bankBranch, string accountNumber) {
            this.Invoke("updateHrBankDetails", new object[] {
                        pJNumber,
                        bankCode,
                        bankBranch,
                        accountNumber});
        }
        
        /// <remarks/>
        public void updateHrBankDetailsAsync(string pJNumber, string bankCode, string bankBranch, string accountNumber) {
            this.updateHrBankDetailsAsync(pJNumber, bankCode, bankBranch, accountNumber, null);
        }
        
        /// <remarks/>
        public void updateHrBankDetailsAsync(string pJNumber, string bankCode, string bankBranch, string accountNumber, object userState) {
            if ((this.updateHrBankDetailsOperationCompleted == null)) {
                this.updateHrBankDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateHrBankDetailsOperationCompleted);
            }
            this.InvokeAsync("updateHrBankDetails", new object[] {
                        pJNumber,
                        bankCode,
                        bankBranch,
                        accountNumber}, this.updateHrBankDetailsOperationCompleted, userState);
        }
        
        private void OnupdateHrBankDetailsOperationCompleted(object arg) {
            if ((this.updateHrBankDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateHrBankDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updateIctRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updateIctRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string updateIctRequest(string appNo, string description) {
            object[] results = this.Invoke("updateIctRequest", new object[] {
                        appNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateIctRequestAsync(string appNo, string description) {
            this.updateIctRequestAsync(appNo, description, null);
        }
        
        /// <remarks/>
        public void updateIctRequestAsync(string appNo, string description, object userState) {
            if ((this.updateIctRequestOperationCompleted == null)) {
                this.updateIctRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateIctRequestOperationCompleted);
            }
            this.InvokeAsync("updateIctRequest", new object[] {
                        appNo,
                        description}, this.updateIctRequestOperationCompleted, userState);
        }
        
        private void OnupdateIctRequestOperationCompleted(object arg) {
            if ((this.updateIctRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateIctRequestCompleted(this, new updateIctRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updatePASTrainingNeeds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updatePASTrainingNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string updatePASTrainingNeeds(string pasNo, string trainingNeed, string remarks, int lineNo) {
            object[] results = this.Invoke("updatePASTrainingNeeds", new object[] {
                        pasNo,
                        trainingNeed,
                        remarks,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updatePASTrainingNeedsAsync(string pasNo, string trainingNeed, string remarks, int lineNo) {
            this.updatePASTrainingNeedsAsync(pasNo, trainingNeed, remarks, lineNo, null);
        }
        
        /// <remarks/>
        public void updatePASTrainingNeedsAsync(string pasNo, string trainingNeed, string remarks, int lineNo, object userState) {
            if ((this.updatePASTrainingNeedsOperationCompleted == null)) {
                this.updatePASTrainingNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePASTrainingNeedsOperationCompleted);
            }
            this.InvokeAsync("updatePASTrainingNeeds", new object[] {
                        pasNo,
                        trainingNeed,
                        remarks,
                        lineNo}, this.updatePASTrainingNeedsOperationCompleted, userState);
        }
        
        private void OnupdatePASTrainingNeedsOperationCompleted(object arg) {
            if ((this.updatePASTrainingNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePASTrainingNeedsCompleted(this, new updatePASTrainingNeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updatePMMULinesActivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updatePMMULinesActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string updatePMMULinesActivities(int entryNo, string activities, string strategyOutput, string contractNo, int lineNumber, string strategyPlanId, decimal weight, decimal achievedTarget) {
            object[] results = this.Invoke("updatePMMULinesActivities", new object[] {
                        entryNo,
                        activities,
                        strategyOutput,
                        contractNo,
                        lineNumber,
                        strategyPlanId,
                        weight,
                        achievedTarget});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updatePMMULinesActivitiesAsync(int entryNo, string activities, string strategyOutput, string contractNo, int lineNumber, string strategyPlanId, decimal weight, decimal achievedTarget) {
            this.updatePMMULinesActivitiesAsync(entryNo, activities, strategyOutput, contractNo, lineNumber, strategyPlanId, weight, achievedTarget, null);
        }
        
        /// <remarks/>
        public void updatePMMULinesActivitiesAsync(int entryNo, string activities, string strategyOutput, string contractNo, int lineNumber, string strategyPlanId, decimal weight, decimal achievedTarget, object userState) {
            if ((this.updatePMMULinesActivitiesOperationCompleted == null)) {
                this.updatePMMULinesActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePMMULinesActivitiesOperationCompleted);
            }
            this.InvokeAsync("updatePMMULinesActivities", new object[] {
                        entryNo,
                        activities,
                        strategyOutput,
                        contractNo,
                        lineNumber,
                        strategyPlanId,
                        weight,
                        achievedTarget}, this.updatePMMULinesActivitiesOperationCompleted, userState);
        }
        
        private void OnupdatePMMULinesActivitiesOperationCompleted(object arg) {
            if ((this.updatePMMULinesActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePMMULinesActivitiesCompleted(this, new updatePMMULinesActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updatePersonalDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updatePersonalDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string updatePersonalDetails(string idNumber, string maritalStatus, string ethnicOrigin, string disabled, bool healthAssessment, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime healthAssessmentDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth) {
            object[] results = this.Invoke("updatePersonalDetails", new object[] {
                        idNumber,
                        maritalStatus,
                        ethnicOrigin,
                        disabled,
                        healthAssessment,
                        healthAssessmentDate,
                        dateOfBirth});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updatePersonalDetailsAsync(string idNumber, string maritalStatus, string ethnicOrigin, string disabled, bool healthAssessment, System.DateTime healthAssessmentDate, System.DateTime dateOfBirth) {
            this.updatePersonalDetailsAsync(idNumber, maritalStatus, ethnicOrigin, disabled, healthAssessment, healthAssessmentDate, dateOfBirth, null);
        }
        
        /// <remarks/>
        public void updatePersonalDetailsAsync(string idNumber, string maritalStatus, string ethnicOrigin, string disabled, bool healthAssessment, System.DateTime healthAssessmentDate, System.DateTime dateOfBirth, object userState) {
            if ((this.updatePersonalDetailsOperationCompleted == null)) {
                this.updatePersonalDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePersonalDetailsOperationCompleted);
            }
            this.InvokeAsync("updatePersonalDetails", new object[] {
                        idNumber,
                        maritalStatus,
                        ethnicOrigin,
                        disabled,
                        healthAssessment,
                        healthAssessmentDate,
                        dateOfBirth}, this.updatePersonalDetailsOperationCompleted, userState);
        }
        
        private void OnupdatePersonalDetailsOperationCompleted(object arg) {
            if ((this.updatePersonalDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePersonalDetailsCompleted(this, new updatePersonalDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updatePersonnelSpecifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updatePersonnelSpecifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string updatePersonnelSpecifications(int id, string docNo, int noOfStafff, string desc) {
            object[] results = this.Invoke("updatePersonnelSpecifications", new object[] {
                        id,
                        docNo,
                        noOfStafff,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updatePersonnelSpecificationsAsync(int id, string docNo, int noOfStafff, string desc) {
            this.updatePersonnelSpecificationsAsync(id, docNo, noOfStafff, desc, null);
        }
        
        /// <remarks/>
        public void updatePersonnelSpecificationsAsync(int id, string docNo, int noOfStafff, string desc, object userState) {
            if ((this.updatePersonnelSpecificationsOperationCompleted == null)) {
                this.updatePersonnelSpecificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePersonnelSpecificationsOperationCompleted);
            }
            this.InvokeAsync("updatePersonnelSpecifications", new object[] {
                        id,
                        docNo,
                        noOfStafff,
                        desc}, this.updatePersonnelSpecificationsOperationCompleted, userState);
        }
        
        private void OnupdatePersonnelSpecificationsOperationCompleted(object arg) {
            if ((this.updatePersonnelSpecificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePersonnelSpecificationsCompleted(this, new updatePersonnelSpecificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updatePettyCashSurrenderLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updatePettyCashSurrenderLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string updatePettyCashSurrenderLine(string employeeNo, string pettyCashNo, int lineNo, decimal amountSpent, string receipt) {
            object[] results = this.Invoke("updatePettyCashSurrenderLine", new object[] {
                        employeeNo,
                        pettyCashNo,
                        lineNo,
                        amountSpent,
                        receipt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updatePettyCashSurrenderLineAsync(string employeeNo, string pettyCashNo, int lineNo, decimal amountSpent, string receipt) {
            this.updatePettyCashSurrenderLineAsync(employeeNo, pettyCashNo, lineNo, amountSpent, receipt, null);
        }
        
        /// <remarks/>
        public void updatePettyCashSurrenderLineAsync(string employeeNo, string pettyCashNo, int lineNo, decimal amountSpent, string receipt, object userState) {
            if ((this.updatePettyCashSurrenderLineOperationCompleted == null)) {
                this.updatePettyCashSurrenderLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePettyCashSurrenderLineOperationCompleted);
            }
            this.InvokeAsync("updatePettyCashSurrenderLine", new object[] {
                        employeeNo,
                        pettyCashNo,
                        lineNo,
                        amountSpent,
                        receipt}, this.updatePettyCashSurrenderLineOperationCompleted, userState);
        }
        
        private void OnupdatePettyCashSurrenderLineOperationCompleted(object arg) {
            if ((this.updatePettyCashSurrenderLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePettyCashSurrenderLineCompleted(this, new updatePettyCashSurrenderLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updateReceipt", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updateReceipt_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string updateReceipt(string docNo, string paymode, string paymentRef) {
            object[] results = this.Invoke("updateReceipt", new object[] {
                        docNo,
                        paymode,
                        paymentRef});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateReceiptAsync(string docNo, string paymode, string paymentRef) {
            this.updateReceiptAsync(docNo, paymode, paymentRef, null);
        }
        
        /// <remarks/>
        public void updateReceiptAsync(string docNo, string paymode, string paymentRef, object userState) {
            if ((this.updateReceiptOperationCompleted == null)) {
                this.updateReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateReceiptOperationCompleted);
            }
            this.InvokeAsync("updateReceipt", new object[] {
                        docNo,
                        paymode,
                        paymentRef}, this.updateReceiptOperationCompleted, userState);
        }
        
        private void OnupdateReceiptOperationCompleted(object arg) {
            if ((this.updateReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateReceiptCompleted(this, new updateReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updateRequisitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updateRequisitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string updateRequisitionLines(int id, string reqNo, decimal amount, decimal qty) {
            object[] results = this.Invoke("updateRequisitionLines", new object[] {
                        id,
                        reqNo,
                        amount,
                        qty});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateRequisitionLinesAsync(int id, string reqNo, decimal amount, decimal qty) {
            this.updateRequisitionLinesAsync(id, reqNo, amount, qty, null);
        }
        
        /// <remarks/>
        public void updateRequisitionLinesAsync(int id, string reqNo, decimal amount, decimal qty, object userState) {
            if ((this.updateRequisitionLinesOperationCompleted == null)) {
                this.updateRequisitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateRequisitionLinesOperationCompleted);
            }
            this.InvokeAsync("updateRequisitionLines", new object[] {
                        id,
                        reqNo,
                        amount,
                        qty}, this.updateRequisitionLinesOperationCompleted, userState);
        }
        
        private void OnupdateRequisitionLinesOperationCompleted(object arg) {
            if ((this.updateRequisitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateRequisitionLinesCompleted(this, new updateRequisitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:updateSurrenderLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="updateSurrenderLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string updateSurrenderLine(string employeeNo, string imprestSurrenderNo, int lineNo, decimal amountSpent, string receipt) {
            object[] results = this.Invoke("updateSurrenderLine", new object[] {
                        employeeNo,
                        imprestSurrenderNo,
                        lineNo,
                        amountSpent,
                        receipt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateSurrenderLineAsync(string employeeNo, string imprestSurrenderNo, int lineNo, decimal amountSpent, string receipt) {
            this.updateSurrenderLineAsync(employeeNo, imprestSurrenderNo, lineNo, amountSpent, receipt, null);
        }
        
        /// <remarks/>
        public void updateSurrenderLineAsync(string employeeNo, string imprestSurrenderNo, int lineNo, decimal amountSpent, string receipt, object userState) {
            if ((this.updateSurrenderLineOperationCompleted == null)) {
                this.updateSurrenderLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSurrenderLineOperationCompleted);
            }
            this.InvokeAsync("updateSurrenderLine", new object[] {
                        employeeNo,
                        imprestSurrenderNo,
                        lineNo,
                        amountSpent,
                        receipt}, this.updateSurrenderLineOperationCompleted, userState);
        }
        
        private void OnupdateSurrenderLineOperationCompleted(object arg) {
            if ((this.updateSurrenderLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSurrenderLineCompleted(this, new updateSurrenderLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HrPortal:validateBankAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", ResponseElementName="validateBankAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HrPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string validateBankAccount(string accountNumber, string bankCode) {
            object[] results = this.Invoke("validateBankAccount", new object[] {
                        accountNumber,
                        bankCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void validateBankAccountAsync(string accountNumber, string bankCode) {
            this.validateBankAccountAsync(accountNumber, bankCode, null);
        }
        
        /// <remarks/>
        public void validateBankAccountAsync(string accountNumber, string bankCode, object userState) {
            if ((this.validateBankAccountOperationCompleted == null)) {
                this.validateBankAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateBankAccountOperationCompleted);
            }
            this.InvokeAsync("validateBankAccount", new object[] {
                        accountNumber,
                        bankCode}, this.validateBankAccountOperationCompleted, userState);
        }
        
        private void OnvalidateBankAccountOperationCompleted(object arg) {
            if ((this.validateBankAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateBankAccountCompleted(this, new validateBankAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddContractLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddContractNoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddDeptPerformanceTargetsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddDriverAllocationsCompletedEventHandler(object sender, AddDriverAllocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDriverAllocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDriverAllocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddFleetLinesCompletedEventHandler(object sender, AddFleetLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFleetLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFleetLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddFuelRequisitionDetailsCompletedEventHandler(object sender, AddFuelRequisitionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFuelRequisitionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFuelRequisitionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddHrAppraisalLinesCompletedEventHandler(object sender, AddHrAppraisalLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHrAppraisalLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHrAppraisalLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddNonKeRRADriverAllocationsCompletedEventHandler(object sender, AddNonKeRRADriverAllocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNonKeRRADriverAllocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNonKeRRADriverAllocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddTravellingStaffCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddVehicleMaintenanceRequestDetailsCompletedEventHandler(object sender, AddVehicleMaintenanceRequestDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddVehicleMaintenanceRequestDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddVehicleMaintenanceRequestDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ApproveApplicationCompletedEventHandler(object sender, ApproveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ApproveLeaveReimbursementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ApproveStaffClaimCompletedEventHandler(object sender, ApproveStaffClaimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveStaffClaimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveStaffClaimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ApproveTargetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AssignHelpdeskRequestCompletedEventHandler(object sender, AssignHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AssignProcurementOfficerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AssignTransportRequisitionDriverCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AttachDocumentsLinkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BidScoreEvaluationEntryCompletedEventHandler(object sender, BidScoreEvaluationEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BidScoreEvaluationEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BidScoreEvaluationEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BidfinancialEvaluationsRankingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CalcEndDateCompletedEventHandler(object sender, CalcEndDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcEndDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcEndDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CalcReturnDateCompletedEventHandler(object sender, CalcReturnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcReturnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcReturnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CanceLeaveApprovalCompletedEventHandler(object sender, CanceLeaveApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanceLeaveApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanceLeaveApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelBidTabulationHeaderapprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelBudgetRelocationApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelConsolidatedNeedsApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelDocapprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelEftapprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelExpenseRequisitionApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelFuelCardApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelFullUtilVoucherCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelInductionApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelLPOApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelLabSampleMgtForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelLeavePlannerHeaderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelLeaveRecallApprovalCompletedEventHandler(object sender, CancelLeaveRecallApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelLeaveRecallApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelLeaveRecallApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelLeaveRequisitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelMobilityApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelPMMUApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelPRNApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelProcurementPlanApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelStaffClaimRecordApprovalCompletedEventHandler(object sender, CancelStaffClaimRecordApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelStaffClaimRecordApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelStaffClaimRecordApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelStaffClaimforApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelWorkTicketforApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancellIFSTEnderCommiteeForApprovalCompletedEventHandler(object sender, CancellIFSTEnderCommiteeForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancellIFSTEnderCommiteeForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancellIFSTEnderCommiteeForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancellRFQApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CanceltransportReqApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ChangeLeaveRelieverCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckAttachmentExistsCompletedEventHandler(object sender, CheckAttachmentExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAttachmentExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAttachmentExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckAttachmentExists_1888594284CompletedEventHandler(object sender, CheckAttachmentExists_1888594284CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAttachmentExists_1888594284CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAttachmentExists_1888594284CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckPasswordChangedCompletedEventHandler(object sender, CheckPasswordChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPasswordChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPasswordChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ClearEftLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ClearExpenseLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CloseAppraisalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CloseDriverOpenTripsCompletedEventHandler(object sender, CloseDriverOpenTripsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseDriverOpenTripsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseDriverOpenTripsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CloseCompletedEventHandler(object sender, CloseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CountApprovalsCompletedEventHandler(object sender, CountApprovalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountApprovalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountApprovalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CountUnfilledTimesheetsCompletedEventHandler(object sender, CountUnfilledTimesheetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountUnfilledTimesheetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountUnfilledTimesheetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateAccountForExtenalApplicantsCompletedEventHandler(object sender, CreateAccountForExtenalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccountForExtenalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccountForExtenalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateActivitiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateAppointmentLinesCompletedEventHandler(object sender, CreateAppointmentLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAppointmentLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAppointmentLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateBidScoreCreterioCompletedEventHandler(object sender, CreateBidScoreCreterioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateBidScoreCreterioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateBidScoreCreterioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateBidScoringTemplateCompletedEventHandler(object sender, CreateBidScoringTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateBidScoringTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateBidScoringTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateChangeDependantsLinesCompletedEventHandler(object sender, CreateChangeDependantsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateChangeDependantsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateChangeDependantsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateEftHeaderCompletedEventHandler(object sender, CreateEftHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateEftHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateEftHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateEftLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateGMOFreeApplicationCompletedEventHandler(object sender, CreateGMOFreeApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateGMOFreeApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateGMOFreeApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateInvitationNoticeCompletedEventHandler(object sender, CreateInvitationNoticeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateInvitationNoticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateInvitationNoticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateInvitedBiddersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateLPODocCompletedEventHandler(object sender, CreateLPODocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateLPODocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateLPODocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateLPOFromContractCompletedEventHandler(object sender, CreateLPOFromContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateLPOFromContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateLPOFromContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateLeaveApplicationCompletedEventHandler(object sender, CreateLeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateLeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateLeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateMedicalCardCompletedEventHandler(object sender, CreateMedicalCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMedicalCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMedicalCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateNewResourceRequirementCompletedEventHandler(object sender, CreateNewResourceRequirementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewResourceRequirementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewResourceRequirementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateNoObjectionLetterRequestCompletedEventHandler(object sender, CreateNoObjectionLetterRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNoObjectionLetterRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNoObjectionLetterRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreatePayChangeAdviceCompletedEventHandler(object sender, CreatePayChangeAdviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePayChangeAdviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePayChangeAdviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreatePaychangeAdviceLinesCompletedEventHandler(object sender, CreatePaychangeAdviceLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePaychangeAdviceLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePaychangeAdviceLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreatePurchaseContractCompletedEventHandler(object sender, CreatePurchaseContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePurchaseContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePurchaseContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateRecruitmentRequisitionCompletedEventHandler(object sender, CreateRecruitmentRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRecruitmentRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRecruitmentRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateStrategyWorkPlanLinesCompletedEventHandler(object sender, CreateStrategyWorkPlanLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStrategyWorkPlanLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStrategyWorkPlanLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateWarantiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateWorksPurchaseRequisitionCompletedEventHandler(object sender, CreateWorksPurchaseRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateWorksPurchaseRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateWorksPurchaseRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DelegateApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteAllocationLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteBudgetAmountsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteDocumentAttachmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteEdmsAttachmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteExpenseReqLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteFleetLinesCompletedEventHandler(object sender, DeleteFleetLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFleetLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFleetLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteFuelReqCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteGMDLApplicationCompletedEventHandler(object sender, DeleteGMDLApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGMDLApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGMDLApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteGMDSSApplicationCompletedEventHandler(object sender, DeleteGMDSSApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGMDSSApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGMDSSApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteGenomeResearchCompletedEventHandler(object sender, DeleteGenomeResearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGenomeResearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGenomeResearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteHrAppraisalLinesCompletedEventHandler(object sender, DeleteHrAppraisalLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteHrAppraisalLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteHrAppraisalLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteKpiRecordCompletedEventHandler(object sender, DeleteKpiRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteKpiRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteKpiRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteOtherCostCompletedEventHandler(object sender, DeleteOtherCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOtherCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOtherCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteOtherDutyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeletePASTrainingNeedsCompletedEventHandler(object sender, DeletePASTrainingNeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePASTrainingNeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePASTrainingNeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeletePASValuesCompletedEventHandler(object sender, DeletePASValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePASValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePASValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeletePRNExpenseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeletePerfomanceTargetsLinesCompletedEventHandler(object sender, DeletePerfomanceTargetsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePerfomanceTargetsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePerfomanceTargetsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteProcurementPlanEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteProcurementPlanLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteReallocationLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteSampleLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteTrainingCourseSetupCompletedEventHandler(object sender, DeleteTrainingCourseSetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTrainingCourseSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTrainingCourseSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteTrainingNeedLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteWorkTicketLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteWorkplanLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DetermineIfIsNonWorkingCompletedEventHandler(object sender, DetermineIfIsNonWorkingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetermineIfIsNonWorkingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DetermineIfIsNonWorkingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime bcDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string leave_Type {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DocumentApprovalsCompletedEventHandler(object sender, DocumentApprovalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentApprovalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentApprovalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DocumentRejectionCommentLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DocumentRejectionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void EditActivitiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void EscalatedHelpdeskRequestDynasoftCompletedEventHandler(object sender, EscalatedHelpdeskRequestDynasoftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EscalatedHelpdeskRequestDynasoftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EscalatedHelpdeskRequestDynasoftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void EscalatedHelpdeskRequestCompletedEventHandler(object sender, EscalatedHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EscalatedHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EscalatedHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void EssCancellPVCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ExpenseRequisitionApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ExportWorkplanExcellCompletedEventHandler(object sender, ExportWorkplanExcellCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportWorkplanExcellCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportWorkplanExcellCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnAddEvaluationPIPCompletedEventHandler(object sender, FnAddEvaluationPIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddEvaluationPIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddEvaluationPIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnAppointTeamMemberCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnAppraisalSuggestObjectivesOutcomesCompletedEventHandler(object sender, FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnCloseHelpDeskIssueCompletedEventHandler(object sender, FnCloseHelpDeskIssueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCloseHelpDeskIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCloseHelpDeskIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnCreateLeaveApplicationCompletedEventHandler(object sender, FnCreateLeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateLeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateLeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnCreatePreliminaryDesignPortalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnCreateProjectLeadsAppointmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnCreateProjectTeamCardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnCreateStaffClaimApprovalRequestsCompletedEventHandler(object sender, FnCreateStaffClaimApprovalRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateStaffClaimApprovalRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateStaffClaimApprovalRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnCreateStakeHolderFeedbackCompletedEventHandler(object sender, FnCreateStakeHolderFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateStakeHolderFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateStakeHolderFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnCreateTrainingFeedbackCompletedEventHandler(object sender, FnCreateTrainingFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateTrainingFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateTrainingFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnCreateTrainingRequisitionCompletedEventHandler(object sender, FnCreateTrainingRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateTrainingRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateTrainingRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnCreateUserRequestCompletedEventHandler(object sender, FnCreateUserRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateUserRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateUserRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnDeleteIndividualCardSubActivitiesCompletedEventHandler(object sender, FnDeleteIndividualCardSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteIndividualCardSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteIndividualCardSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnEditIndividualCardSubActivitiesCompletedEventHandler(object sender, FnEditIndividualCardSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditIndividualCardSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditIndividualCardSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnEditPurchaseLineDescriptionCompletedEventHandler(object sender, FnEditPurchaseLineDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditPurchaseLineDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditPurchaseLineDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnGetLastSubPcLineNoCompletedEventHandler(object sender, FnGetLastSubPcLineNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetLastSubPcLineNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetLastSubPcLineNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnInserImprestSurrenderCompletedEventHandler(object sender, FnInserImprestSurrenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInserImprestSurrenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInserImprestSurrenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnInsertProjectTeamLeadsLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnInsertProjectTeamLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnInsertSubObjectiveEvaluationCompletedEventHandler(object sender, FnInsertSubObjectiveEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertSubObjectiveEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertSubObjectiveEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnInsertTrainingLinesCompletedEventHandler(object sender, FnInsertTrainingLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertTrainingLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertTrainingLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnInsertVehicleMaitenanceDetailsCompletedEventHandler(object sender, FnInsertVehicleMaitenanceDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertVehicleMaitenanceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertVehicleMaitenanceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnLoadCompetenciesCompletedEventHandler(object sender, FnLoadCompetenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLoadCompetenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLoadCompetenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnNewIndividualCardSubActivitiesCompletedEventHandler(object sender, FnNewIndividualCardSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewIndividualCardSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewIndividualCardSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnNewPerformanceLogEntryCompletedEventHandler(object sender, FnNewPerformanceLogEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewPerformanceLogEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewPerformanceLogEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnNewStandardAppraisalCompletedEventHandler(object sender, FnNewStandardAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewStandardAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewStandardAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnPublishLPOCompletedEventHandler(object sender, FnPublishLPOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPublishLPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPublishLPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnRemoveCoreInitiativesCompletedEventHandler(object sender, FnRemoveCoreInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemoveCoreInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemoveCoreInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnRemovePerformanceLogLineCompletedEventHandler(object sender, FnRemovePerformanceLogLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemovePerformanceLogLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemovePerformanceLogLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnReopenHelpDeskIssueCompletedEventHandler(object sender, FnReopenHelpDeskIssueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnReopenHelpDeskIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnReopenHelpDeskIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnSaveCoreInitiativesCompletedEventHandler(object sender, FnSaveCoreInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveCoreInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveCoreInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnSendLPOViaMailCompletedEventHandler(object sender, FnSendLPOViaMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendLPOViaMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendLPOViaMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnSendTenderCommitteNotificationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnSubmitSelectedCoreInitiativesCompletedEventHandler(object sender, FnSubmitSelectedCoreInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedCoreInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedCoreInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnSubmitSelectedPLogCategoriesCompletedEventHandler(object sender, FnSubmitSelectedPLogCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedPLogCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedPLogCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnSubmitTrainingNeedsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnSubmitUserRequestCompletedEventHandler(object sender, FnSubmitUserRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitUserRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitUserRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnSuggestJDCompletedEventHandler(object sender, FnSuggestJDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSuggestJDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSuggestJDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnSuggestPlogLinesCompletedEventHandler(object sender, FnSuggestPlogLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSuggestPlogLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSuggestPlogLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnUpdatePRNLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnUpdatePerformanceTargetLinesDetailsCompletedEventHandler(object sender, FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnUpdateProjectLeadsAppointmentCompletedEventHandler(object sender, FnUpdateProjectLeadsAppointmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateProjectLeadsAppointmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateProjectLeadsAppointmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnUpdatePurchaseHeaderCompletedEventHandler(object sender, FnUpdatePurchaseHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdatePurchaseHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdatePurchaseHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnUpdatePurchaseRequisitionCompletedEventHandler(object sender, FnUpdatePurchaseRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdatePurchaseRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdatePurchaseRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnUpdateStakeholderFeedBackLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FnsuggestsubindicatorsCompletedEventHandler(object sender, FnsuggestsubindicatorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnsuggestsubindicatorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnsuggestsubindicatorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FullUtilVoucherApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FunctionalCancellApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FunctionalsendApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GMOImportExportTransitRecordExistsCompletedEventHandler(object sender, GMOImportExportTransitRecordExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GMOImportExportTransitRecordExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GMOImportExportTransitRecordExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateAdminVoteBookReportCompletedEventHandler(object sender, GenerateAdminVoteBookReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateAdminVoteBookReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateAdminVoteBookReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateAieReportCompletedEventHandler(object sender, GenerateAieReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateAieReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateAieReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateAndSendOTPCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateAnnualFunctionalPlanCompletedEventHandler(object sender, GenerateAnnualFunctionalPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateAnnualFunctionalPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateAnnualFunctionalPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateAwardNoticeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateBankStatementCompletedEventHandler(object sender, GenerateBankStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateBankStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateBankStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateCashbooklReportCompletedEventHandler(object sender, GenerateCashbooklReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateCashbooklReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateCashbooklReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateClaimsReportCompletedEventHandler(object sender, GenerateClaimsReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateClaimsReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateClaimsReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateEvalutionReportCompletedEventHandler(object sender, GenerateEvalutionReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateEvalutionReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateEvalutionReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateExpenseRequisitionCompletedEventHandler(object sender, GenerateExpenseRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateExpenseRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateExpenseRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateFuelRequisitionCompletedEventHandler(object sender, GenerateFuelRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateFuelRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateFuelRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateGMOFreeReportCompletedEventHandler(object sender, GenerateGMOFreeReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateGMOFreeReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateGMOFreeReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateLPOReportCompletedEventHandler(object sender, GenerateLPOReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateLPOReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateLPOReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateLeaveStatementReportCompletedEventHandler(object sender, GenerateLeaveStatementReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateLeaveStatementReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateLeaveStatementReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateMaintenanceRequisitionCompletedEventHandler(object sender, GenerateMaintenanceRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateMaintenanceRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateMaintenanceRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateOutwardReportCompletedEventHandler(object sender, GenerateOutwardReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateOutwardReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateOutwardReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GeneratePASEmpReportCompletedEventHandler(object sender, GeneratePASEmpReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePASEmpReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePASEmpReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GeneratePASReportCompletedEventHandler(object sender, GeneratePASReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePASReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePASReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GeneratePMMUReportCompletedEventHandler(object sender, GeneratePMMUReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePMMUReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePMMUReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GeneratePNineReportCompletedEventHandler(object sender, GeneratePNineReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePNineReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePNineReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GeneratePaySlipReport2CompletedEventHandler(object sender, GeneratePaySlipReport2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePaySlipReport2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePaySlipReport2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GeneratePaySlipReportCompletedEventHandler(object sender, GeneratePaySlipReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePaySlipReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePaySlipReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GeneratePortalEmailOTPCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GeneratePortalOTPCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateRMReportCompletedEventHandler(object sender, GenerateRMReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateRMReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateRMReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateRandomOTPCodeCompletedEventHandler(object sender, GenerateRandomOTPCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateRandomOTPCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateRandomOTPCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateReceiptReportCompletedEventHandler(object sender, GenerateReceiptReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateReceiptReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateReceiptReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateReceiptCompletedEventHandler(object sender, GenerateReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateReceiptlReportCompletedEventHandler(object sender, GenerateReceiptlReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateReceiptlReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateReceiptlReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateReopenreportCompletedEventHandler(object sender, GenerateReopenreportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateReopenreportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateReopenreportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateVoteBookReportCompletedEventHandler(object sender, GenerateVoteBookReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateVoteBookReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateVoteBookReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateVoucherReport2CompletedEventHandler(object sender, GenerateVoucherReport2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateVoucherReport2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateVoucherReport2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateVoucherReportCompletedEventHandler(object sender, GenerateVoucherReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateVoucherReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateVoucherReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateWarrantReportCompletedEventHandler(object sender, GenerateWarrantReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateWarrantReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateWarrantReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateWorkplanBudgetStrategyCompletedEventHandler(object sender, GenerateWorkplanBudgetStrategyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateWorkplanBudgetStrategyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateWorkplanBudgetStrategyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateictreportCompletedEventHandler(object sender, GenerateictreportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateictreportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateictreportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllItemsCompletedEventHandler(object sender, GetAllItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDSARatesCompletedEventHandler(object sender, GetDSARatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDSARatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDSARatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDocumentAttachment_1705862952CompletedEventHandler(object sender, GetDocumentAttachment_1705862952CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentAttachment_1705862952CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentAttachment_1705862952CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDocumentAttachmentCompletedEventHandler(object sender, GetDocumentAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetEndReturnDateCompletedEventHandler(object sender, GetEndReturnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEndReturnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEndReturnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetFinancialYearCompletedEventHandler(object sender, GetFinancialYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFinancialYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFinancialYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetImprestDimensionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLeaveBalancesCompletedEventHandler(object sender, GetLeaveBalancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLeaveBalancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLeaveBalancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLoansEntitlementPerGradeCompletedEventHandler(object sender, GetLoansEntitlementPerGradeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoansEntitlementPerGradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoansEntitlementPerGradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetNextApproverCompletedEventHandler(object sender, GetNextApproverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextApproverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextApproverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPaymentsDocDimensionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPreviousPayCompletedEventHandler(object sender, GetPreviousPayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPreviousPayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPreviousPayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProfilePictureCompletedEventHandler(object sender, GetProfilePictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfilePictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfilePictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetReciptssDocDimensionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSubmittedDutyTrainingNeedsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTrainingPlanCodeCompletedEventHandler(object sender, GetTrainingPlanCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrainingPlanCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrainingPlanCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserSignatureCompletedEventHandler(object sender, GetUserSignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetYearsToRetirementCompletedEventHandler(object sender, GetYearsToRetirementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYearsToRetirementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYearsToRetirementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HRAppraisalHeaderInsertCompletedEventHandler(object sender, HRAppraisalHeaderInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRAppraisalHeaderInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRAppraisalHeaderInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HRLeaveCarryForwardCompletedEventHandler(object sender, HRLeaveCarryForwardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRLeaveCarryForwardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRLeaveCarryForwardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HRLeaveReimbursementCompletedEventHandler(object sender, HRLeaveReimbursementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRLeaveReimbursementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRLeaveReimbursementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HRTimeOffLieuCompletedEventHandler(object sender, HRTimeOffLieuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRTimeOffLieuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRTimeOffLieuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ImportExcellBudgetValuesCompletedEventHandler(object sender, ImportExcellBudgetValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportExcellBudgetValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportExcellBudgetValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string fileNamePath {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ImportStaffProfilePictureCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InitiateStaffClaimCompletedEventHandler(object sender, InitiateStaffClaimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateStaffClaimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateStaffClaimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertAccusedEmployeesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertActualAmountCompletedEventHandler(object sender, InsertActualAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertActualAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertActualAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertAllocationLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertBidPreliminaryEvaluationRegisterCompletedEventHandler(object sender, InsertBidPreliminaryEvaluationRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBidPreliminaryEvaluationRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBidPreliminaryEvaluationRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertBidTechnicalEvaluationRegisterCompletedEventHandler(object sender, InsertBidTechnicalEvaluationRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBidTechnicalEvaluationRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBidTechnicalEvaluationRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertBidfinancialEvaluationRegisterCompletedEventHandler(object sender, InsertBidfinancialEvaluationRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBidfinancialEvaluationRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBidfinancialEvaluationRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertBidscoreRequirementCompletedEventHandler(object sender, InsertBidscoreRequirementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBidscoreRequirementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBidscoreRequirementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertConsolidatedTrainingNeedsCompletedEventHandler(object sender, InsertConsolidatedTrainingNeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertConsolidatedTrainingNeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertConsolidatedTrainingNeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertContractPaymentTermsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertContractPaymentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertCurrentSkillsCompletedEventHandler(object sender, InsertCurrentSkillsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCurrentSkillsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCurrentSkillsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertDirectExpenseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertDutystationTrainingNeedsCompletedEventHandler(object sender, InsertDutystationTrainingNeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDutystationTrainingNeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDutystationTrainingNeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertEmployeeClockInCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertEmployeeClockOutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertEmployeeRequisitionCompletedEventHandler(object sender, InsertEmployeeRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEmployeeRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEmployeeRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertExpenseLinesImprestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertExpenseLinesPurchaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertExpenseReqAllocationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertExpenseRequisitionLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertExpenseRequisitionCompletedEventHandler(object sender, InsertExpenseRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExpenseRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExpenseRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertFuelCardLinesCompletedEventHandler(object sender, InsertFuelCardLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertFuelCardLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertFuelCardLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertFuelCardCompletedEventHandler(object sender, InsertFuelCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertFuelCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertFuelCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertFuelReqCompletedEventHandler(object sender, InsertFuelReqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertFuelReqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertFuelReqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertGMDLApplicationCompletedEventHandler(object sender, InsertGMDLApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGMDLApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGMDLApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertGMDSSApplicationCompletedEventHandler(object sender, InsertGMDSSApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGMDSSApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGMDSSApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertGMOImportExportTransitRecordCompletedEventHandler(object sender, InsertGMOImportExportTransitRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGMOImportExportTransitRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGMOImportExportTransitRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertGenomeResearchCompletedEventHandler(object sender, InsertGenomeResearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGenomeResearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGenomeResearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertGrievanceCompletedEventHandler(object sender, InsertGrievanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGrievanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGrievanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertHandoverNotesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertImperestNoCompletedEventHandler(object sender, InsertImperestNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertImperestNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertImperestNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertInductionHeaderCompletedEventHandler(object sender, InsertInductionHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertInductionHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertInductionHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertInductionLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertKpiRecordCompletedEventHandler(object sender, InsertKpiRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertKpiRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertKpiRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertLabSampleCompletedEventHandler(object sender, InsertLabSampleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLabSampleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLabSampleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertLeavePlannerHeaderCompletedEventHandler(object sender, InsertLeavePlannerHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLeavePlannerHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLeavePlannerHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertLeavePlannerLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertLeaveRecallCompletedEventHandler(object sender, InsertLeaveRecallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLeaveRecallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLeaveRecallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertManagementInitiatedTransferCompletedEventHandler(object sender, InsertManagementInitiatedTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertManagementInitiatedTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertManagementInitiatedTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertOtherCostCompletedEventHandler(object sender, InsertOtherCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertOtherCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertOtherCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertOtherDutyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertPASValuesCompletedEventHandler(object sender, InsertPASValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPASValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPASValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertPMMUHeaderCompletedEventHandler(object sender, InsertPMMUHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPMMUHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPMMUHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertPerfomanceTargetsLinesCompletedEventHandler(object sender, InsertPerfomanceTargetsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPerfomanceTargetsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPerfomanceTargetsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertPettyCashCompletedEventHandler(object sender, InsertPettyCashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPettyCashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPettyCashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertPmmuLinesCompletedEventHandler(object sender, InsertPmmuLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPmmuLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPmmuLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertProcurementPlanEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertProcurementPlanLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertProcurementPlanCompletedEventHandler(object sender, InsertProcurementPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertProcurementPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertProcurementPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertReallocationHeaderCompletedEventHandler(object sender, InsertReallocationHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertReallocationHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertReallocationHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertReallocationLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertReservationHeaderCompletedEventHandler(object sender, InsertReservationHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertReservationHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertReservationHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertReservationLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertSampleLineCompletedEventHandler(object sender, InsertSampleLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSampleLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSampleLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertSelfAssessmentLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertSelfInitiatedTransferCompletedEventHandler(object sender, InsertSelfInitiatedTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSelfInitiatedTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSelfInitiatedTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertSurchargeCompletedEventHandler(object sender, InsertSurchargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSurchargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSurchargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertTenderCommiteeMembersCompletedEventHandler(object sender, InsertTenderCommiteeMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTenderCommiteeMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTenderCommiteeMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertTenderCommiteesCompletedEventHandler(object sender, InsertTenderCommiteesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTenderCommiteesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTenderCommiteesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertTrainingCourseSetupCompletedEventHandler(object sender, InsertTrainingCourseSetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTrainingCourseSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTrainingCourseSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertTrainingExtensionCompletedEventHandler(object sender, InsertTrainingExtensionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTrainingExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTrainingExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertWorkTicketHeaderCompletedEventHandler(object sender, InsertWorkTicketHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertWorkTicketHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertWorkTicketHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertWorkTicketLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertcarLoansApplicationCompletedEventHandler(object sender, InsertcarLoansApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertcarLoansApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertcarLoansApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void IsSuperVisorCompletedEventHandler(object sender, IsSuperVisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsSuperVisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsSuperVisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LeaveRequisitionsApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LoadAppraisalSectionsHighScaleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LoadAppraisalSectionsLowerScaleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LoadTransportReqCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyBidEvaluationsLInesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyBidTabulationHeaderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyConsolidatedNeedsLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyConsolidatedNeedsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyEvaluationBidRemarksCompletedEventHandler(object sender, ModifyEvaluationBidRemarksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyEvaluationBidRemarksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyEvaluationBidRemarksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyExpenseLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyExpenseRequisitionCompletedEventHandler(object sender, ModifyExpenseRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyExpenseRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyExpenseRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyFleetLinesCompletedEventHandler(object sender, ModifyFleetLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyFleetLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyFleetLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyFuelReqCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyGMOImportExportTransitRecordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyHrAppraisalLinesCompletedEventHandler(object sender, ModifyHrAppraisalLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyHrAppraisalLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyHrAppraisalLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyKpiRecordCompletedEventHandler(object sender, ModifyKpiRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyKpiRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyKpiRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyLeavePlannerLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyManagementInitiatedTransferCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyOtherCostCompletedEventHandler(object sender, ModifyOtherCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyOtherCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyOtherCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyOtherDutyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyPaymentHeaderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyProcurementPlanEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyProcurementPlanLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyPurchaseHeaderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyRFQCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyReallocationLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifySampleLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifySelfInitiatedTransferCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyTrainingCourseSetupCompletedEventHandler(object sender, ModifyTrainingCourseSetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyTrainingCourseSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyTrainingCourseSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyWorkTicketLines1CompletedEventHandler(object sender, ModifyWorkTicketLines1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyWorkTicketLines1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyWorkTicketLines1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModifyWorkTicketLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void NewDisciplinaryCaseCompletedEventHandler(object sender, NewDisciplinaryCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewDisciplinaryCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewDisciplinaryCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void NotifySupplyChainCompletedEventHandler(object sender, NotifySupplyChainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifySupplyChainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifySupplyChainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PasswordChangedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PerfomSendToSuperVisorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PopulatePettyCashSurrenderCompletedEventHandler(object sender, PopulatePettyCashSurrenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PopulatePettyCashSurrenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PopulatePettyCashSurrenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PopulatePettyCashCompletedEventHandler(object sender, PopulatePettyCashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PopulatePettyCashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PopulatePettyCashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PosFinanceEvaluationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PosTechnicalEvaluationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PostBidOpeningRegisterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PostImprestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PostPaymentVoucherCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PostPreliminaryEvaluationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PostPurchaseInvoiceCompletedEventHandler(object sender, PostPurchaseInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostPurchaseInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostPurchaseInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PostPurchaseOrderCompletedEventHandler(object sender, PostPurchaseOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostPurchaseOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostPurchaseOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PostReceiptsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PostStaffClaimCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ProceedToProffessionalOpinionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ProcessDriverAllocationsCompletedEventHandler(object sender, ProcessDriverAllocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessDriverAllocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessDriverAllocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ProvideIctfeedbackCompletedEventHandler(object sender, ProvideIctfeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProvideIctfeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProvideIctfeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PurchasesPerEmployeeCompletedEventHandler(object sender, PurchasesPerEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchasesPerEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchasesPerEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RecordExistsCompletedEventHandler(object sender, RecordExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecordExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecordExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RecordGDMSSApplicationExistsCompletedEventHandler(object sender, RecordGDMSSApplicationExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecordGDMSSApplicationExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecordGDMSSApplicationExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RejectApplicationCompletedEventHandler(object sender, RejectApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RejectApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RejectApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RejectApprovalRequestCompletedEventHandler(object sender, RejectApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RejectApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RejectApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RemoveTrainingCostCompletedEventHandler(object sender, RemoveTrainingCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveTrainingCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveTrainingCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ReopenHelpdeskRequestCompletedEventHandler(object sender, ReopenHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReopenHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReopenHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ResolveHelpdeskRequestCompletedEventHandler(object sender, ResolveHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResolveHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResolveHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ReturnBase64FromReportCompletedEventHandler(object sender, ReturnBase64FromReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnBase64FromReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnBase64FromReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ReturnOTPExpirationCompletedEventHandler(object sender, ReturnOTPExpirationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnOTPExpirationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnOTPExpirationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ReturnPortalOTPCodeCompletedEventHandler(object sender, ReturnPortalOTPCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnPortalOTPCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnPortalOTPCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ReturntoAppraiseeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ScheduleTransfertoBankCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendApprovalEmailAlertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendAwardLetterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendBidTabulationHeaderForApprvalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendBidcodesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendConsolidatedNeedsForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendDocForApprvalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendDriverEmailNotificationCompletedEventHandler(object sender, SendDriverEmailNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDriverEmailNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDriverEmailNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendEftForApprvalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendEmailCompletedEventHandler(object sender, SendEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendFuelCardApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendFuelRequisitionforApprovalCompletedEventHandler(object sender, SendFuelRequisitionforApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFuelRequisitionforApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFuelRequisitionforApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendIFSTEnderCommiteeForApprovalCompletedEventHandler(object sender, SendIFSTEnderCommiteeForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendIFSTEnderCommiteeForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendIFSTEnderCommiteeForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendImprestWarrantforApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendInductionApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendLabSampleMgtForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendLeavePlannerApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendLeaveRecallApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendLoanAppForApprovalCompletedEventHandler(object sender, SendLoanAppForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendLoanAppForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendLoanAppForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendMobilityApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendPMMUApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendProcurementPlanApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendRFQforApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendRegretLetterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendReservationHeaderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendSMSCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendStaffClaimforApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendTrainingExtensionApprovalCompletedEventHandler(object sender, SendTrainingExtensionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTrainingExtensionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTrainingExtensionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendTrainingNeedsApprovalCompletedEventHandler(object sender, SendTrainingNeedsApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTrainingNeedsApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTrainingNeedsApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendVehicleMaintenancetforApprovalCompletedEventHandler(object sender, SendVehicleMaintenancetforApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendVehicleMaintenancetforApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendVehicleMaintenancetforApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendVehicleRequisitionApprovalCompletedEventHandler(object sender, SendVehicleRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendVehicleRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendVehicleRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendWorkTicketforApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendforModerationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendforReviewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendtosupervisorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendtransportReqApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void StaffClaimPerMonthCompletedEventHandler(object sender, StaffClaimPerMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StaffClaimPerMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StaffClaimPerMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void StartPMMUEvaluationCompletedEventHandler(object sender, StartPMMUEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartPMMUEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartPMMUEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void StoreReqReportCompletedEventHandler(object sender, StoreReqReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreReqReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreReqReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitApplicationCompletedEventHandler(object sender, SubmitApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitConsolidatedTrainingNeedsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitDutyStationTrainingNeedsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitFinalEvalutionReportCompletedEventHandler(object sender, SubmitFinalEvalutionReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitFinalEvalutionReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitFinalEvalutionReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitTrainingEvaluation1CompletedEventHandler(object sender, SubmitTrainingEvaluation1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitTrainingEvaluation1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitTrainingEvaluation1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitTrainingFeedbackCompletedEventHandler(object sender, SubmitTrainingFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitTrainingFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitTrainingFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitTrainingNeedsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitVehicleFuelRequestDetails2CompletedEventHandler(object sender, SubmitVehicleFuelRequestDetails2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitVehicleFuelRequestDetails2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitVehicleFuelRequestDetails2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SuggestLinesFromWorksRequisitionTemplateCompletedEventHandler(object sender, SuggestLinesFromWorksRequisitionTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuggestLinesFromWorksRequisitionTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuggestLinesFromWorksRequisitionTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SuggestPersonnelEquipmentSpecificationCompletedEventHandler(object sender, SuggestPersonnelEquipmentSpecificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuggestPersonnelEquipmentSpecificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuggestPersonnelEquipmentSpecificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SuggestRFQBidsCompletedEventHandler(object sender, SuggestRFQBidsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuggestRFQBidsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuggestRFQBidsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SuggestTechnicalPassedBidsCompletedEventHandler(object sender, SuggestTechnicalPassedBidsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuggestTechnicalPassedBidsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuggestTechnicalPassedBidsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SuperVisorActionsCompletedEventHandler(object sender, SuperVisorActionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuperVisorActionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuperVisorActionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SupervisorsRatingCompletedEventHandler(object sender, SupervisorsRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SupervisorsRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SupervisorsRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SurrenderPettyCashCompletedEventHandler(object sender, SurrenderPettyCashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SurrenderPettyCashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SurrenderPettyCashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TechFeesCompletedEventHandler(object sender, TechFeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TechFeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TechFeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TravelAdvancePerMonthCompletedEventHandler(object sender, TravelAdvancePerMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TravelAdvancePerMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TravelAdvancePerMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TravelLiquidationPerMonthCompletedEventHandler(object sender, TravelLiquidationPerMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TravelLiquidationPerMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TravelLiquidationPerMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UnsealBidCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpateDriverAllocationToImprestMemoCompletedEventHandler(object sender, UpateDriverAllocationToImprestMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpateDriverAllocationToImprestMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpateDriverAllocationToImprestMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateApplicationStatusCompletedEventHandler(object sender, UpdateApplicationStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApplicationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateApplicationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateAppointmentComitteeCompletedEventHandler(object sender, UpdateAppointmentComitteeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAppointmentComitteeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAppointmentComitteeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateAppointmentLinesCompletedEventHandler(object sender, UpdateAppointmentLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAppointmentLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAppointmentLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateApprovalEntrySenderIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateBankNameCompletedEventHandler(object sender, UpdateBankNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBankNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBankNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateBidCodesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateBidOpeningLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateDirectApproverCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateEmployeeActionsCompletedEventHandler(object sender, UpdateEmployeeActionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmployeeActionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmployeeActionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateExpenseRequisitionCompletedEventHandler(object sender, UpdateExpenseRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateExpenseRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateExpenseRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateFeesCompletedEventHandler(object sender, UpdateFeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateGMDLApplicationCompletedEventHandler(object sender, UpdateGMDLApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGMDLApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGMDLApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateGMDSSApplicationCompletedEventHandler(object sender, UpdateGMDSSApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGMDSSApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGMDSSApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateGMOFreeApplicationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateGenomeResearchCompletedEventHandler(object sender, UpdateGenomeResearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGenomeResearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGenomeResearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateLeaveApproverCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateLeaveRejectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateLoanCommentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateMobilityRecommendationsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateNoObjectionRequestCompletedEventHandler(object sender, UpdateNoObjectionRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNoObjectionRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNoObjectionRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdatePASValuesCompletedEventHandler(object sender, UpdatePASValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePASValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePASValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdatePMMUHeaderCompletedEventHandler(object sender, UpdatePMMUHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePMMUHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePMMUHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdatePaymentStatusCompletedEventHandler(object sender, UpdatePaymentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePaymentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePaymentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdatePerfomanceTargetsLinesCompletedEventHandler(object sender, UpdatePerfomanceTargetsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePerfomanceTargetsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePerfomanceTargetsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdatePmmuLineCompletedEventHandler(object sender, UpdatePmmuLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePmmuLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePmmuLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateRequestStatusCompletedEventHandler(object sender, UpdateRequestStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRequestStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRequestStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadApprovalQRDocumentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadAttachedDocumentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ValidateOTPCompletedEventHandler(object sender, ValidateOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ValidateRequiredDocumentsCompletedEventHandler(object sender, ValidateRequiredDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateRequiredDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateRequiredDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ValidateRequiredFields_637680746CompletedEventHandler(object sender, ValidateRequiredFields_637680746CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateRequiredFields_637680746CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateRequiredFields_637680746CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ValidateRequiredFields_1019673509CompletedEventHandler(object sender, ValidateRequiredFields_1019673509CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateRequiredFields_1019673509CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateRequiredFields_1019673509CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ValidateVesselDataCompletedEventHandler(object sender, ValidateVesselDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateVesselDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateVesselDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void VoidEftCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void WorkshopAdvancePerMonthCompletedEventHandler(object sender, WorkshopAdvancePerMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkshopAdvancePerMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkshopAdvancePerMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addAbilityDetailsCompletedEventHandler(object sender, addAbilityDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addAbilityDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addAbilityDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addAcademicQualificationsForExternalApplcantsCompletedEventHandler(object sender, addAcademicQualificationsForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addAcademicQualificationsForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addAcademicQualificationsForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addAcademicQualificationsCompletedEventHandler(object sender, addAcademicQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addAcademicQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addAcademicQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addApplicantAccomplishmentCompletedEventHandler(object sender, addApplicantAccomplishmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addApplicantAccomplishmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addApplicantAccomplishmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addCasualsCompletedEventHandler(object sender, addCasualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCasualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCasualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addCurrentDutiesSkillsCompletedEventHandler(object sender, addCurrentDutiesSkillsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCurrentDutiesSkillsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCurrentDutiesSkillsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addDeclarationCompletedEventHandler(object sender, addDeclarationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDeclarationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDeclarationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addDutiesDetailsCompletedEventHandler(object sender, addDutiesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDutiesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDutiesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addEmploymentHistoryForExternalApplcantsCompletedEventHandler(object sender, addEmploymentHistoryForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addEmploymentHistoryForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addEmploymentHistoryForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addEmploymentHistoryCompletedEventHandler(object sender, addEmploymentHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addEmploymentHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addEmploymentHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addFavouriteJobsCompletedEventHandler(object sender, addFavouriteJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addFavouriteJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addFavouriteJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addFileLinksCompletedEventHandler(object sender, addFileLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addFileLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addFileLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addFleetRequisitionNonStaffCompletedEventHandler(object sender, addFleetRequisitionNonStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addFleetRequisitionNonStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addFleetRequisitionNonStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addFleetRequisitionSharepointLinksCompletedEventHandler(object sender, addFleetRequisitionSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addFleetRequisitionSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addFleetRequisitionSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addFleetRequisitionStaffCompletedEventHandler(object sender, addFleetRequisitionStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addFleetRequisitionStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addFleetRequisitionStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addFuelCompletedEventHandler(object sender, addFuelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addFuelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addFuelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addHobbyCompletedEventHandler(object sender, addHobbyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addHobbyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addHobbyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addImprestSharepointLinksCompletedEventHandler(object sender, addImprestSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addImprestSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addImprestSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addImprestSurrenderSharepointLinksCompletedEventHandler(object sender, addImprestSurrenderSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addImprestSurrenderSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addImprestSurrenderSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addLeaveSharepointLinksCompletedEventHandler(object sender, addLeaveSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addLeaveSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addLeaveSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addOtherCostsCompletedEventHandler(object sender, addOtherCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addOtherCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addOtherCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addOtherPersonalDetailsCompletedEventHandler(object sender, addOtherPersonalDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addOtherPersonalDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addOtherPersonalDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addPettyCashRequisitionLinesCompletedEventHandler(object sender, addPettyCashRequisitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPettyCashRequisitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPettyCashRequisitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addPettyCashSharepointLinksCompletedEventHandler(object sender, addPettyCashSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPettyCashSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPettyCashSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addPettyCashSurrenderSharepointLinksCompletedEventHandler(object sender, addPettyCashSurrenderSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPettyCashSurrenderSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPettyCashSurrenderSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addProfessionalBodyForExternalApplcantsCompletedEventHandler(object sender, addProfessionalBodyForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addProfessionalBodyForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addProfessionalBodyForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addProfessionalBodyCompletedEventHandler(object sender, addProfessionalBodyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addProfessionalBodyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addProfessionalBodyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addProffessionalQualificationsForExternalApplcantsCompletedEventHandler(object sender, addProffessionalQualificationsForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addProffessionalQualificationsForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addProffessionalQualificationsForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addProffessionalQualificationsCompletedEventHandler(object sender, addProffessionalQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addProffessionalQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addProffessionalQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addProjectDetailsCompletedEventHandler(object sender, addProjectDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addProjectDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addProjectDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addPurchaseRequisitionSharepointLinksCompletedEventHandler(object sender, addPurchaseRequisitionSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPurchaseRequisitionSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPurchaseRequisitionSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addQualificationCompletedEventHandler(object sender, addQualificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addQualificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addQualificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addRefereeCompletedEventHandler(object sender, addRefereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addRefereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addRefereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addStaffClaimSharepointLinksCompletedEventHandler(object sender, addStaffClaimSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addStaffClaimSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addStaffClaimSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addStoreRequsitionSharepointLinksCompletedEventHandler(object sender, addStoreRequsitionSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addStoreRequsitionSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addStoreRequsitionSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addTeamMember1CompletedEventHandler(object sender, addTeamMember1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTeamMember1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTeamMember1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addTeamMemberCompletedEventHandler(object sender, addTeamMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTeamMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTeamMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addTrainingAttendedForExternalApplcantsCompletedEventHandler(object sender, addTrainingAttendedForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrainingAttendedForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrainingAttendedForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addTrainingAttendedCompletedEventHandler(object sender, addTrainingAttendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrainingAttendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrainingAttendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addTrainingCost2CompletedEventHandler(object sender, addTrainingCost2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrainingCost2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrainingCost2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addTrainingCostCompletedEventHandler(object sender, addTrainingCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrainingCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrainingCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addTrainingParticipants2CompletedEventHandler(object sender, addTrainingParticipants2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrainingParticipants2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrainingParticipants2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addTrainingParticipantsCompletedEventHandler(object sender, addTrainingParticipantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrainingParticipantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrainingParticipantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void addTrainingRequisitionSharepointLinksCompletedEventHandler(object sender, addTrainingRequisitionSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTrainingRequisitionSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTrainingRequisitionSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void applyOnlineCompletedEventHandler(object sender, applyOnlineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class applyOnlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal applyOnlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void applyCompletedEventHandler(object sender, applyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class applyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal applyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void applyexternalHrJobsCompletedEventHandler(object sender, applyexternalHrJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class applyexternalHrJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal applyexternalHrJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void applyexternalJobCompletedEventHandler(object sender, applyexternalJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class applyexternalJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal applyexternalJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void applyinternalHrJobsCompletedEventHandler(object sender, applyinternalHrJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class applyinternalHrJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal applyinternalHrJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void cancelImprestApprovalRequestCompletedEventHandler(object sender, cancelImprestApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelImprestApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelImprestApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void cancelPasApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void cancelPettyCashSurrenderApprovalCompletedEventHandler(object sender, cancelPettyCashSurrenderApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelPettyCashSurrenderApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelPettyCashSurrenderApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void cancelRecordApprovalCompletedEventHandler(object sender, cancelRecordApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelRecordApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelRecordApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void cancelTrainingRequestApprovalCompletedEventHandler(object sender, cancelTrainingRequestApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelTrainingRequestApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelTrainingRequestApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void changePasswordCompletedEventHandler(object sender, changePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createDependantsChangeCompletedEventHandler(object sender, createDependantsChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createDependantsChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createDependantsChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createEmployeeExitVoucherCompletedEventHandler(object sender, createEmployeeExitVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createEmployeeExitVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createEmployeeExitVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createFeedbackFormCompletedEventHandler(object sender, createFeedbackFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createFeedbackFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createFeedbackFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createFleetRequisitionCompletedEventHandler(object sender, createFleetRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createFleetRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createFleetRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createIctRequestCompletedEventHandler(object sender, createIctRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createIctRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createIctRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createImprestSurrender1CompletedEventHandler(object sender, createImprestSurrender1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createImprestSurrender1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createImprestSurrender1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createImprestSurrenderCompletedEventHandler(object sender, createImprestSurrenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createImprestSurrenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createImprestSurrenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createLPODirectlyCompletedEventHandler(object sender, createLPODirectlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createLPODirectlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createLPODirectlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createLoansApplicationCompletedEventHandler(object sender, createLoansApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createLoansApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createLoansApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createNewPaymentVoucherCompletedEventHandler(object sender, createNewPaymentVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewPaymentVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewPaymentVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createNewPettyCashRequisitionCompletedEventHandler(object sender, createNewPettyCashRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewPettyCashRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewPettyCashRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createNewTrainingEvaluationCompletedEventHandler(object sender, createNewTrainingEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewTrainingEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewTrainingEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createNewTrainingFeedbackCompletedEventHandler(object sender, createNewTrainingFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewTrainingFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewTrainingFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createNewTrainingNeedsLinesCompletedEventHandler(object sender, createNewTrainingNeedsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewTrainingNeedsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewTrainingNeedsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createNewTrainingRequestCompletedEventHandler(object sender, createNewTrainingRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewTrainingRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewTrainingRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createPaymentVoucherLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createPettyCashLinesCompletedEventHandler(object sender, createPettyCashLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPettyCashLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPettyCashLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createPettyCashCompletedEventHandler(object sender, createPettyCashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPettyCashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPettyCashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createProfileForExternalApplicantsCompletedEventHandler(object sender, createProfileForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createProfileForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createProfileForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createPurchaseReqLineCompletedEventHandler(object sender, createPurchaseReqLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPurchaseReqLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPurchaseReqLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createPurchaseReqCompletedEventHandler(object sender, createPurchaseReqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPurchaseReqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPurchaseReqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createPurchaseRequisitionCompletedEventHandler(object sender, createPurchaseRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPurchaseRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPurchaseRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createPurchaseStoreRequisitionCompletedEventHandler(object sender, createPurchaseStoreRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPurchaseStoreRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPurchaseStoreRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createRefereeForExternalApplcantsCompletedEventHandler(object sender, createRefereeForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createRefereeForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createRefereeForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createRefereeCompletedEventHandler(object sender, createRefereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createRefereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createRefereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createRequisitionLine1CompletedEventHandler(object sender, createRequisitionLine1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createRequisitionLine1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createRequisitionLine1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createRequisitionLineCompletedEventHandler(object sender, createRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createStaffClaim1CompletedEventHandler(object sender, createStaffClaim1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createStaffClaim1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createStaffClaim1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createStaffClaimLineCompletedEventHandler(object sender, createStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createStaffClaimCompletedEventHandler(object sender, createStaffClaimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createStaffClaimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createStaffClaimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createTrainingFeedbackLinesCompletedEventHandler(object sender, createTrainingFeedbackLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createTrainingFeedbackLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createTrainingFeedbackLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createTrainingRequisitionCompletedEventHandler(object sender, createTrainingRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createTrainingRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createTrainingRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createVehicleIncidenceCompletedEventHandler(object sender, createVehicleIncidenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createVehicleIncidenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createVehicleIncidenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createWelfareIncidenceCompletedEventHandler(object sender, createWelfareIncidenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createWelfareIncidenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createWelfareIncidenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createWelfareIncidentCompletedEventHandler(object sender, createWelfareIncidentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createWelfareIncidentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createWelfareIncidentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createstandardpurchasereqCompletedEventHandler(object sender, createstandardpurchasereqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createstandardpurchasereqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createstandardpurchasereqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteAcademicLineForExternalApplicantsCompletedEventHandler(object sender, deleteAcademicLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAcademicLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAcademicLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteAcademicLineCompletedEventHandler(object sender, deleteAcademicLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAcademicLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAcademicLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteAttachDocsCompletedEventHandler(object sender, deleteAttachDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAttachDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAttachDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteEmploymentHistoryLineForExternalApplicantsCompletedEventHandler(object sender, deleteEmploymentHistoryLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteEmploymentHistoryLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteEmploymentHistoryLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteEmploymentHistoryLineCompletedEventHandler(object sender, deleteEmploymentHistoryLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteEmploymentHistoryLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteEmploymentHistoryLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteEquipmentSpecificationsCompletedEventHandler(object sender, deleteEquipmentSpecificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteEquipmentSpecificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteEquipmentSpecificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteFavouriteJobsCompletedEventHandler(object sender, deleteFavouriteJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteFavouriteJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteFavouriteJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deletePersonnelSpecificationsCompletedEventHandler(object sender, deletePersonnelSpecificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deletePersonnelSpecificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deletePersonnelSpecificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deletePettyCashLinesCompletedEventHandler(object sender, deletePettyCashLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deletePettyCashLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deletePettyCashLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deletePettyCashRequisitionLinesCompletedEventHandler(object sender, deletePettyCashRequisitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deletePettyCashRequisitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deletePettyCashRequisitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteProfessionalLineForExternalApplicantsCompletedEventHandler(object sender, deleteProfessionalLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteProfessionalLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteProfessionalLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteProfessionalLineCompletedEventHandler(object sender, deleteProfessionalLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteProfessionalLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteProfessionalLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteProffessionalBodyLineForExternalApplicantsCompletedEventHandler(object sender, deleteProffessionalBodyLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteProffessionalBodyLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteProffessionalBodyLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteProffessionalBodyLineCompletedEventHandler(object sender, deleteProffessionalBodyLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteProffessionalBodyLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteProffessionalBodyLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deletePurchaseRequisitionLinesCompletedEventHandler(object sender, deletePurchaseRequisitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deletePurchaseRequisitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deletePurchaseRequisitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteRefereeLineForExternalApplicantsCompletedEventHandler(object sender, deleteRefereeLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteRefereeLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteRefereeLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteRefereeLineCompletedEventHandler(object sender, deleteRefereeLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteRefereeLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteRefereeLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteRequisitionLineCompletedEventHandler(object sender, deleteRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteStaffClaimLineCompletedEventHandler(object sender, deleteStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteTrainingLineForExternalApplicantsCompletedEventHandler(object sender, deleteTrainingLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrainingLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrainingLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteTrainingLineCompletedEventHandler(object sender, deleteTrainingLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrainingLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrainingLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteTrainingParticipants2CompletedEventHandler(object sender, deleteTrainingParticipants2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrainingParticipants2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrainingParticipants2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteTrainingParticipantsCompletedEventHandler(object sender, deleteTrainingParticipantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrainingParticipantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrainingParticipantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteTrainingcost2CompletedEventHandler(object sender, deleteTrainingcost2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrainingcost2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrainingcost2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void deleteTrainingcostsCompletedEventHandler(object sender, deleteTrainingcostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteTrainingcostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteTrainingcostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void editCasualsCompletedEventHandler(object sender, editCasualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editCasualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editCasualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void editFuelCompletedEventHandler(object sender, editFuelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editFuelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editFuelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void editHelpDeskRequestCompletedEventHandler(object sender, editHelpDeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editHelpDeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editHelpDeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void editOtherCostsCompletedEventHandler(object sender, editOtherCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editOtherCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editOtherCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void editPaymentVoucherLinesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void editPettyCashLinesCompletedEventHandler(object sender, editPettyCashLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editPettyCashLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editPettyCashLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void editPettyCashRequisitionLines2CompletedEventHandler(object sender, editPettyCashRequisitionLines2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editPettyCashRequisitionLines2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editPettyCashRequisitionLines2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void editPettyCashSurrenderLinesCompletedEventHandler(object sender, editPettyCashSurrenderLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editPettyCashSurrenderLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editPettyCashSurrenderLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void editStaffClaimLineCompletedEventHandler(object sender, editStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void editTeamMemberCompletedEventHandler(object sender, editTeamMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editTeamMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editTeamMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void editTrainingParticipants2CompletedEventHandler(object sender, editTrainingParticipants2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editTrainingParticipants2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editTrainingParticipants2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void editTrainingParticipantsCompletedEventHandler(object sender, editTrainingParticipantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editTrainingParticipantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editTrainingParticipantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void exportWorkplanCompletedEventHandler(object sender, exportWorkplanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exportWorkplanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exportWorkplanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnApproveRequestCompletedEventHandler(object sender, fnApproveRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnApproveRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnApproveRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCancelFuelRequistionApprovalCompletedEventHandler(object sender, fnCancelFuelRequistionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCancelFuelRequistionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCancelFuelRequistionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCancelImprestMemoApprovalCompletedEventHandler(object sender, fnCancelImprestMemoApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCancelImprestMemoApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCancelImprestMemoApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCancelImprestSurrenderApprovalCompletedEventHandler(object sender, fnCancelImprestSurrenderApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCancelImprestSurrenderApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCancelImprestSurrenderApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCancelLPOApprovalCompletedEventHandler(object sender, fnCancelLPOApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCancelLPOApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCancelLPOApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCancelMaintenanceRequistionApprovalCompletedEventHandler(object sender, fnCancelMaintenanceRequistionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCancelMaintenanceRequistionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCancelMaintenanceRequistionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCancelPaymentVoucherApprovalCompletedEventHandler(object sender, fnCancelPaymentVoucherApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCancelPaymentVoucherApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCancelPaymentVoucherApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCancelPlogApprovalCompletedEventHandler(object sender, fnCancelPlogApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCancelPlogApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCancelPlogApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCancelPurchaseRequisitionApprovalCompletedEventHandler(object sender, fnCancelPurchaseRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCancelPurchaseRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCancelPurchaseRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCancelStaffPerformanceContractCompletedEventHandler(object sender, fnCancelStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCancelStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCancelStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCancelStoreReqApprovalCompletedEventHandler(object sender, fnCancelStoreReqApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCancelStoreReqApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCancelStoreReqApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCancelSubmitofStandardAppraisalCompletedEventHandler(object sender, fnCancelSubmitofStandardAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCancelSubmitofStandardAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCancelSubmitofStandardAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnChangePasswordCompletedEventHandler(object sender, fnChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnConvertFileCompletedEventHandler(object sender, fnConvertFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnConvertFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnConvertFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCreateFolderCompletedEventHandler(object sender, fnCreateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCreateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCreateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCreateFuelRequistionCompletedEventHandler(object sender, fnCreateFuelRequistionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCreateFuelRequistionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCreateFuelRequistionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCreateMaintenanceRequistionCompletedEventHandler(object sender, fnCreateMaintenanceRequistionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCreateMaintenanceRequistionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCreateMaintenanceRequistionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCreateStoreReqLineCompletedEventHandler(object sender, fnCreateStoreReqLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCreateStoreReqLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCreateStoreReqLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnCreateStoreRequisitionCompletedEventHandler(object sender, fnCreateStoreRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCreateStoreRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCreateStoreRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnDeleteStaffClaimsLinesCompletedEventHandler(object sender, fnDeleteStaffClaimsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnDeleteStaffClaimsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnDeleteStaffClaimsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnDeleteStaffClaimsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnDeleteStoreReqLineCompletedEventHandler(object sender, fnDeleteStoreReqLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnDeleteStoreReqLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnDeleteStoreReqLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnDeleteTrainingFeedbackLinesCompletedEventHandler(object sender, fnDeleteTrainingFeedbackLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnDeleteTrainingFeedbackLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnDeleteTrainingFeedbackLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnDeleteTrainingNeedsLinesCompletedEventHandler(object sender, fnDeleteTrainingNeedsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnDeleteTrainingNeedsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnDeleteTrainingNeedsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnEditStandardAppraisalPIPCompletedEventHandler(object sender, fnEditStandardAppraisalPIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnEditStandardAppraisalPIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnEditStandardAppraisalPIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnEditStandardAppraisalTrainigNeedsCompletedEventHandler(object sender, fnEditStandardAppraisalTrainigNeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnEditStandardAppraisalTrainigNeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnEditStandardAppraisalTrainigNeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnEditTrainingFeedbackLinesCompletedEventHandler(object sender, fnEditTrainingFeedbackLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnEditTrainingFeedbackLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnEditTrainingFeedbackLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnEditTrainingNeedsRequestLinesCompletedEventHandler(object sender, fnEditTrainingNeedsRequestLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnEditTrainingNeedsRequestLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnEditTrainingNeedsRequestLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGenerateAWPReportCompletedEventHandler(object sender, fnGenerateAWPReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGenerateAWPReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGenerateAWPReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGenerateBoardPCReportCompletedEventHandler(object sender, fnGenerateBoardPCReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGenerateBoardPCReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGenerateBoardPCReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGenerateCSPReportCompletedEventHandler(object sender, fnGenerateCSPReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGenerateCSPReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGenerateCSPReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGenerateIndividualPcReportCompletedEventHandler(object sender, fnGenerateIndividualPcReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGenerateIndividualPcReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGenerateIndividualPcReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGenerateIndividualPcSubIndicatorReportCompletedEventHandler(object sender, fnGenerateIndividualPcSubIndicatorReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGenerateIndividualPcSubIndicatorReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGenerateIndividualPcSubIndicatorReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGenerateOTPCompletedEventHandler(object sender, fnGenerateOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGenerateOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGenerateOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGeneratePlogReportCompletedEventHandler(object sender, fnGeneratePlogReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGeneratePlogReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGeneratePlogReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGenerateStandardAppraisalReportCompletedEventHandler(object sender, fnGenerateStandardAppraisalReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGenerateStandardAppraisalReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGenerateStandardAppraisalReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGenerateTrainingApplicationReportCompletedEventHandler(object sender, fnGenerateTrainingApplicationReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGenerateTrainingApplicationReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGenerateTrainingApplicationReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGenerateTrainingEvaluationReport1CompletedEventHandler(object sender, fnGenerateTrainingEvaluationReport1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGenerateTrainingEvaluationReport1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGenerateTrainingEvaluationReport1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGenerateTrainingFeedbackReportCompletedEventHandler(object sender, fnGenerateTrainingFeedbackReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGenerateTrainingFeedbackReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGenerateTrainingFeedbackReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGenerateTrainingPlanReportCompletedEventHandler(object sender, fnGenerateTrainingPlanReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGenerateTrainingPlanReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGenerateTrainingPlanReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGetAnnualWorkplanLinesCompletedEventHandler(object sender, fnGetAnnualWorkplanLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGetAnnualWorkplanLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGetAnnualWorkplanLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGetPlogLinesCompletedEventHandler(object sender, fnGetPlogLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGetPlogLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGetPlogLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGetSubPlogLinesCompletedEventHandler(object sender, fnGetSubPlogLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGetSubPlogLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGetSubPlogLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnGetUserIDCompletedEventHandler(object sender, fnGetUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGetUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGetUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnInsertAgenciesCompletedEventHandler(object sender, fnInsertAgenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnInsertAgenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnInsertAgenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnInsertEducationInfoCompletedEventHandler(object sender, fnInsertEducationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnInsertEducationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnInsertEducationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnInsertEmploymentHistCompletedEventHandler(object sender, fnInsertEmploymentHistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnInsertEmploymentHistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnInsertEmploymentHistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnInsertEvaluationLinesCompletedEventHandler(object sender, fnInsertEvaluationLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnInsertEvaluationLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnInsertEvaluationLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnInsertHelpDeskIssueCompletedEventHandler(object sender, fnInsertHelpDeskIssueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnInsertHelpDeskIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnInsertHelpDeskIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnInsertJDTargetsCompletedEventHandler(object sender, fnInsertJDTargetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnInsertJDTargetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnInsertJDTargetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnInsertMembershipSummaryCompletedEventHandler(object sender, fnInsertMembershipSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnInsertMembershipSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnInsertMembershipSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnInsertPlogSubActivitiesCompletedEventHandler(object sender, fnInsertPlogSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnInsertPlogSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnInsertPlogSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnInsertProcurementProfessionalsCompletedEventHandler(object sender, fnInsertProcurementProfessionalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnInsertProcurementProfessionalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnInsertProcurementProfessionalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnInsertSelectedAdditionalActivitiesCompletedEventHandler(object sender, fnInsertSelectedAdditionalActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnInsertSelectedAdditionalActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnInsertSelectedAdditionalActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnInsertStaffClaimsLinesCompletedEventHandler(object sender, fnInsertStaffClaimsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnInsertStaffClaimsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnInsertStaffClaimsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnInsertStaffClaimsCompletedEventHandler(object sender, fnInsertStaffClaimsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnInsertStaffClaimsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnInsertStaffClaimsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnInsertStandardAppraisalPIPCompletedEventHandler(object sender, fnInsertStandardAppraisalPIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnInsertStandardAppraisalPIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnInsertStandardAppraisalPIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnInsertStandardAppraisalTrainigNeedsCompletedEventHandler(object sender, fnInsertStandardAppraisalTrainigNeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnInsertStandardAppraisalTrainigNeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnInsertStandardAppraisalTrainigNeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnLockStaffPerformanceContractCompletedEventHandler(object sender, fnLockStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnLockStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnLockStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnLoginCompletedEventHandler(object sender, fnLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnMergePdfsCompletedEventHandler(object sender, fnMergePdfsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnMergePdfsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnMergePdfsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnModifyStaffClaimsLinesCompletedEventHandler(object sender, fnModifyStaffClaimsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnModifyStaffClaimsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnModifyStaffClaimsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnModifyStaffClaimsCompletedEventHandler(object sender, fnModifyStaffClaimsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnModifyStaffClaimsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnModifyStaffClaimsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnNewStaffPerformanceContractCompletedEventHandler(object sender, fnNewStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnNewStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnNewStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnPasswordResetCompletedEventHandler(object sender, fnPasswordResetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnPasswordResetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnPasswordResetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnProcPlanReportCompletedEventHandler(object sender, fnProcPlanReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnProcPlanReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnProcPlanReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnRegistrationCompletedEventHandler(object sender, fnRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnRemoveAditionalInitiativeCompletedEventHandler(object sender, fnRemoveAditionalInitiativeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnRemoveAditionalInitiativeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnRemoveAditionalInitiativeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnRemoveAgenciesCompletedEventHandler(object sender, fnRemoveAgenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnRemoveAgenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnRemoveAgenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnRemoveEducationInfoCompletedEventHandler(object sender, fnRemoveEducationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnRemoveEducationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnRemoveEducationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnRemoveEmploymentHistCompletedEventHandler(object sender, fnRemoveEmploymentHistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnRemoveEmploymentHistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnRemoveEmploymentHistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnRemoveMembershipSummaryCompletedEventHandler(object sender, fnRemoveMembershipSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnRemoveMembershipSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnRemoveMembershipSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnRemoveProcurementProfessionalsCompletedEventHandler(object sender, fnRemoveProcurementProfessionalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnRemoveProcurementProfessionalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnRemoveProcurementProfessionalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnRemoveStandardAppraisalPIPCompletedEventHandler(object sender, fnRemoveStandardAppraisalPIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnRemoveStandardAppraisalPIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnRemoveStandardAppraisalPIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnRemoveStandardAppraisalTrainigNeedsCompletedEventHandler(object sender, fnRemoveStandardAppraisalTrainigNeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnRemoveStandardAppraisalTrainigNeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnRemoveStandardAppraisalTrainigNeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnRequestEmailVerificationOTPCompletedEventHandler(object sender, fnRequestEmailVerificationOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnRequestEmailVerificationOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnRequestEmailVerificationOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnRequestLoginOTPCompletedEventHandler(object sender, fnRequestLoginOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnRequestLoginOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnRequestLoginOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnSaveAditionalInitiativesCompletedEventHandler(object sender, fnSaveAditionalInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSaveAditionalInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSaveAditionalInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnSelectPracticeCatgeoriesCompletedEventHandler(object sender, fnSelectPracticeCatgeoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSelectPracticeCatgeoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSelectPracticeCatgeoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnSendAppraisalEmailCompletedEventHandler(object sender, fnSendAppraisalEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSendAppraisalEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSendAppraisalEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnSendHelpDeskRequestCompletedEventHandler(object sender, fnSendHelpDeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSendHelpDeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSendHelpDeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnSendImprestSurrenderApprovalCompletedEventHandler(object sender, fnSendImprestSurrenderApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSendImprestSurrenderApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSendImprestSurrenderApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnSendPaymentVoucherApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnSendPlogApprovalCompletedEventHandler(object sender, fnSendPlogApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSendPlogApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSendPlogApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnSendStaffPerformanceContractApprovalCompletedEventHandler(object sender, fnSendStaffPerformanceContractApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSendStaffPerformanceContractApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSendStaffPerformanceContractApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnSendStoreReqApprovalCompletedEventHandler(object sender, fnSendStoreReqApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSendStoreReqApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSendStoreReqApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnSignStaffPerformanceContractCompletedEventHandler(object sender, fnSignStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSignStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSignStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnStoreOTPCompletedEventHandler(object sender, fnStoreOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnStoreOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnStoreOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnSubmitStandardAppraisalConfirmationCompletedEventHandler(object sender, fnSubmitStandardAppraisalConfirmationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSubmitStandardAppraisalConfirmationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSubmitStandardAppraisalConfirmationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnSubmitStandardAppraisalObjCompletedEventHandler(object sender, fnSubmitStandardAppraisalObjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSubmitStandardAppraisalObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSubmitStandardAppraisalObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnSubmitStandardAppraisalPECompletedEventHandler(object sender, fnSubmitStandardAppraisalPECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSubmitStandardAppraisalPECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSubmitStandardAppraisalPECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnSubmitStandardAppraisalCompletedEventHandler(object sender, fnSubmitStandardAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSubmitStandardAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSubmitStandardAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnSuggestPlogandSubPlogDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnUpdateAgenciesCompletedEventHandler(object sender, fnUpdateAgenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnUpdateAgenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnUpdateAgenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnUpdateEducationInfoCompletedEventHandler(object sender, fnUpdateEducationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnUpdateEducationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnUpdateEducationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnUpdateEmploymentHistCompletedEventHandler(object sender, fnUpdateEmploymentHistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnUpdateEmploymentHistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnUpdateEmploymentHistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnUpdateHelpDeskIssueCompletedEventHandler(object sender, fnUpdateHelpDeskIssueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnUpdateHelpDeskIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnUpdateHelpDeskIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnUpdateMembershipSummaryCompletedEventHandler(object sender, fnUpdateMembershipSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnUpdateMembershipSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnUpdateMembershipSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnUpdateProcurementProfessionalsCompletedEventHandler(object sender, fnUpdateProcurementProfessionalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnUpdateProcurementProfessionalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnUpdateProcurementProfessionalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnUpdateStoreReqLineCompletedEventHandler(object sender, fnUpdateStoreReqLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnUpdateStoreReqLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnUpdateStoreReqLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnUpdateUserAgreementCompletedEventHandler(object sender, fnUpdateUserAgreementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnUpdateUserAgreementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnUpdateUserAgreementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnUpdateUserBankruptcyOrConvictionCompletedEventHandler(object sender, fnUpdateUserBankruptcyOrConvictionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnUpdateUserBankruptcyOrConvictionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnUpdateUserBankruptcyOrConvictionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnUpdateUserEmploymentHistCompletedEventHandler(object sender, fnUpdateUserEmploymentHistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnUpdateUserEmploymentHistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnUpdateUserEmploymentHistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnUpdateUserMembershipCompletedEventHandler(object sender, fnUpdateUserMembershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnUpdateUserMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnUpdateUserMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnUpdateUserOtherPracticesCompletedEventHandler(object sender, fnUpdateUserOtherPracticesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnUpdateUserOtherPracticesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnUpdateUserOtherPracticesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnUpdateUserProfileCompletedEventHandler(object sender, fnUpdateUserProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnUpdateUserProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnUpdateUserProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnUpdateUserSelfEmployedCompletedEventHandler(object sender, fnUpdateUserSelfEmployedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnUpdateUserSelfEmployedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnUpdateUserSelfEmployedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnUploadLicenceRegistrationDocsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnVerifyEmailAddressCompletedEventHandler(object sender, fnVerifyEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnVerifyEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnVerifyEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnVerifyLoginOTPCompletedEventHandler(object sender, fnVerifyLoginOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnVerifyLoginOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnVerifyLoginOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fncreatePurchaseRequisitionCompletedEventHandler(object sender, fncreatePurchaseRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fncreatePurchaseRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fncreatePurchaseRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnsendFuelRequistionForApprovalCompletedEventHandler(object sender, fnsendFuelRequistionForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnsendFuelRequistionForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnsendFuelRequistionForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void fnsendMaintenanceRequistionForApprovalCompletedEventHandler(object sender, fnsendMaintenanceRequistionForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnsendMaintenanceRequistionForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnsendMaintenanceRequistionForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void forgotPasswordtForExtenalApplicantsCompletedEventHandler(object sender, forgotPasswordtForExtenalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forgotPasswordtForExtenalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forgotPasswordtForExtenalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void generateCommitmentReportCompletedEventHandler(object sender, generateCommitmentReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateCommitmentReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateCommitmentReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void generateEmployeeStatementCompletedEventHandler(object sender, generateEmployeeStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateEmployeeStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateEmployeeStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void generateFleetRequisitionCompletedEventHandler(object sender, generateFleetRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateFleetRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateFleetRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void generateImprestMemoCompletedEventHandler(object sender, generateImprestMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateImprestMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateImprestMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void generateIssueVoucherCompletedEventHandler(object sender, generateIssueVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateIssueVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateIssueVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void generateLeaveFormCompletedEventHandler(object sender, generateLeaveFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateLeaveFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateLeaveFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void generateP9CompletedEventHandler(object sender, generateP9CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateP9CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateP9CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void generatePayslipCompletedEventHandler(object sender, generatePayslipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generatePayslipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generatePayslipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void generatePettyCashVoucherCompletedEventHandler(object sender, generatePettyCashVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generatePettyCashVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generatePettyCashVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void generatePurchaseReqCompletedEventHandler(object sender, generatePurchaseReqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generatePurchaseReqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generatePurchaseReqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void generatePurchaseRequisitionCompletedEventHandler(object sender, generatePurchaseRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generatePurchaseRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generatePurchaseRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void generateStaffClaimCompletedEventHandler(object sender, generateStaffClaimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateStaffClaimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateStaffClaimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void generateStoreReqReportCompletedEventHandler(object sender, generateStoreReqReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateStoreReqReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateStoreReqReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void generateStoreRequisitionCompletedEventHandler(object sender, generateStoreRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateStoreRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateStoreRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getAdminUnitCodeCompletedEventHandler(object sender, getAdminUnitCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAdminUnitCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAdminUnitCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getCtsOrderCompletedEventHandler(object sender, getCtsOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCtsOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCtsOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getImprestObjectiveCompletedEventHandler(object sender, getImprestObjectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImprestObjectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImprestObjectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getItemDescByLocationCompletedEventHandler(object sender, getItemDescByLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getItemDescByLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getItemDescByLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getItemsByLocationCompletedEventHandler(object sender, getItemsByLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getItemsByLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getItemsByLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getUrlsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void importWorkplanCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void imprestGeneralDetails1CompletedEventHandler(object sender, imprestGeneralDetails1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class imprestGeneralDetails1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal imprestGeneralDetails1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void imprestGeneralDetailsCompletedEventHandler(object sender, imprestGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class imprestGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal imprestGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertAppointmentComittee2CompletedEventHandler(object sender, insertAppointmentComittee2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertAppointmentComittee2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertAppointmentComittee2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertAppointmentComitteeCompletedEventHandler(object sender, insertAppointmentComitteeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertAppointmentComitteeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertAppointmentComitteeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertBudgetAmountsCompletedEventHandler(object sender, insertBudgetAmountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertBudgetAmountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertBudgetAmountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertInputsCompletedEventHandler(object sender, insertInputsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertInputsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertInputsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertPASTrainingNeedsCompletedEventHandler(object sender, insertPASTrainingNeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertPASTrainingNeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertPASTrainingNeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertPMMULinesActivitiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertPlanEntriesCompletedEventHandler(object sender, insertPlanEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertPlanEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertPlanEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void insertWorkingsCompletedEventHandler(object sender, insertWorkingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertWorkingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertWorkingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void leaveApplicationCompletedEventHandler(object sender, leaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class leaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal leaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void reassignDriverCompletedEventHandler(object sender, reassignDriverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reassignDriverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reassignDriverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void registerCompletedEventHandler(object sender, registerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void removeCasualsCompletedEventHandler(object sender, removeCasualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeCasualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeCasualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void removeFuelFromImprestMemoCompletedEventHandler(object sender, removeFuelFromImprestMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeFuelFromImprestMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeFuelFromImprestMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void removeImprestMemoLinesCompletedEventHandler(object sender, removeImprestMemoLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeImprestMemoLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeImprestMemoLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void removeMemberFromImprestMemoCompletedEventHandler(object sender, removeMemberFromImprestMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeMemberFromImprestMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeMemberFromImprestMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void removeNonStaffFromTravelRequisitionCompletedEventHandler(object sender, removeNonStaffFromTravelRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeNonStaffFromTravelRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeNonStaffFromTravelRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void removeOtherCostsCompletedEventHandler(object sender, removeOtherCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeOtherCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeOtherCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void removeStaffFromTravelRequisitionCompletedEventHandler(object sender, removeStaffFromTravelRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeStaffFromTravelRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeStaffFromTravelRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void resetPasswordCompletedEventHandler(object sender, resetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendBudgetRelocationForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendFleetRequisitionApprovalCompletedEventHandler(object sender, sendFleetRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendFleetRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendFleetRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendImprestApprovalRequestCompletedEventHandler(object sender, sendImprestApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendImprestApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendImprestApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendImprestMemoApprovalCompletedEventHandler(object sender, sendImprestMemoApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendImprestMemoApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendImprestMemoApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendImprestRequisitionApprovalCompletedEventHandler(object sender, sendImprestRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendImprestRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendImprestRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendImprestSurrenderApprovalCompletedEventHandler(object sender, sendImprestSurrenderApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendImprestSurrenderApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendImprestSurrenderApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendLPOApprovalCompletedEventHandler(object sender, sendLPOApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendLPOApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendLPOApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendLeaveForApprovalCompletedEventHandler(object sender, sendLeaveForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendLeaveForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendLeaveForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendPasforApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendPayChangeAdviceForApprovalCompletedEventHandler(object sender, sendPayChangeAdviceForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendPayChangeAdviceForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendPayChangeAdviceForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendPettyCashSurrenderApprovalCompletedEventHandler(object sender, sendPettyCashSurrenderApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendPettyCashSurrenderApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendPettyCashSurrenderApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendPurchaseRequisitionApprovalCompletedEventHandler(object sender, sendPurchaseRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendPurchaseRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendPurchaseRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendRecordForApprovalCompletedEventHandler(object sender, sendRecordForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendRecordForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendRecordForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendStaffClaimApprovalCompletedEventHandler(object sender, sendStaffClaimApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendStaffClaimApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendStaffClaimApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendStoreRequisitionApprovalCompletedEventHandler(object sender, sendStoreRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendStoreRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendStoreRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void sendTrainingRequestApprovalCompletedEventHandler(object sender, sendTrainingRequestApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendTrainingRequestApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendTrainingRequestApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void suggestLinesFromRequisitionTemplateCompletedEventHandler(object sender, suggestLinesFromRequisitionTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class suggestLinesFromRequisitionTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal suggestLinesFromRequisitionTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateClaimsBankCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateCommunicationDetailsCompletedEventHandler(object sender, updateCommunicationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCommunicationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCommunicationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateEmpBankDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateEmploymentHistoryCompletedEventHandler(object sender, updateEmploymentHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateEmploymentHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateEmploymentHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateEquipmentSpecificationsCompletedEventHandler(object sender, updateEquipmentSpecificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateEquipmentSpecificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateEquipmentSpecificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateGeneralDetailsCompletedEventHandler(object sender, updateGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateHrBankDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateIctRequestCompletedEventHandler(object sender, updateIctRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateIctRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateIctRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updatePASTrainingNeedsCompletedEventHandler(object sender, updatePASTrainingNeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePASTrainingNeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePASTrainingNeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updatePMMULinesActivitiesCompletedEventHandler(object sender, updatePMMULinesActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePMMULinesActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePMMULinesActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updatePersonalDetailsCompletedEventHandler(object sender, updatePersonalDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePersonalDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePersonalDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updatePersonnelSpecificationsCompletedEventHandler(object sender, updatePersonnelSpecificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePersonnelSpecificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePersonnelSpecificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updatePettyCashSurrenderLineCompletedEventHandler(object sender, updatePettyCashSurrenderLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePettyCashSurrenderLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePettyCashSurrenderLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateReceiptCompletedEventHandler(object sender, updateReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateRequisitionLinesCompletedEventHandler(object sender, updateRequisitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateRequisitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateRequisitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateSurrenderLineCompletedEventHandler(object sender, updateSurrenderLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSurrenderLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSurrenderLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void validateBankAccountCompletedEventHandler(object sender, validateBankAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591