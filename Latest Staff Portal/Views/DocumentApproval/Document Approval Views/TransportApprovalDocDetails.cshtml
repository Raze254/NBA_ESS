@model Latest_Staff_Portal.ViewModel.TransDocument

<style>
    thead {
        background-color: black;
        color: white;
    }

    hr {
        margin: 4px;
    }

    .BtnPadding {
        padding: 1px;
        font-size: 12px;
    }
</style>
<!--
<link href="~/assets/css/Loader.css" rel="stylesheet" />
<div class="loading" align="center" id="divLoader">
    <br />
    <img src="~/assets/images/ajax-loader.gif" alt="" />
</div>
-->
@*<div style="background-color: black;">
        <a href="#" onclick="TransportRequisitionLink();" style="color:yellow"><<< Back To Transport Requisition List</a>
    </div>*@

<div class="card">


    <div class="card-body">
        <div class="row" style="padding: 2px">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        <label style="font-size: 12px; font-weight: bold">Document No</label>
                    </div>
                    <div class="col-md-8">
                        <span class="label label-warning" id="DocNo">@Model.DocHeader.TransportRequisitionNo</span>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        <label style="font-size: 12px; font-weight: bold">Commencement</label>
                    </div>
                    <div class="col-md-8">
                        <span class="label label-warning">@Model.DocHeader.From</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="row" style="padding: 2px">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        <label style="font-size: 12px; font-weight: bold">Destination</label>
                    </div>
                    <div class="col-md-8">
                        <span class="label label-warning">@Model.DocHeader.Destination</span>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        <label style="font-size: 12px; font-weight: bold">Date Requested</label>
                    </div>
                    <div class="col-md-8">
                        <span class="label label-warning">@Model.DocHeader.DateofRequest</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="row" style="padding: 2px">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        <label style="font-size: 12px; font-weight: bold">Date of Trip</label>
                    </div>
                    <div class="col-md-8">
                        <span class="label label-warning">@Model.DocHeader.DateofTrip</span>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        <label style="font-size: 12px; font-weight: bold">No of Days</label>
                    </div>
                    <div class="col-md-8">
                        <span class="label label-warning">@Model.DocHeader.NoofDaysRequested</span>
                    </div>
                </div>
            </div>
        </div>
        <hr/>
        <div class="row" style="padding: 2px">


            <div class="col-md-6">
                <label style="font-size: 12px; font-weight: bold">Purpose</label>
                @Html.TextAreaFor(m => m.DocHeader.Subject, new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd", id = "PurposeTextArea" })
            </div>
        </div>

        <hr/>
        <div class="row" style="padding: 2px">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        <label style="font-size: 12px; font-weight: bold">Vehicle Allocated</label>
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.DocHeader.Vehicle, new SelectList(Model.ListOfVehicles, "Value", "Text", Model.DocHeader.Vehicle), "--Select vehicle--", new { id = "ddlVehicle", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        <label style="font-size: 12px; font-weight: bold">Driver Allocated</label>
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.DocHeader.Driver, new SelectList(Model.ListOfDrivers, "Value", "Text", Model.DocHeader.Driver), "--Select Driver--", new { id = "ddlDriver", @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <hr/>

        <div id="DivRegLines">
            <hr style="border:1px solid black"/>
            <b>Travelling Staff</b>
            <hr/>
            <div id="divPassengerLines"></div>

            <hr style="border:1px solid black"/>
            <div class="row">
                <div class="col-md-12">
                    <b>Attachments</b>
                    <div id="divAttachDocs"></div>
                </div>
            </div>
            <hr style="border:1px solid black"/>

            <hr/>
        </div>
        @*//////////////////////Modal////////////////////////////*@
        <div id="myModal" class="modal fade" tabindex="-1" role="dialog" ke aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title mt-0" id="myModalLabel">
                            <label id="labelF"></label>
                        </h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" id="modalBody">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary waves-effect" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/assets/js/ShowProgression.js"></script>
<script src="~/assets/js/pdfobject.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        document.getElementById("ddlTransportCategory").disabled = true;
        LoadPassengersLines(`@Model.DocHeader.TransportRequisitionNo`, `@Model.DocHeader.Status`);
        //LoadExternalPassengers(`@Model.DocHeader.TransportRequisitionNo`, `@Model.DocHeader.Status`);




        var status = `@Model.DocHeader.Status`;
        HideHeaderEditInput(status);

        var Successmsg = '@Request.RequestContext.HttpContext.Session["SuccessMsg"]';
        if (Successmsg != "") {
            Swal.fire('Success', Successmsg, 'success', true);
            $.ajax({
                type: "POST",
                url: "/Common/NullibySessions"
            });
        }

    });
    var LoadPassengersLines = function (DocNo, Status) {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            contentType: "application/json; charset = utf-8",
            processData: false,
            data: JSON.stringify({ DocNo: DocNo, Status: Status }),
            url: "/Transport/TransportPassengers",
            success: function (data) {
                $("#divPassengerLines").html(data);
                HideProgress();
                GetDocumentAttachments();
            },
            error: function () {
                HideProgress();
                Swal.fire("There is some problem to process your request. Please try after some time");
            }
        });
    };
    var LoadExternalPassengers = function (DocNo, Status) {
       // ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            contentType: "application/json; charset = utf-8",
            processData: false,
            data: JSON.stringify({ DocNo: DocNo, Status: Status }),
            url: "/Transport/TransportExternalPassengers",
            success: function (data) {
                $("#divExternalPassengerLines").html(data);

            },
            error: function () {
                HideProgress();
                Swal.fire("There is some problem to process your request. Please try after some time");
            }
        });
    };
    var GetDocumentAttachments = function () {
        ShowProgress();
        var DocNo = `@Model.DocHeader.TransportRequisitionNo`;
        var Status = `@Model.DocHeader.Status`;
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            contentType: "application/json; charset = utf-8",
            processData: false,
            data: JSON.stringify({ DocNo: DocNo, TableID: 59003, Status: Status}),
            url: "/Common/DocumentAttachments",
            success: function (data) {
                HideProgress();
                $("#divAttachDocs").html(data);
            },
            error: function () {
                HideProgress();
                Swal.fire("There is some problem to process your request. Please try after some time");
            }
        });
    };
    var TransportRequisitionLink = function () {
        ShowProgress();
        window.location = "/Transport/TransportRequisitionList";
    }


        var EditDocument = function () {

            var elementIds = ["PurposeTextArea", "Destination", "Comencement", "DateofRequest", "DateofTrip", "TimeofTrip", "NoofDays", "ImplementingUnit", "RouteCode", "Requisitiontype"];

            if ($("#btnEdit").val() == "Edit Header") {
                $("#btnEdit").val("Cancel");
                elementIds.forEach(function (id) {
                    var element = document.getElementById(id);
                    if (element) {
                        if (element.hasAttribute('readonly')) {
                            element.removeAttribute('readonly');
                            element.style.backgroundColor = '#ffffff';
                        }
                    }
                });

                $("#divtransType").show();
                $("#divRouteCode").show();
                $("#implementingUnitsDiv").show();
                $("#DivUpdateButton").show();
                $("#transType").show();
                $("#ddlRespC").show();
                $("#DivRegLines").hide();
                $("#ImplementingUnit").closest('.col-md-6').hide();
                $("#RouteCode").closest('.col-md-6').hide();
                $("#Requisitiontype").closest('.col-md-6').hide();
            } else {
                $("#btnEdit").val("Edit Header");
                $("#implementingUnitsDiv").hide();
                $("#DivUpdateButton").hide();
                $("#transType").hide();
                $("#ddlRespC").hide();
                $("#divtransType").hide();
                $("#divRouteCode").hide();
                $("#DivRegLines").show();
                elementIds.forEach(function (id) {
                    var element = document.getElementById(id);
                    if (element) {
                        element.setAttribute('readonly', 'readonly');
                        element.style.backgroundColor = '#dedebd';
                    }
                });
                $("#ImplementingUnit").closest('.col-md-6').show();
                $("#RouteCode").closest('.col-md-6').show();
                $("#Requisitiontype").closest('.col-md-6').show();
            }
        }

    var HideHeaderEditInput = function (Status) {
        if (Status == "Open") {
            $("#HideEditButton").show();
            $("#HideLineButton").show();
            $("#DivSendForApproval").show();
        }
        else {
            $("#HideEditButton").hide();
            $("#HideLineButton").hide();
            $("#DivSendForApproval").hide();
        }
        $("#DivUpdateButton").hide();
        $("#DivRegLines").show();
        $("#txtCommence,#txtDestination,#dtPicker,#txtTime,#txtNoOfDays,#txtNoOfExtPass,#txtRemarks").css("background-color", "#dedebd");
        $("#txtCommence,#txtDestination,#dtPicker,#txtTime,#txtNoOfDays,#txtNoOfExtPass,#txtRemarks").attr("readonly", true);

    }

    var UpdateTransportHeader = function () {
        var DocNo = `@Model.DocHeader.TransportRequisitionNo`;
        var Commencement = $("#txtCommence").val();
        var Destination = $("#txtDestination").val();
        //var ResponC = $("#ddlRespC").children("option:selected").val();
        var DateTrip = $("#dtPicker").val();
        var TimeTrip = $("#txtTime").val();
        var NoOfDays = $("#txtNoOfDays").val();
        var NoOfExtPass = $("#txtNoOfExtPass").val();
        var Purpose = $("#txtRemarks").val();
        if (Commencement == "") {
            Swal.fire('error', 'Enter Place of Commencement', 'error');
            return;
        }
        else if (Destination == "") {
            Swal.fire('error', 'Enter Place of Destination', 'error');
            return;
        }
        //else if (ResponC == "") {
        //    Swal.fire('error', 'Select Responsibility Center', 'error');
        //    return;
        //}
        else if (DateTrip == "") {
            Swal.fire('error', 'Select Date of Trip', 'error');
            return;
        }
        else if (TimeTrip == "") {
            Swal.fire('error', 'Select Time of Departure', 'error');
            return;
        }
        else if (NoOfDays == "") {
            Swal.fire('error', 'Enter No of Days', 'error');
            return;
        }
        else if (Purpose == "") {
            Swal.fire('error', 'Enter Purpose of the Trip', 'error');
            return;
        }
        else {
            var NewTransportDocument = {};
            NewTransportDocument.Commencement = Commencement;
            NewTransportDocument.Destination = Destination;
            //NewTransportDocument.RespC = ResponC;
            NewTransportDocument.DateTrip = DateTrip;
            NewTransportDocument.TimeTrip = TimeTrip;
            NewTransportDocument.NoOfDays = NoOfDays;
            NewTransportDocument.NoOfExtPass = NoOfExtPass;
            NewTransportDocument.Purpose = Purpose;
            ShowProgress();
            $.ajax({
                type: "post",
                url: "/Transport/UpdateTransportDocument",
                data: JSON.stringify({ DocNo:DocNo,NewApp: NewTransportDocument }),
                contentType: "application/json; charset = utf-8",
                success: function (data) {
                    if (data.success == true) {
                        HideProgress();
                        HideHeaderEditInput("Open");
                        Swal.fire('Success', data.message, 'success');
                    }
                    else {
                        $("#myModal").modal("hide");
                        HideProgress();
                        Swal.fire('error', data.message, 'error');
                    }
                },
                error: function () {
                    HideProgress();
                    Swal.fire('error', data.message, 'error');
                }
            });
        };
    };
     var AddAttachment = function () {
         $("#labelF").text("File Upload");
        ShowProgress();
        $.ajax({
            async: true,
            type: "GET",
            datatype: "html",
            url: '/Transport/FileUploadForm',
            success: function (data) {
                $("#modalBody").html(data);
                HideProgress();
                $("#myModal").modal("show");
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    };
    var SaveAttachmentFile = function () {
        var DocNo = `@Model.DocHeader.TransportRequisitionNo`;
        var filename; var base64String; var filetype;
        var files = document.getElementById('TransportfileAttachment').files;
        if (files.length) {
            var file = files[0];
            var blob = file.slice();
            filetype = file.type;
            filename = file.name;
            var reader = new FileReader();
            reader.onloadend = function (evt) {
                if (evt.target.readyState == FileReader.DONE) { // DONE == 2
                    var cont = evt.target.result
                    base64String = getB64Str(cont);
                    ShowProgress();
                    //Send the JSON array to Controller using AJAX.
                    $.ajax({
                        type: "POST",
                        url: "/Common/SaveAttachedFile",
                        data: JSON.stringify({ DocNo: DocNo, base64Upload: base64String, fileName: filename, Extn: filetype, TableID: 59003 }),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            if (data.success) {
                                HideProgress();
                                GetDocumentAttachments();
                                $("#myModal").modal("hide");
                                Swal.fire('Success', data.message, 'success');
                            }
                            else {
                                Swal.fire('Warning', data.message, 'warning');
                                HideProgress();
                            }
                        },
                        error: function (err) {
                            HideProgress();
                            Swal.fire('Warning', err, 'warning');
                        }
                    });
                }
            };
            reader.readAsArrayBuffer(blob);
        }
    }
    function getB64Str(buffer) {
        var binary = '';
        var bytes = new Uint8Array(buffer);
        var len = bytes.byteLength;
        for (var i = 0; i < len; i++) {
            binary += String.fromCharCode(bytes[i]);
        }
        return window.btoa(binary);
    }
    var ViewAttachment = function (tbl, No, Id, fName, ext) {
        $.ajaxSetup({ cache: false });
        ShowProgress();
        $.ajax({
            cache: false,
            url: '/Common/DocumentAttachmentview',
            type: "POST",
            datatype: "json",
            cache: false,
            contentType: "application/json; charset = utf-8",
            processData: false,
            data: JSON.stringify({ tblID: tbl, No: No, ID: Id, fileName: fName, ext: ext }),
            success: function (data) {
                if (data.success == true) {
                    if (data.view == true) {
                        var viewer = $("#modalAttachmentBody");
                        if (ext == "pdf") {
                            PDFObject.embed("data:application/" + ext + ";base64," + data.message + "", viewer);
                        }
                        if (ext == "png" || ext == "jpg") {
                            PDFObject.embed("data:image/" + ext + ";base64," + data.message + "", viewer);
                        }
                        $("#myModalAttachment").modal("show");
                        HideProgress();
                    }
                    else {
                        window.location = '/Common/AttachmentDownload?fileName=' + data.message;
                        Swal.fire('Success', 'Document Downloaded successfully', 'success');
                        HideProgress();
                    }
                }
                else {
                    HideProgress();
                    Swal.fire('Warning', data.message, 'warning');
                }
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    };
    var DeleteAttachment = function (tbl, No, Id) {
        $.ajaxSetup({ cache: false });
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.value) {
                ShowProgress();
                $.ajax({
                    cache: false,
                    url: '/Common/DeleteAttachedDocument',
                    datatype: "json",
                    type: "POST",
                    data: JSON.stringify({ DocNo: No, tblID: tbl, DocID: Id }),
                    contentType: "application/json; charset = utf-8",
                    success: function (data) {
                        if (data.success == true) {
                            HideProgress();
                            GetDocumentAttachments();
                            Swal.fire('Success', 'File Deleted Successfully', 'success');
                        }
                        else {
                            HideProgress();
                            Swal.fire('Warning', data.message, 'warning');
                        }
                    },
                    error: function (err) {
                        HideProgress();
                        Swal.fire('Warning', err, 'warning');
                    }
                });
            }
            else {
                Swal.fire('Cancelled', 'Attachment File has not been deleted', 'error');
            }
        });
    };
    var AddPassengerLines = function () {
        $("#labelF").text("Add Traveling Staff");
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Transport/NewPassgerForm',
            success: function (data) {
                $("#modalBody").html(data);
                HideProgress();
                $("#myModal").modal("show");
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    };
  var SubmitPassengerLine = function () {
    var DocNo = '@Model.DocHeader.TransportRequisitionNo'; // Assuming TransportRequisitionNo is a property of your model.
    var date = $("#txtDate").val(); // Get the value from the date input field.
      var noOfDays = $("#txtNoOfDays").val(); // Get the value from the "No of Days" input field.
     // var EmpNo = $("#ddlPassenger").children("option:selected").val();
      var EmpNo = $("#ddlPassenger").children("option:selected").val();


    if (!EmpNo) {
        Swal.fire('Warning', 'Please select a passenger.', 'warning');
        return; // Stop execution if validation fails
    }
    if (!date) {
        Swal.fire('Warning', 'Please select a date.', 'warning');
        return; // Stop execution if validation fails
    }
    if (!noOfDays) {
        Swal.fire('Warning', 'Please enter the number of days.', 'warning');
        return; // Stop execution if validation fails
    }

    // Create a JavaScript object to send to the server
    var travellingStaff = {
        Employee_No: EmpNo,
        Req_No: DocNo,
        Date_of_Trip: date,
        No_of_Days_Requested: noOfDays
    };

    ShowProgress();
    $.ajax({
        type: "POST",
        url: "/Transport/SubmitPassengerLine",
        data: JSON.stringify(travellingStaff), // Send the JavaScript object as JSON string
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (data) {
            if (data.success) {
                HideProgress();
                LoadExternalPassengers(DocNo, 'Open');
                LoadPassengersLines(DocNo, 'Open');

                $("#myModal").modal("hide");
                Swal.fire('Success', data.message, 'success');
            } else {
                Swal.fire('Warning', data.message, 'warning');
                HideProgress();
            }
        },
        error: function (err) {
            HideProgress();
            Swal.fire('Warning', err, 'warning');
        }
    });
}

    var removeStaffFromTravelRequisition = function (DocNo, EmpNo) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.value) {
                ShowProgress();
                $.ajax({
                    type: "POST",
                    url: "/Transport/RemovePassengerLine",
                    data: JSON.stringify({ DocNo: DocNo, PassengerNo: EmpNo }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data.success) {
                            HideProgress();
                            LoadExternalPassengers(DocNo, 'Open');
                            LoadPassengersLines(DocNo, 'Open');

                            $("#myModal").modal("hide");
                            Swal.fire('Success', data.message, 'success');
                        }
                        else {
                            Swal.fire('Warning', data.message, 'warning');
                            HideProgress();
                        }
                    },
                    error: function (err) {
                        HideProgress();
                        Swal.fire('Warning', err, 'warning');
                    }
                });
            }
            else {
                Swal.fire('Cancelled', 'Passenger line has not been deleted', 'error');
            }
        });
    };
var SendDocForApproval = function () {
    var tcategory = $("#ddlTransportCategory").children("option:selected").val();
    if (tcategory == "Outside Nairobi") {
        var rowCount1 = $('#DocumentAttachmnts tbody tr').length;
        if (rowCount1 == 0) {
            Swal.fire('Warning', 'Travel Outside Nairobi should have an attachment', 'warning');
            return;
        }
    }

    var c = $('#ExtPassengerLines tbody tr').length;
    var a = $('#DocumentAttachmnts tbody tr').length;



    if (c ==0) {
        Swal.fire('Warning', 'You have not added any Travelling Staff line(s)', 'warning');
        return;
    }

    if (a ==0 ) {
        Swal.fire('Warning', 'Please add file attachments', 'warning');
        return;
    }

    var DocNo = '@Model.DocHeader.TransportRequisitionNo';
    ShowProgress();
    $.ajax({
        async: true,
        type: "POST",
        dataType: "json",
        data: JSON.stringify({ DocNo: DocNo }),
        contentType: "application/json; charset=utf-8",
        processData: false,
        url: '/Transport/SendDocAppForApproval',
        success: function (data) {
            if (data.success == true) {
                HideProgress();
                HideHeaderEditInput('Pending Approval');
                LoadClaimDocumentLines('@Model.DocHeader.TransportRequisitionNo', 'Pending Approval');
                $("#txtStatus").val("Pending Approval");
                $("#HideEditButton").hide();
                $("#HideLineButton").hide();
                $("#DivSendForApproval").hide();
                Swal.fire('Success', data.message, 'success');
            } else {
                HideProgress();
                Swal.fire('Error', data.message, 'error');
            }
        },
        error: function (xhr, status, error) { // Corrected to capture xhr, status, and error
            HideProgress();
            Swal.fire('Warning', error, 'warning'); // Used error instead of err to access the error message
        }
    });

}


    var FilterDimension2 = function () {
        var Dim1 = $("#ddlDim1").children("option:selected").val();

        if (Dim1 == "") {
            $("#ddlDim2 option").remove();
            $('#ddlDim2').empty().append('<option selected="selected" value="">--Select Project--</option>');
        }
        else {
            // ShowProgress();

            $("#ddlDim2 option").remove();
            $('#ddlDim2').empty().append('<option selected="selected" value="">--Select Project---</option>');

            $.getJSON("/Common/FilterDimension2", { Dim1: Dim1 },
                function (data) {
                    $('#ddlDim2').empty().append('<option selected="selected" value="">--Select Project--</option>');
                    $.each(data.ListOfDim2, function () {
                        $("#ddlDim2").append($("<option></option>").val(this['Value']).html(this['Text']));
                    });
                    //var dname = data.DName;
                    $("#txtDim1").val(data.DName);
                    //  HideProgress();
                });
            $.getJSON("/Common/GetDimensionName", { Dim1: Dim1 },
                function (data) {
                    if (data.DName != null) {
                        $("#txtDim1").text(data.DName);
                        //  $("#txtVacantPosition").text(data.newBal.VacantPositions);
                    }
                    else {
                        Swal.fire('Warning', data.message, 'warning');
                    }
                    // HideProgress();

                });
            FilterDimension6();
            if (Dim1 != "CDC") {
                $("#DivSubprogram").hide();
                $("#DivMCC").hide();
                $("#ddlDim7 option:selected").val('');
                $("#ddlDim6 option:selected").val('');
            }
            else {
                $("#DivSubprogram").show();
                $("#DivMCC").show();
            }

            $("#ddlDim1 option:selected").text($("#ddlDim1").val());
        }
    }
    var FilterDimension3 = function () {
        var Dim1 = $("#ddlDim1").children("option:selected").val();
        var Dim2 = $("#ddlDim2").children("option:selected").val();
        if (Dim1 == "") {
            $("#ddlDim3 option").remove();
            $('#ddlDim3').empty().append('<option selected="selected" value="">--Select Programme--</option>');
        }
        else {
            //ShowProgress();

            $("#ddlDim3 option").remove();
            $('#ddlDim3').empty().append('<option selected="selected" value="">--Select Programme Area---</option>');

            $.getJSON("/Common/FilterDimension3", { Dim1: Dim1, Dim2: Dim2 },
                function (data) {
                    $('#ddlDim3').empty().append('<option selected="selected" value="">--Select Programme Area--</option>');
                    $.each(data.ListOfDim3, function () {
                        $("#ddlDim3").append($("<option></option>").val(this['Value']).html(this['Text']));
                    });
                    //  HideProgress();
                });
            $.getJSON("/Common/GetDimensionName", { Dim1: Dim2 },
                function (data) {
                    if (data.DName != null) {
                        $("#txtDim2").text(data.DName);
                        //  $("#txtVacantPosition").text(data.newBal.VacantPositions);
                    }
                    else {
                        Swal.fire('Warning', data.message, 'warning');
                    }
                    $("#ddlDim2 option:selected").text($("#ddlDim2").val());
                    //HideProgress();
                });

        }
    }
    var FilterDimension4 = function () {
        var Dim1 = $("#ddlDim1").children("option:selected").val();
        var Dim2 = $("#ddlDim2").children("option:selected").val();
        var Dim3 = $("#ddlDim3").children("option:selected").val();
        if (Dim1 == "") {
            $("#ddlDim4 option").remove();
            $('#ddlDim4').empty().append('<option selected="selected" value="">--Select Activity--</option>');
        }
        else {
            ShowProgress();

            $("#ddlDim4 option").remove();
            $('#ddlDim4').empty().append('<option selected="selected" value="">--Select Activity---</option>');

            $.getJSON("/Common/FilterDimension4", { Dim1: Dim1, Dim2: Dim2, Dim3: Dim3 },
                function (data) {
                    $('#ddlDim4').empty().append('<option selected="selected" value="">--Select Activity--</option>');
                    $.each(data.ListOfDim4, function () {
                        $("#ddlDim4").append($("<option></option>").val(this['Value']).html(this['Text']));
                    });
                    HideProgress();
                });

           $.getJSON("/Common/GetDimensionNames", { Dim1: Dim3, DimNo: 3 },
                function (data) {
                    if (data.DName != null) {
                        $("#txtDim3").text(data.DName);
                        //  $("#txtVacantPosition").text(data.newBal.VacantPositions);
                    }
                    else {
                        Swal.fire('Warning', data.message, 'warning');
                    }
                    $("#ddlDim3 option:selected").text($("#ddlDim3").val());
                    HideProgress();
                });
            FilterDimension7();
        }
    }
    var FilterDimension7 = function () {
        var Dim1 = $("#ddlDim1").children("option:selected").val();
        var Dim2 = $("#ddlDim2").children("option:selected").val();
        var Dim3 = $("#ddlDim3").children("option:selected").val();
        if (Dim1 == "") {
            $("#ddlDim7 option").remove();
            $('#ddlDim7').empty().append('<option selected="selected" value="">--Select Sub Program--</option>'); c
        }
        else {
            ShowProgress();
            $("#ddlDim7 option").remove();
            $('#ddlDim7').empty().append('<option selected="selected" value="">--Select Sub Program---</option>');

            $.getJSON("/Common/FilterDimension7", { Dim1: Dim1, Dim3: Dim3 },
                function (data) {
                    $('#ddlDim7').empty().append('<option selected="selected" value="">--Select Sub Program--</option>');
                    $.each(data.ListOfDim7, function () {
                        $("#ddlDim7").append($("<option></option>").val(this['Value']).html(this['Text']));
                    });
                    HideProgress();
                });
        }
    }
    var GetDimension4Name = function () {
        var Dim1 = $("#ddlDim4").children("option:selected").val();
        if (Dim1 == "") {
            $("#ddlDim4 option").remove();
            $('#ddlDim4').empty().append('<option selected="selected" value="">--Select Activity--</option>');
        }
        else {
            ShowProgress();

            $.getJSON("/Common/GetDimensionName", { Dim1: Dim1 },
                function (data) {
                    if (data.DName != null) {
                        $("#txtDim4").text(data.DName);

                    }
                    else {
                        Swal.fire('Warning', data.message, 'warning');
                    }
                    HideProgress();
                    $("#ddlDim4 option:selected").text($("#ddlDim4").val());
                });
        }
    }
    var GetDimension5Name = function () {
        var Dim1 = $("#ddlDim5").children("option:selected").val();
        if (Dim1 == "") {
            $("#ddlDim5 option").remove();
            $('#ddlDim5').empty().append('<option selected="selected" value="">--Select County--</option>');
        }
        else {
            ShowProgress();

            $.getJSON("/Common/GetDimensionName", { Dim1: Dim1 },
                function (data) {
                    if (data.DName != null) {
                        $("#txtDim5").text(data.DName);

                    }
                    else {
                    }
                    HideProgress();

                });
            var dimm = $("#ddlDim5").val();
            console.log(dimm);
            //document.getElementById("ddlDim5").text('Heey');
            //$('#ddlDim5').empty().append();
            $("#ddlDim5 option:selected").text(dimm);
        }
    }
    var GetDimension6Name = function () {
        var Dim1 = $("#ddlDim6").children("option:selected").val();
        if (Dim1 == "") {
            $("#ddlDim6 option").remove();
            $('#ddlDim6').empty().append('<option selected="selected" value="">--Select MCC--</option>');
        }
        else {
            ShowProgress();

            $.getJSON("/Common/GetDimensionName", { Dim1: Dim1 },
                function (data) {
                    if (data.DName != null) {
                        $("#txtDim6").text(data.DName);

                    }
                    else {
                        Swal.fire('Warning', data.message, 'warning');
                    }
                    HideProgress();
                    $("#ddlDim6 option:selected").text($("#ddlDim6").val());

                });
        }
    }
    var GetDimension7Name = function () {
        var Dim1 = $("#ddlDim7").children("option:selected").val();
        if (Dim1 == "") {
            $("#ddlDim7 option").remove();
            $('#ddlDim7').empty().append('<option selected="selected" value="">--Select SubProgram--</option>');
        }
        else {
            ShowProgress();

            $.getJSON("/Common/GetDimensionName", { Dim1: Dim1 },
                function (data) {
                    if (data.DName != null) {
                        $("#txtDim7").text(data.DName);

                    }
                    else {
                        Swal.fire('Warning', data.message, 'warning');
                    }
                    HideProgress();
                    $("#ddlDim7 option:selected").text($("#ddlDim7").val());
                });
        }
    }
    var FilterDimension6 = function () {
        var Dim1 = $("#ddlDim1").children("option:selected").val();

        if (Dim1 == "") {
            $("#ddlDim6 option").remove();
            $('#ddlDim6').empty().append('<option selected="selected" value="">--Select MCC--</option>');
        }
        else {
            // ShowProgress();
            $("#ddlDim6 option").remove();
            $('#ddlDim6').empty().append('<option selected="selected" value="">--Select MCC---</option>');

            $.getJSON("/Common/FilterDimension6", { Dim1: Dim1 },
                function (data) {
                    $('#ddlDim6').empty().append('<option selected="selected" value="">--Select MCC--</option>');
                    $.each(data.ListOfDim6, function () {
                        $("#ddlDim6").append($("<option></option>").val(this['Value']).html(this['Text']));
                    });
                    //  HideProgress();
                });



        }
    }
    function makeEditable(element) {
        element.removeAttribute("readonly");
        element.style.backgroundColor = "transparent";
    }
</script>