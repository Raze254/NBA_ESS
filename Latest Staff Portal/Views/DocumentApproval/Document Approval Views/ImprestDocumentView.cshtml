@model Latest_Staff_Portal.ViewModel.Imprest
<div class="card">
    <div class="card-body">

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("No", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.No, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.No, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Request Date", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.RequestDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.RequestDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Trip No", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.TripNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.TripNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Employee No", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.EmployeeNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.EmployeeNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Employee Name", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Customer AC", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.CustomerAC, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.CustomerAC, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Trip Start Date", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.TripStartDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.TripStartDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Trip Expected End Date", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.TripExpectedEndDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.TripExpectedEndDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("No. of Days", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.NoofDays, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.NoofDays, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Purpose of Imprest", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.PurposeofImprest, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.PurposeofImprest, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Directorate", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Directorate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.Directorate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Department", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Deadline for Imprest Return", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.DeadlineforImprestReturn, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.DeadlineforImprestReturn, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Status", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Transaction Type", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.TransactionType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.TransactionType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Balance", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Total Amount Requested", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.TotalAmountRequested, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.TotalAmountRequested, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Imprest Amount", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.ImprestAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.ImprestAmount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Issued Amount", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.IssuedAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.IssuedAmount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Country", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Activity Date", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.ActivityDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.ActivityDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("City", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Job Group", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.JobGroup, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.JobGroup, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("External Application", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.ExternalApplication, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.ExternalApplication, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Approval Status", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.ApprovalStatus, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.ApprovalStatus, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("CBK Website Address", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.CBKWebsiteAddress, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.CBKWebsiteAddress, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("PayMode", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.PayMode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.PayMode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Bank Account", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.BankAccount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.BankAccount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Cheque No", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.ChequeNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.ChequeNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Imprest Type", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.ImprestType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" } })
                    @Html.ValidationMessageFor(model => model.ImprestType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div id="DivImpLines">
            <hr style="border:1px solid black" />
            <b>Imprest Lines</b>
            <hr />
            <div id="divImpLines"></div>
            <hr style="border:1px solid black" />
            <div class="row">
                <div class="col-md-12">
                    <b>Attachments</b>
                    <div id="divAttachDocs"></div>
                </div>
            </div>
            <hr />
        </div>
    </div>
</div>
<script src="~/assets/js/ShowProgression.js"></script>
<script src="~/assets/js/pdfobject.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        LoadImprestLines(`@Model.No`,`@Model.Status`);
    });
    var LoadImprestLines = function (DocNo, Status) {

        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            contentType: "application/json; charset = utf-8",
            processData: false,
            data: JSON.stringify({ Document_No: DocNo, Status: Status }),
            url: "/Imprest/ImprestLinesPartialView",
            success: function (data) {
                $("#divImpLines").html(data);
                HideProgress();
            },
            error: function () {
                HideProgress();
                Swal.fire("There is some problem to process your request. Please try after some time");
            }
        });
    };
</script>