@model Latest_Staff_Portal.ViewModel.MaintenanceRequest2






<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Requisition No", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Requisition_No, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Requisition_No, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Vehicle Reg No", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Vehicle_Reg_No, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Vehicle_Reg_No, "", new { @class = "text-danger" })
        </div>
    </div>
    @* <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Cost_Center_Name, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Cost_Center_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                @Html.ValidationMessageFor(model => model.Cost_Center_Name, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Vehicle Location", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Vehicle_Location, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Vehicle_Location, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Odometer Reading", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Odometer_Reading, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Odometer_Reading, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Requested By", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Requested_By, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Requested_By, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Department Name", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Department_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Department_Name, "", new { @class = "text-danger" })
        </div>
    </div>
    @*  <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Unit_Name, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Unit_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                @Html.ValidationMessageFor(model => model.Unit_Name, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Vendor_Dealer", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Vendor_Dealer, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Vendor_Dealer, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Vendor Name", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Vendor_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Vendor_Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Responsible Employee", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Responsible_Employee, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Responsible_Employee, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Responsible Employee Name", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Responsible_Employee_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Responsible_Employee_Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Request Date", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Request_Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Request_Date, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Service Code", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Service_Code, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Service_Code, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Service Name", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Service_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Service_Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Status", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Make", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Make, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Model", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Driver", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Driver, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Driver, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("Driver_Name", htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Driver_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
            @Html.ValidationMessageFor(model => model.Driver_Name, "", new { @class = "text-danger" })
        </div>
    </div>
    @* <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Prepared_By, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Prepared_By, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                @Html.ValidationMessageFor(model => model.Prepared_By, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @*<div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Closed_By, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Closed_By, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                @Html.ValidationMessageFor(model => model.Closed_By, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Date_Closed, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Date_Closed, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                @Html.ValidationMessageFor(model => model.Date_Closed, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Vendor_Invoice_No, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Vendor_Invoice_No, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                @Html.ValidationMessageFor(model => model.Vendor_Invoice_No, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Project_Number, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Project_Number, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                @Html.ValidationMessageFor(model => model.Project_Number, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Task_Number, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Task_Number, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                @Html.ValidationMessageFor(model => model.Task_Number, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Maintenance_Cost, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Maintenance_Cost, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                @Html.ValidationMessageFor(model => model.Maintenance_Cost, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Comments_Remarks, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Comments_Remarks, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                @Html.ValidationMessageFor(model => model.Comments_Remarks, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Parts_Changed, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Parts_Changed, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                @Html.ValidationMessageFor(model => model.Parts_Changed, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Pre_Repair_Inspection, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Pre_Repair_Inspection, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                @Html.ValidationMessageFor(model => model.Pre_Repair_Inspection, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Post_Repair_Inspection, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.EditorFor(model => model.Post_Repair_Inspection, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                @Html.ValidationMessageFor(model => model.Post_Repair_Inspection, "", new { @class = "text-danger" })
            </div>
        </div>*@
</div>



@*//////////////////////Modal////////////////////////////*@
<div id="myModalApproval" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="labelF"></h4>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body p-4" id="modalBodyUnits">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary waves-effect" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script>
    function FleetRequisitionListLink() {
        window.location.href = "/Fleet/MaintenanceRequisitionList"
    }

    function SendMaintenanceReqForApproval() {
        var DocNo=`@Model.Requisition_No`
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ DocNo: DocNo }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Fleet/SendMaintenanceReqForApproval',
            success: function (data) {
                if (data.success == true) {
                    HideProgress();
                    Swal.fire('Success', data.message, 'success');
                    window.location.reload();
                }
                else {
                    HideProgress();
                    Swal.fire('Error', data.message, 'error');
                }
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });


    }


    function CancelMaintenanceReqApproval() {
        var DocNo=`@Model.Requisition_No`
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ DocNo: DocNo }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Fleet/CancelMaintenanceReqApproval',
            success: function (data) {
                if (data.success == true) {
                    HideProgress();
                    Swal.fire('Success', data.message, 'success');
                    window.location.reload();
                }
                else {
                    HideProgress();
                    Swal.fire('Error', data.message, 'error');
                }
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });


    }

    var ViewApprovalTrail = function (DocNo) {
        $("#labelF").text("Approval Trail");
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ DocNo: DocNo }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Common/DocumentApprovalTrail',
            success: function (data) {
                $("#modalBodyUnits").html(data);
                HideProgress();
                $("#myModalApproval").modal("show");
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    }

</script>
