@{
    ViewBag.Title = "LeaveRequisitionList";
    Layout = "~/Views/Shared/Sitemaster.cshtml";
}
<style>

    .table-container {
        background-color: #ffffff;
        border-radius: 10px;
        border: 1px solid whitesmoke;
        padding: 2rem;
    }

    thead {
        margin: 0.5rem !important;
        font-size: 0.85em !important;
    }


    .BtnPadding {
        padding: 7px;
        font-size: 12px;
    }
</style>
<div class="page-header">
    <div class="row">
        <div class="col-sm-12">
            <ul class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="#" onclick="HumanResourceLink();">Human Resource</a>
                </li>
                <li class="breadcrumb-item active">Leave Applications</li>
            </ul>
        </div>
    </div>
</div>
<div class="card">
    <div class="card-body">
        <div style="text-align:right">
            <button class="btn action-buttons" onclick="NewLeaveRequisition();">
                <i class="fa fa-plus-circle" aria-hidden="true"></i> New Leave Application
            </button>
        </div>
        <hr />
        <div id="divLeaveRegList"></div>
    </div>
</div>

@*//////////////////////Modal////////////////////////////*@
<div class="modal fade" id="myModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content bg-white">
            <div class="modal-header">
                <h4 class="modal-title">
                    <label id="labelF"></label>
                </h4>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalBody">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger waves-effect " data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@*//////////////////////Modal Links////////////////////////////*@
<div class="modal fade" id="myModalLinks" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content bg-white">
            <div class="modal-header">
                <h4 class="modal-title">Actions</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalBodyLinks">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger waves-effect " data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@*//////////////////////Modal////////////////////////////*@
<div class="modal fade" id="attachModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content bg-white">
            <div class="modal-header">
                <h4 class="modal-title"> Document Attachment</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalBody">
                <iframe id="iframe" style="width:100%;height:450px"></iframe>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger waves-effect " data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@*//////////////////////Modal////////////////////////////*@
<div class="modal fade" id="myModalUnits" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content bg-white">
            <div class="modal-header">
                <h4 class="modal-title">Leave Report</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalBody">
                <iframe id="iframe" style="width:100%;height:450px"></iframe>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger waves-effect " data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script src="~/assets/js/ShowProgression.js"></script>
<script src="~/assets/js/pdfobject.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        LoadLeaveReqList();
    });
    var LoadLeaveReqList = function () {
        ShowProgress();
        $.ajax({
            async: true,
            type: "GET",
            dataType: 'HTML',
            contentType: false,
            processData: false,
            url: "/Leave/LeaveRequisitionListPartialView",
            success: function (data) {
                $("#divLeaveRegList").html(data);
                HideProgress();
            },
            error: function () {
                Swal.fire("There is some problem to process your request. Please try after some time");
                HideProgress();
            }
        });
    }
    var NewLeaveRequisition = function () {
        $("#labelF").text("New Leave Application");
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Leave/NewLeaveApplication',
            success: function (data) {
                $("#modalBody").html(data);
                HideProgress();
                $("#myModal").modal("show");
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    }
    var SubmitLeaveRequisition = function () {
        var StartDate = $('#dtPicker').val();
        var EndDate = $('#endDate').val();
        var ReturntDate = $('#returnDate').val();
        var days = $("#ddlNoDays").val();//$("#ddlNoDays").children("option:selected").val();
        var LvType = $("#ddlLeaveType").children("option:selected").val();
        var Reliever = $("#ddlReliever2").children("option:selected").val();
        var Remarks = $("#txtRemarks").val();
        var PhoneNo = $("#phone").val();
        /* var fileAttach = document.getElementById('LeavefileAttachment').files;*/
        if (LvType == "") {
            Swal.fire('error', 'Select Leave Type', 'error');
            return;
        }
        else if (days == "") {
            Swal.fire('error', 'Select Number of days you want to apply for leave', 'error');
            return;
        }
        else if (Reliever == "") {
            Swal.fire('error', 'Select Reliever', 'error');
            return;
        }
        else if (StartDate == "") {
            Swal.fire('error', 'Select Start Date', 'error');
            return;
        }
        else if (EndDate == "dd/mm/yyyy") {
            Swal.fire('error', 'End Date cannot be empty', 'error');
            return;
        }
        else if (ReturntDate == "dd/mm/yyyy") {
            Swal.fire('error', 'Return Date cannot be empty', 'error');
            return;
        }
        else if (PhoneNo == "") {
            Swal.fire('error', 'Enter alternate phone number', 'error');
            return;
        }
        //else if ((fileAttach == "") && (LvType=="ANNUAL")) {
        //    Swal.fire('error', 'Upload handover notes', 'error');
        //    return;
            //}


        else {
            var LeaveReqList = {};
            LeaveReqList.Leave_Type = LvType;
            LeaveReqList.Applied_Days = days;
            LeaveReqList.Starting_Date = StartDate;
            LeaveReqList.End_Date = EndDate;
            LeaveReqList.Return_Date = ReturntDate;
            LeaveReqList.Remarks = Remarks;
            LeaveReqList.Reliever = Reliever;
            LeaveReqList.Responsibility = "";
            LeaveReqList.PhoneNo = PhoneNo;

            var tableData = [];
            $('#handoverTable tbody tr').each(function () {
                var row = {
                    no: $(this).find('input[name="no"]').val(),
                    activity: $(this).find('input[name="activity"]').val(),
                    status: $(this).find('input[name="status"]').val(),
                    reason: $(this).find('input[name="reason"]').val()
                };
                tableData.push(row);
            });

            var tableData2 = [];
            $('#RelevantFilesTable tbody tr').each(function () {
                var row = {
                    no: $(this).find('input[name="no"]').val(),
                    activity: $(this).find('input[name="activity"]').val(),
                    status: $(this).find('input[name="status"]').val()
                };
                tableData2.push(row);
            });

            /*var filename; var base64string; var filetype;*/
            /*var files = document.getElementById('LeavefileAttachment').files;*/

            ShowProgress();
            $.ajax({
                type: "post",
                url: "/Leave/SubmitLeaveApplication",
                data: JSON.stringify({ NewApp: LeaveReqList, base64Upload: "", fileName: "", Extn: "", tasks: tableData, tasksFile: tableData2 }),
                contentType: "application/json; charset = utf-8",
                success: function (data) {
                    if (data.success == true) {
                        HideProgress();
                        LoadLeaveReqList();
                        Swal.fire('Success', data.message, 'success');
                    }
                    else {
                        HideProgress();
                        Swal.fire('error', data.message, 'error');
                    }
                    HideProgress();
                    $("#myModal").modal("hide");
                },
                error: function () {
                    HideProgress();
                    Swal.fire('error', data.message, 'error');
                }
            });

        }
    }
    function getB64Str(buffer) {
        var binary = '';
        var bytes = new Uint8Array(buffer);
        var len = bytes.byteLength;
        for (var i = 0; i < len; i++) {
            binary += String.fromCharCode(bytes[i]);
        }
        return window.btoa(binary);
    }
    var UpdateLeaveDocument = function (DocNo) {
        var StartDate = $('#txtstartDate').val();
        var EndDate = $('#EndDate').val();
        var ReturntDate = $('#ReturnDate').val();
        var days = $("#ddlNoDays").val();//$("#ddlNoDays").children("option:selected").val();
        var LvType = $('#txtLeaveType').val();
        var Reliever = $("#ddlReliever").children("option:selected").val();
        var RespC = $("#ddlRespC").children("option:selected").val();
        var Remarks = $("#txtRemarks").val();
        if (LvType == "") {
            Swal.fire('error', 'Select Leave Type', 'error');
            return;
        }
        else if (days == "") {
            Swal.fire('error', 'Select Number of days you want to apply for leave', 'error');
            return;
        }
        else if (Reliever == "") {
            Swal.fire('error', 'Select Reliever', 'error');
            return;
        }
        else if (StartDate == "") {
            Swal.fire('error', 'Select Start Date', 'error');
            return;
        }
        else if (EndDate == "dd/mm/yyyy") {
            Swal.fire('error', 'End Date cannot be empty', 'error');
            return;
        }
        else if (ReturntDate == "dd/mm/yyyy") {
            Swal.fire('error', 'Return Date cannot be empty', 'error');
            return;
        }
        else if (RespC == "") {
            Swal.fire('error', 'Select Responsibility Center', 'error');
            return;
        }
        else {
            var LeaveReqList = {};
            LeaveReqList.No = DocNo;
            LeaveReqList.Leave_Type = LvType;
            LeaveReqList.Applied_Days = days;
            LeaveReqList.Starting_Date = StartDate;
            LeaveReqList.End_Date = EndDate;
            LeaveReqList.Return_Date = ReturntDate;
            LeaveReqList.Remarks = Remarks;
            LeaveReqList.Reliever = Reliever;
            LeaveReqList.Responsibility = RespC;
            ShowProgress();
            $.ajax({
                type: "post",
                url: "/Leave/UpdateLeaveApplication",
                data: JSON.stringify({ NewApp: LeaveReqList }),
                contentType: "application/json; charset = utf-8",
                success: function (data) {
                    if (data.success == true) {
                        HideProgress();
                        LoadLeaveReqList();
                        Swal.fire('Success', data.message, 'success');
                    }
                    else {
                        HideProgress();
                        LoadLeaveReqList();
                        Swal.fire('error', data.message, 'error');
                    }
                    $("#myModal").modal("hide");
                },
                error: function () {
                    HideProgress();
                    Swal.fire('error', data.message, 'error');
                }
            });
        }
    }
    var SelectedRow = function (DocNo, Status) {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ DocNo: DocNo, Status: Status, DocType: 'LV' }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Common/CommonActions',
            success: function (data) {
                $("#modalBodyLinks").html(data);
                HideProgress();
                $("#myModalLinks").modal("show");
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    }
    var ViewDoc = function (DocNo) {
        $("#labelF").text("Leave Details Document");
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ DocNo: DocNo }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Leave/LeaveDocumentViewView',
            success: function (data) {
                $("#modalBody").html(data);
                HideProgress();
                $("#myModalLinks").modal("hide");
                $("#myModal").modal("show");
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    }
    var SendDocForApproval = function (DocNo) {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ DocNo: DocNo }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Leave/SendLeaveAppForApproval',
            success: function (data) {
                if (data.success == true) {
                    HideProgress();
                    LoadLeaveReqList();
                    $("#myModalLinks").modal("hide");
                    Swal.fire('Success', data.message, 'success');
                }
                else {
                    HideProgress();
                    Swal.fire('Error', data.message, 'error');
                }
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });

    }
    var PrintLeave = function (DocNo) {

        {
            ShowProgress();
            $.ajax({
                url: '/Leave/GenerateLeaveReport',
                datatype: "json",
                type: "POST",
                data: JSON.stringify({ DocNo: DocNo }),
                contentType: "application/json; charset = utf-8",
                success: function (data) {
                    if (data.success == true) {
                        var viewer = $("#modalBodyReport");
                        PDFObject.embed(data.message, viewer);
                        $("#myModalUnits").modal("show");
                        HideProgress();
                    }
                    else {
                        HideProgress();
                        Swal.fire('Warning', data.message, 'warning');
                    }

                },
                error: function (err) {
                    HideProgress();
                    Swal.fire('Warning', err, 'warning');
                }
            });
        }
    }
    var DelegateDocForApproval = function (DocNo) {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ DocNo: DocNo }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Common/DelegateApproval',
            success: function (data) {
                if (data.success == true) {
                    HideProgress();
                    LoadLeaveReqList();
                    $("#myModalLinks").modal("hide");
                    Swal.fire('Success', data.message, 'success');
                }
                else {
                    HideProgress();
                    Swal.fire('Error', data.message, 'error');
                }
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });

    }
    var RecallDocForApproval = function (DocNo) {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ DocNo: DocNo }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Leave/RecallLeaveAppForApproval',
            success: function (data) {
                if (data.success == true) {
                    HideProgress();
                    LoadLeaveReqList();
                    $("#myModalLinks").modal("hide");
                    Swal.fire('Success', data.message, 'success');
                }
                else {
                    HideProgress();
                    Swal.fire('Error', data.message, 'error');
                }
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    }
    var CancelDocForApproval = function (DocNo) {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ DocNo: DocNo }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Leave/CancelLeaveAppForApproval',
            success: function (data) {
                if (data.success == true) {
                    HideProgress();
                    LoadLeaveReqList();
                    $("#myModalLinks").modal("hide");
                    Swal.fire('Success', data.message, 'success');
                }
                else {
                    HideProgress();
                    Swal.fire('Error', data.message, 'error');
                }
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });

    }
    var ViewApprovalTrail = function (DocNo) {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ DocNo: DocNo, RecID: "HR Leave Application: " + DocNo }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Common/DocumentApprovalTrail',
            success: function (data) {
                $("#modalBody").html(data);
                HideProgress();
                $("#myModalLinks").modal("hide");
                $("#myModal").modal("show");
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    }
    var ViewDocComments = function (documentNumber) {
        $("#labelF").text("Document Comments");
        ShowProgress();
        var RecordID = "HR Leave Application: " + DocNo;
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ docNo: documentNumber }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Common/DocumentApprovalComments',
            success: function (data) {
                $("#modalBody").html(data);
                HideProgress();
                $("#myModalLinks").modal("hide");
                $("#myModal").modal("show");
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    }
    //var ViewAttachment = function (tbl, No, Id, fName, ext) {
    //	$.ajaxSetup({ cache: false });
    //	$.ajax({
    //		cache: false,
    //		url: '/Common/DocumentAttachmentview',
    //		type: "POST",
    //		datatype: "json",
    //		cache: false,
    //		contentType: "application/json; charset = utf-8",
    //		processData: false,
    //		data: JSON.stringify({ tblID: tbl, No: No, ID: Id, fileName: fName, ext: ext }),
    //		success: function (data) {
    //			if (data.success == true) {
    //				if (data.view == true) {
    //					var viewer = $("#modalAttachmentBody");
    //					if (ext == "pdf") {
    //						PDFObject.embed("data:application/" + ext + ";base64," + data.message + "", viewer);
    //					}
    //					if (ext == "png" || ext == "jpg") {
    //						PDFObject.embed("data:image/" + ext + ";base64," + data.message + "", viewer);
    //					}
    //					$("#myModalAttachment").modal("show");
    //					HideProgress();
    //				}
    //				else {
    //					window.location = '/Common/AttachmentDownload?fileName=' + data.message;
    //					Swal.fire('Success', 'Document Downloaded successfully', 'success');
    //					HideProgress();
    //				}
    //			}
    //			else {
    //				HideProgress();
    //				Swal.fire('Warning', data.message, 'warning');
    //			}
    //		},
    //		error: function (err) {
    //			HideProgress();
    //			Swal.fire('Warning', err, 'warning');
    //		}
    //	});
    //};
    var ViewAttachment = function (tbl, No, Id, fName, ext) {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            dataType: "json",
            data: JSON.stringify({
                tblID: tbl,
                No: No,
                ID: Id,
                fileName: fName,
                ext: ext
            }),
            contentType: "application/json; charset=utf-8",
            processData: false,
            url: '/Common/DocumentAttachmentview',
            success: function (data) {
                HideProgress();
                if (data.success) {
                    $('iframe').attr('src', "data:application/pdf;base64," + data.message);
                    $("#attachModal").modal("show");
                } else {
                    Swal.fire('Error', data.message, 'error');
                }
            },
            error: function (xhr, status, error) {
                HideProgress();
                Swal.fire('Error', 'An error occurred: ' + error, 'error');
            }
        });
    };
    var ViewAttachment = function (moduleCheck, docNo, docId) {
        $.ajaxSetup({ cache: false });
        ShowProgress();
        var viewer = $("#modalAttachmentBody");
        viewer.empty();

        $.ajax({
            url: '/Common/GetEdmsDocuments',
            type: "GET",
            datatype: "json",
            cache: false,
            contentType: "application/json; charset=utf-8",
            data: {
                module: moduleCheck,
                documentNo: docNo,
                documentType: "Leave",
                documentId: docId
            },
            success: function (data) {
                if (data.success) {
                    if (data.base64) {
                        var mimeType = data.mimeType || 'application/pdf';

                        if (mimeType.startsWith('application/pdf')) {

                            var byteCharacters = atob(data.base64);
                            var byteNumbers = new Array(byteCharacters.length);
                            for (var i = 0; i < byteCharacters.length; i++) {
                                byteNumbers[i] = byteCharacters.charCodeAt(i);
                            }
                            var byteArray = new Uint8Array(byteNumbers);
                            var blob = new Blob([byteArray], { type: mimeType });
                            var blobUrl = URL.createObjectURL(blob);


                            viewer.html('<iframe src="' + blobUrl + '" style="width:100%; height:500px;" frameborder="0"></iframe>');
                        } else if (mimeType.startsWith('image/')) {

                            viewer.html('<img src="data:' + mimeType + ';base64,' + data.base64 + '" style="width:100%;"/>');
                        } else {

                            var blob = b64toBlob(data.base64, mimeType);
                            var url = window.URL.createObjectURL(blob);
                            window.open(url, '_blank');
                        }
                        $("#myModalAttachment").modal("show");
                    } else {
                        window.location = '/Common/AttachmentDownload?fileName=' + data.message;
                        Swal.fire('Success', 'Document Downloaded successfully', 'success');
                    }
                } else {
                    Swal.fire('Warning', data.message, 'warning');
                }
                HideProgress();
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Error', err.responseText || 'An error occurred', 'error');
            }
        });
    };
    function b64toBlob(base64, contentType) {
        var byteCharacters = atob(base64);
        var byteArrays = [];

        for (var offset = 0; offset < byteCharacters.length; offset += 512) {
            var slice = byteCharacters.slice(offset, offset + 512);

            var byteNumbers = new Array(slice.length);
            for (var i = 0; i < slice.length; i++) {
                byteNumbers[i] = slice.charCodeAt(i);
            }

            var byteArray = new Uint8Array(byteNumbers);
            byteArrays.push(byteArray);
        }

        return new Blob(byteArrays, { type: contentType });
    }

</script>