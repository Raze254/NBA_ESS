@{
    ViewBag.Title = "";
    Layout = "~/Views/Shared/Sitemaster.cshtml";
}
<style>
    thead {
        background-color: black;
        color: white;
    }

    .selectedTableRow {
        background-color: #74788d;
        color: white;
    }

    .BtnPadding {
        padding: 1px;
        font-size: 12px;
    }
</style>
<!--
<link href="~/assets/css/Loader.css" rel="stylesheet" />
<div class="loading" align="center" id="divLoader">
    <br />
    <img src="~/assets/images/ajax-loader.gif" alt="" />
</div>
-->
<div class="card pre-scrollable">
    <div class="card-title">Reservation Request List</div>
    <hr/>
    <div class="card-body">
        <a href="#" onclick="LoadReservationRequestList();" class="btn btn-primary BtnPadding">Fuel Request List</a>
        <a href="#" onclick="ApprovedFuelRequests();" class="btn btn-primary BtnPadding">Approved Fuel Request</a>
        <a href="#" onclick="NewRechardCardRequisition();" class="btn btn-primary BtnPadding">New Request</a>
        <hr/>
        <div id="divRegList"></div>
    </div>
</div>
@*//////////////////////Modal////////////////////////////*@
<div class="modal" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content bg-white">
            <div class="modal-header">
                <h4 class="modal-title">New Imprest Requisition</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalBody">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger waves-effect " data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@*//////////////////////Modal Links////////////////////////////*@
<div class="modal fade" id="myModalLinks" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content bg-white">
            <div class="modal-header">
                <h4 class="modal-title">Actions</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalBodyLinks">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger waves-effect " data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script src="~/assets/js/ShowProgression.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        LoadReservationRequestList();
        var Successmsg = '@Request.RequestContext.HttpContext.Session["SuccessMsg"]';
        if (Successmsg != "") {
            Swal.fire('Success', Successmsg, 'success', true);
            $.ajax({
                type: "POST",
                url: "/Common/NullibySessions"
            });
        }
    });
    var LoadReservationRequestList = function () {
        ShowProgress();
        $.ajax({
            async: true,
            type: "GET",
            dataType: 'HTML',
            contentType: false,
            processData: false,
            url: "/FacilitiesAdministration/ReservationListPartialView",
            success: function (data) {
                $("#divRegList").empty().html(data);
                HideProgress();
            },
            error: function () {
                HideProgress();
                Swal.fire("There is some problem to process your request. Please try after some time");
            }
        });
    }

    var ApprovedFuelRequests = function () {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ Filter: 'yes' }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: "/FacilitiesAdministration/ReservationListPartialView",
            success: function (data) {
                $("#divRegList").empty().html(data);
                HideProgress();
            },
            error: function () {
                HideProgress();
                Swal.fire("There is some problem to process your request. Please try after some time");
            }
        });
    }


    var NewRechardCardRequisition = function () {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: "/Fuel/NewFuelRechardCardRequest",
            success: function (data) {
                $("#modalBody").html(data);
                HideProgress();
                $("#myModal").modal("show");
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    }
    var SubmitImprestRequisition = function (DiReg) {
        var dateNeeded = $("#dtPicker").val();
        var Remarks = $("#txtRemarks").val().replace(/(\r\n|\n|\r)/gm, " ");
        var Directorate = $("#ddlDirectorate").children("option:selected").val();
        var Department = $("#ddlDim2").children("option:selected").val();
        if (dateNeeded == "") {
            Swal.fire('Warning', "Select Date needed", 'warning');
            return;
        }
        if (Remarks == "") {
            Swal.fire('Warning', "Enter Reason for the purchase", 'warning');
            return;
        }
        if (Remarks.length > 150) {
            Swal.fire('Warning', "Reason for purchase cannot exceed 150 characters", 'warning');
            return;
        }
        else if (Directorate == "" && DiReg == false) {
            Swal.fire('Warning', "Select Directorate", 'warning');
            return;
        }
        else if (Department == "") {
            Swal.fire('Warning', "Select Project", 'warning');
            return;
        }
        else {
            var ImprestHeader = {};
            ImprestHeader.DateNeeded = dateNeeded;
            ImprestHeader.Remarks = Remarks;
            ImprestHeader.Directorate = Directorate;
            ImprestHeader.Department = Department;
            //ImprestHeader.Section = Section;
            ShowProgress();
            //Send the JSON array to Controller using AJAX.
            $.ajax({
                type: "POST",
                url: "/Imprest/SubmitImprestRequisition",
                data: JSON.stringify({ imprestHeader: ImprestHeader }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.success) {
                        window.location = data.message;
                    }
                    else {
                        Swal.fire('Warning', data.message, 'warning');
                        HideProgress();
                    }
                },
                error: function (err) {
                    HideProgress();
                    Swal.fire('Warning', err, 'warning');
                }
            });
        }
    };
    var SelectedRow = function (DocNo, Status) {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ DocNo: DocNo, Status: Status, DocType: 'IMP' }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Common/CommonActions',
            success: function (data) {
                $("#modalBodyLinks").html(data);
                HideProgress();
                $("#myModalLinks").modal("show");
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    }

    var ViewDoc = function (DocNo) {
        ShowProgress();
        window.location = "/Imprest/ImprestDocumentView?DocNo=" + DocNo;
    }
    var SendDocForApproval = function (DocNo) {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ DocNo: DocNo, Redirect: "N" }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Imprest/SendImprestAppForApproval',
            success: function (data) {
                if (data.LogOut == true) {
                    window.location = data.message;
                }
                else {
                    if (data.success == true) {
                        HideProgress();
                        LoadImprestReqList();
                        $("#myModalLinks").modal("hide");
                        Swal.fire('Success', data.message, 'success');
                    }
                    else {
                        HideProgress();
                        Swal.fire('Error', data.message, 'error');
                    }
                }
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    }

    var CancelDocForApproval = function (DocNo) {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ DocNo: DocNo }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Imprest/CancelImprestAppForApproval',
            success: function (data) {
                if (data.LogOut == false) {
                    window.location = data.message;
                }
                else {
                    if (data.success == true) {
                        HideProgress();
                        LoadImprestReqList();
                        $("#myModalLinks").modal("hide");
                        Swal.fire('Success', data.message, 'success');
                    }
                    else {
                        HideProgress();
                        Swal.fire('Error', data.message, 'error');
                    }
                }
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    };
    var ViewApprovalTrail = function (DocNo) {
        $("#labelF").text("Document Approval Trail");
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ DocNo: DocNo, RecID: "Imprest Header: " + DocNo }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Common/DocumentApprovalTrail',
            success: function (data) {
                $("#modalBody").html(data);
                HideProgress();
                $("#myModalLinks").modal("hide");
                $("#myModal").modal("show");
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    }
    var ViewDocComments = function (documentNumber) {
        $("#labelF").text("Document Comments");
        ShowProgress();
        var RecordID = "Imprest Header: " + DocNo;
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            data: JSON.stringify({ docNo: documentNumber }),
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: '/Common/DocumentApprovalComments',
            success: function (data) {
                $("#modalBody").html(data);
                HideProgress();
                $("#myModalLinks").modal("hide");
                $("#myModal").modal("show");
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    }
</script>