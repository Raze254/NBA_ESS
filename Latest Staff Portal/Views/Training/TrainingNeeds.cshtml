@{
    ViewBag.Title = "TrainingNeeds";
    Layout = "~/Views/Shared/Sitemaster.cshtml";
}
<style>
    thead {
        background-color: black;
        color: white;
    }

    .selectedTableRow {
        background-color: #74788d;
        color: white;
    }

    .BtnPadding {
        padding: 7px;
        font-size: 12px;
    }
</style>

<div class="page-header">
    <div class="row">
        <div class="col-sm-12">
            <ul class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="#" onclick="DashboardLink();">Dashboard</a>
                </li>
                <li class="breadcrumb-item active">Training Needs</li>
            </ul>
        </div>
    </div>
</div>
<hr /><br />
<div class="card">
    <div class="card-header">
        <div style="text-align:right">
            <button class="action-buttons" onclick="NewTrainingNeed();">
                <i class="fa fa-plus-circle" aria-hidden="true"></i> New Training Need Request
            </button>
        </div>
    </div>
    <div class="card-body">
        <div id="divTrainingNeeds"></div>
    </div>
</div>

<!-- Modal -->
<div class="modal" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content bg-white">
            <div class="modal-header">
                <h4 class="modal-title">New Training Need</h4>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalBody">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger waves-effect" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script src="~/assets/js/ShowProgression.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        LoadTrainingNeedsList();
        var Successmsg = '@Request.RequestContext.HttpContext.Session["SuccessMsg"]';
        if (Successmsg != "") {
            Swal.fire('Success', Successmsg, 'success', true);
            $.ajax({
                type: "POST",
                url: "/Common/NullibySessions"
            });
        }
    });

    var LoadTrainingNeedsList = function () {
        ShowProgress();
        $.ajax({
            async: true,
            type: "GET",
            dataType: 'HTML',
            contentType: false,
            processData: false,
            url: "/Training/TrainingNeedsList",
            success: function (data) {
                $("#divTrainingNeeds").empty().html(data);
                HideProgress();
            },
            error: function () {
                HideProgress();
                Swal.fire("There is some problem to process your request. Please try after some time");
            }
        });
    }

    var NewTrainingNeed = function () {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            contentType: "application/json; charset = utf-8",
            processData: false,
            url: "/Training/CreateTrainingNeedsRequest",
            success: function (data) {
                if (data.success) {
                    HideProgress();
                    Swal.fire({
                        title: 'Success',
                        text: 'Document, Doc Number ' + data.message + ', successfully created',
                        icon: 'success',
                        confirmButtonText: 'Go to Document' 
                    }).then((result) => {
                        if (result.isConfirmed) { 
                            ViewTrainingNeedDoc(data.message);
                        }
                    });
                } else {
                    HideProgress();
                    Swal.fire('Warning', data.message, 'warning');
                }
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err, 'warning');
            }
        });
    }

    var ViewTrainingNeedDoc = function (Code) {
        ShowProgress();
        var form = $('<form>', {
            action: '/Training/TrainingNeedsDocumentView',
            method: 'POST'
        }).append($('<input>', {
            type: 'hidden',
            name: 'code',
            value: Code
        }));
        form.appendTo('body').submit();
    }
    function SubmitCreateTrainingNeedsRequest() {
        var isValid = true;

        ShowProgress();
        $.ajax({
            type: "POST",
            url: "/Training/CreateTrainingNeedsRequest",
            data: JSON.stringify(trainingNeedsRequest),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                HideProgress();
                if (data.success) {
                    var form = $('<form>', {
                        action: '/Training/TrainingNeedsDocumentView',
                        method: 'POST'
                    }).append($('<input>', {
                        type: 'hidden',
                        name: 'code',
                        value: data.message
                    }));
                    form.appendTo('body').submit();
                } else {
                    Swal.fire('Warning', data.message, 'warning');
                }
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err.responseText, 'warning');
            }
        });
    }
</script>